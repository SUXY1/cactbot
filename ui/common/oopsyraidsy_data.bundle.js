"use strict";
(self["webpackChunkcactbot"] = self["webpackChunkcactbot"] || []).push([[727],{

/***/ 455:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {


// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": () => (/* binding */ oopsy_manifest)
});

// EXTERNAL MODULE: ./resources/netregexes.ts
var netregexes = __webpack_require__(622);
// EXTERNAL MODULE: ./resources/zone_id.ts
var zone_id = __webpack_require__(588);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/00-misc/general.ts


// General mistakes; these apply everywhere.
const triggerSet = {
  zoneId: zone_id/* default.MatchAll */.Z.MatchAll,
  triggers: [{
    // Trigger id for internally generated early pull warning.
    id: 'General Early Pull'
  }, {
    id: 'General Food Buff',
    type: 'LosesEffect',
    // Well Fed
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '48'
    }),
    condition: (_data, matches) => {
      // Prevent "Eos loses the effect of Well Fed from Critlo Mcgee"
      return matches.target === matches.source;
    },
    mistake: (data, matches) => {
      var _data$lostFood;

      (_data$lostFood = data.lostFood) !== null && _data$lostFood !== void 0 ? _data$lostFood : data.lostFood = {}; // Well Fed buff happens repeatedly when it falls off (WHY),
      // so suppress multiple occurrences.

      if (!data.inCombat || data.lostFood[matches.target]) return;
      data.lostFood[matches.target] = true;
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: 'lost food buff',
          de: 'Nahrungsbuff verloren',
          fr: 'Buff nourriture perdue',
          ja: '飯効果が失った',
          cn: '失去食物BUFF',
          ko: '음식 버프 해제'
        }
      };
    }
  }, {
    id: 'General Well Fed',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '48'
    }),
    run: (data, matches) => {
      if (!data.lostFood) return;
      delete data.lostFood[matches.target];
    }
  }, {
    id: 'General Rabbit Medium',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '8E0'
    }),
    condition: (data, matches) => data.IsPlayerId(matches.sourceId),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.source,
        reportId: matches.sourceId,
        text: {
          en: 'bunny',
          de: 'Hase',
          fr: 'lapin',
          ja: 'うさぎ',
          cn: '兔子',
          ko: '토끼'
        }
      };
    }
  }]
};
/* harmony default export */ const general = (triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/00-misc/test.ts


// Test mistake triggers.
const test_triggerSet = {
  zoneId: zone_id/* default.MiddleLaNoscea */.Z.MiddleLaNoscea,
  triggers: [{
    id: 'Test Bow',
    type: 'GameLog',
    netRegex: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: 'You bow courteously to the striking dummy.*?'
    }),
    netRegexFr: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: 'Vous vous inclinez devant le mannequin d\'entraînement.*?'
    }),
    netRegexJa: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: '.*は木人にお辞儀した.*?'
    }),
    netRegexCn: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: '.*恭敬地对木人行礼.*?'
    }),
    netRegexKo: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: '.*나무인형에게 공손하게 인사합니다.*?'
    }),
    mistake: data => {
      return {
        type: 'pull',
        blame: data.me,
        text: {
          en: 'Bow',
          de: 'Bogen',
          fr: 'Arc',
          ja: 'お辞儀',
          cn: '鞠躬',
          ko: '인사'
        }
      };
    }
  }, {
    id: 'Test Wipe',
    type: 'GameLog',
    netRegex: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: 'You bid farewell to the striking dummy.*?'
    }),
    netRegexFr: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: 'Vous faites vos adieux au mannequin d\'entraînement.*?'
    }),
    netRegexJa: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: '.*は木人に別れの挨拶をした.*?'
    }),
    netRegexCn: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: '.*向木人告别.*?'
    }),
    netRegexKo: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: '.*나무인형에게 작별 인사를 합니다.*?'
    }),
    mistake: data => {
      return {
        type: 'wipe',
        blame: data.me,
        text: {
          en: 'Party Wipe',
          de: 'Gruppenwipe',
          fr: 'Party Wipe',
          ja: 'ワイプ',
          cn: '团灭',
          ko: '파티 전멸'
        }
      };
    }
  }, {
    id: 'Test Bootshine',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '35'
    }),
    condition: (data, matches) => {
      if (matches.source !== data.me) return false;
      const strikingDummyByLocale = {
        en: 'Striking Dummy',
        de: 'Trainingspuppe',
        fr: 'Mannequin d\'entraînement',
        ja: '木人',
        cn: '木人',
        ko: '나무인형'
      };
      const strikingDummyNames = Object.values(strikingDummyByLocale);
      return strikingDummyNames.includes(matches.target);
    },
    mistake: (data, matches) => {
      var _data$bootCount;

      (_data$bootCount = data.bootCount) !== null && _data$bootCount !== void 0 ? _data$bootCount : data.bootCount = 0;
      data.bootCount++;
      const text = `${matches.ability} (${data.bootCount}): ${data.DamageFromMatches(matches)}`;
      return {
        type: 'warn',
        blame: data.me,
        reportId: matches.sourceId,
        text: text
      };
    }
  }, {
    id: 'Test Leaden Fist',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '745'
    }),
    condition: (data, matches) => matches.source === data.me,
    mistake: (data, matches) => {
      return {
        type: 'good',
        blame: data.me,
        reportId: matches.sourceId,
        text: matches.effect
      };
    }
  }, {
    id: 'Test Oops',
    type: 'GameLog',
    netRegex: netregexes/* default.echo */.Z.echo({
      line: '.*oops.*'
    }),
    suppressSeconds: 10,
    mistake: (data, matches) => {
      return {
        type: 'fail',
        blame: data.me,
        text: matches.line
      };
    }
  }, {
    id: 'Test Poke Collect',
    type: 'GameLog',
    netRegex: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: 'You poke the striking dummy.*?'
    }),
    netRegexFr: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: 'Vous touchez légèrement le mannequin d\'entraînement du doigt.*?'
    }),
    netRegexJa: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: '.*は木人をつついた.*?'
    }),
    netRegexCn: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: '.*用手指戳向木人.*?'
    }),
    netRegexKo: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: '.*나무인형을 쿡쿡 찌릅니다.*?'
    }),
    run: data => {
      var _data$pokeCount;

      data.pokeCount = ((_data$pokeCount = data.pokeCount) !== null && _data$pokeCount !== void 0 ? _data$pokeCount : 0) + 1;
    }
  }, {
    id: 'Test Poke',
    type: 'GameLog',
    netRegex: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: 'You poke the striking dummy.*?'
    }),
    netRegexFr: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: 'Vous touchez légèrement le mannequin d\'entraînement du doigt.*?'
    }),
    netRegexJa: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: '.*は木人をつついた.*?'
    }),
    netRegexCn: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: '.*用手指戳向木人.*?'
    }),
    netRegexKo: netregexes/* default.gameNameLog */.Z.gameNameLog({
      line: '.*나무인형을 쿡쿡 찌릅니다.*?'
    }),
    delaySeconds: 5,
    mistake: data => {
      // 1 poke at a time is fine, but more than one in 5 seconds is (OBVIOUSLY) a mistake.
      if (!data.pokeCount || data.pokeCount <= 1) return;
      return {
        type: 'fail',
        blame: data.me,
        text: {
          en: `Too many pokes (${data.pokeCount})`,
          de: `Zu viele Piekser (${data.pokeCount})`,
          fr: `Trop de touches (${data.pokeCount})`,
          ja: `いっぱいつついた (${data.pokeCount})`,
          cn: `戳太多下啦 (${data.pokeCount})`,
          ko: `너무 많이 찌름 (${data.pokeCount}번)`
        }
      };
    },
    run: data => delete data.pokeCount
  }]
};
/* harmony default export */ const test = (test_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/02-arr/trial/ifrit-nm.ts

// Ifrit Story Mode
const ifrit_nm_triggerSet = {
  zoneId: zone_id/* default.TheBowlOfEmbers */.Z.TheBowlOfEmbers,
  damageWarn: {
    'IfritNm Radiant Plume': '2DE'
  },
  shareWarn: {
    'IfritNm Incinerate': '1C5',
    'IfritNm Eruption': '2DD'
  }
};
/* harmony default export */ const ifrit_nm = (ifrit_nm_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/02-arr/trial/levi-ex.ts


// It's hard to capture the reflection abilities from Leviathan's Head and Tail if you use
// ranged physical attacks / magic attacks respectively, as the ability names are the
// ability you used and don't appear to show up in the log as normal "ability" lines.
// That said, dots still tick independently on both so it's likely that people will atack
// them anyway.
// TODO: Figure out why Dread Tide / Waterspout appear like shares (i.e. 0x16 id).
// Dread Tide = 823/824/825, Waterspout = 829
// Leviathan Extreme
const levi_ex_triggerSet = {
  zoneId: zone_id/* default.TheWhorleaterExtreme */.Z.TheWhorleaterExtreme,
  damageWarn: {
    'LeviEx Grand Fall': '82F',
    // very large circular aoe before spinny dives, applies heavy
    'LeviEx Hydro Shot': '748',
    // Wavespine Sahagin aoe that gives Dropsy effect
    'LeviEx Dreadstorm': '749' // Wavetooth Sahagin aoe that gives Hysteria effect

  },
  damageFail: {
    'LeviEx Body Slam': '82A',
    // levi slam that tilts the boat
    'LeviEx Spinning Dive 1': '88A',
    // levi dash across the boat with knockback
    'LeviEx Spinning Dive 2': '88B',
    // levi dash across the boat with knockback
    'LeviEx Spinning Dive 3': '82C' // levi dash across the boat with knockback

  },
  gainsEffectWarn: {
    'LeviEx Dropsy': '110' // standing in the hydro shot from the Wavespine Sahagin

  },
  gainsEffectFail: {
    'LeviEx Hysteria': '128' // standing in the dreadstorm from the Wavetooth Sahagin

  },
  triggers: [{
    id: 'LeviEx Body Slam Knocked Off',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '82A'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'Renversé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const levi_ex = (levi_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/02-arr/trial/shiva-ex.ts


// Shiva Extreme
const shiva_ex_triggerSet = {
  zoneId: zone_id/* default.TheAkhAfahAmphitheatreExtreme */.Z.TheAkhAfahAmphitheatreExtreme,
  damageWarn: {
    // Large white circles.
    'ShivaEx Icicle Impact': 'BEB',
    // "get in" aoe
    'ShivaEx Whiteout': 'BEC',
    // Avoidable tank stun.
    'ShivaEx Glacier Bash': 'BE9'
  },
  damageFail: {
    // 270 degree attack.
    'ShivaEx Glass Dance': 'BDF'
  },
  shareWarn: {
    // Hailstorm spread marker.
    'ShivaEx Hailstorm': 'BE2'
  },
  shareFail: {
    // Laser.  TODO: maybe blame the person it's on??
    'ShivaEx Avalanche': 'BE0'
  },
  soloWarn: {
    // Party shared tankbuster
    'ShivaEx Icebrand': 'BE1'
  },
  triggers: [{
    id: 'ShivaEx Deep Freeze',
    type: 'GainsEffect',
    // Shiva also uses ability C8A on you, but it has the untranslated name
    // 透明：シヴァ：凍結レクト：ノックバック用/ヒロイック. So, use the effect instead for free translation.
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '1E7'
    }),
    condition: (_data, matches) => {
      // The intermission also gets this effect, but for a shorter duration.
      return parseFloat(matches.duration) > 20;
    },
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }]
};
/* harmony default export */ const shiva_ex = (shiva_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/02-arr/trial/shiva-hm.ts


// Shiva Hard
const shiva_hm_triggerSet = {
  zoneId: zone_id/* default.TheAkhAfahAmphitheatreHard */.Z.TheAkhAfahAmphitheatreHard,
  damageWarn: {
    // Large white circles.
    'ShivaHm Icicle Impact': '993',
    // Avoidable tank stun.
    'ShivaHm Glacier Bash': '9A1'
  },
  shareWarn: {
    // Knockback tank cleave.
    'ShivaHm Heavenly Strike': '9A0',
    // Hailstorm spread marker.
    'ShivaHm Hailstorm': '998'
  },
  shareFail: {
    // Tankbuster.  This is Shiva Hard mode, not Shiva Extreme.  Please!
    'ShivaHm Icebrand': '996'
  },
  triggers: [{
    id: 'ShivaHm Diamond Dust',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '98A'
    }),
    run: data => {
      data.seenDiamondDust = true;
    }
  }, {
    id: 'ShivaHm Deep Freeze',
    type: 'GainsEffect',
    // Shiva also uses ability 9A3 on you, but it has the untranslated name
    // 透明：シヴァ：凍結レクト：ノックバック用. So, use the effect instead for free translation.
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '1E7'
    }),
    condition: data => {
      // The intermission also gets this effect, so only a mistake after that.
      // Unlike extreme, this has the same 20 second duration as the intermission.
      return data.seenDiamondDust;
    },
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }]
};
/* harmony default export */ const shiva_hm = (shiva_hm_triggerSet);
// EXTERNAL MODULE: ./ui/oopsyraidsy/oopsy_common.ts
var oopsy_common = __webpack_require__(416);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/02-arr/trial/titan-ex.ts



// Titan Extreme
const titan_ex_triggerSet = {
  zoneId: zone_id/* default.TheNavelExtreme */.Z.TheNavelExtreme,
  damageWarn: {
    'TitanEx Weight Of The Land': '5BE',
    'TitanEx Burst': '5BF'
  },
  damageFail: {
    'TitanEx Landslide': '5BB',
    'TitanEx Gaoler Landslide': '5C3'
  },
  shareWarn: {
    'TitanEx Rock Buster': '5B7'
  },
  shareFail: {
    'TitanEx Mountain Buster': '5B8'
  },
  triggers: [{
    id: 'TitanEx Landslide',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '5BB',
      ...oopsy_common/* playerDamageFields */.np
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Pushed off!',
          de: 'Runter geschubst!',
          fr: 'Repoussé(e) !',
          ja: '落ちた',
          cn: '击退坠落',
          ko: '넉백됨'
        }
      };
    }
  }]
};
/* harmony default export */ const titan_ex = (titan_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/02-arr/trial/titan-hm.ts

// Titan Hard
const titan_hm_triggerSet = {
  zoneId: zone_id/* default.TheNavelHard */.Z.TheNavelHard,
  damageWarn: {
    'TitanHm Weight Of The Land': '553',
    'TitanHm Burst': '41C'
  },
  damageFail: {
    'TitanHm Landslide': '554'
  },
  shareWarn: {
    'TitanHm Rock Buster': '550'
  },
  shareFail: {
    'TitanHm Mountain Buster': '283'
  }
};
/* harmony default export */ const titan_hm = (titan_hm_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/02-arr/trial/titan-nm.ts

// Titan Story Mode
const titan_nm_triggerSet = {
  zoneId: zone_id/* default.TheNavel */.Z.TheNavel,
  damageWarn: {
    'TitanNm Weight Of The Land': '3CD'
  },
  damageFail: {
    'TitanNm Landslide': '28A'
  },
  shareWarn: {
    'TitanNm Rock Buster': '281'
  }
};
/* harmony default export */ const titan_nm = (titan_nm_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/02-arr/trial/ultima-ex.ts


const ultima_ex_triggerSet = {
  zoneId: zone_id/* default.TheMinstrelsBalladUltimasBane */.Z.TheMinstrelsBalladUltimasBane,
  damageWarn: {
    'UltimaEx Mistral Song': '5ED',
    // Garuda wide conal
    'UltimaEx Eye of the Storm': '5EF',
    // Garuda donut
    'UltimaEx Radiant Plume': '5F1',
    // Ifrit fire eruptions
    'UltimaEx Weight of the Land': '5F2',
    // Titan puddles
    'UltimaEx Eruption': '5F4',
    // chasing Ifrit explosions
    'UltimaEx Crimson Cyclone': '5F5',
    // Ifrit dash
    'UltimaEx Magitek Ray 1': '5E3',
    // trident laser
    'UltimaEx Magitek Ray 2': '5E4',
    // trident laser
    'UltimaEx Magitek Ray 3': '5E5',
    // trident laser
    'UltimaEx Homing Aetheroplasm': '5E6',
    // chasing Aetheroplasm explosion
    'UltimaEx Magitek Bit Assault Cannon': '5F6' // line aoe from bits

  },
  damageFail: {
    'UltimaEx Fusion Burst': '5E9' // failing to pop orbs

  },
  shareWarn: {
    'UltimaEx Homing Lasers': '5E1',
    // distance? aggro? targeted circular cleave
    'UltimaEx Diffractive Laser': '5E2' // frontal conal cleave

  },
  triggers: [{
    id: 'UltimaEx Viscous Aetheroplasm',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '171',
      count: '05'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }]
};
/* harmony default export */ const ultima_ex = (ultima_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/03-hw/alliance/weeping_city.ts


const weeping_city_triggerSet = {
  zoneId: zone_id/* default.TheWeepingCityOfMhach */.Z.TheWeepingCityOfMhach,
  damageWarn: {
    'Weeping Critical Bite': '1848',
    // Sarsuchus cone aoe
    'Weeping Realm Shaker': '183E',
    // First Daughter circle aoe
    'Weeping Silkscreen': '183C',
    // First Daughter line aoe
    'Weeping Silken Spray': '1824',
    // Arachne Eve rear conal aoe
    'Weeping Tremblor 1': '1837',
    // Arachne Eve disappear circle aoe 1
    'Weeping Tremblor 2': '1836',
    // Arachne Eve disappear circle aoe 2
    'Weeping Tremblor 3': '1835',
    // Arachne Eve disappear circle aoe 3
    'Weeping Spider Thread': '1839',
    // Arachne Eve spider line aoe
    'Weeping Fire II': '184E',
    // Black Mage Corpse circle aoe
    'Weeping Necropurge': '17D7',
    // Forgall Shriveled Talon line aoe
    'Weeping Rotten Breath': '17D0',
    // Forgall Dahak cone aoe
    'Weeping Mow': '17D2',
    // Forgall Haagenti unmarked cleave
    'Weeping Dark Eruption': '17C3',
    // Forgall puddle marker
    // 1806 is also Flare Star, but if you get by 1805 you also get hit by 1806?
    'Weeping Flare Star': '1805',
    // Ozma cube phase donut
    'Weeping Execration': '1829',
    // Ozma triangle laser
    'Weeping Haircut 1': '180B',
    // Calofisteri 180 cleave 1
    'Weeping Haircut 2': '180F',
    // Calofisteri 180 cleave 2
    'Weeping Entanglement': '181D',
    // Calofisteri landmine puddle proc
    'Weeping Evil Curl': '1816',
    // Calofisteri axe
    'Weeping Evil Tress': '1817',
    // Calofisteri bulb
    'Weeping Depth Charge': '1820',
    // Calofisteri charge to edge
    'Weeping Feint Particle Beam': '1928',
    // Calofisteri sky laser
    'Weeping Evil Switch': '1815' // Calofisteri lasers

  },
  gainsEffectWarn: {
    'Weeping Hysteria': '128',
    // Arachne Eve Frond Affeard
    'Weeping Zombification': '173',
    // Forgall too many zombie puddles
    'Weeping Toad': '1B7',
    // Forgall Brand of the Fallen failure
    'Weeping Doom': '38E',
    // Forgall Haagenti Mortal Ray
    'Weeping Assimilation': '42C',
    // Ozmashade Assimilation look-away
    'Weeping Stun': '95' // Calofisteri Penetration look-away

  },
  shareWarn: {
    'Weeping Arachne Web': '185E',
    // Arachne Eve headmarker web aoe
    'Weeping Earth Aether': '1841',
    // Arachne Eve orbs
    'Weeping Epigraph': '1852',
    // Headstone untelegraphed laser line tank attack
    // This is too noisy.  Better to pop the balloons than worry about friends.
    // 'Weeping Explosion': '1807', // Ozmasphere Cube orb explosion
    'Weeping Split End 1': '180C',
    // Calofisteri tank cleave 1
    'Weeping Split End 2': '1810',
    // Calofisteri tank cleave 2
    'Weeping Bloodied Nail': '181F' // Calofisteri axe/bulb appearing

  },
  triggers: [{
    id: 'Weeping Forgall Gradual Zombification Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '415'
    }),
    run: (data, matches) => {
      var _data$zombie;

      (_data$zombie = data.zombie) !== null && _data$zombie !== void 0 ? _data$zombie : data.zombie = {};
      data.zombie[matches.target] = true;
    }
  }, {
    id: 'Weeping Forgall Gradual Zombification Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '415'
    }),
    run: (data, matches) => {
      data.zombie = data.zombie || {};
      data.zombie[matches.target] = false;
    }
  }, {
    id: 'Weeping Forgall Mega Death',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '17CA'
    }),
    condition: (data, matches) => data.zombie && !data.zombie[matches.target],
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        text: matches.ability
      };
    }
  }, {
    id: 'Weeping Headstone Shield Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '15E'
    }),
    run: (data, matches) => {
      var _data$shield;

      (_data$shield = data.shield) !== null && _data$shield !== void 0 ? _data$shield : data.shield = {};
      data.shield[matches.target] = true;
    }
  }, {
    id: 'Weeping Headstone Shield Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '15E'
    }),
    run: (data, matches) => {
      data.shield = data.shield || {};
      data.shield[matches.target] = false;
    }
  }, {
    id: 'Weeping Flaring Epigraph',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '1856'
    }),
    condition: (data, matches) => data.shield && !data.shield[matches.target],
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        text: matches.ability
      };
    }
  }, {
    // This ability name is helpfully called "Attack" so name it something else.
    id: 'Weeping Ozma Tank Laser',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      type: '22',
      id: '1831'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        text: {
          en: 'Tank Laser',
          de: 'Tank Laser',
          fr: 'Tank Laser',
          ja: 'タンクレザー',
          cn: '坦克激光',
          ko: '탱커 레이저'
        }
      };
    }
  }, {
    id: 'Weeping Ozma Holy',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '182E'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Slid off!',
          de: 'ist runtergerutscht!',
          fr: 'A glissé(e) !',
          ja: 'ノックバック',
          cn: '击退！',
          ko: '넉백됨!'
        }
      };
    }
  }]
};
/* harmony default export */ const weeping_city = (weeping_city_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/03-hw/dungeon/aetherochemical_research_facility.ts


// Aetherochemical Research Facility
const aetherochemical_research_facility_triggerSet = {
  zoneId: zone_id/* default.TheAetherochemicalResearchFacility */.Z.TheAetherochemicalResearchFacility,
  damageWarn: {
    'ARF Grand Sword': '216',
    // Conal AoE, Scrambled Iron Giant trash
    'ARF Cermet Drill': '20E',
    // Line AoE, 6th Legion Magitek Vanguard trash
    'ARF Magitek Slug': '10DB',
    // Line AoE, boss 1
    'ARF Aetherochemical Grenado': '10E2',
    // Large targeted circle AoE, Magitek Turret II, boss 1
    'ARF Magitek Spread': '10DC',
    // 270-degree roomwide AoE, boss 1
    'ARF Eerie Soundwave': '1170',
    // Targeted circle AoE, Cultured Empusa trash, before boss 2
    'ARF Tail Slap': '125F',
    // Conal AoE, Cultured Dancer trash, before boss 2
    'ARF Calcifying Mist': '123A',
    // Conal AoE, Cultured Naga trash, before boss 2
    'ARF Puncture': '1171',
    // Short line AoE, Cultured Empusa trash, before boss 2
    'ARF Sideswipe': '11A7',
    // Conal AoE, Cultured Reptoid trash, before boss 2
    'ARF Gust': '395',
    // Targeted small circle AoE, Cultured Mirrorknight trash, before boss 2
    'ARF Marrow Drain': 'D0E',
    // Conal AoE, Cultured Chimera trash, before boss 2
    'ARF Riddle Of The Sphinx': '10E4',
    // Targeted circle AoE, boss 2
    'ARF Ka': '106E',
    // Conal AoE, boss 2
    'ARF Rotoswipe': '11CC',
    // Conal AoE, Facility Dreadnought trash, before boss 3
    'ARF Auto-cannons': '12D9',
    // Line AoE, Monitoring Drone trash, before boss 3
    'ARF Death\'s Door': '4EC',
    // Line AoE, Cultured Shabti trash, before boss 3
    'ARF Spellsword': '4EB',
    // Conal AoE, Cultured Shabti trash, before boss 3
    'ARF End Of Days': '10FD',
    // Line AoE, boss 3
    'ARF Blizzard Burst': '10FE',
    // Fixed circle AoEs, Igeyorhm, boss 3
    'ARF Fire Burst': '10FF',
    // Fixed circle AoEs, Lahabrea, boss 3
    'ARF Sea Of Pitch': '12DE',
    // Targeted persistent circle AoEs, boss 3
    'ARF Dark Blizzard II': '10F3',
    // Random circle AoEs, Igeyorhm, boss 3
    'ARF Dark Fire II': '10F8',
    // Random circle AoEs, Lahabrea, boss 3
    'ARF Ancient Eruption': '1104',
    // Self-targeted circle AoE, boss 4
    'ARF Entropic Flame': '1108' // Line AoEs,  boss 4

  },
  shareWarn: {
    'ARF Chthonic Hush': '10E7',
    // Instant tank cleave, boss 2
    'ARF Height Of Chaos': '1101',
    // Tank cleave, boss 4
    'ARF Ancient Circle': '1102' // Targeted donut AoEs, boss 4

  },
  triggers: [{
    id: 'ARF Petrifaction',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '01'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }]
};
/* harmony default export */ const aetherochemical_research_facility = (aetherochemical_research_facility_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/03-hw/dungeon/baelsars_wall.ts

// Baelsar's Wall
const baelsars_wall_triggerSet = {
  zoneId: zone_id/* default.BaelsarsWall */.Z.BaelsarsWall,
  damageWarn: {
    'Baelsar 3rd Cohort Laquerius Overpower': '2D0',
    // Conal AoE, before boss 1
    'Baelsar 3rd Cohort Canis Pugnax Bellowing Grunt': '150',
    // Targeted circle AoE, before boss 1
    'Baelsar 3rd Cohort Signifier Dark Fire III': '519',
    // Targeted circle AoE, before boss 1
    'Baelsar Magitek Predator Magitek Ray': '1CB3',
    // Line AoE, boss 1
    'Baelsar Adamantite Claw Shred': '1257',
    // Rectangle AoE, before boss 2
    'Baelsar Magitek Colossus Exhaust': '593',
    // Line AoE, before boss 2
    'Baelsar Magitek Colossus Grand Sword': '126A',
    // Conal AoE, before boss 2
    'Baelsar Armored Weapon Dynamic Sensory Jammer': '1CBA',
    // Extreme Caution failure, boss 2
    'Baelsar Armored Weapon Diffractive Laser': '1CBB',
    // Targeted circle AoE, boss 2
    'Baelsar Magitek Bit Assault Cannon': '1CC0',
    // Checkerboard line AoEs, boss 2
    'Baelsar Magitek Gunship Carpet Bomb': '1CCF',
    // Targeted circle AoE, after boss 2
    'Baelsar Lance-Wielding Loyalist Heartstopper': '362',
    // Rectangle AoE, after boss 2
    'Baelsar The Griffin Sanguine Blade': '1CC5',
    // Arena cleave, boss 3
    'Baelsar Blade Of The Griffin Corrosion': '1CCC' // Circle AoE, boss 3

  },
  gainsEffectWarn: {
    'Baelsar The Griffin Accuracy Down': '1C' // Flash Powder failure, boss 3

  }
};
/* harmony default export */ const baelsars_wall = (baelsars_wall_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/03-hw/dungeon/fractal_continuum.ts

// Fractal Continuum
const fractal_continuum_triggerSet = {
  zoneId: zone_id/* default.TheFractalContinuum */.Z.TheFractalContinuum,
  damageWarn: {
    'Fractal Double Sever': 'F7D',
    // Conals, boss 1
    'Fractal Aetheric Compression': 'F80',
    // Ground AoE circles, boss 1
    'Fractal 11-Tonze Swipe': 'F81',
    // Frontal cone, boss 2
    'Fractal 10-Tonze Slash': 'F83',
    // Frontal line, boss 2
    'Fractal 111-Tonze Swing': 'F87',
    // Get-out AoE, boss 2
    'Fractal Broken Glass': 'F8E',
    // Glowing panels, boss 3
    'Fractal Mines': 'F90',
    'Fractal Seed of the Rivers': 'F91' // Ground AoE circles, boss 3

  },
  shareWarn: {
    'Fractal Sanctification': 'F89' // Instant conal buster, boss 3

  }
};
/* harmony default export */ const fractal_continuum = (fractal_continuum_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/03-hw/dungeon/gubal_library_hard.ts



const gubal_library_hard_triggerSet = {
  zoneId: zone_id/* default.TheGreatGubalLibraryHard */.Z.TheGreatGubalLibraryHard,
  damageWarn: {
    'GubalHm Terror Eye': '930',
    // Circle AoE, Spine Breaker trash
    'GubalHm Batter': '198A',
    // Circle AoE, trash before boss 1
    'GubalHm Condemnation': '390',
    // Conal AoE, Bibliovore trash
    'GubalHm Discontinue 1': '1943',
    // Falling book shadow, boss 1
    'GubalHm Discontinue 2': '1940',
    // Rush AoE from ends, boss 1
    'GubalHm Discontinue 3': '1942',
    // Rush AoE across, boss 1
    'GubalHm Frightful Roar': '193B',
    // Get-Out AoE, boss 1
    'GubalHm Issue 1': '193D',
    // Initial end book warning AoE, boss 1
    'GubalHm Issue 2': '193F',
    // Initial end book warning AoE, boss 1
    'GubalHm Issue 3': '1941',
    // Initial side book warning AoE, boss 1
    'GubalHm Desolation': '198C',
    // Line AoE, Biblioclast trash
    'GubalHm Double Smash': '26A',
    // Conal AoE, Biblioclast trash
    'GubalHm Darkness': '3A0',
    // Conal AoE, Inkstain trash
    'GubalHm Firewater': '3BA',
    // Circle AoE, Biblioclast trash
    'GubalHm Elbow Drop': 'CBA',
    // Conal AoE, Biblioclast trash
    'GubalHm Dark': '19DF',
    // Large circle AoE, Inkstain trash
    'GubalHm Seals': '194A',
    // Sun/Moonseal failure, boss 2
    'GubalHm Water III': '1C67',
    // Large circle AoE, Porogo Pegist trash
    'GubalHm Raging Axe': '1703',
    // Small conal AoE, Mechanoservitor trash
    'GubalHm Magic Hammer': '1990',
    // Large circle AoE, Apanda mini-boss
    'GubalHm Properties Of Gravity': '1950',
    // Circle AoE from gravity puddles, boss 3
    'GubalHm Properties Of Levitation': '194F',
    // Circle AoE from levitation puddles, boss 3
    'GubalHm Comet': '1969' // Small circle AoE, intermission, boss 3

  },
  damageFail: {
    'GubalHm Ecliptic Meteor': '195C' // LoS mechanic, boss 3

  },
  shareWarn: {
    'GubalHm Searing Wind': '1944',
    // Tank cleave, boss 2
    'GubalHm Thunder': '19[AB]' // Spread marker, boss 3

  },
  triggers: [{
    // Fire gate in hallway to boss 2, magnet failure on boss 2
    id: 'GubalHm Burns',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '10B'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }, {
    // Helper for Thunder 3 failures
    id: 'GubalHm Imp Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '46E'
    }),
    run: (data, matches) => {
      var _data$hasImp;

      (_data$hasImp = data.hasImp) !== null && _data$hasImp !== void 0 ? _data$hasImp : data.hasImp = {};
      data.hasImp[matches.target] = true;
    }
  }, {
    id: 'GubalHm Imp Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '46E'
    }),
    run: (data, matches) => {
      data.hasImp = data.hasImp || {};
      data.hasImp[matches.target] = false;
    }
  }, {
    // Targets with Imp when Thunder III resolves receive a vulnerability stack and brief stun
    id: 'GubalHm Imp Thunder',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '195[AB]',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => {
      var _data$hasImp2;

      return (_data$hasImp2 = data.hasImp) === null || _data$hasImp2 === void 0 ? void 0 : _data$hasImp2[matches.target];
    },
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: 'Shocked Imp',
          de: 'Schockierter Imp',
          fr: 'Kappa choqué(e)',
          ja: 'カッパを解除しなかった',
          cn: '河童状态吃了暴雷',
          ko: '물요정 상태 해제하지 않음'
        }
      };
    }
  }, {
    id: 'GubalHm Quake',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '1956',
      ...oopsy_common/* playerDamageFields */.np
    }),
    // Always hits target, but if correctly resolved will deal 0 damage
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    id: 'GubalHm Tornado',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '195[78]',
      ...oopsy_common/* playerDamageFields */.np
    }),
    // Always hits target, but if correctly resolved will deal 0 damage
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const gubal_library_hard = (gubal_library_hard_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/03-hw/dungeon/sohm_al_hard.ts


const sohm_al_hard_triggerSet = {
  zoneId: zone_id/* default.SohmAlHard */.Z.SohmAlHard,
  damageWarn: {
    'SohmAlHm Deadly Vapor': '1DC9',
    // Environmental circle AoEs
    'SohmAlHm Deeproot': '1CDA',
    // Targeted circle AoE, Blooming Chichu trash
    'SohmAlHm Odious Air': '1CDB',
    // Conal AoE, Blooming Chichu trash
    'SohmAlHm Glorious Blaze': '1C33',
    // Circle AoE, Small Spore Sac, boss 1
    'SohmAlHm Foul Waters': '118A',
    // Conal AoE, Mountaintop Opken trash
    'SohmAlHm Plain Pound': '1187',
    // Targeted circle AoE, Mountaintop Hropken trash
    'SohmAlHm Palsynyxis': '1161',
    // Conal AoE, Overgrown Difflugia trash
    'SohmAlHm Surface Breach': '1E80',
    // Circle AoE, Giant Netherworm trash
    'SohmAlHm Freshwater Cannon': '119F',
    // Line AoE, Giant Netherworm trash
    'SohmAlHm Tail Smash': '1C35',
    // Untelegraphed rear conal AoE, Gowrow, boss 2
    'SohmAlHm Tail Swing': '1C36',
    // Untelegraphed circle AoE, Gowrow, boss 2
    'SohmAlHm Ripper Claw': '1C37',
    // Untelegraphed frontal AoE, Gowrow, boss 2
    'SohmAlHm Wind Slash': '1C38',
    // Circle AoE, Gowrow, boss 2
    'SohmAlHm Wild Charge': '1C39',
    // Dash attack, Gowrow, boss 2
    'SohmAlHm Hot Charge': '1C3A',
    // Dash attack, Gowrow, boss 2
    'SohmAlHm Fireball': '1C3B',
    // Untelegraphed targeted circle AoE, Gowrow, boss 2
    'SohmAlHm Lava Flow': '1C3C',
    // Untelegraphed conal AoE, Gowrow, boss 2
    'SohmAlHm Wild Horn': '1507',
    // Conal AoE, Abalathian Clay Golem trash
    'SohmAlHm Lava Breath': '1C4D',
    // Conal AoE, Lava Crab trash
    'SohmAlHm Ring of Fire': '1C4C',
    // Targeted circle AoE, Volcano Anala trash
    'SohmAlHm Molten Silk 1': '1C43',
    // 270-degree frontal AoE, Lava Scorpion, boss 3
    'SohmAlHm Molten Silk 2': '1C44',
    // 270-degree rear AoE, Lava Scorpion, boss 3
    'SohmAlHm Molten Silk 3': '1C42',
    // Ring AoE, Lava Scorpion, boss 3
    'SohmAlHm Realm Shaker': '1C41' // Circle AoE, Lava Scorpion, boss 3

  },
  triggers: [{
    // Warns if players step into the lava puddles. There is unfortunately no direct damage event.
    id: 'SohmAlHm Burns',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '11C'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }]
};
/* harmony default export */ const sohm_al_hard = (sohm_al_hard_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/03-hw/dungeon/the_lost_city_of_amdapor_hard.ts

// TODO: taking wrong ancient libra with debuff
// TODO: does scratch cleave?
const the_lost_city_of_amdapor_hard_triggerSet = {
  zoneId: zone_id/* default.TheLostCityOfAmdaporHard */.Z.TheLostCityOfAmdaporHard,
  damageWarn: {
    'LostCityHard Magicked Crawler Sticky Thread': '1164',
    // frontal conal
    'LostCityHard Magicked Crawler Poison Breath': '1165',
    // frontal conal
    'LostCityHard Ranting Ranks Gremlin Fire II': '16C0',
    // targeted circle
    'LostCityHard Achamoth Psycho Squama': '15C6',
    // large frontal conal
    'LostCityHard Achamoth Dissipate': '15C8',
    // being hit by the chasing Toxic Squama orb
    'LostCityHard Achamoth Enthrallment': '15C3',
    // conal from Neuro Squama clones
    'LostCityHard Rift Dragon Miasma Breath': '1249',
    // frontal conal
    'LostCityHard Amdapori Corpse Holy': '1706',
    // targeted circle
    'LostCityHard Void Monk Water III': '16C7',
    // interruptible targeted circle
    'LostCityHard Void Monk Flood': '16C6',
    // untelegraphed circle? after Sucker draw-in
    'LostCityHard Winged Lion Ancient Aero': '15CF',
    // large targeted circle
    'LostCityHard Winged Lion Ancient Stone': '15D3',
    // targeted circle
    'LostCityHard Winged Lion Ancient Aero Grown': '1760',
    // raidwide if aero not popped
    'LostCityHard Winged Lion Ancient Stone Grown': '167B',
    // untelegraphed circle? if stone not popped
    'LostCityHard Winged Lion Ancient Holy Grown': '15CD',
    // raidwide if holy not popped
    'LostCityHard Winged Lion Gargoyle Holy': '1706',
    // letting adds live too long
    'LostCityHard Clay Effigy Wild Horn': '1507',
    // frontal conal
    'LostCityHard Mana Idol Neck Splinter': '1169',
    // centered circle
    'LostCityHard Kuribu Glory': '15E4' // frontal conal

  },
  gainsEffectWarn: {
    'LostCityHard Achamoth Pollen': '13',
    // standing in the Toxic Squama puddle
    'LostCityHard Rift Dragon Terror': '42',
    // Evil Eye conal
    'LostCityHard Winged Lion Magic Defense Down': '26',
    // not finishing the holy orb in time
    'LostCityHard Mana Pot Mysterious Light Blind': '0F' // not looking away

  },
  shareWarn: {
    'LostCityHard Kuribu Reverse Cure III': '15DB' // spread

  }
};
/* harmony default export */ const the_lost_city_of_amdapor_hard = (the_lost_city_of_amdapor_hard_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/03-hw/raid/a3n.ts

const a3n_triggerSet = {
  zoneId: zone_id/* default.AlexanderTheArmOfTheFather */.Z.AlexanderTheArmOfTheFather,
  damageWarn: {
    'A3N Protean Wave': '12F0',
    'A3N Sluice Puddles': '12F4',
    // Puddle AoEs
    'A3N Ultramagnetism': '1308',
    // Attracting magnets too close
    'A3N Current Leakeage 1': '130C',
    // Gear Lubricant escaping
    'A3N Current Leakeage 2': '130D' // Piston Lubricant escaping

  },
  gainsEffectWarn: {
    'A3N Electrocution': '120',
    // Arena edge debuff. (Also paralysis and stun.)
    'A3N Dropsy': '121' // Water puddle debuff. (Tornado and final phase.)

  },
  shareWarn: {
    'A3N Fluid Swing 1': '12EE',
    // Tank cleave, no debuff
    'A3N Fluid Swing 2': '12F5',
    // Tank cleave, blunt resistance down debuff
    'A3N Fluid Strike 1': '12FD',
    // Tank cleave, no debuff
    'A3N Fluid Strike 2': '12FE' // Tank cleave, blunt resistance down debuff

  }
};
/* harmony default export */ const a3n = (a3n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/03-hw/raid/a12n.ts



const a12n_triggerSet = {
  zoneId: zone_id/* default.AlexanderTheSoulOfTheCreator */.Z.AlexanderTheSoulOfTheCreator,
  damageWarn: {
    'A12N Sacrament': '1AE6',
    // Cross Lasers
    'A12N Gravitational Anomaly': '1AEB' // Gravity Puddles

  },
  shareWarn: {
    'A12N Divine Spear': '1AE3',
    // Instant conal tank cleave
    'A12N Blazing Scourge': '1AE9',
    // Orange head marker splash damage
    'A12N Plaint Of Severity': '1AF1',
    // Aggravated Assault splash damage
    'A12N Communion': '1AFC' // Tether Puddles

  },
  triggers: [{
    id: 'A12N Assault Collect',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '461'
    }),
    run: (data, matches) => {
      var _data$assault;

      (_data$assault = data.assault) !== null && _data$assault !== void 0 ? _data$assault : data.assault = [];
      data.assault.push(matches.target);
    }
  }, {
    // It is a failure for a Severity marker to stack with the Solidarity group.
    id: 'A12N Assault Failure',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '1AF2',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => {
      var _data$assault2;

      return (_data$assault2 = data.assault) === null || _data$assault2 === void 0 ? void 0 : _data$assault2.includes(matches.target);
    },
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: 'Didn\'t Spread!',
          de: 'Nicht verteilt!',
          fr: 'Ne s\'est pas dispersé(e) !',
          ja: '散開しなかった!',
          cn: '没有散开!',
          ko: '산개하지 않았음!'
        }
      };
    }
  }, {
    id: 'A12N Assault Cleanup',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '461'
    }),
    delaySeconds: 20,
    suppressSeconds: 5,
    run: data => {
      delete data.assault;
    }
  }]
};
/* harmony default export */ const a12n = (a12n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/03-hw/raid/a10n.ts

const a10n_triggerSet = {
  zoneId: zone_id/* default.AlexanderTheBreathOfTheCreator */.Z.AlexanderTheBreathOfTheCreator,
  damageWarn: {
    'A10N Lamebrix Illuminati Hand Cannon': '1AD2',
    // Rectangle AoE
    'A10N Blizzard Arrow Frostbite': '1AC7',
    // Ice trap AoE on edges
    'A10N Weight Of The World Impact': '1AC6',
    // Mace traps in the center
    'A10N Gobpress Steam Roller': '1AB4',
    // Intermission Demon Wall AoE
    'A10N Lamebrix Gobswipe Conklops': '1ACB',
    // Single Charge dynamo/green
    'A10N Lamebrix Gobspin Whooshdrop': '1ACC',
    // Single Charge chariot/red
    'A10N Buzzsaw Laceration': '1AC8'
  },
  damageFail: {
    'A10N Goblin Of Fortune Gobbieboom': '1AD3' // Add enrage

  },
  gainsEffectWarn: {
    'A10N Electrocution': '120',
    // Arena danger walls
    'A10N Stab Wound': '45D' // Activation of the spike trap. (No info on who did it.)

  },
  shareWarn: {
    'A10N Lamebrix Gobslash Slicetops': '1AD1',
    // Stretchy tether AoE
    'A10N Lamebrix Critical Wrath': '1ACD' // Fire spread circles

  },
  soloWarn: {
    'A10N Lamebrix Bomb Toss': '1ACE' // Standard stack marker

  }
};
/* harmony default export */ const a10n = (a10n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/03-hw/raid/a6n.ts

const a6n_triggerSet = {
  zoneId: zone_id/* default.AlexanderTheCuffOfTheSon */.Z.AlexanderTheCuffOfTheSon,
  damageWarn: {
    'Minefield': '170D',
    // Circle AoE, mines.
    'Mine': '170E',
    // Mine explosion.
    'Supercharge': '1713',
    // Mirage charge.
    'Height Error': '171D',
    // Incorrect panel for Height.
    'Earth Missile': '1726' // Circle AoE, fire puddles.

  },
  damageFail: {
    'Ultra Flash': '1722' // Room-wide death AoE, if not LoS'd.

  },
  shareWarn: {
    'Ice Missile': '1727' // Ice headmarker AoE circles.

  },
  shareFail: {
    'Single Buster': '1717' // Single laser Attachment. Non-tanks are *probably* dead.

  },
  soloWarn: {
    'Double Buster': '1718',
    // Twin laser Attachment.
    'Enumeration': '171E' // Enumeration circle.

  }
};
/* harmony default export */ const a6n = (a6n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/03-hw/trial/sephirot-ex.ts


const sephirot_ex_triggerSet = {
  zoneId: zone_id/* default.ContainmentBayS1T7Extreme */.Z.ContainmentBayS1T7Extreme,
  damageWarn: {
    'SephirotEX Yesod': '157E',
    // Snapshot floor spikes
    'SephirotEX Ain': '1569',
    // Half-arena baited frontal
    'SephirotEX Ein Sof': '156F',
    // Expanding green puddles
    'SephirotEX Fiendish Wail': '1577' // Raidwide if tower is missed

  },
  damageFail: {
    'SephirotEX Pillar Of Mercy': '1581',
    // Standing in the blue puddles
    'SephirotEX Storm Of Words Revelation': '1583' // Missing the enrage on Storm of Words

  },
  shareWarn: {
    'SephirotEX Triple Trial': '1566',
    // Instant tank cleave
    'SephirotEX Ratzon Green': '156B',
    // Small green spread circle
    'SephirotEX Ratzon Purple': '156C',
    // Large purple spread circle
    'SephirotEX Earth Shaker': '157D',
    'SephirotEX Spread Da\'at': '1573'
  },
  soloWarn: {
    'SephirotEX Fiendish Rage': '156D' // Stack markers, phase 1

  },
  triggers: [{
    // Pillar of Mercy,  Malkuth, and Pillar of Severity
    id: 'SephirotEX Knockbacks',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: ['1580', '1582', '1586'],
      source: 'Sephirot'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Pushed off!',
          de: 'Runter geschubst!',
          fr: 'Repoussé(e) !',
          ja: '落ちた',
          cn: '击退坠落',
          ko: '넉백됨'
        }
      };
    }
  }, {
    // 3ED is Force Against Might orange, 3EE is Force Against Magic, green.
    id: 'SephirotEX Force Against Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: ['3ED', '3EE']
    }),
    run: (data, matches) => {
      var _data$force;

      (_data$force = data.force) !== null && _data$force !== void 0 ? _data$force : data.force = {};
      data.force[matches.target] = matches.effectId;
    }
  }, {
    id: 'SephirotEX Force Against Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: ['3ED', '3EE']
    }),
    run: (data, matches) => {
      var _data$force2;

      (_data$force2 = data.force) !== null && _data$force2 !== void 0 ? _data$force2 : data.force = {};
      delete data.force[matches.target];
    }
  }, {
    id: 'SephirotEX Spirit',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '157B',
      source: 'Sephirot'
    }),
    condition: (data, matches) => {
      var _data$force3;

      return (data === null || data === void 0 ? void 0 : (_data$force3 = data.force) === null || _data$force3 === void 0 ? void 0 : _data$force3[matches.target]) === '3ED';
    },
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        text: matches.ability
      };
    }
  }, {
    id: 'SephirotEX Life Force',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '157A',
      source: 'Sephirot'
    }),
    condition: (data, matches) => {
      var _data$force4;

      return (data === null || data === void 0 ? void 0 : (_data$force4 = data.force) === null || _data$force4 === void 0 ? void 0 : _data$force4[matches.target]) === '3EE';
    },
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        text: matches.ability
      };
    }
  }, {
    id: 'SephirotEX Fiendish Wail Green',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '1576',
      source: 'Sephirot'
    }),
    condition: (data, matches) => {
      var _data$force5;

      return (data === null || data === void 0 ? void 0 : (_data$force5 = data.force) === null || _data$force5 === void 0 ? void 0 : _data$force5[matches.target]) === '3EE';
    },
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        text: matches.ability
      };
    }
  }, {
    // Only tanks or Blue Mages should take towers without a Force debuff.
    id: 'SephirotEX Fiendish Wail Non-Tank',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '1576',
      source: 'Sephirot'
    }),
    condition: (data, matches) => {
      var _data$force6;

      if (data.party.isTank(matches.target) || data.job === 'BLU') return false;
      return (data === null || data === void 0 ? void 0 : (_data$force6 = data.force) === null || _data$force6 === void 0 ? void 0 : _data$force6[matches.target]) === undefined;
    },
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        text: matches.ability
      };
    }
  }, {
    // Taking a tether while under Force Against Might (orange) kills the target
    id: 'SephirotEX Tether Da\'at',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '1574',
      source: 'Sephirot'
    }),
    condition: (data, matches) => {
      var _data$force7;

      return (data === null || data === void 0 ? void 0 : (_data$force7 = data.force) === null || _data$force7 === void 0 ? void 0 : _data$force7[matches.target]) === '3ED';
    },
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const sephirot_ex = (sephirot_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/alliance/orbonne_monastery.ts


 // Note: Mustadio Last Testament (3737) does damage whether you succeed or fail,
// but is lethal if you fail, so it should be obvious when failed.
// Note: Similarly skipping Agrias Duskblade (3761), which also ~wipes when towers are missed.
// Note: skipping Agrias Frostbite (11D), which many people get a tick of when add is nearly dead.
// Note: Ultima's Aspersory Pervailing Current (38CC) hits a lot for low damage, so skipping.
// TODO: Dark Crusader Dark Rite (377F) going off if towers aren't stepped in.
// TODO: Bleeding from Agrias Shadowblade orbs merging and exploding?
// TODO: Ultima Dark Cannonade dorito stack does damage on success and failure.

const orbonne_monastery_triggerSet = {
  zoneId: zone_id/* default.TheOrbonneMonastery */.Z.TheOrbonneMonastery,
  damageWarn: {
    'Orbonne Harpy Blasphemous Howl': '3779',
    // large targeted circle
    'Orbonne Monastic Ghost Dark Eruption': '3A15',
    // targeted circle
    'Orbonne Monastic Ghost Lingering Resenentment': '377C',
    // large targeted circle
    'Orbonne Mustadio Right Handgonne': '373E',
    // left/right haircut
    'Orbonne Mustadio Left Handgonne': '373F',
    // left/right haircut
    'Orbonne Mustadio Iron Giant Compress': '3740',
    // line aoe from tethered Iron Giant on outside
    'Orbonne Mustadio Ballistic Impact': '3743',
    // spread marker
    'Orbonne Mustadio Searchlight': '3744',
    // chasing red circle that locks in
    'Orbonne Mustadio Leg Shot': '3742',
    // mines
    'Orbonne Mustadio Early Turret Satellite Beam': '3741',
    // quadrant explosion from tethered Early Turret
    'Orbonne Agrias Northswain\'s Strike': '3853',
    // line aoes from outside adds during sword+crystals phase
    'Orbonne Agrias Hallowed Bolt Circle': '385B',
    // very large circle
    'Orbonne Agrias Hallowed Bolt Donut': '385C',
    // very large donut
    'Orbonne Dark Crusader Infernal Wave': '3781',
    // line aoe
    'Orbonne Cid Hallowed Bolt': '374B',
    // lightning platform hit from sword after T.G. Holy Sword (3749)
    'Orbonne Cid Northswain\'s Strike': '3AD3',
    // "get out" after T.G. Holy Sword (374F)
    'Orbonne Cid Judgment Blade': '3AD4',
    // "get in" after T.G. Holy Sword (374A)
    'Orbonne Cid Agrias Shadowblade Orbs': '375F',
    // followup hits from growing red/black orbs
    'Orbonne Cid Crush Weapon 1': '4756',
    // chasing circle initial hit
    'Orbonne Cid Crush Weapon 2': '4757',
    // chasing circle
    'Orbonne Cid Ephemeral Knight Hallowed Bolt Donut': '3767',
    // initial donut from Ephemeral Knight headmarker
    'Orbonne Cid Ephemeral Knight Hallowed Bolt Circle': '3766',
    // followup circle from Ephemeral Knight
    'Orbonne Cid Crush Accessory': '375B',
    // platform aoe with safe spot on Icewolf add
    'Orbonne Ultima Holy IV': '389A',
    // targeted circle
    'Orbonne Ultima Auralight Line': '3897',
    // 3x lines during Auralight (38EA) cast that turn into ice
    'Orbonne Ultima Auralight Circle': '3898',
    // centered circle during Auralight (38EA) cast
    'Orbonne Ultima Auracite Shard Plummet': '38AD',
    // 3x shards falling before Grand Cross (38AC)
    'Orbonne Ultima Auracite Shard Grand Cross': '38AE',
    // cross explosion from Auracite Shards
    'Orbonne Ultima Demi-Belias Time Eruption 1': '38D0',
    // fast/slow clocks
    'Orbonne Ultima Demi-Belias Time Eruption 2': '38D1',
    // fast/slow clocks
    'Orbonne Ultima Demi-Hashmal Towerfall': '38D7',
    // control tower falling over
    'Orbonna Ultima Demi-Hashmal Extreme Edge 1': '38DA',
    // left/right cleave dash
    'Orbonna Ultima Demi-Hashmal Extreme Edge 2': '38DB',
    // left/right cleave dash
    'Orbonne Ultima Demi-Belias Eruption': '37C8',
    // headmarker with chasing telegraphed circle aoes
    'Orbonne Ultima Dominion Ray Of Light': '38B7',
    // lingering line aoe with Eastward/Westward March
    'Orbonne Ultima Embrace Initial': '38B9',
    // hidden blue traps being placed
    'Orbonne Ultima Embrace Triggered': '38BA',
    // hidden blue traps being triggered
    'Orbonne Ultima Explosion': '38E9',
    // failing to stop for Acceleration Bomb
    'Orbonne Ultima Dominion Bombardment': '38BE',
    // circle during midphase ice maze
    'Orbonne Ultima Holy': '38AB' // circle during midphase ice maze

  },
  damageFail: {
    'Orbonne Cid Icewolf Burst': '375C' // not killing Icewolf add in time

  },
  gainsEffectFail: {
    'Orbonne Harpy Devitalize Doom': '38E' // Harpy lookaway mechanic

  },
  shareWarn: {
    'Orbonne Agrias Cleansing Flame': '3865',
    // spread marker
    'Orbonne Agrias Shadowblade Initial': '375E' // initial hit from giant red/black circle headmarker

  },
  shareFail: {
    'Orbonne Agrias Thunder Slash': '3866' // conal tank cleave with marker

  },
  soloFail: {
    'Orbonne Cid Ephemeral Knight Hallowed Bolt Stack': '3768' // stack marker from Ephemeral Knight

  },
  triggers: [{
    // castbar that you need to have Heavenly Shield up for, or you get a vuln and knockback.
    id: 'Orbonne Agrias Judgment Blade',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '3857',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    // same as Judgment Blade, but from Sword Knight
    id: 'Orbonne Agrias Mortal Blow',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '385E',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const orbonne_monastery = (orbonne_monastery_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/alliance/ridorana_lighthouse.ts


const ridorana_lighthouse_triggerSet = {
  zoneId: zone_id/* default.TheRidoranaLighthouse */.Z.TheRidoranaLighthouse,
  damageWarn: {
    'Ridorana Famfrit Tsunami 1': '2C51',
    // untelegraphed 90 degree conal from jug
    'Ridorana Famfrit Tsunami 2': '2C52',
    // untelegraphed 90 degree conal from jug
    'Ridorana Famfrit Dark Rain': '2C46',
    // targeted medium size circles
    'Ridorana Famfrit Darkening Deluge': '2C54',
    // rain puddles after Darkening Rainfull
    'Ridorana Bune Tri-Attack': '2CED',
    // conal
    'Ridorana Bune Pulsar Wave': '2CEE',
    // targeted circle
    'Ridorana Belias Time Eruption': '2CDF',
    // exploding clock
    'Ridorana Belias Crimson Cyclone 1': '2CE2',
    // clone dash
    'Ridorana Belias Crimson Cyclone 2': '2CE3',
    // clone dash
    'Ridorana Belias Crimson Cyclone 3': '2CE4',
    // clone dash
    'Ridorana Belias Crimson Cyclone 4': '2D5F',
    // clone dash
    'Ridorana Belias Eruption': '2CDD',
    // series of targeted circles
    'Ridorana Belias Time Bomb': '2CE7',
    // stoppable clock with time conal attack
    'Ridorana Construct Pulverize Close': '2C61',
    // untelegraphed centered circle close
    'Ridorana Construct Pulverize Far': '2C62',
    // targeted telegraphed circles far away
    'Ridorana Construct Compress': '2C5C',
    // long skinny line
    'Ridorana Construct Loose Cog Triboelectricity': '2C6D',
    // blue circle from cogs in air
    'Ridorana Construct Dispose': '2C60',
    // rotating fire conal
    'Ridorana Construct Dispose Annihilation': '2CEA',
    // rotating fire conal, Annihilation Mode
    'Ridorana Construct Acceleration Bomb': '2D27',
    // failing acceleration bomb in midphase
    'Ridorana Construct Ultramagnetism': '2CD6',
    // failing magnetic tethers in midphase
    'Ridorana Construct Missile Explosion': '2C6F',
    // running into a missile in midphase
    'Ridorana Yiazmat Gust Front': '2C24',
    // targeted black/yellow circles
    'Ridorana Yiazmat White Breath': '2C31',
    // get under donut
    'Ridorana Yiazmat Rake Charge 1': '2C3C',
    // like a knife through butter
    'Ridorana Yiazmat Rake Charge 2': '2E32',
    'Ridorana Yiazmat Rake Charge 3': '2C28',
    'Ridorana Yiazmat Rake Charge 4': '2D4F',
    'Ridorana Yiazmat Rake Charge 5': '2C27',
    'Ridorana Yiazmat Archaeodemon Unholy Darkness': '2673',
    // targeted circle
    'Ridorana Yiazmat Archaeodemon Karma': '2672' // conal

  },
  damageFail: {
    'Ridorana Yiazmat Stone Breath': '2C29' // petrifying conal breath

  },
  shareWarn: {
    'Ridorana Famfrit Briny Cannonade': '2C45',
    // spread marker
    'Ridorana Construct Ignite': '2C67',
    // spread marker
    'Ridorana Iron Golem Ovation': '2CF3',
    // untelegraphed instant line attack (for tank, ideally)
    'Ridorana Yiazmat Wind Azer Ancient Aero': '2C38' // targeted tether line aoe from Azer adds

  },
  shareFail: {
    'Ridorana Yiazmat Rake Buster 1': '2C26',
    // untelegraphed tankbuster cleave
    'Ridorana Yiazmat Rake Buster 2': '2DE4' // untelegraphed tankbuster cleave

  },
  soloFail: {
    'Ridorana Construct Accelerate': '2C65',
    // stack marker
    'Ridorana Yiazmat Death Strike': '2C33' // stack marker

  },
  triggers: [{
    // Computation Mode errors.
    id: 'Ridorana Construct Maths',
    type: 'HeadMarker',
    netRegex: netregexes/* default.headMarker */.Z.headMarker({
      id: '0089'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: `Maths`,
          de: `Mathe`,
          fr: `Maths`,
          ja: `算術`,
          cn: `算数`,
          ko: '산수오답'
        }
      };
    }
  }]
};
/* harmony default export */ const ridorana_lighthouse = (ridorana_lighthouse_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/alliance/royal_city_of_rabanastre.ts


 // TODO: is Mateus's Azure Guard Fin Rays (2642) a tankbuster without a castbar? a cleave?

const royal_city_of_rabanastre_triggerSet = {
  zoneId: zone_id/* default.TheRoyalCityOfRabanastre */.Z.TheRoyalCityOfRabanastre,
  damageWarn: {
    'Rabanastre Mateus Ice Azer Hypothermal Combustion': '2639',
    // large centered circle when Ice Azer dies
    'Rabanastre Mateus Blizzard Sphere Chill': '2646',
    // baited long skinny conal from tethered Blizzard Spheres
    'Rabanastre Sniffing Seeq Bandit Lunge': '2670',
    // line aoe
    'Rabanastre Rabanastran Mimic Deathtrap': '75E',
    // centered circle
    'Rabanastre Hashmal Jagged Edge': '25CD',
    // red purple ground circles
    'Rabanastre Hashmal Towerfall': '25CA',
    // control towers falling over
    'Rabanastre Hashmal Extreme Edge 1': '25D0',
    // left/right cleave
    'Rabanastre Hashmal Extreme Edge 2': '25CE',
    // left/right cleave
    'Rabanastre Hashmal Earth Shaker': '25C8',
    // 3x 1/6 pie slices that usually happen twice in a row
    'Rabanastre Archaedemon Unholy Darkness': '2673',
    // very large conal (also during Rofocale)
    'Rabanastre Archaedemon Karma': '2672',
    // targeted circle (also during Rofocale)
    'Rabanastre Archaeolion The Dragon\'s Breath': '273C',
    // conal
    'Rabanastre Archaeolion The Ram\'s Breath': '273B',
    // conal
    'Rabanastre Archaeolion The Dragon\'s Voice': 'D10',
    // interruptable centered circle
    'Rabanastre Archaeolion The Ram\'s Voice': 'D0F',
    // interruptable centered circle
    'Rabanastre Rofocale Crush Weapon': '2684',
    // targeted circles
    'Rabanastre Rofocale Maverick': '2689',
    // multiple telegraphed line charges when untargetable, and later targetable
    'Rabanastre Rofocale Trample 1': '2677',
    'Rabanastre Rofocale Trample 2': '2678',
    'Rabanastre Rofocale Trample 3': '2679',
    'Rabanastre Rofocale Trample 4': '267A',
    'Rabanastre Rofocale Trample 5': '267B',
    'Rabanastre Rofocale Trample 6': '267C',
    'Rabanastre Rofocale Trample 7': '267D',
    'Rabanastre Rofocale Trample 8': '267E',
    'Rabanastre Rofocale Trample 9': '267F',
    'Rabanastre Rofocale Cry of Victory': '2675',
    // 180 cleave
    'Rabanastre Rofocale Embrace Initial': '2686',
    // Embrace initial circles
    'Rabanastre Rofocale Embrace Triggered': '2687',
    // running into Embrace hidden traps
    'Rabanastre Argath Crush Weapon': '2713',
    // same as Rofocale Crush Weapon
    'Rabanastre Argath Unrelenting': '262C',
    // five fan aoes in a cone
    'Rabanastre Argath Heartless Heartless': '2632',
    // cross aoe from judgment blade markers
    'Rabanastre Argath Soulfix': '262A',
    // centered circle, often paired with misdirect
    'Rabanastre Argath Coldblood Putt Putt': '2626',
    // hole in one misdirect donut
    'Rabanastre Argath Rail Of The Rooster': '2623',
    // unnerved stack from messing up Rail Of The Rat towers
    'Rabanastre Argath Self-Destruct': '262F',
    // explosion from somebody who has hit the wall and turned into a zombie
    'Rabanastre Argath The Word': '24A0' // Failing Mask Of Truth / Mask Of Lies

  },
  damageFail: {
    'Rabanastre Hashmal To Dust': '25C9' // Failing to kill Sand Sphere adds

  },
  gainsEffectWarn: {
    'Rabanastre Argath Bleeding': '282' // standing in Judgement Blade squares (140 is infinite effect when in, 282 when out)

  },
  gainsEffectFail: {
    'Rabanastre Mateus Deep Freeze': '4E6',
    // Frozen by ice skating adds
    'Rabanastre Transfiguration': '5B3',
    // Mateus Blizzard III The White Whisper (272E) / Argath running into the wall and turning into a zombie
    'Rabanastre Argath Craven': '58D' // turning into a chicken from 3 Unnerved stacks

  },
  shareWarn: {
    'Rabanastre Mateus Flash Freeze': '2647',
    // untelegraphed tank conal cleave
    'Rabanastre Mateus Icicle Snowpierce': '2640',
    // targeted telegraphed skinny line aoe
    'Rabanastre Hashmal Rock Cutter': '25D7',
    // untelegraphed tank cleave
    'Rabanastre Hashmal Falling Rock': '25D3',
    // Sand Sphere spread
    'Rabanastre Rofocale Chariot': '2674' // targeted line aoe with marker before Cry of Victory

  },
  soloFail: {
    'Rabanastre Hashmal Falling Boulder': '25D2' // Sand Sphere stack

  },
  triggers: [{
    id: 'Rabanastre Mateus Breathless',
    type: 'GainsEffect',
    // Ten stacks of Breathless is death.
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '595',
      count: '10'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        name: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }, {
    // unnamed damage from being hit by Rofocale driving in circles during add phase
    id: 'Rabanastre Rofocale Chariot Ring',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '268C',
      ...oopsy_common/* playerDamageFields */.np
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        name: matches.target,
        reportId: matches.targetId,
        text: {
          en: 'Chariot',
          de: 'Streitwagen',
          fr: 'Chariot',
          ja: '戦車',
          cn: `战车`,
          ko: '근접광역기'
        }
      };
    }
  }]
};
/* harmony default export */ const royal_city_of_rabanastre = (royal_city_of_rabanastre_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/ala_mhigo.ts


const ala_mhigo_triggerSet = {
  zoneId: zone_id/* default.AlaMhigo */.Z.AlaMhigo,
  damageWarn: {
    'Ala Mhigo Magitek Ray': '24CE',
    // Line AoE, Legion Predator trash, before boss 1
    'Ala Mhigo Lock On': '2047',
    // Homing circles, boss 1
    'Ala Mhigo Tail Laser 1': '2049',
    // Frontal line AoE, boss 1
    'Ala Mhigo Tail Laser 2': '204B',
    // Rear line AoE, boss 1
    'Ala Mhigo Tail Laser 3': '204C',
    // Rear line AoE, boss 1
    'Ala Mhigo Shoulder Cannon': '24D0',
    // Circle AoE, Legion Avenger trash, before boss 2
    'Ala Mhigo Cannonfire': '23ED',
    // Environmental circle AoE, path to boss 2
    'Ala Mhigo Aetherochemical Grenado': '205A',
    // Circle AoE, boss 2
    'Ala Mhigo Integrated Aetheromodulator': '205B',
    // Ring AoE, boss 2
    'Ala Mhigo Circle Of Death': '24D4',
    // Proximity circle AoE, Hexadrone trash, before boss 3
    'Ala Mhigo Exhaust': '24D3',
    // Line AoE, Legion Colossus trash, before boss 3
    'Ala Mhigo Grand Sword': '24D2',
    // Conal AoE, Legion Colossus trash, before boss 3
    'Ala Mhigo Art Of The Storm 1': '2066',
    // Proximity circle AoE, pre-intermission, boss 3
    'Ala Mhigo Art Of The Storm 2': '2587',
    // Proximity circle AoE, intermission, boss 3
    'Ala Mhigo Vein Splitter 1': '24B6',
    // Proximity circle AoE, primary entity, boss 3
    'Ala Mhigo Vein Splitter 2': '206C',
    // Proximity circle AoE, helper entity, boss 3
    'Ala Mhigo Lightless Spark': '206B' // Conal AoE, boss 3

  },
  shareWarn: {
    'Ala Mhigo Demimagicks': '205E',
    'Ala Mhigo Unmoving Troika': '2060',
    'Ala Mhigo Art Of The Sword 1': '2069',
    'Ala Mhigo Art Of The Sword 2': '2589'
  },
  triggers: [{
    // It's possible players might just wander into the bad on the outside,
    // but normally people get pushed into it.
    id: 'Ala Mhigo Art Of The Swell',
    type: 'GainsEffect',
    // Damage Down
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '2B8'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }]
};
/* harmony default export */ const ala_mhigo = (ala_mhigo_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/bardams_mettle.ts



// For reasons not completely understood at the time this was merged,
// but likely related to the fact that no nameplates are visible during the encounter,
// and that nothing in the encounter actually does damage,
// we can't use damageWarn or gainsEffect helpers on the Bardam fight.
// Instead, we use this helper function to look for failure flags.
// If the flag is present,a full trigger object is returned that drops in seamlessly.
const abilityWarn = args => {
  if (!args.abilityId) console.error('Missing ability ' + JSON.stringify(args));
  const trigger = {
    id: args.id,
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: args.abilityId
    }),
    condition: (_data, matches) => matches.flags.substr(-2) === '0E',
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  };
  return trigger;
};

const bardams_mettle_triggerSet = {
  zoneId: zone_id/* default.BardamsMettle */.Z.BardamsMettle,
  damageWarn: {
    'Bardam Dirty Claw': '21A8',
    // Frontal cleave, Gulo Gulo trash
    'Bardam Epigraph': '23AF',
    // Line AoE, Wall of Bardam trash
    'Bardam The Dusk Star': '2187',
    // Circle AoE, environment before first boss
    'Bardam The Dawn Star': '2186',
    // Circle AoE, environment before first boss
    'Bardam Crumbling Crust': '1F13',
    // Circle AoEs, Garula, first boss
    'Bardam Ram Rush': '1EFC',
    // Line AoEs, Steppe Yamaa, first boss.
    'Bardam Lullaby': '24B2',
    // Circle AoEs, Steppe Sheep, first boss.
    'Bardam Heave': '1EF7',
    // Frontal cleave, Garula, first boss
    'Bardam Wide Blaster': '24B3',
    // Enormous frontal cleave, Steppe Coeurl, first boss
    'Bardam Double Smash': '26A',
    // Circle AoE, Mettling Dhara trash
    'Bardam Transonic Blast': '1262',
    // Circle AoE, Steppe Eagle trash
    'Bardam Wild Horn': '2208',
    // Frontal cleave, Khun Gurvel trash
    'Bardam Heavy Strike 1': '2578',
    // 1 of 3 270-degree ring AoEs, Bardam, second boss
    'Bardam Heavy Strike 2': '2579',
    // 2 of 3 270-degree ring AoEs, Bardam, second boss
    'Bardam Heavy Strike 3': '257A',
    // 3 of 3 270-degree ring AoEs, Bardam, second boss
    'Bardam Tremblor 1': '257B',
    // 1 of 2 concentric ring AoEs, Bardam, second boss
    'Bardam Tremblor 2': '257C',
    // 2 of 2 concentric ring AoEs, Bardam, second boss
    'Bardam Throwing Spear': '257F',
    // Checkerboard AoE, Throwing Spear, second boss
    'Bardam Bardam\'s Ring': '2581',
    // Donut AoE headmarkers, Bardam, second boss
    'Bardam Comet': '257D',
    // Targeted circle AoEs, Bardam, second boss
    'Bardam Comet Impact': '2580',
    // Circle AoEs, Star Shard, second boss
    'Bardam Iron Sphere Attack': '16B6',
    // Contact damage, Iron Sphere trash, before third boss
    'Bardam Tornado': '247E',
    // Circle AoE, Khun Shavara trash
    'Bardam Pinion': '1F11',
    // Line AoE, Yol Feather, third boss
    'Bardam Feather Squall': '1F0E',
    // Dash attack, Yol, third boss
    'Bardam Flutterfall Untargeted': '1F12' // Rotating circle AoEs, Yol, third boss

  },
  gainsEffectWarn: {
    'Bardam Confused': '0B' // Failed gaze attack, Yol, third boss

  },
  gainsEffectFail: {
    'Bardam Fetters': '56F' // Failing two mechanics in any one phase on Bardam, second boss.

  },
  shareWarn: {
    'Bardam Garula Rush': '1EF9',
    // Line AoE, Garula, first boss.
    'Bardam Flutterfall Targeted': '1F0C',
    // Circle AoE headmarker, Yol, third boss
    'Bardam Wingbeat': '1F0F' // Conal AoE headmarker, Yol, third boss

  },
  triggers: [// 1 of 3 270-degree ring AoEs, Bardam, second boss
  abilityWarn({
    id: 'Bardam Heavy Strike 1',
    abilityId: '2578'
  }), // 2 of 3 270-degree ring AoEs, Bardam, second boss
  abilityWarn({
    id: 'Bardam Heavy Strike 2',
    abilityId: '2579'
  }), // 3 of 3 270-degree ring AoEs, Bardam, second boss
  abilityWarn({
    id: 'Bardam Heavy Strike 3',
    abilityId: '257A'
  }), // 1 of 2 concentric ring AoEs, Bardam, second boss
  abilityWarn({
    id: 'Bardam Tremblor 1',
    abilityId: '257B'
  }), // 2 of 2 concentric ring AoEs, Bardam, second boss
  abilityWarn({
    id: 'Bardam Tremblor 2',
    abilityId: '257C'
  }), // Checkerboard AoE, Throwing Spear, second boss
  abilityWarn({
    id: 'Bardam Throwing Spear',
    abilityId: '257F'
  }), // Gaze attack, Warrior of Bardam, second boss
  abilityWarn({
    id: 'Bardam Empty Gaze',
    abilityId: '1F04'
  }), // Donut AoE headmarkers, Bardam, second boss
  abilityWarn({
    id: 'Bardam\'s Ring',
    abilityId: '2581'
  }), // Targeted circle AoEs, Bardam, second boss
  abilityWarn({
    id: 'Bardam Comet',
    abilityId: '257D'
  }), // Circle AoEs, Star Shard, second boss
  abilityWarn({
    id: 'Bardam Comet Impact',
    abilityId: '2580'
  })]
};
/* harmony default export */ const bardams_mettle = (bardams_mettle_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/castrum_abania.ts

const castrum_abania_triggerSet = {
  zoneId: zone_id/* default.CastrumAbania */.Z.CastrumAbania,
  damageWarn: {
    'CastrumAbania 12th Legion Laquearius Overpower': '2D0',
    // conal
    'CastrumAbania 12th Legion Avenger Shoulder Cannon': '231C',
    // targeted circle
    'CastrumAbania 12th Legion Vanguard Cermet Drill': '20E',
    // line aoe
    'CastrumAbania 12th Legion Signifier Dark Fire III': '519',
    // targeted circle
    'CastrumAbania 12th Legion Canis Pugnax Recklass Charge': '14F',
    // line aoe
    'CastrumAbania Magna Roader Magitek Fire 2': '1F15',
    // targeted circle
    'CastrumAbania Magna Roader Wild Speed': '1FF8',
    // 4x line charges
    'CastrumAbania Magna Roader Magitek Pulse 1': '2090',
    // Mark XLIII Mini Cannon aoes
    'CastrumAbania Magna Roader Magitek Pulse 2': '1F19',
    // Mark XLIII Mini Cannon aoes
    'CastrumAbania Hypertuned Blast Wave': '42C',
    // line aoe
    'CastrumAbania 12th Legion Roader Rush': '208A',
    // long line aoe when Roaders enter
    'CastrumAbania Number XXIV Gale Cut': '2083',
    // targeted circle
    'CastrumAbania Number XXIV Overflow': '1F20',
    // failing to get a tower
    'CastrumAbania 12th Legion Rearguard Cermet Pile': '23AB',
    // line aoe
    'CastrumAbania 12th Legion Armored Weapon Diffractive Laser': '209C',
    // centered circle
    'CastrumAbania 12th Legion Colossus Grand Sword': '24A6',
    // large conal
    'CastrumAbania 12th Legion Colossus Exhaust': '24A8',
    // large line aoe
    'CastrumAbania Inferno Rahu Blaster 1': '1F29',
    // line aoe (at Rahu 0)
    'CastrumAbania Inferno Rahu Blaster 2': '208E',
    // line aoe (at Rahu 1)
    'CastrumAbania Inferno Rahu Blaster 3': '208F',
    // line aoe (at Rahu 2)
    'CastrumAbania Inferno Ketu Wave': '1F28',
    // large circle during Ketu & Rahu
    'CastrumAbania Inferno Ketu Cutter': '1F27' // 180/360 pinwheel during Ketu & Rahu

  },
  damageFail: {
    'CastrumAbania Number XXIV Counter': '1F24' // having the wrong element

  },
  gainsEffectWarn: {
    'CastrumAbania Inferno 12th Legion Death Claw Seized': '507' // getting grabbed by tethered Death Claw

  },
  shareWarn: {
    'CastrumAbania Inferno Rahu Ray': '1F2A' // red spread circle

  }
};
/* harmony default export */ const castrum_abania = (castrum_abania_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/doma_castle.ts

const doma_castle_triggerSet = {
  zoneId: zone_id/* default.DomaCastle */.Z.DomaCastle,
  damageWarn: {
    'Doma Castle Doman Colossus Grand Sword': '2179',
    // large wide conal
    'Doma Castle Doman Gunship Garlean Fire': '217C',
    // targeted circle (can happen out of combat)
    'Doma Castle Magitek Rearguard Garlean Fire': '209F',
    // line of targeted exaflare-y circles
    'Doma Castle Magitek Rearguard Magitek Ray': '20A1',
    // Rearguard Bit green line aoe
    'Doma Castle Magitek Rearguard Self-Detonate': '20A0',
    // running into a Rearguard Mine
    'Doma Castle Doman Vanguard Overcharge': '217E',
    // centered circle
    'Doma Castle Doman Vanguard Drill Cannons': '217D',
    // frontal line
    'Doma Castle Mark XLIII Field Cannon Magitek Cannon': '24E9',
    // line aoes from stationary cannons
    'Doma Castle Doman Reaper Magitek Cannon': '2181',
    // centered circle
    'Doma Castle Hexadrone Bit Chain Mine 1': '2447',
    // Destroyable laser that does knockback, both 2&3 boss
    'Doma Castle Hexadrone Bit Chain Mine 2': '20A7',
    // Destroyable laser that does knockback, both 2&3 boss
    'Doma Castle Magitek Hexadrone Circle Of Death': '20A2',
    // centered circle
    'Doma Castle Magitek Hexadrone Magitek Missiles': '20A6',
    // failing tower (20A5 is correct tower damage)
    'Doma Castle Doman Hastatus Tenka Goken': '2182',
    // wide conal
    'Doma Castle Doman Armored Weapon Diffractive Laser': '2184',
    // centered circle
    'Doma Castle Hypertuned Grynewaht Clean Cut': '20B1' // Magitek Chakram lines

  },
  shareWarn: {
    'Doma Castle Hypertuned Grynewaht Delay-Action Charge': '20AD' // spread marker

  },
  soloWarn: {
    'Doma Castle Magitek Hexadrone 2-Tonze Magitek Missile': '20A3' // stack marker

  }
};
/* harmony default export */ const doma_castle = (doma_castle_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/drowned_city_of_skalla.ts

const drowned_city_of_skalla_triggerSet = {
  zoneId: zone_id/* default.TheDrownedCityOfSkalla */.Z.TheDrownedCityOfSkalla,
  damageWarn: {
    'Hydrocannon': '2697',
    // Line AoE, Salt Swallow trash, before boss 1
    'Stagnant Spray': '2699',
    // Conal AoE, Skalla Nanka trash, before boss 1
    'Bubble Burst': '261B',
    // Bubble explosion, Hydrosphere, boss 1
    'Plain Pound': '269A',
    // Large circle AoE, Dhara Sentinel trash, before boss 2
    'Boulder Toss': '269B',
    // Small circle AoE, Stone Phoebad trash, before boss 2
    'Landslip': '269C',
    // Conal AoE, Stone Phoebad trash, before boss 2
    'Mystic Light': '2657',
    // Conal AoE, The Old One, boss 2
    'Mystic Flame': '2659',
    // Large circle AoE, The Old One, boss 2. 2658 is the cast-time ability.
    'Dark II': '110E',
    // Thin cone AoE, Lightless Homunculus trash, after boss 2
    'Implosive Curse': '269E',
    // Conal AoE, Zangbeto trash, after boss 2
    'Undying FIre': '269F',
    // Circle AoE, Zangbeto trash, after boss 2
    'Fire II': '26A0',
    // Circle AoE, Accursed Idol trash, after boss 2
    'Rusting Claw': '2661',
    // Frontal cleave, Hrodric Poisontongue, boss 3
    'Words Of Woe': '2662',
    // Eye lasers, Hrodric Poisontongue, boss 3
    'Tail Drive': '2663',
    // Rear cleave, Hrodric Poisontongue, boss 3
    'Ring Of Chaos': '2667' // Ring headmarker, Hrodric Poisontongue, boss 3

  },
  damageFail: {
    'Self-Detonate': '265C' // Roomwide explosion, Subservient, boss 2

  },
  gainsEffectWarn: {
    'Dropsy': '11B',
    // Standing in Bloody Puddles, or being knocked outside the arena, boss 1
    'Confused': '0B' // Failing the gaze attack, boss 3

  },
  shareWarn: {
    'Bloody Puddle': '2655',
    // Large watery spread circles, Kelpie, boss 1
    'Cross Of Chaos': '2668',
    // Cross headmarker, Hrodric Poisontongue, boss 3
    'Circle Of Chaos': '2669' // Spread circle headmarker, Hrodric Poisontongue, boss 3

  }
};
/* harmony default export */ const drowned_city_of_skalla = (drowned_city_of_skalla_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/fractal_continuum_hard.ts

const fractal_continuum_hard_triggerSet = {
  zoneId: zone_id/* default.TheFractalContinuumHard */.Z.TheFractalContinuumHard,
  damageWarn: {
    'FractalHard Prototype Claw Shred': '1257',
    // line aoe
    'FractalHard Prototype Claw The Hand': '1258',
    // conal
    'FractalHard Servomechanical Minotaur 16-Tonze Swipe': '2AE5',
    // untelegraphed conal
    'FractalHard Servomechanical Minotaur 128-Tonze Swing': '2AE4',
    // telegraphed large circle
    // These apply to both Servomechanical Chimera and Proto-Chimera.
    'FractalHard Chimera The Ram\s Breath': '122A',
    // conal
    'FractalHard Chimera The Dragon\s Breath': '122B',
    // conal
    'FractalHard Chimera The Dragon\s Voice': '861',
    // untelegraphed donut
    'FractalHard Chimera The Ram\'s Voice': '860',
    // untelegraphed centered circle
    'FractalHard Chimera The Lion\'s Breath': '85F',
    // conal
    'FractalHard Motherbit Prototype Bit Diffractive Laser': '27A8',
    // line aoe
    'FractalHard Motherbit Prototype Bit Hypercurrent': '27AC',
    // hitting the bit line laser during Citadel Buster
    'FractalHard Motherbit Allagan Gravity': '27A6',
    // spread marker
    'FractalHard Motherbit Citadel Buster': '27A5',
    // front 180 laser
    'FractalHard Prototype Mirrorknight Gust': '865',
    // targeted circle
    'FractalHard Rinkhals Regorge': '25B8',
    // targeted circle
    'FractalHard Ultima Warrior Citadel Buster': '2792',
    // untelegraphed front line laser
    'FractalHard Ultima Warrior Ein Sof': '2798',
    // Sephirot phase being in the green growing bubble
    'FractalHard Biomanufactured Minotaur 11-Tonze Swipe': '29A2',
    // untelegraphed conal
    'FractalHard Biomanufactured Minotaur 111-Tonze Swing': '29A1',
    // telegraphed large circle
    'Fractalhard Ultima Beast Death Spin': '27AD',
    // melee range untelegraphed circle
    'Fractalhard Ultima Beast Aether Bend': '27AF',
    // get under donut
    'Fractalhard Ultima Beast Light Pillar 1': '227BA',
    // initial point of light pillar circles
    'Fractalhard Ultima Beast Light Pillar 2': '27BB' // follow up light pillar hits

  },
  damageFail: {
    'FractalHard Motherbit False Gravity': '27A7' // standing in Allagan Gravity puddle, gives Heavy

  },
  gainsEffectWarn: {
    'FractalHard Ultima Warrior Infinite Anguish': '487',
    // Personally failing Zurvan towers
    'FractalHard Ultima Warrior Reduced Immunity': '143',
    // Failing Sophia Dischordant Cleansing
    'Fractalhard Ultima Beast Burns': '11C' // standing in fire from Flare Star

  },
  shareWarn: {
    'FractalHard Ultima Warrior Aetheroplasm': '2793',
    // tankbuster cleave
    'FractalHard Ultima Warrior Ratzon': '2797',
    // Sephirot phase bubble drop
    'Fractalhard Ultima Beast Allagan Gravity': '27B9' // spread

  },
  soloWarn: {
    'FractalHard Ultima Warrior Mass Aetheroplasm': '2795' // tankbuster cleave

  }
};
/* harmony default export */ const fractal_continuum_hard = (fractal_continuum_hard_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/ghimlyt_dark.ts

const ghimlyt_dark_triggerSet = {
  zoneId: zone_id/* default.TheGhimlytDark */.Z.TheGhimlytDark,
  damageWarn: {
    'Ghimlyt Airborne Explosion': '3881',
    // semi-targeted red circle
    'Ghimlyt Schola Gunship Garlean Fire': '3A6C',
    // targeted circle
    'Ghimlyt Mark III-B Magitek Colossus Magitek Slash 1': '3774',
    // spinning pie slices
    'Ghimlyt Mark III-B Magitek Colossus Magitek Slash 2': '3775',
    // spinning pie slices
    'Ghimlyt Mark III-B Magitek Colossus Magitek Slash 3': '394E',
    // spinning pie slices
    'Ghimlyt Mark III-B Magitek Colossus Magitek Slash 4': '394F',
    // spinning pie slices
    'Ghimlyt Mark III-B Magitek Colossus Exhaust': '3770',
    // line
    'Ghimlyt Schola Armored Weapon Diffractive Laser': '3A74',
    // targeted circle
    'Ghimlyt Prometheus Needle Gun': '345A',
    // front 90 degree conal
    'Ghimlyt Prometheus Oil Shower': '3456',
    // back 270 degree
    'Ghimlyt Prometheus Heat': '3458',
    // wall laser
    'Ghimlyt Schola Colossus Grand Strike': '3A75',
    // thin line
    'Ghimlyt Schola Hexadrone Swoop': '3882',
    // line aoe entering arena
    'Ghimlyt Schola Hexadrone 2-Tonze Magitek Missile': '3A71',
    // targeted circle
    'Ghimlyt Schola Hexadrone Circle of Death': '3A70',
    // centered circle
    'Ghimlyt Schola Mark II Colossus Exhaust': '3A76',
    // line
    'Ghimlyt Schola Mark II Colossus Grand Sword': '3A77',
    // wide conal
    'Ghimlyt Soranus Duo Angry Salamander': '372C',
    // targeted line
    'Ghimlyt Soranus Duo Crossbones': '3C80',
    // targeted line with knockback
    'Ghimlyt Soranus Duo Bombardment': '3C71',
    // large circles during Order to Bombard
    'Ghimlyt Soranus Duo Stunning Sweep': '3C72',
    // centered circle
    'Ghimlyt Soranus Duo Crosshatch': '3722',
    // repeated X charges during intermissions
    'Ghimlyt Soranus Duo Ceruleum Tank Burst': '371A',
    // ceruleum tank circle explosions
    'Ghimlyt Soranus Duo Quaternity': '3733' // series of X line charges

  },
  gainsEffectWarn: {
    'Ghimlyt Mark III-B Magitek Colossus Burns': '1F7',
    // standing in Magitek Slash fire pie slice
    'Ghimlyt Prometheus Burns': '11C' // standing in outside fire circle

  },
  shareWarn: {
    'Ghimlyt Mark III-B Magitek Colossus Jarring Blow': '376E',
    // tank buster conal cleave
    'Ghimlyt Mark III-B Magitek Colossus Wild Fire Beam': '3772',
    // spread marker
    'Ghimlyt Schola Colossus Homing Laser': '3884' // spread marker

  },
  soloWarn: {
    'Ghimlyt Mark III-B Magitek Colossus Magitek Ray': '376F' // stack marker

  }
};
/* harmony default export */ const ghimlyt_dark = (ghimlyt_dark_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/hells_lid.ts

const hells_lid_triggerSet = {
  zoneId: zone_id/* default.HellsLid */.Z.HellsLid,
  damageWarn: {
    'HellsLid Nurikabe Fire II': '299F',
    // targeted circle'
    'HellsLid Magma': '2882',
    // line attacks from wall
    'HellsLid Hellish Lion Howling Wail': '299D',
    // large centered circle
    'HellsLid Hellfire Shikigami Fluid Swing': '299E',
    // conal
    'HellsLid Otake-maru 100-tonze Swing': '27BE',
    // untelegraphed centered circle
    'HellsLid Otake-maru Volcanic Debris': '27C5',
    // ambient circles on floor
    'HellsLid Otake-maru 10-tonze Slash': '27BF',
    // telegraphed conal
    'HellsLid Otake-maru Disrobe': '27C2',
    // small circles appearing after prey marker
    'HellsLid Otake-maru Stone Cudgel': '27C3',
    // spin attack when touching sword/shield
    'HellsLid Otake-maru Liquid Carapace': '27C0',
    // being too close to boss during prey Disrobe phase
    'HellsLid Hellish Yumemi Blanket Thunder': '21B3',
    // centered circle
    'HellsLid Kaja Electrogenesis': '11C2',
    // targeted large circle, by both Kaja and Kaja of the Seven Flames
    'HellsLid Kamaitachi Circling Winds': '27C8',
    // wind donut
    'HellsLid Kamaitachi Rolling Winds': '27C9',
    // large back/front line
    'HellsLid Kamaitachi The Patient Blade': '27C7',
    // front 180 cleave
    'HellsLid Kamaitachi Northerly': '27CD',
    // untargetable triggered wind sprite knockback explosion
    'HellsLid Kamaitachi Tsumuji-Kaze Tornado': '247E',
    // large targeted circle
    'HellsLid Kamaitachi Late Harvest': '27CC',
    // dashes
    'HellsLid Kamaitachi Gale The Storm\'s Grip': '27CE',
    // standing in the tornado
    'HellsLid Shikigami of the Spring Brine Bomb': '29A0',
    // targeted circle
    'HellsLid Stillwind Nue Twister': '2965',
    // targeted circle
    'HellsLid Boltstorm Nue Scythe Tail': '2A08',
    // centered circle
    'HellsLid Boltstorm Nue Butcher': '2964',
    // large wide conal
    'HellsLid Boltstorm Nue Spark': '2964',
    // donut with a very large hole
    'HellsLid Genbu Sinister Tide': '27D5',
    // light up arrow hexes
    'HellsLid Genbu Hell of Water': '27D0',
    // cross aoe
    'HellsLid Genbu Shell Shower': '2850' // light up hex squares during Chelonian Gate midphase

  },
  shareWarn: {
    'HellsLid Genbu Hell of Waste': '27D2',
    // very large spread marker
    'HellsLid Reisen Tatsunoko Hydrate': '2134' // untelegraphed cleave from snake mob

  }
};
/* harmony default export */ const hells_lid = (hells_lid_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/kugane_castle.ts

const kugane_castle_triggerSet = {
  zoneId: zone_id/* default.KuganeCastle */.Z.KuganeCastle,
  damageWarn: {
    'Kugane Castle Tenka Gokken': '2329',
    // Frontal cone AoE,  Joi Blade trash, before boss 1
    'Kugane Castle Kenki Release Trash': '2330',
    // Chariot AoE, Joi Kiyofusa trash, before boss 1
    'Kugane Castle Clearout': '1E92',
    // Frontal cone AoE, Zuiko-Maru, boss 1
    'Kugane Castle Hara-Kiri 1': '1E96',
    // Giant circle AoE, Harakiri Kosho, boss 1
    'Kugane Castle Hara-Kiri 2': '24F9',
    // Giant circle AoE, Harakiri Kosho, boss 1
    'Kugane Castle Juji Shuriken 1': '232D',
    // Line AoE, Karakuri Onmitsu trash, before boss 2
    'Kugane Castle 1000 Barbs': '2198',
    // Line AoE, Joi Koja trash, before boss 2
    'Kugane Castle Juji Shuriken 2': '1E98',
    // Line AoE, Dojun Maru, boss 2
    'Kugane Castle Tatami-Gaeshi': '1E9D',
    // Floor tile line attack, Elkite Onmitsu, boss 2
    'Kugane Castle Juji Shuriken 3': '1EA0',
    // Line AoE, Elite Onmitsu, boss 2
    'Kugane Castle Auto Crossbow': '2333',
    // Frontal cone AoE, Karakuri Hanya trash, after boss 2
    'Kugane Castle Harakiri 3': '23C9',
    // Giant Circle AoE, Harakiri  Hanya trash, after boss 2
    'Kugane Castle Iai-Giri': '1EA2',
    // Chariot AoE, Yojimbo, boss 3
    'Kugane Castle Fragility': '1EAA',
    // Chariot AoE, Inoshikacho, boss 3
    'Kugane Castle Dragonfire': '1EAB' // Line AoE, Dragon Head, boss 3

  },
  shareWarn: {
    'Kugane Castle Issen': '1E97',
    // Instant frontal cleave, Dojun Maru, boss 2
    'Kugane Castle Clockwork Raiton': '1E9B' // Large lightning spread circles, Dojun Maru, boss 2

  },
  soloFail: {
    'Kugane Castle Helm Crack': '1E94' // Stack marker, Zuiko Maru, boss 1

  }
};
/* harmony default export */ const kugane_castle = (kugane_castle_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/shisui_of_the_violet_tides.ts

const shisui_of_the_violet_tides_triggerSet = {
  zoneId: zone_id/* default.ShisuiOfTheVioletTides */.Z.ShisuiOfTheVioletTides,
  damageWarn: {
    'Shisui Violet Coralshell Bubble Shower': '236',
    // frontal conal
    'Shisui Hikagiri Defibrillate': '11C1',
    // centered circle
    'Shisui Buried Monkfish Fish Out Of Water': '1F88',
    // untelegraphed triggered monkfish mine
    'Shisui Ango Flounder': '91F',
    // line aoe
    'Shisui Hikagiri Electrogenesis': '11C2',
    // targeted circle
    'Shisui Amikiri Shuck': '1F75',
    // not killing Amikiri's leg
    'Shisui Palace Guard Heartstopper': '362',
    // dragoon guard line aoe
    'Shisui Palace Guard Fire Arrow': '1F89',
    // ambient untargeted circles
    'Shisui Captain Of The Guard Tenka Goken': '23B7',
    // wide conal
    'Shisui Ruby Princess Coriolis Kick': '1F7B',
    // large centered circle (seduce always paired with this)
    'Shisui Ruby Princess Abyssal Volcano': '1F7C',
    // centered circle paired with chase aoe
    'Shisui Ruby Princess Geothermal Flatulence 1': '24D7',
    // chase aoe initial
    'Shisui Ruby Princess Geothermal Flatulence 2': '1F7D',
    // chase aoe x10
    'Shisui Violet Bombfish 1000 Spines': '1FF7',
    // roaming bombfish triggered circle
    'Shisui Blue Unkiu Flush': '21A4',
    // interruptible centered circle
    'Shisui Shisui Yohi Black Tide': '1F81',
    // reappearance after thick fog
    'Shisui Shisui Yohi Churn Bubble Burst': '1F84',
    // not killing bubble during thick fog
    'Shisui Shisui Yohi Naishi-No-Kami Bite And Run': '1F85',
    // not killing shark add
    'Shisui Shisui Yohi Naishi-No-Jo Bite And Run': '1F86' // not killing small shark add

  },
  gainsEffectWarn: {
    // Note: Dropsy (213, with count field) is the effect during Shisui Yohi Thick Fog
    'Shisui Dropsy': '121',
    // standing in Kamikiri digestive fluid puddle
    'Shisui Hysteria': '128' // failing Shisui Yohi Mad Stare (1F82)

  },
  shareWarn: {
    'Shisui Amikiri Digest': '1F79' // Kamikiri digestive fluid puddle landing

  }
};
/* harmony default export */ const shisui_of_the_violet_tides = (shisui_of_the_violet_tides_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/sirensong_sea.ts

const sirensong_sea_triggerSet = {
  zoneId: zone_id/* default.TheSirensongSea */.Z.TheSirensongSea,
  damageWarn: {
    'Sirensong Ancient Ymir Head Snatch': '2353',
    // frontal conal
    'Sirensong Reflection of Karlabos Tail Screw': '12B7',
    // targeted circle
    'Sirensong Lugat Amorphous Applause': '1F56',
    // frontal 180 cleave
    'Sirensong Lugat Concussive Oscillation': '1F5B',
    // 5 or 7 circles
    'Sirensong The Jane Guy Ball of Malice': '1F6A',
    // ambient cannon circle
    'Sirensong Dark': '19DF',
    // Skinless Skipper / Fleshless Captive targeted circle
    'Sirensong The Governor Shadowstrike': '1F5D',
    // standing in shadows
    'Sirensong Undead Warden March of the Dead': '2351',
    // frontal conal
    'Sirensong Fleshless Captive Flood': '218B',
    // centered circle after seductive scream
    'Sirensong Lorelei Void Water III': '1F68' // large targeted circle

  }
};
/* harmony default export */ const sirensong_sea = (sirensong_sea_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/st_mocianne_hard.ts

const st_mocianne_hard_triggerSet = {
  zoneId: zone_id/* default.SaintMociannesArboretumHard */.Z.SaintMociannesArboretumHard,
  damageWarn: {
    'St Mocianne Hard Mudstream': '30D9',
    // Targeted circle AoE, Immaculate Apa trash, before boss 1
    'St Mocianne Hard Silken Spray': '3385',
    // Rear cone AoE, Withered Belladonna trash, before boss 1
    'St Mocianne Hard Muddy Puddles': '30DA',
    // Small targeted circle AoEs, Dorpokkur trash, before boss 1
    'St Mocianne Hard Odious Air': '2E49',
    // Frontal cone AoE, Nullchu, boss 1
    'St Mocianne Hard SLudge Bomb': '2E4E',
    // Targeted circle AoEs, Nullchu, boss 1
    'St Mocianne Hard Odious Atmosphere': '2E51',
    // Channeled 3/4 arena cleave, Nullchu, boss 1
    'St Mocianne Hard Creeping Ivy': '31A5',
    // Frontal cone AoE, Withered Kulak trash, before boss 2
    'St Mocianne Hard Rockslide': '3134',
    // Line AoE, Silt Golem, boss 2
    'St Mocianne Hard Earthquake Inner': '312E',
    // Chariot AoE, Lakhamu, boss 2
    'St Mocianne Hard Earthquake Outer': '312F',
    // Dynamo AoE, Lakhamu, boss 2
    'St Mocianne Hard Embalming Earth': '31A6',
    // Large Chariot AoE, Muddy Mata, after boss 2
    'St Mocianne Hard Quickmire': '3136',
    // Sewage surge avoided on platforms, Tokkapchi, boss 3
    'St Mocianne Hard Quagmire Platforms': '3139',
    // Quagmire explosion on platforms, Tokkapchi, boss 3
    'St Mocianne Hard Feculent Flood': '313C',
    // Targeted thin cone AoE, Tokkapchi, boss 3
    'St Mocianne Hard Corrupture': '33A0' // Mud Slime explosion, boss 3. (No explosion if done correctly.)

  },
  gainsEffectWarn: {
    'St Mocianne Hard Seduced': '3DF',
    // Gaze failure, Withered Belladonna trash, before boss 1
    'St Mocianne Hard Pollen': '13',
    // Sludge puddles, Nullchu, boss 1
    'St Mocianne Hard Transfiguration': '648',
    // Roly-Poly AoE circle failure, BLooming Biloko trash, before boss 2
    'St Mocianne Hard Hysteria': '128',
    // Gaze failure, Lakhamu, boss 2
    'St Mocianne Hard Stab Wound': '45D' // Arena outer wall effect, boss 2

  },
  shareWarn: {
    'St Mocianne Hard Taproot': '2E4C',
    // Large orange spread circles, Nullchu, boss 1
    'St Mocianne Hard Earth Shaker': '3131' // Earth Shaker, Lakhamu, boss 2

  },
  soloFail: {
    'St Mocianne Hard Fault Warren': '2E4A' // Stack marker, Nullchu, boss 1

  }
};
/* harmony default export */ const st_mocianne_hard = (st_mocianne_hard_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/swallows_compass.ts


const swallows_compass_triggerSet = {
  zoneId: zone_id/* default.TheSwallowsCompass */.Z.TheSwallowsCompass,
  damageWarn: {
    'Swallows Compass Ivy Fetters': '2C04',
    // Circle ground AoE, Sai Taisui trash, before boss 1
    'Swallows Compass Wildswind 1': '2C05',
    // Tornado ground AoE, placed by Sai Taisui trash, before boss 1
    'Swallows Compass Yama-Kagura': '2B96',
    // Frontal line AoE, Otengu, boss 1
    'Swallows Compass Flames Of Hate': '2B98',
    // Fire orb explosions, boss 1
    'Swallows Compass Conflagrate': '2B99',
    // Collision with fire orb, boss 1
    'Swallows Compass Upwell': '2C06',
    // Targeted circle ground AoE, Sai Taisui trash, before boss 2
    'Swallows Compass Bad Breath': '2C07',
    // Frontal cleave, Jinmenju trash, before boss 2
    'Swallows Compass Greater Palm 1': '2B9D',
    // Half arena right cleave, Daidarabotchi, boss 2
    'Swallows Compass Greater Palm 2': '2B9E',
    // Half arena left cleave, Daidarabotchi, boss 2
    'Swallows Compass Tributary': '2BA0',
    // Targeted thin conal ground AoEs, Daidarabotchi, boss 2
    'Swallows Compass Wildswind 2': '2C06',
    // Circle ground AoE, environment, after boss 2
    'Swallows Compass Wildswind 3': '2C07',
    // Circle ground AoE, placed by Sai Taisui trash, after boss 2
    'Swallows Compass Filoplumes': '2C76',
    // Frontal rectangle AoE, Dragon Bi Fang trash, after boss 2
    'Swallows Compass Both Ends 1': '2BA8',
    // Chariot AoE, Qitian Dasheng, boss 3
    'Swallows Compass Both Ends 2': '2BA9',
    // Dynamo AoE, Qitian Dasheng, boss 3
    'Swallows Compass Both Ends 3': '2BAE',
    // Chariot AoE, Shadow Of The Sage, boss 3
    'Swallows Compass Both Ends 4': '2BAF',
    // Dynamo AoE, Shadow Of The Sage, boss 3
    'Swallows Compass Equal Of Heaven': '2BB4' // Small circle ground AoEs, Qitian Dasheng, boss 3

  },
  gainsEffectWarn: {
    'Swallows Compass Hysteria': '128',
    // Gaze attack failure, Otengu, boss 1
    'Swallows Compass Bleeding': '112F' // Stepping outside the arena, boss 3

  },
  shareWarn: {
    'Swallows Compass Mirage': '2BA2',
    // Prey-chasing puddles, Daidarabotchi, boss 2
    'Swallows Compass Mountain Falls': '2BA5',
    // Circle spread markers, Daidarabotchi, boss 2
    'Swallows Compass The Long End': '2BA7',
    // Laser tether, Qitian Dasheng  boss 3
    'Swallows Compass The Long End 2': '2BAD' // Laser Tether, Shadows Of The Sage, boss 3

  },
  soloFail: {
    'Swallows Compass Five Fingered Punishment 1': '2BAB',
    // Stack marker, boss 3
    'Swallows Compass Five Fingered Punishment 2': '2BB0' // Stack marker, boss 3

  },
  triggers: [{
    // Standing in the lake, Diadarabotchi, boss 2
    id: 'Swallows Compass Six Fulms Under',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '237'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: matches.effect
      };
    }
  }]
};
/* harmony default export */ const swallows_compass = (swallows_compass_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/temple_of_the_fist.ts

const temple_of_the_fist_triggerSet = {
  zoneId: zone_id/* default.TheTempleOfTheFist */.Z.TheTempleOfTheFist,
  damageWarn: {
    'Temple Fire Break': '21ED',
    // Conal AoE, Bloodglider Monk trash
    'Temple Radial Blaster': '1FD3',
    // Circle AoE, boss 1
    'Temple Wide Blaster': '1FD4',
    // Conal AoE, boss 1
    'Temple Crippling Blow': '2016',
    // Line AoEs, environmental, before boss 2
    'Temple Broken Earth': '236E',
    // Circle AoE, Singha trash
    'Temple Shear': '1FDD',
    // Dual conal AoE, boss 2
    'Temple Counter Parry': '1FE0',
    // Retaliation for incorrect direction after Killer Instinct, boss 2
    'Temple Tapas': '',
    // Tracking circular ground AoEs, boss 2
    'Temple Hellseal': '200F',
    // Red/Blue symbol failure, boss 2
    'Temple Pure Will': '2017',
    // Circle AoE, Spirit Flame trash, before boss 3
    'Temple Megablaster': '163',
    // Conal AoE, Coeurl Prana trash, before boss 3
    'Temple Windburn': '1FE8',
    // Circle AoE, Twister wind, boss 3
    'Temple Hurricane Kick': '1FE5',
    // 270-degree frontal AoE, boss 3
    'Temple Silent Roar': '1FEB',
    // Frontal line AoE, boss 3
    'Temple Mighty Blow': '1FEA' // Contact with coeurl head, boss 3

  },
  shareWarn: {
    'Temple Heat Lightning': '1FD7' // Purple spread circles, boss 1

  }
};
/* harmony default export */ const temple_of_the_fist = (temple_of_the_fist_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/dungeon/the_burn.ts

const the_burn_triggerSet = {
  zoneId: zone_id/* default.TheBurn */.Z.TheBurn,
  damageWarn: {
    'The Burn Falling Rock': '31A3',
    // Environmental line AoE
    'The Burn Aetherial Blast': '328B',
    // Line AoE, Kukulkan trash
    'The Burn Mole-a-whack': '328D',
    // Circle AoE, Desert Desman trash
    'The Burn Head Butt': '328E',
    // Small conal AoE, Desert Desman trash
    'The Burn Shardfall': '3191',
    // Roomwide AoE, LoS for safety, Hedetet, boss 1
    'The Burn Dissonance': '3192',
    // Donut AoE, Hedetet, boss 1
    'The Burn Crystalline Fracture': '3197',
    // Circle AoE, Dim Crystal, boss 1
    'The Burn Resonant Frequency': '3198',
    // Circle AoE, Dim Crystal, boss 1
    'The Burn Rotoswipe': '3291',
    // Frontal cone AoE, Charred Dreadnaught trash
    'The Burn Wrecking Ball': '3292',
    // Circle AoE, Charred Dreadnaught trash
    'The Burn Shatter': '3294',
    // Large circle AoE, Charred Doblyn trash
    'The Burn Auto-Cannons': '3295',
    // Line AoE, Charred Drone trash
    'The Burn Self-Detonate': '3296',
    // Circle AoE, Charred Drone trash
    'The Burn Full Throttle': '2D75',
    // Line AoE, Defective Drone, boss 2
    'The Burn Throttle': '2D76',
    // Line AoE, Mining Drone adds, boss 2
    'The Burn Adit Driver': '2D78',
    // Line AoE, Rock Biter adds, boss 2
    'The Burn Tremblor': '3297',
    // Large circle AoE, Veiled Gigaworm trash
    'The Burn Desert Spice': '3298',
    // The frontal cleaves must flow
    'The Burn Toxic Spray': '329A',
    // Frontal cone AoE, Gigaworm Stalker trash
    'The Burn Venom Spray': '329B',
    // Targeted circle AoE, Gigaworm Stalker trash
    'The Burn White Death': '3143',
    // Reactive during invulnerability, Mist Dragon, boss 3
    'The Burn Fog Plume 1': '3145',
    // Star AoE, Mist Dragon, boss 3
    'The Burn Fog Plume 2': '3146',
    // Line AoEs after stars, Mist Dragon, boss 3
    'The Burn Cauterize': '3148' // Line/Swoop AoE, Mist Dragon, boss 3

  },
  damageFail: {
    'The Burn Cold Fog': '3142' // Growing circle AoE, Mist Dragon, boss 3

  },
  gainsEffectWarn: {
    'The Burn Leaden': '43',
    // Puddle effect, boss 2. (Also inflicts 11F, Sludge.)
    'The Burn Puddle Frostbite': '11D' // Ice puddle effect, boss 3. (NOT the conal-inflicted one, 10C.)

  },
  shareWarn: {
    'The Burn Hailfire': '3194',
    // Head marker line AoE, Hedetet, boss 1
    'The Burn Shardstrike': '3195',
    // Orange spread head markers, Hedetet, boss 1
    'The Burn Chilling Aspiration': '314D',
    // Head marker cleave, Mist Dragon, boss 3
    'The Burn Frost Breath': '314C' // Tank cleave, Mist Dragon, boss 3

  }
};
/* harmony default export */ const the_burn = (the_burn_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o10n.ts

// TODO: Akh Rhai (3624) is not unusual to take ~1 hit from, so don't list.
// O10N - Alphascape 2.0 Normal
const o10n_triggerSet = {
  zoneId: zone_id/* default.AlphascapeV20 */.Z.AlphascapeV20,
  damageWarn: {
    'O10N Azure Wings': '31CD',
    // Out
    'O10N Stygian Maw': '31CF',
    // In
    'O10N Horrid Roar': '31D3',
    // targeted circles
    'O10N Bloodied Maw': '31D0',
    // Corners
    'O10N Cauterize': '3241',
    // divebomb attack
    'O10N Scarlet Thread': '362B',
    // orb waffle lines
    'O10N Exaflare 1': '362D',
    'O10N Exaflare 2': '362F'
  },
  shareWarn: {
    'O10N Earth Shaker': '31D1',
    // as it says on the tin
    'O10N Frost Breath': '33EE',
    // Ancient Dragon frontal conal
    'O10N Thunderstorm': '31D2' // purple spread marker

  }
};
/* harmony default export */ const o10n = (o10n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o10s.ts

const o10s_triggerSet = {
  zoneId: zone_id/* default.AlphascapeV20Savage */.Z.AlphascapeV20Savage,
  damageWarn: {
    'O10S Azure Wings': '31B2',
    // Out
    'O10S Stygian Maw': '31B0',
    // In
    'O10S Bloodied Maw': '31B5',
    // Corners
    'O10S Crimson Wings': '31B3',
    // Cardinals
    'O10S Horrid Roar': '31B9',
    // targeted circles
    'O10S Dark Wave': '341A',
    // Ancient Dragon circle upon death
    'O10S Cauterize': '3240',
    // divebomb attack
    'O10S Flame Blast': '31C1',
    // bombs
    'O10N Scarlet Thread': '362B',
    // orb waffle lines
    'O10N Exaflare 1': '362C',
    'O10N Exaflare 2': '362E'
  },
  shareWarn: {
    'O10S Earth Shaker': '31B6',
    // as it says on the tin
    'O10S Frost Breath': '33F1',
    // Ancient Dragon frontal conal
    'O10S Thunderstorm': '31B8' // purple spread marker

  },
  shareFail: {
    'O10S Crimson Breath': '31BC' // flame breath dodged with Ancient Bulwark

  }
};
/* harmony default export */ const o10s = (o10s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o11n.ts

// O11N - Alphascape 3.0 Normal
const o11n_triggerSet = {
  zoneId: zone_id/* default.AlphascapeV30 */.Z.AlphascapeV30,
  damageWarn: {
    'O11N Starboard Wave Cannon 1': '3281',
    // initial right cleave
    'O11N Starboard Wave Cannon 2': '3282',
    // follow-up right cleave
    'O11N Larboard Wave Cannon 1': '3283',
    // initial left cleave
    'O11N Larboard Wave Cannon 2': '3284',
    // follow-up left cleave
    'O11N Flame Thrower': '327D',
    // pinwheel conals
    'O11N Critical Storage Violation': '3279',
    // missing midphase towers
    'O11N Level Checker Reset': '35AA',
    // "get out" circle
    'O11N Level Checker Reformat': '35A9',
    // "get in" donut
    'O11N Rocket Punch Rush': '3606' // giant hand 1/3 arena line aoes

  },
  gainsEffectWarn: {
    'O11N Burns': 'FA' // standing in ballistic missile fire puddle

  },
  gainsEffectFail: {
    'O11N Memory Loss': '65A' // failing to cleanse Looper in a tower

  },
  shareWarn: {
    'O11N Ballistic Impact': '327F' // spread markers

  },
  shareFail: {
    'O11N Blaster': '3280' // tank tether

  },
  soloFail: {
    'O11N Electric Slide': '3285' // stack marker

  }
};
/* harmony default export */ const o11n = (o11n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o11s.ts

const o11s_triggerSet = {
  zoneId: zone_id/* default.AlphascapeV30Savage */.Z.AlphascapeV30Savage,
  damageWarn: {
    'O11S Afterburner': '325E',
    // followup to Flame Thrower
    'O11S Rocket Punch Iron Kiss 1': '3608',
    // Rocket Punch hand circle from Peripheral Synthesis #1
    'O11S Rocket Punch Iron Kiss 2': '36F4',
    // Rocket Punch hand circle from Peripheral Synthesis #3
    'O11S Starboard Wave Cannon 1': '3262',
    'O11S Starboard Wave Cannon 2': '3263',
    'O11S Larboard Wave Cannon 1': '3264',
    'O11S Larboard Wave Cannon 2': '3265',
    'O11S Starboard Wave Cannon Surge 1': '3266',
    'O11S Starboard Wave Cannon Surge 2': '3267',
    'O11S Larboard Wave Cannon Surge 1': '3268',
    'O11S Larboard Wave Cannon Surge 2': '3269',
    'O11S Critical Dual Storage Violation': '3258',
    // failing a tower
    'O11S Level Checker Reset': '3268',
    // "get out" circle
    'O11S Level Checker Reformat': '3267',
    // "get in" donut
    'O11S Ballistic Impact': '370B',
    // circles during Panto 1
    'O11S Flame Thrower Panto': '3707',
    // pinwheel during Panto 2
    'O11S Guided Missile Kyrios': '370A' // Panto 2 baited circle

  },
  gainsEffectWarn: {
    'O11S Burns': 'FA' // standing in ballistic missile fire puddle

  },
  gainsEffectFail: {
    'O11S Memory Loss': '65A' // failing to cleanse Looper in a tower

  },
  shareWarn: {
    'O11S Flame Thrower': '325D',
    // protean wave
    'O11S Rocket Punch Rush': '3250',
    // tethered Rocket Punch charge from Peripheral Synthesis #2
    'O11S Wave Cannon Kyrios': '3705' // Panto 2 distance baited lasers

  },
  shareFail: {
    'O11S Mustard Bomb': '326D',
    // tank buster
    'O11S Blaster': '3261',
    // tethered explosion
    'O11S Diffuse Wave Cannon Kyrios': '3705' // Panto 2 tank lasers

  }
};
/* harmony default export */ const o11s = (o11s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o12n.ts


// O12N - Alphascape 4.0 Normal
const o12n_triggerSet = {
  zoneId: zone_id/* default.AlphascapeV40 */.Z.AlphascapeV40,
  damageWarn: {
    'O12N Floodlight': '3309',
    // targeted circular aoes after Program Alpha
    'O12N Efficient Bladework': '32FF',
    // telegraphed centered circle
    'O12N Efficient Bladework Untelegraphed': '32F3',
    // centered circle after transformation
    'O12N Optimized Blizzard III': '3303',
    // cross aoe
    'O12N Superliminal Steel 1': '3306',
    // sides of the room
    'O12N Superliminal Steel 2': '3307',
    // sides of the room
    'O12N Beyond Strength': '3300',
    // donut
    'O12N Optical Laser': '3320',
    // line aoe from eye
    'O12N Optimized Sagittarius Arrow': '3323' // line aoe from Omega-M

  },
  shareWarn: {
    'O12N Solar Ray': '330F' // circular tankbuster

  },
  soloWarn: {
    'O12N Spotlight': '330A' // stack marker

  },
  triggers: [{
    id: 'O12N Discharger Knocked Off',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '32F6'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'Renversé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const o12n = (o12n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o12s.ts



// TODO: could add Patch warnings for double/unbroken tethers
// TODO: Hello World could have any warnings (sorry)
const o12s_triggerSet = {
  zoneId: zone_id/* default.AlphascapeV40Savage */.Z.AlphascapeV40Savage,
  damageWarn: {
    'O12S1 Superliminal Motion 1': '3334',
    // 300+ degree cleave with back safe area
    'O12S1 Efficient Bladework 1': '3329',
    // Omega-M "get out" centered aoe after split
    'O12S1 Efficient Bladework 2': '332A',
    // Omega-M "get out" centered aoe during blades
    'O12S1 Beyond Strength': '3328',
    // Omega-M "get in" centered aoe during shield
    'O12S1 Superliminal Steel 1': '3330',
    // Omega-F "get front/back" blades phase
    'O12S1 Superliminal Steel 2': '3331',
    // Omega-F "get front/back" blades phase
    'O12S1 Optimized Blizzard III': '3332',
    // Omega-F giant cross
    'O12S2 Diffuse Wave Cannon': '3369',
    // back/sides lasers
    'O12S2 Right Arm Unit Hyper Pulse 1': '335A',
    // Rotating Archive Peripheral lasers
    'O12S2 Right Arm Unit Hyper Pulse 2': '335B',
    // Rotating Archive Peripheral lasers
    'O12S2 Right Arm Unit Colossal Blow': '335F',
    // Exploding Archive All hands
    'O12S2 Left Arm Unit Colossal Blow': '3360' // Exploding Archive All hands

  },
  damageFail: {
    'O12S1 Optical Laser': '3347',
    // middle laser from eye
    'O12S1 Advanced Optical Laser': '334A',
    // giant circle centered on eye
    'O12S2 Rear Power Unit Rear Lasers 1': '3361',
    // Archive All initial laser
    'O12S2 Rear Power Unit Rear Lasers 2': '3362' // Archive All rotating laser

  },
  shareWarn: {
    'O12S1 Optimized Fire III': '3337',
    // fire spread
    'O12S2 Hyper Pulse Tether': '335C',
    // Index And Archive Peripheral tethers
    'O12S2 Wave Cannon': '336B',
    // Index And Archive Peripheral baited lasers
    'O12S2 Optimized Fire III': '3379' // Archive All spread

  },
  shareFail: {
    'O12S1 Optimized Sagittarius Arrow': '334D',
    // Omega-M bard limit break
    'O12S2 Oversampled Wave Cannon': '3366',
    // Monitor tank busters
    'O12S2 Savage Wave Cannon': '336D' // Tank buster with the vuln first

  },
  triggers: [{
    id: 'O12S1 Discharger Knocked Off',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '3327'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'Renversé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }, {
    id: 'O12S1 Magic Vulnerability Up Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '472'
    }),
    run: (data, matches) => {
      var _data$vuln;

      (_data$vuln = data.vuln) !== null && _data$vuln !== void 0 ? _data$vuln : data.vuln = {};
      data.vuln[matches.target] = true;
    }
  }, {
    id: 'O12S1 Magic Vulnerability Up Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '472'
    }),
    run: (data, matches) => {
      data.vuln = data.vuln || {};
      data.vuln[matches.target] = false;
    }
  }, {
    id: 'O12S1 Magic Vulnerability Damage',
    type: 'Ability',
    // 332E = Pile Pitch stack
    // 333E = Electric Slide (Omega-M square 1-4 dashes)
    // 333F = Electric Slide (Omega-F triangle 1-4 dashes)
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: ['332E', '333E', '333F'],
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.vuln && data.vuln[matches.target],
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: `${matches.ability} (with vuln)`,
          de: `${matches.ability} (mit Verwundbarkeit)`,
          fr: `${matches.ability} (avec Vulnérabilité)`,
          ja: `${matches.ability} (被ダメージ上昇)`,
          cn: `${matches.ability} (带易伤)`,
          ko: `${matches.ability} (받피증 상태에서 피격)`
        }
      };
    }
  }]
};
/* harmony default export */ const o12s = (o12s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o1n.ts

// O1N - Deltascape 1.0 Normal
const o1n_triggerSet = {
  zoneId: zone_id/* default.DeltascapeV10 */.Z.DeltascapeV10,
  damageWarn: {
    'O1N Burn': '23D5',
    // Fireball explosion circle AoEs
    'O1N Clamp': '23E2' // Frontal rectangle knockback AoE, Alte Roite

  },
  shareWarn: {
    'O1N Levinbolt': '23DA' // small spread circles

  }
};
/* harmony default export */ const o1n = (o1n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o1s.ts

// O1S - Deltascape 1.0 Savage
const o1s_triggerSet = {
  zoneId: zone_id/* default.DeltascapeV10Savage */.Z.DeltascapeV10Savage,
  damageWarn: {
    'O1S Turbulence': '2584',
    // standing under the boss before downburst
    'O1S Ball Of Fire Burn': '1ECB' // fireball explosion

  },
  damageFail: {
    'O1S Clamp': '1EDE' // large frontal line aoe

  },
  shareWarn: {
    'O1S Levinbolt': '1ED2' // lightning spread

  }
};
/* harmony default export */ const o1s = (o1s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o2n.ts



// O2N - Deltascape 2.0 Normal
const o2n_triggerSet = {
  zoneId: zone_id/* default.DeltascapeV20 */.Z.DeltascapeV20,
  damageWarn: {
    'O2N Main Quake': '24A5',
    // Non-telegraphed circle AoE, Fleshy Member
    'O2N Erosion': '2590' // Small circle AoEs, Fleshy Member

  },
  shareWarn: {
    'O2N Paranormal Wave': '250E' // Instant tank cleave

  },
  triggers: [{
    // We could try to separate out the mistake that led to the player being petrified.
    // However, it's Normal mode, why overthink it?
    id: 'O2N Petrification',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '262'
    }),
    // The user might get hit by another petrifying ability before the effect ends.
    // There's no point in notifying for that.
    suppressSeconds: 10,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }, {
    id: 'O2N Earthquake',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '2515',
      ...oopsy_common/* playerDamageFields */.np
    }),
    // This deals damage only to non-floating targets.
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const o2n = (o2n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o2s.ts



// O2S - Deltascape 2.0 Savage
const o2s_triggerSet = {
  zoneId: zone_id/* default.DeltascapeV20Savage */.Z.DeltascapeV20Savage,
  damageWarn: {
    'O2S Weighted Wing': '23EF',
    // Unstable Gravity explosions on players (after Long Drop)
    'O2S Gravitational Explosion 1': '2367',
    // failing Four Fold Sacrifice 4 person stack
    'O2S Gravitational Explosion 2': '2368',
    // failing Four Fold Sacrifice 4 person stack
    'O2S Main Quake': '2359' // untelegraphed explosions from epicenter tentacles

  },
  gainsEffectFail: {
    'O2S Stone Curse': '589' // failing Death's Gaze or taking too many tankbuster stacks

  },
  triggers: [{
    // ground blue arena circles; (probably?) only do damage if not floating
    // TODO: usually this just doesn't hit anybody at all, due to patterns.
    // Floating over one is untested.
    id: 'O2S Petrosphere Explosion',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '245D',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    // floating yellow arena circles; only do damage if floating
    id: 'O2S Potent Petrosphere Explosion',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '2362',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    // Must be floating to survive; hits everyone but only does damage if not floating.
    id: 'O2S Earthquake',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '247A',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const o2s = (o2s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o3n.ts


// O3N - Deltascape 3.0 Normal
const o3n_triggerSet = {
  zoneId: zone_id/* default.DeltascapeV30 */.Z.DeltascapeV30,
  damageWarn: {
    'O3N Spellblade Fire III': '2460',
    // Donut AoE, Halicarnassus
    'O3N Spellblade Blizzard III': '2461',
    // Circle AoE, Halicarnassus
    'O3N Spellblade Thunder III': '2462',
    // Line AoE, Halicarnassus
    'O3N Cross Reaper': '246B',
    // Circle AoE, Soul Reaper
    'O3N Gusting Gouge': '246C',
    // Green line AoE, Soul Reaper
    'O3N Sword Dance': '2470',
    // Targeted thin cone AoE, Halicarnassus
    'O3N Uplift': '2473' // Ground spears, Queen's Waltz effect, Halicarnassus

  },
  damageFail: {
    'O3N Ultimum': '2477' // Instant kill. Used if the player does not exit the sand maze fast enough.

  },
  shareWarn: {
    'O3N Holy Blur': '2463' // Spread circles.

  },
  triggers: [{
    id: 'O3N Phase Tracker',
    type: 'StartsUsing',
    netRegex: netregexes/* default.startsUsing */.Z.startsUsing({
      id: '2304',
      source: 'Halicarnassus',
      capture: false
    }),
    netRegexDe: netregexes/* default.startsUsing */.Z.startsUsing({
      id: '2304',
      source: 'Halikarnassos',
      capture: false
    }),
    netRegexFr: netregexes/* default.startsUsing */.Z.startsUsing({
      id: '2304',
      source: 'Halicarnasse',
      capture: false
    }),
    netRegexJa: netregexes/* default.startsUsing */.Z.startsUsing({
      id: '2304',
      source: 'ハリカルナッソス',
      capture: false
    }),
    netRegexCn: netregexes/* default.startsUsing */.Z.startsUsing({
      id: '2304',
      source: '哈利卡纳苏斯',
      capture: false
    }),
    netRegexKo: netregexes/* default.startsUsing */.Z.startsUsing({
      id: '2304',
      source: '할리카르나소스',
      capture: false
    }),
    run: data => {
      var _data$phaseNumber;

      return data.phaseNumber = ((_data$phaseNumber = data.phaseNumber) !== null && _data$phaseNumber !== void 0 ? _data$phaseNumber : 0) + 1;
    }
  }, {
    // There's a lot to track, and in order to make it all clean, it's safest just to
    // initialize it all up front instead of trying to guard against undefined comparisons.
    id: 'O3N Initializing',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '367',
      source: 'Halicarnassus',
      capture: false
    }),
    netRegexDe: netregexes/* default.ability */.Z.ability({
      id: '367',
      source: 'Halikarnassos',
      capture: false
    }),
    netRegexFr: netregexes/* default.ability */.Z.ability({
      id: '367',
      source: 'Halicarnasse',
      capture: false
    }),
    netRegexJa: netregexes/* default.ability */.Z.ability({
      id: '367',
      source: 'ハリカルナッソス',
      capture: false
    }),
    netRegexCn: netregexes/* default.ability */.Z.ability({
      id: '367',
      source: '哈利卡纳苏斯',
      capture: false
    }),
    netRegexKo: netregexes/* default.ability */.Z.ability({
      id: '367',
      source: '할리카르나소스',
      capture: false
    }),
    condition: data => !data.initialized,
    run: data => {
      data.gameCount = 0; // Indexing phases at 1 so as to make phases match what humans expect.
      // 1: We start here.
      // 2: Cave phase with Uplifts.
      // 3: Post-intermission, with good and bad frogs.

      data.phaseNumber = 1;
      data.initialized = true;
    }
  }, {
    id: 'O3N Ribbit',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '2466'
    }),
    condition: (data, matches) => {
      var _data$gameCount;

      // We DO want to be hit by Toad/Ribbit if the next cast of The Game
      // is 4x toad panels.
      const gameCount = (_data$gameCount = data.gameCount) !== null && _data$gameCount !== void 0 ? _data$gameCount : 0;
      return !(data.phaseNumber === 3 && gameCount % 2 === 0) && matches.targetId !== 'E0000000';
    },
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    // There's a lot we could do to track exactly how the player failed The Game.
    // Why overthink Normal mode, however?
    id: 'O3N The Game',
    type: 'Ability',
    // Guess what you just lost?
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '246D'
    }),
    // If the player takes no damage, they did the mechanic correctly.
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    },
    run: data => {
      var _data$gameCount2;

      return data.gameCount = ((_data$gameCount2 = data.gameCount) !== null && _data$gameCount2 !== void 0 ? _data$gameCount2 : 0) + 1;
    }
  }]
};
/* harmony default export */ const o3n = (o3n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o3s.ts



// TODO: handle Ribbit (22F7), Oink (22F9, if damage), Squelch (22F8, if damage)
//       which is an error except during the second game
// O3S - Deltascape 3.0 Savage
const o3s_triggerSet = {
  zoneId: zone_id/* default.DeltascapeV30Savage */.Z.DeltascapeV30Savage,
  damageWarn: {
    'O3S Spellblade Fire III': '22EC',
    // donut
    'O3S Spellblade Thunder III': '22EE',
    // line
    'O3S Spellblade Blizzard III': '22ED',
    // circle
    'O3S Uplift': '230D',
    // not standing on blue square
    'O3S Soul Reaper Gusting Gouge': '22FF',
    // reaper line aoe during cave phase
    'O3S Soul Reaper Cross Reaper': '22FD',
    // middle reaper circle
    'O3S Soul Reaper Stench of Death': '22FE',
    // outside reapers (during final phase)
    'O3S Apanda Magic Hammer': '2315',
    // books phase magic hammer circle
    'O3S Briar Thorn': '2309' // not breaking tethers fast enough

  },
  shareWarn: {
    'O3S Holy Edge': '22F0',
    // Spellblade Holy spread
    'O3S Sword Dance': '2307',
    // protean wave
    'O3S Great Dragon Frost Breath': '2312',
    // tank cleave from Great Dragon
    'O3S Iron Giant Grand Sword': '2316' // tank cleave from Iron Giant

  },
  shareFail: {
    'O3S Folio': '230F' // books books books

  },
  soloWarn: {
    'O3S Holy Blur': '22F1' // Spellblade Holy stack

  },
  triggers: [{
    // Everybody gets hits by this, but it's only a failure if it does damage.
    id: 'O3S The Game',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '2301',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const o3s = (o3s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o4n.ts



// O4N - Deltascape 4.0 Normal
const o4n_triggerSet = {
  zoneId: zone_id/* default.DeltascapeV40 */.Z.DeltascapeV40,
  damageWarn: {
    'O4N Blizzard III': '24BC',
    // Targeted circle AoEs, Exdeath
    'O4N Empowered Thunder III': '24C1',
    // Untelegraphed large circle AoE, Exdeath
    'O4N Zombie Breath': '24CB',
    // Conal, tree head after Decisive Battle
    'O4N Clearout': '24CC',
    // Overlapping cone AoEs, Deathly Vine (tentacles alongside tree head)
    'O4N Black Spark': '24C9' // Exploding Black Hole

  },
  shareWarn: {
    // Empowered Fire III inflicts the Pyretic debuff, which deals damage if the player
    // moves or acts before the debuff falls. Unfortunately it doesn't look like there's
    // currently a log line for this, so the only way to check for this is to collect
    // the debuffs and then warn if a player takes an action during that time. Not worth it
    // for Normal.
    'O4N Standard Fire': '24BA',
    'O4N Buster Thunder': '24BE' // A cleaving tank buster

  },
  triggers: [{
    // Kills target if not cleansed
    id: 'O4N Doom',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '38E'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Cleansers missed Doom!',
          de: 'Doom-Reinigung vergessen!',
          fr: 'Dissipation du Glas manquée!',
          ja: '死の宣告',
          cn: '没解死宣',
          ko: '죽음의 선고'
        }
      };
    }
  }, {
    // Short knockback from Exdeath
    id: 'O4N Vacuum Wave',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '24B8',
      ...oopsy_common/* playerDamageFields */.np
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Pushed off!',
          de: 'Runter geschubst!',
          fr: 'Repoussé(e) !',
          ja: '落ちた',
          cn: '击退坠落',
          ko: '넉백됨'
        }
      };
    }
  }, {
    // Room-wide AoE, freezes non-moving targets
    id: 'O4N Empowered Blizzard',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '4E6'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }]
};
/* harmony default export */ const o4n = (o4n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o4s.ts


 // TODO: taking the wrong color white/black antilight

// O4S - Deltascape 4.0 Savage
const o4s_triggerSet = {
  zoneId: zone_id/* default.DeltascapeV40Savage */.Z.DeltascapeV40Savage,
  damageWarn: {
    'O4S1 Vine Clearout': '240C',
    // circle of vines
    'O4S1 Zombie Breath': '240B',
    // tree exdeath conal
    'O4S1 Vacuum Wave': '23FE',
    // circle centered on exdeath
    'O4S2 Neo Vacuum Wave': '241D',
    // "out of melee"
    'O4S2 Death Bomb': '2431',
    // failed acceleration bomb
    'O4S2 Emptiness 1': '2421',
    // exaflares initial
    'O4S2 Emptiness 2': '2422' // exaflares moving

  },
  damageFail: {
    'O4S1 Black Hole Black Spark': '2407',
    // black hole catching you
    'O4S2 Edge Of Death': '2415',
    // standing between the two color lasers
    'O4S2 Inner Antilight': '244C',
    // inner laser
    'O4S2 Outer Antilight': '2410' // outer laser

  },
  shareWarn: {
    'O4S1 Fire III': '23F6' // spread explosion

  },
  shareFail: {
    'O4S1 Thunder III': '23FA' // tankbuster

  },
  triggers: [{
    id: 'O4S2 Decisive Battle',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '2408',
      capture: false
    }),
    run: data => {
      data.isDecisiveBattleElement = true;
    }
  }, {
    id: 'O4S1 Vacuum Wave',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '23FE',
      capture: false
    }),
    run: data => {
      data.isDecisiveBattleElement = false;
    }
  }, {
    id: 'O4S2 Almagest',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '2417',
      capture: false
    }),
    run: data => {
      data.isNeoExdeath = true;
    }
  }, {
    id: 'O4S2 Blizzard III',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '23F8',
      ...oopsy_common/* playerDamageFields */.np
    }),
    // Ignore unavoidable raid aoe Blizzard III.
    condition: data => !data.isDecisiveBattleElement,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    id: 'O4S2 Thunder III',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '23FD',
      ...oopsy_common/* playerDamageFields */.np
    }),
    // Only consider this during random mechanic after decisive battle.
    condition: data => data.isDecisiveBattleElement,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    id: 'O4S2 Petrified',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '262'
    }),
    mistake: (data, matches) => {
      // On Neo, being petrified is because you looked at Shriek, so your fault.
      if (data.isNeoExdeath) return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      }; // On normal ExDeath, this is due to White Hole.

      return {
        type: 'warn',
        name: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }, {
    id: 'O4S2 Forked Lightning',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '242E',
      ...oopsy_common/* playerDamageFields */.np
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    id: 'O4S2 Beyond Death Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '566'
    }),
    run: (data, matches) => {
      var _data$hasBeyondDeath;

      (_data$hasBeyondDeath = data.hasBeyondDeath) !== null && _data$hasBeyondDeath !== void 0 ? _data$hasBeyondDeath : data.hasBeyondDeath = {};
      data.hasBeyondDeath[matches.target] = true;
    }
  }, {
    id: 'O4S2 Beyond Death Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '566'
    }),
    run: (data, matches) => {
      var _data$hasBeyondDeath2;

      (_data$hasBeyondDeath2 = data.hasBeyondDeath) !== null && _data$hasBeyondDeath2 !== void 0 ? _data$hasBeyondDeath2 : data.hasBeyondDeath = {};
      data.hasBeyondDeath[matches.target] = false;
    }
  }, {
    id: 'O4S2 Beyond Death',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '566'
    }),
    delaySeconds: (_data, matches) => parseFloat(matches.duration) - 0.5,
    deathReason: (data, matches) => {
      if (!data.hasBeyondDeath) return;
      if (!data.hasBeyondDeath[matches.target]) return;
      return {
        id: matches.targetId,
        name: matches.target,
        text: matches.effect
      };
    }
  }, {
    id: 'O4S2 Double Attack Collect',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '241C',
      ...oopsy_common/* playerDamageFields */.np
    }),
    run: (data, matches) => {
      data.doubleAttackMatches = data.doubleAttackMatches || [];
      data.doubleAttackMatches.push(matches);
    }
  }, {
    id: 'O4S2 Double Attack',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '241C',
      ...oopsy_common/* playerDamageFields */.np
    }),
    mistake: data => {
      var _arr$0$ability, _arr$;

      const arr = data.doubleAttackMatches;
      if (!arr) return;
      if (arr.length <= 2) return; // Hard to know who should be in this and who shouldn't, but
      // it should never hit 3 people.

      return {
        type: 'fail',
        text: `${(_arr$0$ability = (_arr$ = arr[0]) === null || _arr$ === void 0 ? void 0 : _arr$.ability) !== null && _arr$0$ability !== void 0 ? _arr$0$ability : ''} x ${arr.length}`
      };
    },
    run: data => delete data.doubleAttackMatches
  }]
};
/* harmony default export */ const o4s = (o4s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o5n.ts


 // TODO: Diabolic Wind (28B9) always seems to be 0x16 not 0x15.

// O5N - Sigmascape 1.0 Normal
const o5n_triggerSet = {
  zoneId: zone_id/* default.SigmascapeV10 */.Z.SigmascapeV10,
  damageWarn: {
    'O5N Wroth Ghost Encumber': '28AE',
    // squares that ghosts appear in
    'O5N Saintly Beam': '28AA' // chasing circles that destroy ghosts

  },
  triggers: [{
    id: 'O5N Throttle Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '3AA'
    }),
    run: (data, matches) => {
      var _data$hasThrottle;

      ((_data$hasThrottle = data.hasThrottle) !== null && _data$hasThrottle !== void 0 ? _data$hasThrottle : data.hasThrottle = {})[matches.target] = true;
      console.log(JSON.stringify(data.hasThrottle));
    }
  }, {
    id: 'O5N Throttle Death',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '3AA'
    }),
    delaySeconds: (_data, matches) => parseFloat(matches.duration) - 1,
    deathReason: (data, matches) => {
      var _data$hasThrottle2;

      if (!((_data$hasThrottle2 = data.hasThrottle) !== null && _data$hasThrottle2 !== void 0 && _data$hasThrottle2[matches.target])) return;
      return {
        id: matches.targetId,
        name: matches.target,
        text: matches.effect
      };
    }
  }, {
    id: 'O5N Throttle Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '3AA'
    }),
    run: (data, matches) => {
      var _data$hasThrottle3;

      ((_data$hasThrottle3 = data.hasThrottle) !== null && _data$hasThrottle3 !== void 0 ? _data$hasThrottle3 : data.hasThrottle = {})[matches.target] = false;
      console.log(JSON.stringify(data.hasThrottle));
    }
  }, {
    // Getting hit by a ghost without throttle (the mandatory post-chimney one).
    id: 'O5N Possess',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '28AC',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => {
      var _data$hasThrottle4;

      return !((_data$hasThrottle4 = data.hasThrottle) !== null && _data$hasThrottle4 !== void 0 && _data$hasThrottle4[matches.target]);
    },
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const o5n = (o5n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o5s.ts


 // TODO: Diabolic Wind (28BD) always seems to be 0x16 not 0x15.

// O5S - Sigmascape 1.0 Savage
const o5s_triggerSet = {
  zoneId: zone_id/* default.SigmascapeV10Savage */.Z.SigmascapeV10Savage,
  damageWarn: {
    'O5S Wroth Ghost Encumber': '28B6',
    // squares appearing
    'O5S Saintly Bean': '28B4' // chasing lights

  },
  triggers: [{
    id: 'O5S Throttle Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '3AA'
    }),
    run: (data, matches) => {
      var _data$hasThrottle;

      return ((_data$hasThrottle = data.hasThrottle) !== null && _data$hasThrottle !== void 0 ? _data$hasThrottle : data.hasThrottle = {})[matches.target] = true;
    }
  }, {
    id: 'O5S Throttle Death',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '3AA'
    }),
    delaySeconds: (_data, matches) => parseFloat(matches.duration) - 1,
    deathReason: (data, matches) => {
      var _data$hasThrottle2;

      if (!((_data$hasThrottle2 = data.hasThrottle) !== null && _data$hasThrottle2 !== void 0 && _data$hasThrottle2[matches.target])) return;
      return {
        id: matches.targetId,
        name: matches.target,
        text: matches.effect
      };
    }
  }, {
    id: 'O5S Throttle Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '3AA'
    }),
    run: (data, matches) => {
      var _data$hasThrottle3;

      return ((_data$hasThrottle3 = data.hasThrottle) !== null && _data$hasThrottle3 !== void 0 ? _data$hasThrottle3 : data.hasThrottle = {})[matches.target] = false;
    }
  }, {
    // Getting hit by a ghost without throttle (the mandatory post-chimney one).
    id: 'O5S Possess',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '28AC',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => {
      var _data$hasThrottle4;

      return !((_data$hasThrottle4 = data.hasThrottle) !== null && _data$hasThrottle4 !== void 0 && _data$hasThrottle4[matches.target]);
    },
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const o5s = (o5s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o6n.ts


// O6N - Sigmascape 2.0 Normal
const o6n_triggerSet = {
  zoneId: zone_id/* default.SigmascapeV20 */.Z.SigmascapeV20,
  damageWarn: {
    'O6N Earthquake': '2811',
    // failing to be in a plane
    'O6N Demonic Stone': '2847',
    // chasing circles
    'O6N Demonic Wave': '2831',
    // failing to be behind rock
    'O6N Demonic Spout 1': '2835',
    // pair of targeted circles (#1)
    'O6N Demonic Spout 2': '2837',
    // pair of targeted circles (#2)
    'O6N Featherlance': '2AE8',
    // blown away Easterly circles
    'O6N Intense Pain': '2AE7' // failing to spread for Demonic Pain tether

  },
  triggers: [{
    id: 'O6N Fire Resistance Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '5ED'
    }),
    run: (data, matches) => {
      var _data$hasFireResist;

      return ((_data$hasFireResist = data.hasFireResist) !== null && _data$hasFireResist !== void 0 ? _data$hasFireResist : data.hasFireResist = {})[matches.target] = true;
    }
  }, {
    id: 'O6N Fire Resistance Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '5ED'
    }),
    run: (data, matches) => {
      var _data$hasFireResist2;

      return ((_data$hasFireResist2 = data.hasFireResist) !== null && _data$hasFireResist2 !== void 0 ? _data$hasFireResist2 : data.hasFireResist = {})[matches.target] = false;
    }
  }, {
    // Flash Fire without Fire Resistance.
    id: 'O6N Flash Fire',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '280B'
    }),
    condition: (data, matches) => {
      var _data$hasFireResist3;

      return !((_data$hasFireResist3 = data.hasFireResist) !== null && _data$hasFireResist3 !== void 0 && _data$hasFireResist3[matches.target]);
    },
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const o6n = (o6n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o6s.ts



// O6S - Sigmascape 2.0 Savage
const o6s_triggerSet = {
  zoneId: zone_id/* default.SigmascapeV20Savage */.Z.SigmascapeV20Savage,
  damageWarn: {
    'O6S Earthquake': '2810',
    // failing to be in a plane
    'O6S Rock Hard': '2812',
    // from portrayal of earth?
    'O6S Flash Torrent 1': '2AB9',
    // from portrayal of water??
    'O6S Flash Torrent 2': '280F',
    // from portrayal of water??
    'O6S Easterly Featherlance': '283E',
    // blown away Easterly circles
    'O6S Demonic Wave': '2830',
    // failing to be behind rock
    'O6S Demonic Spout': '2836',
    // pair of targeted circle'
    'O6S Demonic Stone 1': '2844',
    // chasing circle initial
    'O6S Demonic Stone 2': '2845',
    // chasing circle repeated
    'O6S Intense Pain': '283A' // failing to spread for Demonic Pain tether

  },
  shareWarn: {
    'O6S The Price': '2826' // exploding Last Kiss tankbuster debuff

  },
  triggers: [{
    id: 'O6S Fire Resistance Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '5ED'
    }),
    run: (data, matches) => {
      var _data$hasFireResist;

      return ((_data$hasFireResist = data.hasFireResist) !== null && _data$hasFireResist !== void 0 ? _data$hasFireResist : data.hasFireResist = {})[matches.target] = true;
    }
  }, {
    id: 'O6S Fire Resistance Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '5ED'
    }),
    run: (data, matches) => {
      var _data$hasFireResist2;

      return ((_data$hasFireResist2 = data.hasFireResist) !== null && _data$hasFireResist2 !== void 0 ? _data$hasFireResist2 : data.hasFireResist = {})[matches.target] = false;
    }
  }, {
    // Flash Fire without Fire Resistance.
    id: 'O6S Flash Fire',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '280A'
    }),
    condition: (data, matches) => {
      var _data$hasFireResist3;

      return !((_data$hasFireResist3 = data.hasFireResist) !== null && _data$hasFireResist3 !== void 0 && _data$hasFireResist3[matches.target]);
    },
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    // Look away; does damage if failed.
    id: 'O6S Divine Lure',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '2822',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const o6s = (o6s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o7n.ts

// O7N - Sigmascape 3.0 Normal
const o7n_triggerSet = {
  zoneId: zone_id/* default.SigmascapeV30 */.Z.SigmascapeV30,
  damageWarn: {
    'O7N Magitek Ray': '276B',
    // untelegraphed frontal line
    'O7N Ink': '275D',
    // Initial Ultros targeted circles
    'O7N Tentacle': '275F',
    // Tentacle simulation targeted circles
    'O7N Wallop': '2760',
    // Ultros tentacles attacking
    'O7N Chain Cannon': '2770',
    // baited airship add cannon
    'O7N Missile Explosion': '2765',
    // Hitting a missile
    'O7N Bibliotaph Deep Darkness': '29BF',
    // giant donut
    'O7N Dadaluma Aura Cannon': '2767',
    // large line aoe
    'O7N Guardian Diffractive Laser': '2761',
    // initial Air Force centered circle on Guardian
    'O7N Air Force Diffractive Laser': '273F',
    // Air Force add large conal
    'O7N Interdimensional Explosion': '2763' // Failed bomb (either wrong side or ignored)

  },
  damageFail: {
    'O7N Super Chakra Burst': '2769' // Missed Dadaluma tower (hits everybody)

  },
  gainsEffectFail: {
    'O7N Shocked': '5DA' // touching arena edge

  }
};
/* harmony default export */ const o7n = (o7n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o7s.ts


// TODO: Ink (277D) seems to always be 0x16
// TODO: Failing Virus?
// TODO: failing Interdimensional Bombs?
// O7S - Sigmascape 3.0 Savage
const o7s_triggerSet = {
  zoneId: zone_id/* default.SigmascapeV30Savage */.Z.SigmascapeV30Savage,
  damageWarn: {
    'O7S Magitek Ray': '2788',
    // front line laser
    'O7S Lightning Bomb Explosion': '278E',
    // baited orbs
    'O7S Chain Cannon': '278F',
    // damage from baited aerial attack
    'O7S Tentacle': '277E',
    // tentacles appearing
    'O7S Tentacle Wallop': '277F',
    // tentacles attacking
    'O7S Air Force Diffractive Laser': '2740',
    // Air Force adds conal
    'O7N Guardian Diffractive Laser': '2780',
    // initial Air Force centered circle on Guardian
    'O7S The Heat': '2777',
    // explosion from searing wind
    'O7S Super Chakra Burst': '2786' // failing Dadaluma towers

  },
  damageFail: {
    'O7S Missile': '2782'
  },
  gainsEffectFail: {
    'O7S Shocked': '5DA' // touching arena edge

  },
  shareWarn: {
    'O7S Aura Cannon': '2784' // Dadaluma line aoe

  },
  triggers: [{
    id: 'O7S Stoneskin',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '2AB5'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.source,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const o7s = (o7s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o8n.ts



// O8N - Sigmascape 4.0 Normal
const o8n_triggerSet = {
  zoneId: zone_id/* default.SigmascapeV40 */.Z.SigmascapeV40,
  damageWarn: {
    'O8N Blizzard Blitz 1': '2918',
    'O8N Blizzard Blitz 2': '2914',
    'O8N Thrumming Thunder 1': '291D',
    'O8N Thrumming Thunder 2': '291C',
    'O8N Thrumming Thunder 3': '291B',
    'O8N Wave Cannon': '2928',
    // telegraphed line aoes
    'O8N Revolting Ruin': '2923',
    // large 180 cleave after Timely Teleport
    'O8N Intemperate Will': '292A',
    // east 180 cleave
    'O8N Gravitational Wave': '292B' // west 180 cleave

  },
  shareWarn: {
    'O8N Flagrant Fire Spread': '291F' // true spread markers

  },
  soloWarn: {
    'O8N Flagrant Fire Stack': '2920' // fake spread marker

  },
  triggers: [{
    // Look away; does damage if failed.
    id: 'O8N Indolent Will',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '292C',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    // Look towards; does damage if failed.
    id: 'O8N Ave Maria',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '292B',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    id: 'O8N Shockwave',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '2927'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'Renversé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }, {
    id: 'O8N Aero Assault',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '2924'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'Renversé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const o8n = (o8n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o8s.ts



// TODO: failing meteor towers?
// O8S - Sigmascape 4.0 Savage
const o8s_triggerSet = {
  zoneId: zone_id/* default.SigmascapeV40Savage */.Z.SigmascapeV40Savage,
  damageWarn: {
    'O8S1 Thrumming Thunder 1': '28CB',
    'O8S1 Thrumming Thunder 2': '28CC',
    'O8S1 Thrumming Thunder 3': '28CD',
    'O8S1 Thrumming Thunder 4': '2B31',
    'O8S1 Thrumming Thunder 5': '2B2F',
    'O8S1 Thrumming Thunder 6': '2B30',
    'O8S1 Blizzard Blitz 1': '28C4',
    'O8S1 Blizzard Blitz 2': '2BCA',
    'O8S1 Inexorable Will': '28DA',
    // ground circles
    'O8S1 Revolting Ruin': '28D5',
    // large 180 cleave after Timely Teleport
    'O8S1 Intemperate Will': '28DF',
    // east 180 cleave
    'O8S1 Gravitational Wave': '28DE',
    // west 180 cleave
    'O8S2 Blizzard III 1': '2908',
    // celestriad center circle
    'O8S2 Blizzard III 2': '2909',
    // celestriad donut
    'O8S2 Thunder III': '290A',
    // celestriad cross lines
    'O8S2 Trine 1': '290E',
    // eating the golden dorito
    'O8S2 Trine 2': '290F',
    // eating the big golden dorito
    'O8S2 Meteor': '2903',
    // chasing puddles during 2nd forsaken (Meteor 2904 = tower)
    'O8S2 All Things Ending 1': '28F0',
    // Futures Numbered followup
    'O8S2 All Things Ending 2': '28F2',
    // Pasts Forgotten followup
    'O8S2 All Things Ending 3': '28F6',
    // Future's End followup
    'O8S2 All Things Ending 4': '28F9',
    // Past's End followup
    'O8S2 Wings Of Destruction 1': '28FF',
    // half cleave
    'O8S2 Wings Of Destruction 2': '28FE' // half cleave

  },
  damageFail: {
    'O8S2 The Mad Head Big Explosion': '28FD' // not touching skull

  },
  shareWarn: {
    'O8S1 Vitrophyre': '28E2',
    // yellow right tether that must be solo (or knockback)
    'O8S1 Flagrant Fire Spread': '28CF',
    'O8S2 Fire III Spread': '290B',
    // celestriad spread
    'O8S2 The Mad Head Explosion': '28FC' // skull tethers

  },
  shareFail: {
    'O8S1 Hyperdrive': '28E8',
    // phase 1 tankbuster
    'O8S2 Hyperdrive': '229128E8',
    // phase 2 tankbuster
    'O8S2 Wings Of Destruction': '2901' // close/far tank busters

  },
  soloWarn: {
    'O8S1 Flagrant Fire Stack': '28D0',
    'O8S1 Gravitas': '28E0',
    // purple left tether that must be shared, leaving a puddle
    'O8S1 Indomitable Will': '28D9',
    // 4x stack markers
    'O8S2 Fire III Stack': '290C' // celestriad stack

  },
  triggers: [{
    // Look away; does damage if failed.
    id: 'O8S Indolent Will',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '28E4',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    // Look towards; does damage if failed.
    id: 'O8S Ave Maria',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '28E3',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    id: 'O8S Shockwave',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '28DB'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'Renversé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }, {
    id: 'O8S Aero Assault',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '28D6'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'Renversé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const o8s = (o8s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o9n.ts

// O9N - Alphascape 1.0 Normal
const o9n_triggerSet = {
  zoneId: zone_id/* default.AlphascapeV10 */.Z.AlphascapeV10,
  damageWarn: {
    'O9N Damning Edict': '3150',
    // huge 180 frontal cleave
    'O9N Stray Spray': '316C',
    // Dynamic Fluid debuff donut explosion
    'O9N Stray Flames': '316B',
    // Entropy debuff circle explosion
    'O9N Knockdown Big Bang': '3160',
    // big circle where Knockdown marker dropped
    'O9N Fire Big Bang': '315F',
    // ground circles during fire phase
    'O9N Shockwave': '3153',
    // Longitudinal/Latiudinal Implosion
    'O9N Chaosphere Fiendish Orbs Orbshadow 1': '3162',
    // line aoes from Earth phase orbs
    'O9N Chaosphere Fiendish Orbs Orbshadow 2': '3163' // line aoes from Earth phase orbs

  }
};
/* harmony default export */ const o9n = (o9n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/raid/o9s.ts


const o9s_triggerSet = {
  zoneId: zone_id/* default.AlphascapeV10Savage */.Z.AlphascapeV10Savage,
  damageWarn: {
    'O9S Shockwave': '3174',
    // Longitudinal/Latiudinal Implosion
    'O9S Damning Edict': '3171',
    // huge 180 frontal cleave
    'O9S Knockdown Big Bang': '3181',
    // big circle where Knockdown marker dropped
    'O9S Fire Big Bang': '3180',
    // ground circles during fire phase
    'O9S Chaosphere Fiendish Orbs Orbshadow 1': '3183',
    // line aoes from Earth phase orbs
    'O9S Chaosphere Fiendish Orbs Orbshadow 2': '3184' // line aoes from Earth phase orbs

  },
  triggers: [{
    // Facing the wrong way for Headwind/Tailwaind
    id: 'O9S Cyclone Knocked Off',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '318F'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'Renversé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }, {
    id: 'O9S Headwind Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '642'
    }),
    run: (data, matches) => {
      var _data$hasHeadwind;

      return ((_data$hasHeadwind = data.hasHeadwind) !== null && _data$hasHeadwind !== void 0 ? _data$hasHeadwind : data.hasHeadwind = {})[matches.target] = true;
    }
  }, {
    id: 'O9S Headwind Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '642'
    }),
    run: (data, matches) => {
      var _data$hasHeadwind2;

      return ((_data$hasHeadwind2 = data.hasHeadwind) !== null && _data$hasHeadwind2 !== void 0 ? _data$hasHeadwind2 : data.hasHeadwind = {})[matches.target] = false;
    }
  }, {
    id: 'O9S Primordial Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '645'
    }),
    run: (data, matches) => {
      var _data$hasPrimordial;

      return ((_data$hasPrimordial = data.hasPrimordial) !== null && _data$hasPrimordial !== void 0 ? _data$hasPrimordial : data.hasPrimordial = {})[matches.target] = true;
    }
  }, {
    id: 'O9S Primordial Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '645'
    }),
    run: (data, matches) => {
      var _data$hasPrimordial2;

      return ((_data$hasPrimordial2 = data.hasPrimordial) !== null && _data$hasPrimordial2 !== void 0 ? _data$hasPrimordial2 : data.hasPrimordial = {})[matches.target] = false;
    }
  }, {
    // Entropy debuff circle explosion.
    // During the midphase, tanks/healers need to clear headwind with Entropy circle and
    // dps need to clear Primordial Crust with Dynamic Fluid donut.  In case there's
    // some other strategy, just check both debuffs.
    id: 'O9S Stray Flames',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '318C'
    }),
    condition: (data, matches) => {
      var _data$hasHeadwind3, _data$hasPrimordial3;

      return !((_data$hasHeadwind3 = data.hasHeadwind) !== null && _data$hasHeadwind3 !== void 0 && _data$hasHeadwind3[matches.target]) && !((_data$hasPrimordial3 = data.hasPrimordial) !== null && _data$hasPrimordial3 !== void 0 && _data$hasPrimordial3[matches.target]);
    },
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    // Dynamic Fluid debuff donut explosion.
    // See Stray Flames note above.
    id: 'O9S Stray Spray',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '318D'
    }),
    condition: (data, matches) => {
      var _data$hasHeadwind4, _data$hasPrimordial4;

      return !((_data$hasHeadwind4 = data.hasHeadwind) !== null && _data$hasHeadwind4 !== void 0 && _data$hasHeadwind4[matches.target]) && !((_data$hasPrimordial4 = data.hasPrimordial) !== null && _data$hasPrimordial4 !== void 0 && _data$hasPrimordial4[matches.target]);
    },
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const o9s = (o9s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/byakko.ts

// Byakko Normal
const byakko_triggerSet = {
  zoneId: zone_id/* default.TheJadeStoa */.Z.TheJadeStoa,
  damageWarn: {
    'Byakko Sweep the Leg': '2A2E',
    // 270 degree get behind
    'Byakko Aratama Force Aratama': '2A48',
    // popping Unrelenting Anguish bubbles
    'Byakko Fire and Lightning': '2A2C',
    // large red/purple line aoe
    'Byakko Hakutei Aratama': '2A29',
    // targeted ground circle during tiger phase
    'Byakko Hundredfold Havoc 1': '2A38',
    // lightning puddles initial
    'Byakko Hundredfold Havoc 2': '2A39',
    // lightning puddles moving
    'Byakko Distant Clap': '2A30' // donut

  },
  damageFail: {
    'Byakko Aratama Midphase': '2A42',
    // popping a bubble during midphase
    'Byakko Sweep The Leg': '2A46',
    // donut during midphase
    'Byakko Imperial Guard': '2A43' // line aoe from tiger during midphase

  },
  gainsEffectWarn: {
    'Byakko Bleeding': '111' // standing in Hakutei's Aratama circle (2A29)

  },
  shareWarn: {
    'Byakko Bombogenesis': '2A3B' // red spread marker

  }
};
/* harmony default export */ const byakko = (byakko_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/byakko-ex.ts



// Byakko Extreme
const byakko_ex_triggerSet = {
  zoneId: zone_id/* default.TheJadeStoaExtreme */.Z.TheJadeStoaExtreme,
  damageWarn: {
    // Popping Unrelenting Anguish bubbles
    'ByaEx Aratama': '27F6',
    // Stepping in growing orb
    'ByaEx Vacuum Claw': '27E9',
    // Lightning Puddles
    'ByaEx Hunderfold Havoc 1': '27E5',
    'ByaEx Hunderfold Havoc 2': '27E6'
  },
  damageFail: {
    'ByaEx Sweep The Leg': '27DB',
    'ByaEx Fire and Lightning': '27DE',
    'ByaEx Distant Clap': '27DD',
    // Midphase line attack
    'ByaEx Imperial Guard': '27F1'
  },
  triggers: [{
    // Pink bubble collision
    id: 'ByaEx Ominous Wind',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '27EC',
      ...oopsy_common/* playerDamageFields */.np
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: 'bubble collision',
          de: 'Blasen sind zusammengestoßen',
          fr: 'Collision avec une bulle',
          ja: '衝突',
          cn: '相撞',
          ko: '장판 겹쳐서 터짐'
        }
      };
    }
  }]
};
/* harmony default export */ const byakko_ex = (byakko_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/lakshmi.ts



// Lakshmi Normal
const lakshmi_triggerSet = {
  zoneId: zone_id/* default.Emanation */.Z.Emanation,
  damageWarn: {
    'Lakshmi Blissful Spear Cross': '248B',
    // blissful arrow's cross lines (called Blissful Spear)
    'Lakshmi Blissful Spear Cross Chanchala': '248C' // blissful arrow's cross lines (called Blissful Spear)

  },
  gainsEffectWarn: {
    'Lakshmi Bleeding': '140' // standing in expanding blue flower circle

  },
  gainsEffectFail: {
    'Lakshmi Dreaming Kshatriya Terror': '42' // failing Inner Demons from initial add

  },
  shareWarn: {
    'Lakshmi Blissful Arrow': '2489',
    // cross marker dropping
    'Lakshmi Blissful Arrow Chanchala': '248A',
    // cross marker dropping
    'Lakshmi Blissful Spear': '2494',
    // flower circle dropping
    'Lakshmi Blissful Spear Chanchala': '2495',
    // flower circle dropping
    'Lakshmi The Path of Light': '24A1' // OT cleave

  },
  soloWarn: {
    'Lakshmi The Pall of Light': '2491' // stack

  },
  triggers: [{
    id: 'Lakshmi Divine Denial Knocked Off',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '2485',
      ...oopsy_common/* playerDamageFields */.np
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'Renversé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const lakshmi = (lakshmi_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/lakshmi-ex.ts


 // Note: flower circle in extreme is called Blissful Hammer, whereas in normal
// both the cross from the Blissful Arrow and the flower circle are both called
// Blissful Spear.

// Lakshmi Extreme
const lakshmi_ex_triggerSet = {
  zoneId: zone_id/* default.EmanationExtreme */.Z.EmanationExtreme,
  damageWarn: {
    'LakshmiEx Blissful Spear Cross': '2151',
    // blissful arrow's cross lines (called Blissful Spear)
    'LakshmiEx Blissful Spear Cross Chanchala': '2152' // blissful arrow's cross lines (called Blissful Spear)

  },
  gainsEffectWarn: {
    'LakshmiEx Bleeding': '140' // standing in expanding blue flower circle

  },
  gainsEffectFail: {
    'LakshmiEx Dreaming Kshatriya Terror': '42' // failing Inner Demons from initial add

  },
  shareWarn: {
    'LakshmiEx Dreaming Kshatriya Tail Slap': '258C',
    // untelegraphed no cast bar cleave
    'LakshmiEx Blissful Arrow': '214F',
    // cross marker dropping
    'LakshmiEx Blissful Arrow Chanchala': '2150',
    // cross marker dropping
    'LakshmiEx Blissful Hammer': '21DC',
    // flower circle dropping
    'LakshmiEx Blissful Hammer Chanchala': '21DD',
    // flower circle droping
    'LakshmiEx The Path of Light': '215A',
    // OT cleave
    'LakshmiEx The Path of Light Chanchala': '215B' // OT cleave

  },
  soloWarn: {
    'LakshmiEx The Pall of Light': '215C' // stack

  },
  triggers: [{
    id: 'LakshmiEx Divine Denial Knocked Off',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '2149',
      ...oopsy_common/* playerDamageFields */.np
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'Renversé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const lakshmi_ex = (lakshmi_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/rathalos.ts

// Rathalos Normal
const rathalos_triggerSet = {
  zoneId: zone_id/* default.TheGreatHunt */.Z.TheGreatHunt,
  damageWarn: {
    'Rathalos Mangle 1': '2CB9',
    // first phase frontal conal
    'Rathalos Mangle 2': '2CC2',
    // second phase conal swipe
    'Rathalos Rush 1': '2CBC',
    // first phase charge attack
    'Rathalos Rush 2': '2CC0',
    // second phase charge attack, gives poison
    'Rathalos Tail Smash': '286B',
    // first phase left/rear conal, paired with Mangle (2CB9)
    'Rathalos Tail Swing': '2CBB',
    // first phase right side attack
    'Rathalos Flaming Recoil 1': '2CBE',
    // frontal conal + knockback
    'Rathalos Flaming Recoil 2': '2CBF',
    // frontal conal + knockback
    'Rathalos Steppe Sheep Lullaby': '287B',
    // centered circle
    'Rathalos Steppe Yamaa Head Butt': '287C',
    // line aoe
    'Rathalos Steppe Coeurl Wide Blaster': '287D',
    // very large conal
    'Rathalos Garula Rush': '287F',
    // line charge into the arena
    'Rathalos Sweeping Flames': '2CC1' // second phase frontal conal

  },
  shareFail: {
    'Rathalos Garula Heave': '287E' // untelegraphed conal cleave

  },
  soloWarn: {
    'Rathalos Fireball': '2CBA' // second phase stack that leaves a fire puddle

  }
};
/* harmony default export */ const rathalos = (rathalos_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/rathalos-ex.ts

// Rathalos Extreme
const rathalos_ex_triggerSet = {
  zoneId: zone_id/* default.TheGreatHuntExtreme */.Z.TheGreatHuntExtreme,
  damageWarn: {
    'RathalosEx Mangle 1': '285C',
    // first phase frontal 90 degree conal
    'RathalosEx Mangle 2': '2CB7',
    // second phase conal swipe
    'RathalosEx Rush 1': '2A3D',
    // first phase charge attack
    'RathalosEx Rush 2': '2CB5',
    // second phase charge attack, gives poison
    'RathalosEx Tail Smash': '2854',
    // first phase left/rear conal, paired with Mangle (285C)
    'RathalosEx Tail Swing': '2A3C',
    // first phase right side attack
    'RathalosEx Flaming Recoil 1': '2CB3',
    // frontal conal + knockback
    'RathalosEx Flaming Recoil 2': '2CB4',
    // frontal conal + knockback
    'RathalosEx Steppe Sheep Lullaby': '2864',
    // centered circle
    'RathalosEx Steppe Yamaa Head Butt': '2865',
    // line aoe
    'RathalosEx Steppe Coeurl Wide Blaster': '2866',
    // very large conal
    'RathalosEx Garula Rush': '2868',
    // line charge into the arena
    'RathalosEx Sweeping Flames': '2CB6' // second phase frontal conal

  },
  shareFail: {
    'RathalosEx Garula Heave': '2867' // untelegraphed conal cleave

  },
  soloWarn: {
    'RathalosEx Fireball 1': '2860',
    // second phase stack triple fireball initial
    'RathalosEx Fireball 2': '2D0B' // second phase stack triple fireball second and third

  }
};
/* harmony default export */ const rathalos_ex = (rathalos_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/seiryu.ts

// Seiryu Normal
const seiryu_triggerSet = {
  zoneId: zone_id/* default.TheWreathOfSnakes */.Z.TheWreathOfSnakes,
  damageWarn: {
    'Seiryu Onmyo Sigil': '3A07',
    // centered "get out" circle
    'Seiryu Serpent-Eye Sigil': '3A08',
    // donut
    'Seiryu Fortune-Blade Sigil': '3806',
    // Kuji-Kiri (37E1) lines
    'Seiryu Iwa-No-Shiki 100-Tonze Swing': '3C1E',
    // centered circles (tank tethers in extreme)
    'Seiryu Ten-No-Shiki Yama-Kagura': '3813',
    // blue lines during midphase / final phase adds
    'Seiryu Iwa-No-Shiki Kanabo': '3C20',
    // unpassable tether which targets a large conal cleave
    'Seiryu Great Typhoon 1': '3810',
    // outside ring of water during Coursing River
    'Seiryu Great Typhoon 2': '3811',
    // outside ring of water during Coursing River
    'Seiryu Great Typhoon 3': '3812',
    // outside ring of water during Coursing River
    'Seiryu Yama-No-Shiki Handprint 1': '3707',
    // half arena cleave
    'Seiryu Yama-No-Shiki Handprint 2': '3708',
    // half arena cleave
    'Seiryu Force Of Nature': '3809',
    // standing in the middle circle during knockback (380A)
    'Seiryu Serpent\'s Jaws': '3A8D' // failing towers

  },
  shareWarn: {
    'Seiryu Serpent Descending': '3804',
    // spread markers
    'Seiryu Aka-No-Shiki Red Rush': '3C1D' // tether charge

  },
  shareFail: {
    'Seiryu Infirm Soul': '37FD' // tank buster circular cleave

  },
  soloWarn: {
    'Seiryu Ao-No-Shiki Blue Bolt': '3C1C',
    // tether share
    'Seiryu Forbidden Arts 1': '3C82',
    // line stack share hit 1
    'Seiryu Forbidden Arts 2': '3C72' // line stack share hit 2

  }
};
/* harmony default export */ const seiryu = (seiryu_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/seiryu-ex.ts

// Seiryu Extreme
const seiryu_ex_triggerSet = {
  zoneId: zone_id/* default.TheWreathOfSnakesExtreme */.Z.TheWreathOfSnakesExtreme,
  damageWarn: {
    'SeiryuEx Onmyo Sigil 1': '3A01',
    // centered "get out" circle (phase 1)
    'SeiryuEx Onmyo Sigil 2': '3A03',
    // centered "get out" circle (phase 2 first)
    'SeiryuEx Onmyo Sigil 3': '3A06',
    // centered "get out" circle (phase 2 second)
    'SeiryuEx Serpent-Eye Sigil 1': '3A05',
    // donut (phase 2 first)
    'SeiryuEx Serpent-Eye Sigil 2': '3A04',
    // donut (phase 2 second)
    'SeiryuEx Fortune-Blade Sigil': '37E2',
    // Kuji-Kiri (37E1) lines
    'SeiryuEx Calamity-Blade Sigil': '37E3',
    // Kuji-Kiri (37E1) follow-up lines
    'SeiryuEx Iwa-No-Shiki 100-Tonze Swing': '37ED',
    // centered circles
    'SeiryuEx Ten-No-Shiki Yama-Kagura': '3C21',
    // blue lines during midphase / final phase adds
    'SeiryuEx Numa-No-Shiki Stoneskin': '37F4',
    // failing to silence add
    'SeiryuEx Great Typhoon 1': '37F8',
    // outside ring of water during Coursing River
    'SeiryuEx Great Typhoon 2': '37F9',
    // outside ring of water during Coursing River
    'SeiryuEx Great Typhoon 3': '37FA',
    // outside ring of water during Coursing River
    'SeiryuEx Great Typhoon 4': '37FB',
    // outside ring of water during Coursing River
    'SeiryuEx Yama-No-Shiki Handprint 1': '3707',
    // half arena cleave
    'SeiryuEx Yama-No-Shiki Handprint 2': '3708',
    // half arena cleave
    'SeiryuEx Force Of Nature': '37EA',
    // standing in the middle circle during knockback (380A)
    'SeiryuEx Serpent Descending Circle': '37DE',
    // baited circles with towers
    'SeiryuEx Serpent\'s Jaws': '37E0' // failing towers

  },
  shareWarn: {
    'SeiryuEx Serpent Descending Spread': '37DD',
    // spread markers
    'SeiryuEx Aka-No-Shiki Red Rush': '37F1',
    // tether charge
    'SeiryuEx Iwa-No-Shiki Kanabo': '37EE' // tether which targets a large conal cleave

  },
  shareFail: {
    'SeiryuEx Infirm Soul': '37D4' // tank buster circular cleave

  },
  soloWarn: {
    'SeiryuEx Ao-No-Shiki Blue Bolt': '37F0',
    // tether share
    'SeiryuEx Forbidden Arts 1': '37C7',
    // line stack share hit 1
    'SeiryuEx Forbidden Arts 2': '37C8' // line stack share hit 2

  }
};
/* harmony default export */ const seiryu_ex = (seiryu_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/shinryu.ts



// Shinryu Normal
const shinryu_triggerSet = {
  zoneId: zone_id/* default.TheRoyalMenagerie */.Z.TheRoyalMenagerie,
  damageWarn: {
    'Shinryu Akh Rhai': '1FA6',
    // Sky lasers alongside Akh Morn.
    'Shinryu Blazing Trail': '221A',
    // Rectangle AoEs, intermission adds.
    'Shinryu Collapse': '2218',
    // Circle AoEs, intermission adds
    'Shinryu Dragonfist': '24F0',
    // Giant punchy circle in the center.
    'Shinryu Earth Breath': '1F9D',
    // Conal attacks that aren't actually Earth Shakers.
    'Shinryu Gyre Charge': '1FA8',
    // Green dive bomb attack.
    'Shinryu Spikesicle': '1FA`',
    // Blue-green line attacks from behind.
    'Shinryu Tail Slap': '1F93' // Red squares indicating the tail's landing spots.

  },
  shareWarn: {
    'Shinryu Levinbolt': '1F9C'
  },
  triggers: [{
    // Icy floor attack.
    id: 'Shinryu Diamond Dust',
    type: 'GainsEffect',
    // Thin Ice
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '38F'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Slid off!',
          de: 'Runter gerutscht!',
          fr: 'A glissé(e) !',
          ja: '滑った',
          cn: '滑落',
          ko: '미끄러짐'
        }
      };
    }
  }, {
    id: 'Shinryu Tidal Wave',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '1F8B',
      ...oopsy_common/* playerDamageFields */.np
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Pushed off!',
          de: 'Runter geschubst!',
          fr: 'Repoussé(e) !',
          ja: '落ちた',
          cn: '击退坠落',
          ko: '넉백됨'
        }
      };
    }
  }, {
    // Knockback from center.
    id: 'Shinryu Aerial Blast',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '1F90',
      ...oopsy_common/* playerDamageFields */.np
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Pushed off!',
          de: 'Runter geschubst!',
          fr: 'Repoussé(e) !',
          ja: '落ちた',
          cn: '击退坠落',
          ko: '넉백됨'
        }
      };
    }
  }]
};
/* harmony default export */ const shinryu = (shinryu_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/shinryu-ex.ts


 // TODO: Hellfire (25DB) without Fire Resistance Up (208).
// TODO: Levinbolt (25EB) while having Lightning Resistance Down II (4EC).
// TODO: Hypernova (25E9) while not having Deep Freeze (4E6) or Fire Resistance Up (208).
// TODO: Doom (D2) expiring.

// Shinryu Extreme
const shinryu_ex_triggerSet = {
  zoneId: zone_id/* default.TheMinstrelsBalladShinryusDomain */.Z.TheMinstrelsBalladShinryusDomain,
  damageWarn: {
    'ShinryuEx Burning Chains': '2602',
    // not breaking chains fast enough
    'ShinryuEx Icicle Icicle Impact': '25EF',
    // icicles landing
    'ShinryuEx Icicle Spikesicle': '25F0',
    // icicle dash
    'ShinryuEx Tail Slap': '25E2',
    // tail add appearing
    'ShinryuEx Dragonfist': '2611',
    // giant punchy circle in the center.
    'ShinryuEx Gyre Charge': '2603',
    // phase 1 large dive attack
    'ShinryuEx Ginryu Fireball': '260B',
    // targeted circle during add phase
    'ShinryuEx Hakkinryu Blazing Trail': '2609',
    // wide line during add phase
    'ShinryuEx Tail Spit': '1DD1',
    // blue puck during knockback
    'ShinryuEx Aetherial Ray': '2618',
    // lasers while running along the tail
    'ShinryuEx Levinbolt': '2725',
    // baited lightning during final phase
    'ShinryuEx Wormwail': '2648',
    // donut attack
    'ShinryuEx Benighting Breath': '264A' // 90 degree conal attack

  },
  shareWarn: {
    'ShinryuEx Levinbolt': '25EA',
    // untelegraphed lightning spread
    'ShinryuEx Earth Breath': '25ED' // earthshaker-esque conal attacks

  },
  soloWarn: {
    'ShinryuEx Hypernova': '25E9',
    // stack in puddle damage
    'ShinryuEx Atomic Ray': '264D' // pair stack markers in final phase

  },
  triggers: [{
    // Icy floor attack.
    id: 'ShinryuEx Diamond Dust',
    type: 'GainsEffect',
    // Thin Ice
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '38F'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Slid off!',
          de: 'Runter gerutscht!',
          fr: 'A glissé(e) !',
          ja: '滑った',
          cn: '滑落',
          ko: '미끄러짐'
        }
      };
    }
  }, {
    id: 'ShinryuEx Tidal Wave',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '25DA',
      ...oopsy_common/* playerDamageFields */.np
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Pushed off!',
          de: 'Runter geschubst!',
          fr: 'Repoussé(e) !',
          ja: '落ちた',
          cn: '击退坠落',
          ko: '넉백됨'
        }
      };
    }
  }, {
    // Knockback from center.
    id: 'Shinryu Aerial Blast',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '25DF',
      ...oopsy_common/* playerDamageFields */.np
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Pushed off!',
          de: 'Runter geschubst!',
          fr: 'Repoussé(e) !',
          ja: '落ちた',
          cn: '击退坠落',
          ko: '넉백됨'
        }
      };
    }
  }]
};
/* harmony default export */ const shinryu_ex = (shinryu_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/susano.ts

// Susano Normal
const susano_triggerSet = {
  zoneId: zone_id/* default.ThePoolOfTribute */.Z.ThePoolOfTribute,
  damageWarn: {
    'Susano Rasen Kaikyo': '201E',
    // circles
    'Susano Seasplitter 1': '2028',
    // knockback + skinny line safe zone
    'Susano Seasplitter 2': '2029',
    // knockback + skinny line safe zone
    'Susano Seasplitter 3': '202A',
    // knockback + skinny line safe zone
    'Susano Seasplitter 4': '202B',
    // knockback + skinny line safe zone
    'Susano Dark Cloud The Parting Clouds': '259F' // purple line aoes from clouds

  },
  damageFail: {
    'Susano Ame-No-Murakumo': '218C',
    // standing in the red line after midphase
    'Susano Ama-No-Iwato The Sealed Gate': '2025' // not killing the rock jails in time

  },
  shareWarn: {
    'Susano Dark Levin Shock': '2043',
    // orbs during midphase
    'Susano Stormsplitter': '2023' // tank buster cleave

  },
  soloWarn: {
    'Susano Brightstorm': '2020' // stack marker

  }
};
/* harmony default export */ const susano = (susano_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/susano-ex.ts

// Susano Extreme
const susano_ex_triggerSet = {
  zoneId: zone_id/* default.ThePoolOfTributeExtreme */.Z.ThePoolOfTributeExtreme,
  damageWarn: {
    'SusanoEx Seasplitter 1': '2038',
    // knockback + skinny line safe zone
    'SusanoEx Seasplitter 2': '2039',
    // knockback + skinny line safe zone
    'SusanoEx Seasplitter 3': '203A',
    // knockback + skinny line safe zone
    'SusanoEx Seasplitter 4': '203B',
    // knockback + skinny line safe zone
    'SusanoEx Rasen Kaikyo': '202E',
    // circles
    'SusanoEx Churning': '203F',
    // not stopping
    'SusanoEx Thunderhead The Parting Clouds': '2041' // purple lightning line

  },
  damageFail: {
    'SusanoEx Ame-No-Murakumo': '218C',
    // standing in red line after midphase
    'SusanoEx Ama-No-Iwato The Sealed Gate': '2035' // not killing the rock jails in time

  },
  shareWarn: {
    'SusanoEx Dark Levin Shock': '2044',
    // midphase orb
    'SusanoEx Stormsplitter': '2033' // tank buster lceave

  },
  soloWarn: {
    'SusanoEx Brightstorm': '2030' // stack marker

  }
};
/* harmony default export */ const susano_ex = (susano_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/suzaku.ts



// Suzaku Normal
const suzaku_triggerSet = {
  zoneId: zone_id/* default.HellsKier */.Z.HellsKier,
  damageWarn: {
    'Suzaku Normal Ashes To Ashes': '321F',
    // Scarlet Lady add, raidwide explosion if not killed in time
    'Suzaku Normal Fleeting Summer': '3223',
    // Cone AoE (randomly targeted)
    'Suzaku Normal Wing And A Prayer': '3225',
    // Circle AoEs from unkilled plumes
    'Suzaku Normal Phantom Half': '3233',
    // Giant half-arena AoE follow-up after tank buster
    'Suzaku Normal Well Of Flame': '3236',
    // Large rectangle AoE (randomly targeted)
    'Suzaku Normal Hotspot': '3238',
    // Platform fire when the runes are activated
    'Suzaku Normal Swoop': '323B',
    // Star cross line AoEs
    'Suzaku Normal Burn': '323D' // Tower mechanic failure on Incandescent Interlude (party failure, not personal)

  },
  shareWarn: {
    'Suzaku Normal Rekindle': '3235' // Purple spread circles

  },
  triggers: [{
    id: 'Suzaku Normal Ruthless Refrain',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '3230',
      ...oopsy_common/* playerDamageFields */.np
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Pushed off!',
          de: 'Runter geschubst!',
          fr: 'Repoussé(e) !',
          ja: '落ちた',
          cn: '击退坠落',
          ko: '낙사'
        }
      };
    }
  }]
};
/* harmony default export */ const suzaku = (suzaku_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/suzaku-ex.ts


 // TODO: Rekindle (32E0) hitting multiple adds, any other players,
// or hitting adds before they've been killed once is a mistake.
// However, there is a point where it should hit one add in the
// beginning. This also happens later in the fight too, where it
// should not hit anybody else, but unfortunately also counts as
// hitting multiple people when it hits Suzaku.  So, there's really
// not any good way to write a mistake trigger for this ability.
// TODO: what is getting hit by an orb during Close-Quarter Crescendo?

// Suzaku Extreme
const suzaku_ex_triggerSet = {
  zoneId: zone_id/* default.HellsKierExtreme */.Z.HellsKierExtreme,
  damageWarn: {
    'SuzakuEx Rout': '32F0',
    // untargetable phase 1 charge across the arena
    'SuzakuEx Fleeting Summer': '32D3',
    // targeted conal
    'SuzakuEx Scarlet Tail Feather Wing And A Prayer': '32D4',
    // circle aoe from unkilled plume
    'SuzakuEx Scarlet Plume Wing And A Prayer': '3244',
    // circle aoe from unkilled plume
    'SuzakuEx Ashes To Ashes': '32D0',
    // Scarlet Lady add, raidwide explosion if not killed in time
    'SuzakuEx Well Of Flame': '32E1',
    // targeted wide line aoe
    'SuzakuEx Hotspot': '32E2' // platform fire when the runes are activated

  },
  damageFail: {
    'SuzakuEx Immolate': '32E6',
    // Tower mechanic failure on Incadescent Interlude (party failure, not personal)
    'SuzakuEx Phantom Flurry': '32DE' // "phantom half" final hit of Phantom Flurry

  },
  soloWarn: {
    'SuzakuEx Scathing Net': '3243' // stack marker

  },
  triggers: [{
    id: 'SuzakuEx Ruthless Refrain',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '32DB',
      ...oopsy_common/* playerDamageFields */.np
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'Renversé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }, {
    id: 'SuzakuEx Mesmerizing Melody',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '32DA',
      ...oopsy_common/* playerDamageFields */.np
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'Renversé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const suzaku_ex = (suzaku_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/tsukuyomi.ts


// Tsukuyomi Normal
const tsukuyomi_triggerSet = {
  zoneId: zone_id/* default.CastrumFluminis */.Z.CastrumFluminis,
  damageWarn: {
    'Tsukuyomi Steel Of The Underworld': '2BE7',
    // large targeted telegraph cleave during fans
    'Tsukuyomi Midnight Haze To Ashes': '2BEA',
    // not killing clouds in time
    'Tsukuyomi Dancing Fan Tsuki-No-Maiogi': '2BED',
    // fan circle aoe
    'Tsukuyomi Moonlight Lunar Halo': '2BE4',
    // donut from orbs during selenomancy
    'Tsukuyomi Dark Blade': '2BF9',
    // right-side cleave
    'Tsukuyomi Bright Blade': '2BFA' // left side cleave

  },
  shareFail: {
    'Tsukuyomi Torment Unto Death': '2BE3' // tank buster conal cleave

  },
  soloWarn: {
    'Tsukuyomi Lead Of The Underworld': '2BE6',
    // line stack marker
    'Tsukuyomi Lunacy 1': '2BFB',
    // 3-4x stack marker
    'Tsukuyomi Lunacy 2': '2BFC' // 3-4x stack marker

  },
  triggers: [{
    id: 'Tsukuyomi Moonlit',
    type: 'GainsEffect',
    // Five stacks of Moonlit or Moonshadowed is instant death.
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '602',
      count: '05'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        name: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }, {
    id: 'Tsukuyomi Moonshadowed',
    type: 'GainsEffect',
    // Five stacks of Moonlit or Moonshadowed is instant death.
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '603',
      count: '05'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        name: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }]
};
/* harmony default export */ const tsukuyomi = (tsukuyomi_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/tsukuyomi-ex.ts


// Tsukuyomi Extreme
const tsukuyomi_ex_triggerSet = {
  zoneId: zone_id/* default.TheMinstrelsBalladTsukuyomisPain */.Z.TheMinstrelsBalladTsukuyomisPain,
  damageWarn: {
    'TsukuyomiEx Moonlight Lunar Halo': '2BD6',
    // donut from orbs in final phase
    'TsukuyomiEx Moonfall': '2BD1',
    // meteor drop big circles
    'TsukuyomiEx Moondust Crater': '2CD7',
    // meteor explosions later
    'TsukuyomiEx Dancing Fan Tsukui-No-Maiogi': '2BC6',
    // fan circle aoe
    'TsukuyomiEx Waxing Grudge': '2BDE',
    // melee range circle from Full Moon buff
    'TsukuyomiEx Waning Grudge': '2BDF',
    // donut from New Moon Buff
    'TsukuyomiEx Dark Blade': '2BDA',
    // right-side cleave
    'TsukuyomiEx Bright Blade': '2BDB' // left side cleave

  },
  shareFail: {
    'TsukuyomiEx Torment Unto Death': '2BBB' // tank buster conal cleave

  },
  soloWarn: {
    'TsukuyomiEx Lead Of The Underworld': '2BBE',
    // "Beg for Mercy!" stack
    'TsukuyomiEx Lunacy': '2BDD' // 4x stack marker

  },
  triggers: [{
    id: 'TsukuyomiEx Moonlit',
    type: 'GainsEffect',
    // Five stacks of Moonlit or Moonshadowed is instant death.
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '602',
      count: '05'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        name: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }, {
    id: 'TsukuyomiEx Moonshadowed',
    type: 'GainsEffect',
    // Five stacks of Moonlit or Moonshadowed is instant death.
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '603',
      count: '05'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        name: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }]
};
/* harmony default export */ const tsukuyomi_ex = (tsukuyomi_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/trial/yojimbo.ts

const yojimbo_triggerSet = {
  zoneId: zone_id/* default.KuganeOhashi */.Z.KuganeOhashi,
  damageWarn: {
    'Yojimbo Fragility': '382A',
    // circle aoes from butterflies after Inoshikacho
    'Yojimbo Yukikaze': '3832',
    // icy-looking waffle lines
    'Yojimbo Kasha': '3834',
    // donut that follows Gekko orb markers
    'Yojimbo Tiny Song': '3835',
    // dorito stack
    'Yojimbo Electrogenetic Force': '3840',
    // purple orb explosions
    'Yojimbo Masamune': '3843',
    // very long targeted line
    'Yojimbo Epic Stormsplitter': '3845',
    // single line down the middle
    'Yojimbo Seasplitter 1': '3846',
    // follow-up "get middle" to Epic Stormsplitter
    'Yojimbo Seasplitter 2': '3847',
    // follow-up "get middle" to Epic Stormsplitter
    'Yojimbo Seasplitter 3': '3848',
    // follow-up "get middle" to Epic Stormsplitter
    'Yojimbo Seasplitter 4': '3849',
    // follow-up "get middle" to Epic Stormsplitter
    'Yojimbo Dragon\'s Head Mighty Blow': '3839' // running into Dragon's Head untargetable add

  },
  damageFail: {
    'Yojimbo Hell\'s Gate': '3842' // failing to break Iron Chains

  },
  shareWarn: {
    'Yojimbo The Bitter End': '31DE' // frontal tank cleave, no cast bar

  }
};
/* harmony default export */ const yojimbo = (yojimbo_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/ultimate/ultima_weapon_ultimate.ts



// Ultima Weapon Ultimate
const ultima_weapon_ultimate_triggerSet = {
  zoneId: zone_id/* default.TheWeaponsRefrainUltimate */.Z.TheWeaponsRefrainUltimate,
  damageWarn: {
    'UWU Eye of the Storm': '2B52',
    // donut on the final
    'UWU Searing Wind': '2B5C',
    // healer explosions
    'UWU Eruption': '2B5A',
    // red baited ifrit circles
    'UWU Crimson Cyclone 1': '2B5F',
    // ifrit charge
    'UWU Crimson Cyclone 2': '2B60',
    // ifrit charge
    'UWU Radiant Plume': '2B61',
    // ifrit plumes
    'UWU Weight of the Land': '2B65',
    // titan puddles
    'UWU Bomb Boulder Bury': '2B69',
    // titan bombs dropping
    'UWU Bomb Boulder Freefire': '2B6E',
    // titan bombs awakening
    'UWU Bomb Boulder Burst': '2B6A' // titan bombs exploding

  },
  damageFail: {
    'UWU Great Whirlwind': '2B41',
    // large circle from blocking mistral song
    'UWU Slipstream': '2B53',
    // untelegraphed dodgeable frontal conal
    'UWU Wicked Wheel': '2B4E',
    // wicked wheel centered circle
    'UWU Wicked Tornado': '2B4F',
    // awoken wicked wheel donut
    'UWU Landslide 1': '2B70',
    // landslide
    'UWU Landslide 2': '2B6F',
    // landslide
    'UWU Landslide 3': '2B71',
    // landslide
    'UWU Landslide 4': '2C22',
    // landslide
    'UWU Landslide 5': '2B7F',
    // landslide from ultima
    'UWU Aetherochemical Laser 1': '2B84',
    // suppression yellow line laser from ultima
    'UWU Aetherochemical Laser 2': '2B85',
    // suppression yellow line laser from ultima
    'UWU Aetherochemical Laser 3': '2B86' // suppression yellow line laser from ultima

  },
  shareWarn: {
    'UWU Mesohigh': '2B49' // tether to garuda sister

  },
  shareFail: {
    'UWU Downburst': '2B50',
    // unawoken garuda tankbuster
    'UWU Incinerate': '2B56',
    // ifrit tankbuster
    'UWU Rock Buster': '2B62',
    // titan tankbuster 1
    'UWU Mountain Buster': '2B63',
    // titan tankbuster 2
    'UWU Viscous Aetheroplasm': '2B76',
    // tank debuff tankbuster
    'UWU Homing Laser': '2B7B',
    // second hate tankbuster
    'UWU Diffractive Laser': '2B78' // tank cleave

  },
  soloWarn: {
    'UWU Flaming Crush': '25BD' // ifrit stack marker

  },
  triggers: [{
    id: 'UWU Windburn',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: 'EB'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }, {
    // Featherlance explosion.  It seems like the person who pops it is the
    // first person listed damage-wise, so they are likely the culprit.
    id: 'UWU Featherlance',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '2B43',
      ...oopsy_common/* playerDamageFields */.np
    }),
    suppressSeconds: 5,
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.source
      };
    }
  }]
};
/* harmony default export */ const ultima_weapon_ultimate = (ultima_weapon_ultimate_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/04-sb/ultimate/unending_coil_ultimate.ts



// UCU - The Unending Coil Of Bahamut (Ultimate)
const unending_coil_ultimate_triggerSet = {
  zoneId: zone_id/* default.TheUnendingCoilOfBahamutUltimate */.Z.TheUnendingCoilOfBahamutUltimate,
  damageFail: {
    'UCU Lunar Dynamo': '26BC',
    'UCU Iron Chariot': '26BB',
    'UCU Exaflare': '26EF',
    'UCU Wings Of Salvation': '26CA'
  },
  triggers: [{
    id: 'UCU Twister Death',
    type: 'Ability',
    // Instant death has a special flag value, differentiating
    // from the explosion damage you take when somebody else
    // pops one.
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '26AB',
      ...oopsy_common/* playerDamageFields */.np,
      flags: oopsy_common/* kFlagInstantDeath */.hm
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: 'Twister Pop',
          de: 'Wirbelsturm berührt',
          fr: 'Apparition des tornades',
          ja: 'ツイスター',
          cn: '旋风',
          ko: '회오리 밟음'
        }
      };
    }
  }, {
    id: 'UCU Thermionic Burst',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '26B9',
      ...oopsy_common/* playerDamageFields */.np
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: 'Pizza Slice',
          de: 'Pizzastück',
          fr: 'Part de pizza',
          ja: 'サーミオニックバースト',
          cn: '天崩地裂',
          ko: '장판에 맞음'
        }
      };
    }
  }, {
    id: 'UCU Chain Lightning',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '26C8',
      ...oopsy_common/* playerDamageFields */.np
    }),
    mistake: (_data, matches) => {
      // It's hard to assign blame for lightning.  The debuffs
      // go out and then explode in order, but the attacker is
      // the dragon and not the player.
      return {
        type: 'warn',
        name: matches.target,
        text: {
          en: 'hit by lightning',
          de: 'vom Blitz getroffen',
          fr: 'frappé(e) par la foudre',
          ja: 'チェインライトニング',
          cn: '雷光链',
          ko: '번개 맞음'
        }
      };
    }
  }, {
    id: 'UCU Burns',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: 'FA'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        text: matches.effect
      };
    }
  }, {
    id: 'UCU Sludge',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '11F'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        text: matches.effect
      };
    }
  }, {
    id: 'UCU Doom Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: 'D2'
    }),
    run: (data, matches) => {
      var _data$hasDoom;

      (_data$hasDoom = data.hasDoom) !== null && _data$hasDoom !== void 0 ? _data$hasDoom : data.hasDoom = {};
      data.hasDoom[matches.target] = true;
    }
  }, {
    id: 'UCU Doom Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: 'D2'
    }),
    run: (data, matches) => {
      var _data$hasDoom2;

      (_data$hasDoom2 = data.hasDoom) !== null && _data$hasDoom2 !== void 0 ? _data$hasDoom2 : data.hasDoom = {};
      data.hasDoom[matches.target] = false;
    }
  }, {
    // There is no callout for "you forgot to clear doom".  The logs look
    // something like this:
    //   [20:02:30.564] 1A:Okonomi Yaki gains the effect of Doom from  for 6.00 Seconds.
    //   [20:02:36.443] 1E:Okonomi Yaki loses the effect of Protect from Tako Yaki.
    //   [20:02:36.443] 1E:Okonomi Yaki loses the effect of Doom from .
    //   [20:02:38.525] 19:Okonomi Yaki was defeated by Firehorn.
    // In other words, doom effect is removed +/- network latency, but can't
    // tell until later that it was a death.  Arguably, this could have been a
    // close-but-successful clearing of doom as well.  It looks the same.
    // Strategy: if you haven't cleared doom with 1 second to go then you probably
    // died to doom.  You can get non-fatally iceballed or auto'd in between,
    // but what can you do.
    id: 'UCU Doom Death',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: 'D2'
    }),
    delaySeconds: (_data, matches) => parseFloat(matches.duration) - 1,
    deathReason: (data, matches) => {
      if (!data.hasDoom || !data.hasDoom[matches.target]) return;
      let text;
      const duration = parseFloat(matches.duration);
      if (duration < 9) text = matches.effect + ' #1';else if (duration < 14) text = matches.effect + ' #2';else text = matches.effect + ' #3';
      return {
        id: matches.targetId,
        name: matches.target,
        text: text
      };
    }
  }]
};
/* harmony default export */ const unending_coil_ultimate = (unending_coil_ultimate_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/alliance/the_copied_factory.ts

// The Copied Factory
const the_copied_factory_triggerSet = {
  zoneId: zone_id/* default.TheCopiedFactory */.Z.TheCopiedFactory,
  damageWarn: {
    'Copied Serial Energy Bomb': '48B4',
    // Make sure enemies are ignored on these
    'Copied Serial Energy Bombardment': '48B8',
    'Copied Serial Energy Assault': '48B6',
    'Copied Serial High-Powered Laser': '48C5',
    'Copied Serial Sidestriking Spin Spin 1': '48CB',
    'Copied Serial Sidestriking Spin 2': '48CC',
    'Copied Serial Centrifugal Spin': '48C9',
    'Copied Serial Air-To-Surface Energy': '48BA',
    'Copied Serial High-Caliber Laser': '48FA',
    'Copied Serial Energy Ring 1': '48BC',
    'Copied Serial Energy Ring 2': '48BD',
    'Copied Serial Energy Ring 3': '48BE',
    'Copied Serial Energy Ring 4': '48C0',
    'Copied Serial Energy Ring 5': '48C1',
    'Copied Serial Energy Ring 6': '48C2',
    'Copied Trash Energy Bomb': '491D',
    'Copied Trash Frontal Somersault': '491B',
    'Copied Trash High-Frequency Laser': '491E',
    'Copied Hobbes Shocking Discharge': '480B',
    'Copied Hobbes Variable Combat Test 1': '49C5',
    'Copied Hobbes Variable Combat Test 2': '49C6',
    'Copied Hobbes Variable Combat Test 3': '49C7',
    'Copied Hobbes Variable Combat Test 4': '480F',
    'Copied Hobbes Variable Combat Test 5': '4810',
    'Copied Hobbes Variable Combat Test 6': '4811',
    'Copied Hobbes Ring Laser 1': '4802',
    'Copied Hobbes Ring Laser 2': '4803',
    'Copied Hobbes Ring Laser 3': '4804',
    'Copied Hobbes Towerfall': '4813',
    'Copied Hobbes Fire-Reistance Test 1': '4816',
    'Copied Hobbes Fire-Reistance Test 2': '4817',
    'Copied Hobbes Fire-Reistance Test 3': '4818',
    'Copied Hobbes Oil Well': '481B',
    'Copied Hobbes Electromagnetic Pulse': '4819',
    // TODO: what's the electrified floor with conveyor belts?
    'Copied Goliath Energy Ring 1': '4937',
    'Copied Goliath Energy Ring 2': '4938',
    'Copied Goliath Energy Ring 3': '4939',
    'Copied Goliath Energy Ring 4': '493A',
    'Copied Goliath Energy Ring 5': '4937',
    'Copied Goliath Laser Turret': '48E6',
    'Copied Flight Unit Area Bombing': '4943',
    'Copied Flight Unit Lightfast Blade': '4940',
    'Copied Engels Marx Smash 1': '4729',
    'Copied Engels Marx Smash 2': '4728',
    'Copied Engels Marx Smash 3': '472F',
    'Copied Engels Marx Smash 4': '4731',
    'Copied Engels Marx Smash 5': '472B',
    'Copied Engels Marx Smash 6': '472D',
    'Copied Engels Marx Smash 7': '4732',
    'Copied Engels Incendiary Bombing': '4739',
    'Copied Engels Guided Missile': '4736',
    'Copied Engels Surface Missile': '4734',
    'Copied Engels Laser Sight': '473B',
    'Copied Engels Frack': '474D',
    'Copied Engels Marx Crush': '48FC',
    'Copied Engels Crushing Wheel': '474B',
    'Copied Engels Marx Thrust': '48FC',
    'Copied 9S Laser Suppression': '48E0',
    // Cannons
    'Copied 9S Ballistic Impact 1': '4974',
    'Copied 9S Ballistic Impact 2': '48DC',
    'Copied 9S Ballistic Impact 3': '48E4',
    'Copied 9S Ballistic Impact 4': '48E0',
    'Copied 9S Marx Impact': '48D4',
    'Copied 9S Tank Destruction 1': '48E8',
    'Copied 9S Tank Destruction 2': '48E9',
    'Copied 9S Serial Spin 1': '48A5',
    'Copied 9S Serial Spin 2': '48A7'
  },
  shareWarn: {
    'Copied Hobbes Short-Range Missile': '4815'
  }
};
/* harmony default export */ const the_copied_factory = (the_copied_factory_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/alliance/the_puppets_bunker.ts

// TODO: 5093 taking High-Powered Laser with a vuln (because of taking two)
// TODO: 4FB5 taking High-Powered Laser with a vuln (because of taking two)
// TODO: 50D3 Aerial Support: Bombardment going off from add
// TODO: 5211 Maneuver: Volt Array not getting interrupted
// TODO: 4FF4/4FF5 One of these is failing chemical conflagration
// TODO: standing in wrong teleporter?? maybe 5363?
const the_puppets_bunker_triggerSet = {
  zoneId: zone_id/* default.ThePuppetsBunker */.Z.ThePuppetsBunker,
  damageWarn: {
    'Puppet Aegis Beam Cannons 1': '5074',
    // rotating separating white ground aoe
    'Puppet Aegis Beam Cannons 2': '5075',
    // rotating separating white ground aoe
    'Puppet Aegis Beam Cannons 3': '5076',
    // rotating separating white ground aoe
    'Puppet Aegis Collider Cannons': '507E',
    // rotating red ground aoe pinwheel
    'Puppet Aegis Surface Laser 1': '5091',
    // chasing laser initial
    'Puppet Aegis Surface Laser 2': '5092',
    // chasing laser chasing
    'Puppet Aegis Flight Path': '508C',
    // blue line aoe from flying untargetable adds
    'Puppet Aegis Refraction Cannons 1': '5081',
    // refraction cannons between wings
    'Puppet Aegis Life\'s Last Song': '53B3',
    // ring aoe with gap
    'Puppet Light Long-Barreled Laser': '5212',
    // line aoe from add
    'Puppet Light Surface Missile Impact': '520F',
    // untargeted ground aoe from No Restrictions
    'Puppet Superior Incendiary Bombing': '4FB9',
    // fire puddle initial
    'Puppet Superior Sharp Turn': '506D',
    // sharp turn dash
    'Puppet Superior Standard Surface Missile 1': '4FB1',
    // Lethal Revolution circles
    'Puppet Superior Standard Surface Missile 2': '4FB2',
    // Lethal Revolution circles
    'Puppet Superior Standard Surface Missile 3': '4FB3',
    // Lethal Revolution circles
    'Puppet Superior Sliding Swipe 1': '506F',
    // right-handed sliding swipe
    'Puppet Superior Sliding Swipe 2': '5070',
    // left-handed sliding swipe
    'Puppet Superior Guided Missile': '4FB8',
    // ground aoe during Area Bombardment
    'Puppet Superior High-Order Explosive Blast 1': '4FC0',
    // star aoe
    'Puppet Superior High-Order Explosive Blast 2': '4FC1',
    // star aoe
    'Puppet Heavy Energy Bombardment': '4FFC',
    // colored magic hammer-y ground aoe
    'Puppet Heavy Revolving Laser': '5000',
    // get under laser
    'Puppet Heavy Energy Bomb': '4FFA',
    // getting hit by ball during Active Suppressive Unit
    'Puppet Heavy R010 Laser': '4FF0',
    // laser pod
    'Puppet Heavy R030 Hammer': '4FF1',
    // circle aoe pod
    'Puppet Hallway High-Powered Laser': '50B1',
    // long aoe in the hallway section
    'Puppet Hallway Energy Bomb': '50B2',
    // running into a floating orb
    'Puppet Compound Mechanical Dissection': '51B3',
    // spinning vertical laser
    'Puppet Compound Mechanical Decapitation': '51B4',
    // get under laser
    'Puppet Compound Mechnical Contusion Untargeted': '51B7',
    // untargeted ground aoe
    'Puppet Compound 2P Relentless Spiral 1': '51AA',
    // triple untargeted ground aoes
    'Puppet Compound 2P Relentless Spiral 2': '51CB',
    // triple untargeted ground aoes
    'Puppet Compound 2P Prime Blade Out 1': '541F',
    // 2P prime blade get out
    'Puppet Compound 2P Prime Blade Out 2': '5198',
    // 2P/puppet teleporting/reproduce prime blade get out
    'Puppet Compound 2P Prime Blade Behind 1': '5420',
    // 2P prime blade get behind
    'Puppet Compound 2P Prime Blade Behind 2': '5199',
    // 2P teleporting prime blade get behind
    'Puppet Compound 2P Prime Blade In 1': '5421',
    // 2P prime blade get in
    'Puppet Compound 2P Prime Blade In 2': '519A',
    // 2P/puppet teleporting/reproduce prime blade get in
    'Puppet Compound 2P R012 Laser Ground': '51AE' // untargeted ground circle
    // This is... too noisy.
    // 'Puppet Compound 2P Four Parts Resolve 1': '51A0', // four parts resolve jump
    // 'Puppet Compound 2P Four Parts Resolve 2': '519F', // four parts resolve cleave

  },
  damageFail: {
    'Puppet Heavy Upper Laser 1': '5087',
    // upper laser initial
    'Puppet Heavy Upper Laser 2': '4FF7',
    // upper laser continuous
    'Puppet Heavy Lower Laser 1': '5086',
    // lower laser first section initial
    'Puppet Heavy Lower Laser 2': '4FF6',
    // lower laser first section continuous
    'Puppet Heavy Lower Laser 3': '5088',
    // lower laser second section initial
    'Puppet Heavy Lower Laser 4': '4FF8',
    // lower laser second section continuous
    'Puppet Heavy Lower Laser 5': '5089',
    // lower laser third section initial
    'Puppet Heavy Lower Laser 6': '4FF9',
    // lower laser third section continuous
    'Puppet Compound Incongruous Spin': '51B2' // find the safe spot double dash

  },
  gainsEffectWarn: {
    'Puppet Burns': '10B' // standing in many various fire aoes

  },
  shareWarn: {
    // This is pretty large and getting hit by initial without burns seems fine.
    // 'Puppet Light Homing Missile Impact': '5210', // targeted fire aoe from No Restrictions
    'Puppet Heavy Unconventional Voltage': '5004',
    // Pretty noisy.
    'Puppet Maneuver High-Powered Laser': '5002',
    // tank laser
    'Puppet Compound Mechnical Contusion Targeted': '51B6',
    // targeted spread marker
    'Puppet Compound 2P R012 Laser Tank': '51AE' // targeted spread pod laser on non-tank

  },
  shareFail: {
    'Puppet Aegis Anti-Personnel Laser': '5090',
    // tank buster marker
    'Puppet Superior Precision-Guided Missile': '4FC5',
    'Puppet Compound 2P R012 Laser Tank': '51AD' // targeted pod laser on tank

  }
};
/* harmony default export */ const the_puppets_bunker = (the_puppets_bunker_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/alliance/the_tower_at_paradigms_breach.ts


// TODO: missing Shock Black 2?
// TODO: White/Black Dissonance damage is maybe when flags end in 03?
const the_tower_at_paradigms_breach_triggerSet = {
  zoneId: zone_id/* default.TheTowerAtParadigmsBreach */.Z.TheTowerAtParadigmsBreach,
  damageWarn: {
    'Tower Knave Colossal Impact Center 1': '5EA7',
    // Center aoe from Knave and clones
    'Tower Knave Colossal Impact Center 2': '60C8',
    // Center aoe from Knave during lunge
    'Tower Knave Colossal Impact Side 1': '5EA5',
    // Side aoes from Knave and clones
    'Tower Knave Colossal Impact Side 2': '5EA6',
    // Side aoes from Knave and clones
    'Tower Knave Colossal Impact Side 3': '60C6',
    // Side aoes from Knave during lunge
    'Tower Knave Colossal Impact Side 4': '60C7',
    // Side aoes from Knave during lunge
    'Tower Knave Burst': '5ED4',
    // Spheroid Knavish Bullets collision
    'Tower Knave Magic Barrage': '5EAC',
    // Spheroid line aoes
    'Tower Hansel Repay': '5C70',
    // Shield damage
    'Tower Hansel Explosion': '5C67',
    // Being hit by Magic Bullet during Passing Lance
    'Tower Hansel Impact': '5C5C',
    // Being hit by Magical Confluence during Wandering Trail
    'Tower Hansel Bloody Sweep 1': '5C6C',
    // Dual cleaves without tether
    'Tower Hansel Bloody Sweep 2': '5C6D',
    // Dual cleaves without tether
    'Tower Hansel Bloody Sweep 3': '5C6E',
    // Dual cleaves with tether
    'Tower Hansel Bloody Sweep 4': '5C6F',
    // Dual cleaves with tether
    'Tower Hansel Passing Lance': '5C66',
    // The Passing Lance charge itself
    'Tower Hansel Breaththrough 1': '55B3',
    // half room cleave during Wandering Trail
    'Tower Hansel Breaththrough 2': '5C5D',
    // half room cleave during Wandering Trail
    'Tower Hansel Breaththrough 3': '5C5E',
    // half room cleave during Wandering Trail
    'Tower Hansel Hungry Lance 1': '5C71',
    // 2xlarge conal cleave during Wandering Trail
    'Tower Hansel Hungry Lance 2': '5C72',
    // 2xlarge conal cleave during Wandering Trail
    'Tower Flight Unit Lightfast Blade': '5BFE',
    // large room cleave
    'Tower Flight Unit Standard Laser': '5BFF',
    // tracking laser
    'Tower 2P Whirling Assault': '5BFB',
    // line aoe from 2P clones
    'Tower 2P Balanced Edge': '5BFA',
    // circular aoe on 2P clones
    'Tower Red Girl Generate Barrier 1': '6006',
    // being hit by barriers appearing
    'Tower Red Girl Generate Barrier 2': '6007',
    // being hit by barriers appearing
    'Tower Red Girl Generate Barrier 3': '6008',
    // being hit by barriers appearing
    'Tower Red Girl Generate Barrier 4': '6009',
    // being hit by barriers appearing
    'Tower Red Girl Generate Barrier 5': '6310',
    // being hit by barriers appearing
    'Tower Red Girl Generate Barrier 6': '6311',
    // being hit by barriers appearing
    'Tower Red Girl Generate Barrier 7': '6312',
    // being hit by barriers appearing
    'Tower Red Girl Generate Barrier 8': '6313',
    // being hit by barriers appearing
    'Tower Red Girl Shock White 1': '600F',
    // white shockwave circle not dropped on black
    'Tower Red Girl Shock White 2': '6010',
    // white shockwave circle not dropped on black
    'Tower Red Girl Shock Black 1': '6011',
    // black shockwave circle not dropped on white
    'Tower Red Girl Point White 1': '601F',
    // being hit by a white laser
    'Tower Red Girl Point White 2': '6021',
    // being hit by a white laser
    'Tower Red Girl Point Black 1': '6020',
    // being hit by a black laser
    'Tower Red Girl Point Black 2': '6022',
    // being hit by a black laser
    'Tower Red Girl Wipe White': '600C',
    // not line of sighting the white meteor
    'Tower Red Girl Wipe Black': '600D',
    // not line of sighting the black meteor
    'Tower Red Girl Diffuse Energy': '6056',
    // rotating clone bubble cleaves
    'Tower Red Girl Pylon Big Explosion': '6027',
    // not killing a pylon during hacking phase
    'Tower Red Girl Pylon Explosion': '6026',
    // pylon during Child's play
    'Tower Philosopher Deploy Armaments Middle': '5C02',
    // middle laser
    'Tower Philosopher Deploy Armaments Sides': '5C05',
    // sides laser
    'Tower Philosopher Deploy Armaments 3': '6078',
    // goes with 5C01
    'Tower Philosopher Deploy Armaments 4': '6079',
    // goes with 5C04
    'Tower Philosopher Energy Bomb': '5C05',
    // pink bubble
    'Tower False Idol Made Magic Right': '5BD7',
    // rotating wheel going right
    'Tower False Idol Made Magic Left': '5BD6',
    // rotating wheel going left
    'Tower False Idol Lighter Note': '5BDA',
    // lighter note moving aoes
    'Tower False Idol Magical Interference': '5BD5',
    // lasers during Rhythm Rings
    'Tower False Idol Scattered Magic': '5BDF',
    // circle aoes from Seed Of Magic
    'Tower Her Inflorescence Uneven Fotting': '5BE2',
    // building from Recreate Structure
    'Tower Her Inflorescence Crash': '5BE5',
    // trains from Mixed Signals
    'Tower Her Inflorescence Heavy Arms 1': '5BED',
    // heavy arms front/back attack
    'Tower Her Inflorescence Heavy Arms 2': '5BEF',
    // heavy arms sides attack
    'Tower Her Inflorescence Energy Scattered Magic': '5BE8' // orbs from Red Girl by train

  },
  damageFail: {
    'Tower Her Inflorescence Place Of Power': '5C0D' // instadeath middle circle before black/white rings

  },
  shareWarn: {
    'Tower Knave Magic Artillery Alpha': '5EAB',
    // Spread
    'Tower Hansel Seed Of Magic Alpha': '5C61' // Spread

  },
  shareFail: {
    'Tower Knave Magic Artillery Beta': '5EB3',
    // Tankbuster
    'Tower Red Girl Manipulate Energy': '601A',
    // Tankbuster
    'Tower False Idol Darker Note': '5BDC' // Tankbuster

  },
  triggers: [{
    id: 'Tower Knocked Off',
    type: 'Ability',
    // 5EB1 = Knave Lunge
    // 5BF2 = Her Infloresence Shockwave
    netRegex: netregexes/* default.ability */.Z.ability({
      id: ['5EB1', '5BF2']
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'Renversé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const the_tower_at_paradigms_breach = (the_tower_at_paradigms_breach_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/dungeon/akadaemia_anyder.ts

const akadaemia_anyder_triggerSet = {
  zoneId: zone_id/* default.AkadaemiaAnyder */.Z.AkadaemiaAnyder,
  damageWarn: {
    'Anyder Acrid Stream': '4304',
    'Anyder Waterspout': '4306',
    'Anyder Raging Waters': '4302',
    'Anyder Violent Breach': '4305',
    'Anyder Tidal Guillotine 1': '3E08',
    'Anyder Tidal Guillotine 2': '3E0A',
    'Anyder Pelagic Cleaver 1': '3E09',
    'Anyder Pelagic Cleaver 2': '3E0B',
    'Anyder Aquatic Lance': '3E05',
    'Anyder Syrup Spout': '4308',
    'Anyder Needle Storm': '4309',
    'Anyder Extensible Tendrils 1': '3E10',
    'Anyder Extensible Tendrils 2': '3E11',
    'Anyder Putrid Breath': '3E12',
    'Anyder Detonator': '430F',
    'Anyder Dominion Slash': '430D',
    'Anyder Quasar': '430B',
    'Anyder Dark Arrivisme': '430E',
    'Anyder Thunderstorm': '3E1C',
    'Anyder Winding Current': '3E1F' // 3E20 is being hit by the growing orbs, maybe?

  }
};
/* harmony default export */ const akadaemia_anyder = (akadaemia_anyder_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/dungeon/amaurot.ts

const amaurot_triggerSet = {
  zoneId: zone_id/* default.Amaurot */.Z.Amaurot,
  damageWarn: {
    'Amaurot Burning Sky': '354A',
    'Amaurot Whack': '353C',
    'Amaurot Aetherspike': '353B',
    'Amaurot Venemous Breath': '3CCE',
    'Amaurot Cosmic Shrapnel': '4D26',
    'Amaurot Earthquake': '3CCD',
    'Amaurot Meteor Rain': '3CC6',
    'Amaurot Final Sky': '3CCB',
    'Amaurot Malevolence': '3541',
    'Amaurot Turnabout': '3542',
    'Amaurot Sickly Inferno': '3DE3',
    'Amaurot Disquieting Gleam': '3546',
    'Amaurot Black Death': '3543',
    'Amaurot Force of Loathing': '3544',
    'Amaurot Damning Ray 1': '3E00',
    'Amaurot Damning Ray 2': '3E01',
    'Amaurot Deadly Tentacles': '3547',
    'Amaurot Misfortune': '3CE2'
  },
  damageFail: {
    'Amaurot Apokalypsis': '3CD7'
  }
};
/* harmony default export */ const amaurot = (amaurot_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/dungeon/anamnesis_anyder.ts

const anamnesis_anyder_triggerSet = {
  zoneId: zone_id/* default.AnamnesisAnyder */.Z.AnamnesisAnyder,
  damageWarn: {
    'Anamnesis Trench Phuabo Spine Lash': '4D1A',
    // frontal conal
    'Anamnesis Trench Anemone Falling Rock': '4E37',
    // ground circle aoe from Trench Anemone showing up
    'Anamnesis Trench Dagonite Sewer Water': '4D1C',
    // frontal conal from Trench Anemone (?!)
    'Anamnesis Trench Yovra Rock Hard': '4D21',
    // targeted circle aoe
    'Anamnesis Trench Yovra Torrential Torment': '4D21',
    // frontal conal
    'Anamnesis Unknown Luminous Ray': '4E27',
    // Unknown line aoe
    'Anamnesis Unknown Sinster Bubble Explosion': '4B6E',
    // Unknown explosions during Scrutiny
    'Anamnesis Unknown Reflection': '4B6F',
    // Unknown conal attack during Scrutiny
    'Anamnesis Unknown Clearout 1': '4B74',
    // Unknown frontal cone
    'Anamnesis Unknown Clearout 2': '4B6B',
    // Unknown frontal cone
    'Anamnesis Unknown Setback 1': '4B75',
    // Unknown rear cone
    'Anamnesis Unknown Setback 2': '5B6C',
    // Unknown rear cone
    'Anamnesis Anyder Clionid Acrid Stream': '4D24',
    // targeted circle aoe
    'Anamnesis Anyder Diviner Dreadstorm': '4D28',
    // ground circle aoe
    'Anamnesis Kyklops 2000-Mina Swing': '4B55',
    // Kyklops get out mechanic
    'Anamnesis Kyklops Terrible Hammer': '4B5D',
    // Kyklops Hammer/Blade alternating squares
    'Anamnesis Kyklops Terrible Blade': '4B5E',
    // Kyklops Hammer/Blade alternating squares
    'Anamnesis Kyklops Raging Glower': '4B56',
    // Kyklops line aoe
    'Anamnesis Kyklops Eye Of The Cyclone': '4B57',
    // Kyklops donut
    'Anamnesis Anyder Harpooner Hydroball': '4D26',
    // frontal conal
    'Anamnesis Rukshs Swift Shift': '4B83',
    // Rukshs Deem teleport N/S
    'Anamnesis Rukshs Depth Grip Wavebreaker': '33D4',
    // Rukshs Deem hand attacks
    'Anamnesis Rukshs Rising Tide': '4B8B',
    // Rukshs Deem cross aoe
    'Anamnesis Rukshs Command Current': '4B82' // Rukshs Deem protean-ish ground aoes

  },
  shareWarn: {
    'Anamnesis Trench Xzomit Mantle Drill': '4D19',
    // charge attack
    'Anamnesis Io Ousia Barreling Smash': '4E24',
    // charge attack
    'Anamnesis Kyklops Wanderer\'s Pyre': '4B5F' // Kyklops spread attack

  }
};
/* harmony default export */ const anamnesis_anyder = (anamnesis_anyder_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/dungeon/dohn_mheg.ts


// TODO: Missing Growing tethers on boss 2.
// (Maybe gather party member names on the previous TIIIIMBEEEEEER cast for comparison?)
// TODO: Failing to interrupt Dohnfaust Fuath on Watering Wheel casts?
// (15:........:Dohnfast Fuath:3DAA:Watering Wheel:........:(\y{Name}):)
const dohn_mheg_triggerSet = {
  zoneId: zone_id/* default.DohnMheg */.Z.DohnMheg,
  damageWarn: {
    'Dohn Mheg Geyser': '2260',
    // Water eruptions, boss 1
    'Dohn Mheg Hydrofall': '22BD',
    // Ground AoE marker, boss 1
    'Dohn Mheg Laughing Leap': '2294',
    // Ground AoE marker, boss 1
    'Dohn Mheg Swinge': '22CA',
    // Frontal cone, boss 2
    'Dohn Mheg Canopy': '3DB0',
    // Frontal cone, Dohnfaust Rowans throughout instance
    'Dohn Mheg Pinecone Bomb': '3DB1',
    // Circular ground AoE marker, Dohnfaust Rowans throughout instance
    'Dohn Mheg Bile Bombardment': '34EE',
    // Ground AoE marker, boss 3
    'Dohn Mheg Corrosive Bile': '34EC',
    // Frontal cone, boss 3
    'Dohn Mheg Flailing Tentacles': '3681'
  },
  triggers: [{
    id: 'Dohn Mheg Imp Choir',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '46E'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }, {
    id: 'Dohn Mheg Toad Choir',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '1B7'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }, {
    id: 'Dohn Mheg Fool\'s Tumble',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '183'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }]
};
/* harmony default export */ const dohn_mheg = (dohn_mheg_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/dungeon/heroes_gauntlet.ts



// TODO: Berserker 2nd/3rd wild anguish should be shared with just a rock
const heroes_gauntlet_triggerSet = {
  zoneId: zone_id/* default.TheHeroesGauntlet */.Z.TheHeroesGauntlet,
  damageWarn: {
    'THG Blade\'s Benison': '5228',
    // pld conal
    'THG Absolute Holy': '524B',
    // whm very large aoe
    'THG Hissatsu: Goka': '523D',
    // sam line aoe
    'THG Whole Self': '522D',
    // mnk wide line aoe
    'THG Randgrith': '5232',
    // drg very big line aoe
    'THG Vacuum Blade 1': '5061',
    // Spectral Thief circular ground aoe from marker
    'THG Vacuum Blade 2': '5062',
    // Spectral Thief circular ground aoe from marker
    'THG Coward\'s Cunning': '4FD7',
    // Spectral Thief Chicken Knife laser
    'THG Papercutter 1': '4FD1',
    // Spectral Thief line aoe from marker
    'THG Papercutter 2': '4FD2',
    // Spectral Thief line aoe from marker
    'THG Ring of Death': '5236',
    // drg circular aoe
    'THG Lunar Eclipse': '5227',
    // pld circular aoe
    'THG Absolute Gravity': '5248',
    // ink mage circular
    'THG Rain of Light': '5242',
    // bard large circule aoe
    'THG Dooming Force': '5239',
    // drg line aoe
    'THG Absolute Dark II': '4F61',
    // Necromancer 120 degree conal
    'THG Burst': '53B7',
    // Necromancer necroburst small zombie explosion
    'THG Pain Mire': '4FA4',
    // Necromancer very large green bleed puddle
    'THG Dark Deluge': '4F5D',
    // Necromancer ground aoe
    'THG Tekka Gojin': '523E',
    // sam 90 degree conal
    'THG Raging Slice 1': '520A',
    // Berserker line cleave
    'THG Raging Slice 2': '520B',
    // Berserker line cleave
    'THG Wild Rage': '5203' // Berserker blue knockback puck

  },
  gainsEffectWarn: {
    'THG Bleeding': '828' // Standing in the Necromancer puddle or outside the Berserker arena

  },
  gainsEffectFail: {
    'THG Truly Berserk': '906' // Standing in the crater too long

  },
  shareWarn: {
    'THG Absolute Thunder IV': '5245',
    // headmarker aoe from blm
    'THG Moondiver': '5233',
    // headmarker aoe from drg
    'THG Spectral Gust': '53CF' // Spectral Thief headmarker aoe

  },
  shareFail: {
    'THG Falling Rock': '5205' // Berserker headmarker aoe that creates rubble

  },
  soloWarn: {
    // This should always be shared.  On all times but the 2nd and 3rd, it's a party share.
    // TODO: on the 2nd and 3rd time this should only be shared with a rock.
    // TODO: alternatively warn on taking one of these with a 472 Magic Vulnerability Up effect
    'THG Wild Anguish': '5209'
  },
  triggers: [{
    id: 'THG Wild Rampage',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '5207',
      ...oopsy_common/* playerDamageFields */.np
    }),
    // This is zero damage if you are in the crater.
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const heroes_gauntlet = (heroes_gauntlet_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/dungeon/holminster_switch.ts

const holminster_switch_triggerSet = {
  zoneId: zone_id/* default.HolminsterSwitch */.Z.HolminsterSwitch,
  damageWarn: {
    'Holminster Thumbscrew': '3DC6',
    'Holminster Wooden horse': '3DC7',
    'Holminster Light Shot': '3DC8',
    'Holminster Heretic\'s Fork': '3DCE',
    'Holminster Holy Water': '3DD4',
    'Holminster Fierce Beating 1': '3DDD',
    'Holminster Fierce Beating 2': '3DDE',
    'Holminster Fierce Beating 3': '3DDF',
    'Holminster Cat O\' Nine Tails': '3DE1',
    'Holminster Right Knout': '3DE6',
    'Holminster Left Knout': '3DE7'
  },
  damageFail: {
    'Holminster Aethersup': '3DE9'
  },
  shareWarn: {
    'Holminster Flagellation': '3DD6'
  },
  shareFail: {
    'Holminster Taphephobia': '4181'
  }
};
/* harmony default export */ const holminster_switch = (holminster_switch_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/dungeon/malikahs_well.ts

const malikahs_well_triggerSet = {
  zoneId: zone_id/* default.MalikahsWell */.Z.MalikahsWell,
  damageWarn: {
    'Malikah Falling Rock': '3CEA',
    'Malikah Wellbore': '3CED',
    'Malikah Geyser Eruption': '3CEE',
    'Malikah Swift Spill': '3CF0',
    'Malikah Breaking Wheel 1': '3CF5',
    'Malikah Crystal Nail': '3CF7',
    'Malikah Heretic\'s Fork 1': '3CF9',
    'Malikah Breaking Wheel 2': '3CFA',
    'Malikah Heretic\'s Fork 2': '3E0E',
    'Malikah Earthshake': '3E39'
  }
};
/* harmony default export */ const malikahs_well = (malikahs_well_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/dungeon/matoyas_relict.ts

// TODO: could include 5484 Mudman Rocky Roll as a shareWarn, but it's low damage and common.
const matoyas_relict_triggerSet = {
  zoneId: zone_id/* default.MatoyasRelict */.Z.MatoyasRelict,
  damageWarn: {
    'Matoya Relict Werewood Ovation': '5518',
    // line aoe
    'Matoya Cave Tarantula Hawk Apitoxin': '5519',
    // big circle aoe
    'Matoya Spriggan Stonebearer Romp': '551A',
    // conal aoe
    'Matoya Sonny Of Ziggy Jittering Glare': '551C',
    // long narrow conal aoe
    'Matoya Mudman Quagmire': '5481',
    // Mudman aoe puddles
    'Matoya Mudman Brittle Breccia 1': '548E',
    // expanding circle aoe
    'Matoya Mudman Brittle Breccia 2': '548F',
    // expanding circle aoe
    'Matoya Mudman Brittle Breccia 3': '5490',
    // expanding circle aoe
    'Matoya Mudman Mud Bubble': '5487',
    // standing in mud puddle?
    'Matoya Cave Pugil Screwdriver': '551E',
    // conal aoe
    'Matoya Nixie Gurgle': '5992',
    // Nixie wall flush
    'Matoya Relict Molten Phoebad Pyroclastic Shot': '57EB',
    // the line aoes as you run to trash
    'Matoya Relict Flan Flood': '5523',
    // big circle aoe
    'Matoya Pyroduct Eldthurs Mash': '5527',
    // line aoe
    'Matyoa Pyroduct Eldthurs Spin': '5528',
    // very large circle aoe
    'Matoya Relict Bavarois Thunder III': '5525',
    // circle aoe
    'Matoya Relict Marshmallow Ancient Aero': '5524',
    // very large line groaoe
    'Matoya Relict Pudding Fire II': '5522',
    // circle aoe
    'Matoya Relict Molten Phoebad Hot Lava': '57E9',
    // conal aoe
    'Matoya Relict Molten Phoebad Volcanic Drop': '57E8',
    // circle aoe
    'Matoya Mother Porxie Medium Rear': '591D',
    // knockback into safe circle aoe
    'Matoya Mother Porxie Barbeque Line': '5917',
    // line aoe during bbq
    'Matoya Mother Porxie Barbeque Circle': '5918',
    // circle aoe during bbq
    'Matoya Mother Porxie To A Crisp': '5925',
    // getting to close to boss during bbq
    'Matoya Mother Proxie Buffet': '5926' // Aeolian Cave Sprite line aoe (is this a pun?)

  },
  damageFail: {
    'Matoya Nixie Sea Shanty': '598C' // Not taking the puddle up to the top? Failing add enrage?

  },
  shareWarn: {
    'Matoya Nixie Crack': '5990',
    // Nixie Crash-Smash tank tethers
    'Matoya Nixie Sputter': '5993' // Nixie spread marker

  }
};
/* harmony default export */ const matoyas_relict = (matoyas_relict_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/dungeon/mt_gulg.ts

const mt_gulg_triggerSet = {
  zoneId: zone_id/* default.MtGulg */.Z.MtGulg,
  damageWarn: {
    'Gulg Immolation': '41AA',
    'Gulg Tail Smash': '41AB',
    'Gulg Heavenslash': '41A9',
    'Gulg Typhoon Wing 1': '3D00',
    'Gulg Typhoon Wing 2': '3D01',
    'Gulg Hurricane Wing': '3D03',
    'Gulg Earth Shaker': '37F5',
    'Gulg Sanctification': '41AE',
    'Gulg Exegesis': '3D07',
    'Gulg Perfect Contrition': '3D0E',
    'Gulg Sanctified Aero': '41AD',
    'Gulg Divine Diminuendo 1': '3D16',
    'Gulg Divine Diminuendo 2': '3D18',
    'Gulg Divine Diminuendo 3': '4669',
    'Gulg Divine Diminuendo 4': '3D19',
    'Gulg Divine Diminuendo 5': '3D21',
    'Gulg Conviction Marcato 1': '3D1A',
    'Gulg Conviction Marcato 2': '3D1B',
    'Gulg Conviction Marcato 3': '3D20',
    'Gulg Vena Amoris': '3D27'
  },
  damageFail: {
    'Gulg Lumen Infinitum': '41B2',
    'Gulg Right Palm': '37F8',
    'Gulg Left Palm': '37FA'
  }
};
/* harmony default export */ const mt_gulg = (mt_gulg_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/dungeon/paglthan.ts

// TODO: What to do about Kahn Rai 5B50?
// It seems impossible for the marked person to avoid entirely.
const paglthan_triggerSet = {
  zoneId: zone_id/* default.Paglthan */.Z.Paglthan,
  damageWarn: {
    'Paglthan Telovouivre Plague Swipe': '60FC',
    // frontal conal cleave
    'Paglthan Lesser Telodragon Engulfing Flames': '60F5',
    // frontal conal cleave
    'Paglthan Amhuluk Lightning Bolt': '5C4C',
    // circular lightning aoe (on self or post)
    'Paglthan Amhuluk Ball Of Levin Shock': '5C52',
    // pulsing small circular aoes
    'Paglthan Amhuluk Supercharged Ball Of Levin Shock': '5C53',
    // pulsing large circular aoe
    'Paglthan Amhuluk Wide Blaster': '60C5',
    // rear conal cleave
    'Paglthan Telobrobinyak Fall Of Man': '6148',
    // circular aoe
    'Paglthan Telotek Reaper Magitek Cannon': '6121',
    // circular aoe
    'Paglthan Telodragon Sheet of Ice': '60F8',
    // circular aoe
    'Paglthan Telodragon Frost Breath': '60F7',
    // very large conal cleave
    'Paglthan Magitek Core Stable Cannon': '5C94',
    // large line aoes
    'Paglthan Magitek Core 2-Tonze Magitek Missile': '5C95',
    // large circular aoe
    'Paglthan Telotek Sky Armor Aethershot': '5C9C',
    // circular aoe
    'Paglthan Mark II Telotek Colossus Exhaust': '5C99',
    // large line aoe
    'Paglthan Magitek Missile Explosive Force': '5C98',
    // slow moving horizontal missiles
    'Paglthan Tiamat Flamisphere': '610F',
    // very long line aoe
    'Paglthan Armored Telodragon Tortoise Stomp': '614B',
    // large circular aoe from turtle
    'Paglthan Telodragon Thunderous Breath': '6149',
    // large conal cleave
    'Paglthan Lunar Bahamut Lunar Nail Upburst': '605B',
    // small aoes before Big Burst
    'Paglthan Lunar Bahamut Lunar Nail Big Burst': '5B48',
    // large circular aoes from nails
    'Paglthan Lunar Bahamut Perigean Breath': '5B59',
    // large conal cleave
    'Paglthan Lunar Bahamut Megaflare': '5B4E',
    // megaflare pepperoni
    'Paglthan Lunar Bahamut Megaflare Dive': '5B52',
    // megaflare line aoe across the arena
    'Paglthan Lunar Bahamut Lunar Flare': '5B4A' // large purple shrinking circles

  },
  shareWarn: {
    'Paglthan Lunar Bahamut Megaflare': '5B4D' // megaflare spread markers

  }
};
/* harmony default export */ const paglthan = (paglthan_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/dungeon/qitana_ravel.ts

const qitana_ravel_triggerSet = {
  zoneId: zone_id/* default.TheQitanaRavel */.Z.TheQitanaRavel,
  damageWarn: {
    'Qitana Sun Toss': '3C8A',
    // Ground AoE, boss one
    'Qitana Ronkan Light 1': '3C8C',
    // Statue attack, boss one
    'Qitana Lozatl\'s Fury 1': '3C8F',
    // Semicircle cleave, boss one
    'Qitana Lozatl\'s Fury 2': '3C90',
    // Semicircle cleave, boss one
    'Qitana Falling Rock': '3C96',
    // Small ground AoE, boss two
    'Qitana Falling Boulder': '3C97',
    // Large ground AoE, boss two
    'Qitana Towerfall': '3C98',
    // Pillar collapse, boss two
    'Qitana Viper Poison 2': '3C9E',
    // Stationary poison puddles, boss three
    'Qitana Confession of Faith 1': '3CA2',
    // Dangerous middle during spread circles, boss three
    'Qitana Confession of Faith 3': '3CA6',
    // Dangerous sides during stack marker, boss three
    'Qitana Confession of Faith 4': '3CA7',
    // Dangerous sides during stack marker, boss three
    'Qitana Ronkan Light 2': '3D6D',
    // Statue attack, boss one
    'Qitana Wrath of the Ronka': '3E2C',
    // Statue line attack from mini-bosses before first boss
    'Qitana Sinspitter': '3E36',
    // Gorilla boulder toss AoE before third boss
    'Qitana Hound out of Heaven': '42B8',
    // Tether extension failure, boss three; 42B7 is correct execution
    'Qitana Ronkan Abyss': '43EB' // Ground AoE from mini-bosses before first boss

  },
  shareWarn: {
    'Qitana Viper Poison 1': '3C9D',
    // AoE from the 00AB poison head marker, boss three
    'Qitana Confession of Faith 2': '3CA3' // Overlapped circles failure on the spread circles version of the mechanic

  }
};
/* harmony default export */ const qitana_ravel = (qitana_ravel_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/dungeon/the_grand_cosmos.ts

// The Grand Cosmos
const the_grand_cosmos_triggerSet = {
  zoneId: zone_id/* default.TheGrandCosmos */.Z.TheGrandCosmos,
  damageWarn: {
    'Cosmos Iron Justice': '491F',
    'Cosmos Smite Of Rage': '4921',
    'Cosmos Tribulation': '49A4',
    'Cosmos Dark Shock': '476F',
    'Cosmos Sweep': '4770',
    'Cosmos Deep Clean': '4771',
    'Cosmos Shadow Burst': '4924',
    'Cosmos Bloody Caress': '4927',
    'Cosmos Nepenthic Plunge': '4928',
    'Cosmos Brewing Storm': '4929',
    'Cosmos Ode To Fallen Petals': '4950',
    'Cosmos Far Wind Ground': '4273',
    'Cosmos Fire Breath': '492B',
    'Cosmos Ronkan Freeze': '492E',
    'Cosmos Overpower': '492D',
    'Cosmos Scorching Left': '4763',
    'Cosmos Scorching Right': '4762',
    'Cosmos Otherwordly Heat': '475C',
    'Cosmos Fire\'s Ire': '4761',
    'Cosmos Plummet': '4767',
    'Cosmos Fire\'s Domain Tether': '475F'
  },
  shareWarn: {
    'Cosmos Dark Well': '476D',
    'Cosmos Far Wind Spread': '4724',
    'Cosmos Black Flame': '475D',
    'Cosmos Fire\'s Domain': '4760'
  }
};
/* harmony default export */ const the_grand_cosmos = (the_grand_cosmos_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/dungeon/twinning.ts

const twinning_triggerSet = {
  zoneId: zone_id/* default.TheTwinning */.Z.TheTwinning,
  damageWarn: {
    'Twinning Auto Cannons': '43A9',
    'Twinning Heave': '3DB9',
    'Twinning 32 Tonze Swipe': '3DBB',
    'Twinning Sideswipe': '3DBF',
    'Twinning Wind Spout': '3DBE',
    'Twinning Shock': '3DF1',
    'Twinning Laserblade': '3DEC',
    'Twinning Vorpal Blade': '3DC2',
    'Twinning Thrown Flames': '3DC3',
    'Twinning Magitek Ray': '3DF3',
    'Twinning High Gravity': '3DFA'
  },
  damageFail: {
    'Twinning 128 Tonze Swipe': '3DBA'
  }
};
/* harmony default export */ const twinning = (twinning_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/eureka/delubrum_reginae.ts



// TODO: Dead Iron 5AB0 (earthshakers, but only if you take two?)
const delubrum_reginae_triggerSet = {
  zoneId: zone_id/* default.DelubrumReginae */.Z.DelubrumReginae,
  damageWarn: {
    'Delubrum Seeker Mercy Fourfold': '5B34',
    // Four glowing sword half room cleaves
    'Delubrum Seeker Baleful Swathe': '5AB4',
    // Ground aoe to either side of boss
    'Delubrum Seeker Baleful Blade': '5B28',
    // Hide behind pillars attack
    'Delubrum Seeker Iron Splitter Blue 1': '5AA4',
    // Blue ring explosion
    'Delubrum Seeker Iron Splitter Blue 2': '5AA5',
    // Blue ring explosion
    'Delubrum Seeker Iron Splitter Blue 3': '5AA6',
    // Blue ring explosion
    'Delubrum Seeker Iron Splitter White 1': '5AA7',
    // White ring explosion
    'Delubrum Seeker Iron Splitter White 2': '5AA8',
    // White ring explosion
    'Delubrum Seeker Iron Splitter White 3': '5AA9',
    // White ring explosion
    'Delubrum Seeker Scorching Shackle': '5AAE',
    // Chain damage
    'Delubrum Seeker Merciful Breeze': '5AAB',
    // Waffle criss-cross floor markers
    'Delubrum Seeker Merciful Blooms': '5AAD',
    // Purple growing circle
    'Delubrum Dahu Right-Sided Shockwave': '5761',
    // Right circular cleave
    'Delubrum Dahu Left-Sided Shockwave': '5762',
    // Left circular cleave
    'Delubrum Dahu Firebreathe': '5765',
    // Conal breath
    'Delubrum Dahu Firebreathe Rotating': '575A',
    // Conal breath, rotating
    'Delubrum Dahu Head Down': '5756',
    // line aoe charge from Marchosias add
    'Delubrum Dahu Hunter\'s Claw': '5757',
    // circular ground aoe centered on Marchosias add
    'Delubrum Dahu Falling Rock': '575C',
    // ground aoe from Reverberating Roar
    'Delubrum Dahu Hot Charge': '5764',
    // double charge
    'Delubrum Dahu Ripper Claw': '575D',
    // frontal cleave
    'Delubrum Dahu Tail Swing': '575F',
    // tail swing ;)
    'Delubrum Guard Pawn Off': '5806',
    // Queen's Soldier Secrets Revealed tethered clone aoe
    'Delubrum Guard Turret\'s Tour 1': '580D',
    // Queen's Gunner reflective turret shot
    'Delubrum Guard Turret\'s Tour 2': '580E',
    // Queen's Gunner reflective turret shot
    'Delubrum Guard Turret\'s Tour 3': '580F',
    // Queen's Gunner reflective turret shot
    'Delubrum Guard Optimal Play Shield': '57F3',
    // Queen's Knight shield get under
    'Delubrum Guard Optimal Play Sword': '57F2',
    // Queen's Knight sword get out
    'Delubrum Guard Counterplay': '57F6',
    // Hitting aetherial ward directional barrier
    'Delubrum Phantom Swirling Miasma 1': '57A9',
    // Initial phantom donut aoe from circle
    'Delubrum Phantom Swirling Miasma 2': '57AA',
    // Moving phantom donut aoes from circle
    'Delubrum Phantom Creeping Miasma': '57A5',
    // phantom line aoe from square
    'Delubrum Phantom Vile Wave': '57B1',
    // phantom conal aoe
    'Delubrum Avowed Fury Of Bozja': '5973',
    // Trinity Avowed Allegiant Arsenal "out"
    'Delubrum Avowed Flashvane': '5972',
    // Trinity Avowed Allegiant Arsenal "get behind"
    'Delubrum Avowed Infernal Slash': '5971',
    // Trinity Avowed Allegiant Arsenal "get front"
    'Delubrum Avowed Flames Of Bozja': '5968',
    // 80% floor aoe before shimmering shot swords
    'Delubrum Avowed Gleaming Arrow': '5974',
    // Trinity Avatar line aoes from outside
    'Delubrum Queen The Means 1': '59BB',
    // The Queen's Beck and Call cross aoe from adds
    'Delubrum Queen The Means 2': '59BD',
    // The Queen's Beck and Call cross aoe from adds
    'Delubrum Queen The End 1': '59BA',
    // Also The Queen's Beck and Call cross aoe from adds
    'Delubrum Queen The End 2': '59BC',
    // Also The Queen's Beck and Call cross aoe from adds
    'Delubrum Queen Northswain\'s Glow': '59C4',
    // expanding lines with explosion intersections
    'Delubrum Queen Judgment Blade Left': '5B83',
    // dash across room with left cleave
    'Delubrum Queen Judgment Blade Right': '5B83',
    // dash across room with right cleave
    'Delubrum Queen Queen\'s Justice': '59BF',
    // failing to walk the right number of squares
    'Delubrum Queen Turret\'s Tour 1': '59E0',
    // reflective turret shot during Queen
    'Delubrum Queen Turret\'s Tour 2': '59E1',
    // reflective turret shot during Queen
    'Delubrum Queen Turret\'s Tour 3': '59E2',
    // reflective turret shot during Queen
    'Delubrum Queen Pawn Off': '59DA',
    // Secrets Revealed tethered clone aoe during Queen
    'Delubrum Queen Optimal Play Shield': '59CE',
    // Queen's Knight shield get under during Queen
    'Delubrum Queen Optimal Play Sword': '59CC' // Queen's Knight sword get out during Queen

  },
  damageFail: {
    'Delubrum Hidden Trap Massive Explosion': '5A6E',
    // explosion trap
    'Delubrum Hidden Trap Poison Trap': '5A6F',
    // poison trap
    'Delubrum Avowed Heat Shock': '595E',
    // too much heat or failing to regulate temperature
    'Delubrum Avowed Cold Shock': '595F' // too much cold or failing to regulate temperature

  },
  gainsEffectWarn: {
    'Delubrum Seeker Merciful Moon': '262' // "Petrification" from Aetherial Orb lookaway

  },
  shareFail: {
    'Delubrum Dahu Heat Breath': '5766',
    // tank cleave
    'Delubrum Avowed Wrath Of Bozja': '5975' // tank cleave

  },
  triggers: [{
    // At least during The Queen, these ability ids can be ordered differently,
    // and the first explosion "hits" everyone, although with "1B" flags.
    id: 'Delubrum Lots Cast',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: ['565A', '565B', '57FD', '57FE', '5B86', '5B87', '59D2', '5D93'],
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (_data, matches) => matches.flags.slice(-2) === '03',
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const delubrum_reginae = (delubrum_reginae_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/eureka/delubrum_reginae_savage.ts



// TODO: Dahu 5776 Spit Flame should always hit a Marchosias
// TODO: hitting phantom with ice spikes with anything but dispel?
// TODO: failing icy/fiery portent (guard and queen)
//       `18:Pyretic DoT Tick on ${name} for ${damage} damage.`
// TODO: Winds Of Fate / Weight Of Fortune?
// TODO: Turret's Tour?
// general traps: explosion: 5A71, poison trap: 5A72, mini: 5A73
// duel traps: mini: 57A1, ice: 579F, toad: 57A0
// TODO: taking mana flame without reflect
// TODO: taking Maelstrom's Bolt without lightning buff
const delubrum_reginae_savage_triggerSet = {
  zoneId: zone_id/* default.DelubrumReginaeSavage */.Z.DelubrumReginaeSavage,
  damageWarn: {
    'DelubrumSav Seeker Slimes Hellish Slash': '57EA',
    // Bozjan Soldier cleave
    'DelubrumSav Seeker Slimes Viscous Rupture': '5016',
    // Fully merged viscous slime aoe
    'DelubrumSav Seeker Golems Demolish': '5880',
    // interruptible Ruins Golem cast
    'DelubrumSav Seeker Baleful Swathe': '5AD1',
    // Ground aoe to either side of boss
    'DelubrumSav Seeker Baleful Blade': '5B2A',
    // Hide behind pillars attack
    'DelubrumSav Seeker Scorching Shackle': '5ACB',
    // Chains
    'DelubrumSav Seeker Mercy Fourfold 1': '5B94',
    // Four glowing sword half room cleaves
    'DelubrumSav Seeker Mercy Fourfold 2': '5AB9',
    // Four glowing sword half room cleaves
    'DelubrumSav Seeker Mercy Fourfold 3': '5ABA',
    // Four glowing sword half room cleaves
    'DelubrumSav Seeker Mercy Fourfold 4': '5ABB',
    // Four glowing sword half room cleaves
    'DelubrumSav Seeker Mercy Fourfold 5': '5ABC',
    // Four glowing sword half room cleaves
    'DelubrumSav Seeker Merciful Breeze': '5AC8',
    // Waffle criss-cross floor markers
    'DelubrumSav Seeker Baleful Comet': '5AD7',
    // Clone meteor dropping before charges
    'DelubrumSav Seeker Baleful Firestorm': '5AD8',
    // Clone charge after Baleful Comet
    'DelubrumSav Seeker Iron Rose': '5AD9',
    // Clone line aoes
    'DelubrumSav Seeker Iron Splitter Blue 1': '5AC1',
    // Blue rin g explosion
    'DelubrumSav Seeker Iron Splitter Blue 2': '5AC2',
    // Blue ring explosion
    'DelubrumSav Seeker Iron Splitter Blue 3': '5AC3',
    // Blue ring explosion
    'DelubrumSav Seeker Iron Splitter White 1': '5AC4',
    // White ring explosion
    'DelubrumSav Seeker Iron Splitter White 2': '5AC5',
    // White ring explosion
    'DelubrumSav Seeker Iron Splitter White 3': '5AC6',
    // White ring explosion
    'DelubrumSav Seeker Act Of Mercy': '5ACF',
    // cross-shaped line aoes
    'DelubrumSav Dahu Right-Sided Shockwave 1': '5770',
    // Right circular cleave
    'DelubrumSav Dahu Right-Sided Shockwave 2': '5772',
    // Right circular cleave
    'DelubrumSav Dahu Left-Sided Shockwave 1': '576F',
    // Left circular cleave
    'DelubrumSav Dahu Left-Sided Shockwave 2': '5771',
    // Left circular cleave
    'DelubrumSav Dahu Firebreathe': '5774',
    // Conal breath
    'DelubrumSav Dahu Firebreathe Rotating': '576C',
    // Conal breath, rotating
    'DelubrumSav Dahu Head Down': '5768',
    // line aoe charge from Marchosias add
    'DelubrumSav Dahu Hunter\'s Claw': '5769',
    // circular ground aoe centered on Marchosias add
    'DelubrumSav Dahu Falling Rock': '576E',
    // ground aoe from Reverberating Roar
    'DelubrumSav Dahu Hot Charge': '5773',
    // double charge
    'DelubrumSav Duel Massive Explosion': '579E',
    // bombs being cleared
    'DelubrumSav Duel Vicious Swipe': '5797',
    // circular aoe around boss
    'DelubrumSav Duel Focused Tremor 1': '578F',
    // square floor aoes
    'DelubrumSav Duel Focused Tremor 2': '5791',
    // square floor aoes
    'DelubrumSav Duel Devour': '5789',
    // conal aoe after withering curse
    'DelubrumSav Duel Flailing Strike 1': '578C',
    // initial rotating cleave
    'DelubrumSav Duel Flailing Strike 2': '578D',
    // rotating cleaves
    'DelubrumSav Guard Optimal Offensive Sword': '5819',
    // middle explosion
    'DelubrumSav Guard Optimal Offensive Shield': '581A',
    // middle explosion
    'DelubrumSav Guard Optimal Play Sword': '5816',
    // Optimal Play Sword "get out"
    'DelubrumSav Guard Optimal Play Shield': '5817',
    // Optimal play shield "get in"
    'DelubrumSav Guard Optimal Play Cleave': '5818',
    // Optimal Play cleaves for sword/shield
    'DelubrumSav Guard Unlucky Lot': '581D',
    // Queen's Knight orb explosion
    'DelubrumSav Guard Burn 1': '583D',
    // small fire adds
    'DelubrumSav Guard Burn 2': '583E',
    // large fire adds
    'DelubrumSav Guard Pawn Off': '583A',
    // Queen's Soldier Secrets Revealed tethered clone aoe
    'DelubrumSav Guard Turret\'s Tour Normal 1': '5847',
    // "normal mode" turrets, initial lines 1
    'DelubrumSav Guard Turret\'s Tour Normal 2': '5848',
    // "normal mode" turrets, initial lines 2
    'DelubrumSav Guard Turret\'s Tour Normal 3': '5849',
    // "normal mode" turrets, second lines
    'DelubrumSav Guard Counterplay': '58F5',
    // Hitting aetherial ward directional barrier
    'DelubrumSav Phantom Swirling Miasma 1': '57B8',
    // Initial phantom donut aoe
    'DelubrumSav Phantom Swirling Miasma 2': '57B9',
    // Moving phantom donut aoes
    'DelubrumSav Phantom Creeping Miasma 1': '57B4',
    // Initial phantom line aoe
    'DelubrumSav Phantom Creeping Miasma 2': '57B5',
    // Later phantom line aoe
    'DelubrumSav Phantom Lingering Miasma 1': '57B6',
    // Initial phantom circle aoe
    'DelubrumSav Phantom Lingering Miasma 2': '57B7',
    // Moving phantom circle aoe
    'DelubrumSav Phantom Vile Wave': '57BF',
    // phantom conal aoe
    'DelubrumSav Avowed Fury Of Bozja': '594C',
    // Trinity Avowed Allegiant Arsenal "out"
    'DelubrumSav Avowed Flashvane': '594B',
    // Trinity Avowed Allegiant Arsenal "get behind"
    'DelubrumSav Avowed Infernal Slash': '594A',
    // Trinity Avowed Allegiant Arsenal "get front"
    'DelubrumSav Avowed Flames Of Bozja': '5939',
    // 80% floor aoe before shimmering shot swords
    'DelubrumSav Avowed Gleaming Arrow': '594D',
    // Trinity Avatar line aoes from outside
    'DelubrumSav Lord Whack': '57D0',
    // cleave
    'DelubrumSav Lord Devastating Bolt 1': '57C5',
    // lightning rings
    'DelubrumSav Lord Devastating Bolt 2': '57C6',
    // lightning rings
    'DelubrumSav Lord Electrocution': '57CC',
    // random circle aoes
    'DelubrumSav Lord Rapid Bolts': '57C3',
    // dropped lightning aoes
    'DelubrumSav Lord 1111-Tonze Swing': '57D8',
    // very large "get out" swing
    'DelubrumSav Lord Monk Attack': '55A6',
    // Monk add auto-attack
    'DelubrumSav Queen Northswain\'s Glow': '59F4',
    // expanding lines with explosion intersections
    'DelubrumSav Queen The Means 1': '59E7',
    // The Queen's Beck and Call cross aoe from adds
    'DelubrumSav Queen The Means 2': '59EA',
    // The Queen's Beck and Call cross aoe from adds
    'DelubrumSav Queen The End 1': '59E8',
    // Also The Queen's Beck and Call cross aoe from adds
    'DelubrumSav Queen The End 2': '59E9',
    // Also The Queen's Beck and Call cross aoe from adds
    'DelubrumSav Queen Optimal Offensive Sword': '5A02',
    // middle explosion
    'DelubrumSav Queen Optimal Offensive Shield': '5A03',
    // middle explosion
    'DelubrumSav Queen Judgment Blade Left 1': '59F2',
    // dash across room with left cleave
    'DelubrumSav Queen Judgment Blade Left 2': '5B85',
    // dash across room with left cleave
    'DelubrumSav Queen Judgment Blade Right 1': '59F1',
    // dash across room with right cleave
    'DelubrumSav Queen Judgment Blade Right 2': '5B84',
    // dash across room with right cleave
    'DelubrumSav Queen Pawn Off': '5A1D',
    // Queen's Soldier Secrets Revealed tethered clone aoe
    'DelubrumSav Queen Optimal Play Sword': '59FF',
    // Optimal Play Sword "get out"
    'DelubrumSav Queen Optimal Play Shield': '5A00',
    // Optimal play shield "get in"
    'DelubrumSav Queen Optimal Play Cleave': '5A01',
    // Optimal Play cleaves for sword/shield
    'DelubrumSav Queen Turret\'s Tour Normal 1': '5A28',
    // "normal mode" turrets, initial lines 1
    'DelubrumSav Queen Turret\'s Tour Normal 2': '5A2A',
    // "normal mode" turrets, initial lines 2
    'DelubrumSav Queen Turret\'s Tour Normal 3': '5A29' // "normal mode" turrets, second lines

  },
  damageFail: {
    'DelubrumSav Avowed Heat Shock': '5927',
    // too much heat or failing to regulate temperature
    'DelubrumSav Avowed Cold Shock': '5928',
    // too much cold or failing to regulate temperature
    'DelubrumSav Queen Queen\'s Justice': '59EB',
    // failing to walk the right number of squares
    'DelubrumSav Queen Gunnhildr\'s Blades': '5B22',
    // not being in the chess blue safe square
    'DelubrumSav Queen Unlucky Lot': '55B6' // lightning orb attack

  },
  gainsEffectWarn: {
    'DelubrumSav Seeker Merciful Moon': '262' // "Petrification" from Aetherial Orb lookaway

  },
  shareWarn: {
    'DelubrumSav Seeker Phantom Baleful Onslaught': '5AD6',
    // solo tank cleave
    'DelubrumSav Lord Foe Splitter': '57D7' // tank cleave

  },
  triggers: [{
    // These ability ids can be ordered differently and "hit" people when levitating.
    id: 'DelubrumSav Guard Lots Cast',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: ['5827', '5828', '5B6C', '5B6D', '5BB6', '5BB7', '5B88', '5B89'],
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (_data, matches) => matches.flags.slice(-2) === '03',
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        text: matches.ability
      };
    }
  }, {
    id: 'DelubrumSav Golem Compaction',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '5746'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        text: `${matches.source}: ${matches.ability}`
      };
    }
  }, {
    id: 'DelubrumSav Slime Sanguine Fusion',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '554D'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        text: `${matches.source}: ${matches.ability}`
      };
    }
  }]
};
/* harmony default export */ const delubrum_reginae_savage = (delubrum_reginae_savage_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e10n.ts

const e10n_triggerSet = {
  zoneId: zone_id/* default.EdensPromiseLitany */.Z.EdensPromiseLitany,
  damageWarn: {
    'E10N Forward Implosion': '56B4',
    // howl boss implosion
    'E10N Forward Shadow Implosion': '56B5',
    // howl shadow implosion
    'E10N Backward Implosion': '56B7',
    // tail boss implosion
    'E10N Backward Shadow Implosion': '56B8',
    // tail shadow implosion
    'E10N Barbs Of Agony 1': '56D9',
    // Shadow Warrior 3 dog room cleave
    'E10N Barbs Of Agony 2': '5B26',
    // Shadow Warrior 3 dog room cleave
    'E10N Cloak Of Shadows': '5B11',
    // non-squiggly line explosions
    'E10N Throne Of Shadow': '56C7',
    // standing up get out
    'E10N Right Giga Slash': '56AE',
    // boss right giga slash
    'E10N Right Shadow Slash': '56AF',
    // giga slash from shadow
    'E10N Left Giga Slash': '56B1',
    // boss left giga slash
    'E10N Left Shadow Slash': '56BD',
    // giga slash from shadow
    'E10N Shadowy Eruption': '56E1' // baited ground aoe markers paired with barbs

  },
  shareWarn: {
    'E10N Shadow\'s Edge': '56DB' // Tankbuster single target followup

  }
};
/* harmony default export */ const e10n = (e10n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e10s.ts



// TODO: hitting shadow of the hero with abilities can cause you to take damage, list those?
//       e.g. picking up your first pitch bog puddle will cause you to die to the damage
//       your shadow takes from Deepshadow Nova or Distant Scream.
// TODO: 573B Blighting Blitz issues during limit cut numbers
const e10s_triggerSet = {
  zoneId: zone_id/* default.EdensPromiseLitanySavage */.Z.EdensPromiseLitanySavage,
  damageWarn: {
    'E10S Implosion Single 1': '56F2',
    // single tail up shadow implosion
    'E10S Implosion Single 2': '56EF',
    // single howl shadow implosion
    'E10S Implosion Quadruple 1': '56EF',
    // quadruple set of shadow implosions
    'E10S Implosion Quadruple 2': '56F2',
    // quadruple set of shadow implosions
    'E10S Giga Slash Single 1': '56EC',
    // Giga slash single from shadow
    'E10S Giga Slash Single 2': '56ED',
    // Giga slash single from shadow
    'E10S Giga Slash Box 1': '5709',
    // Giga slash box from four ground shadows
    'E10S Giga Slash Box 2': '570D',
    // Giga slash box from four ground shadows
    'E10S Giga Slash Quadruple 1': '56EC',
    // quadruple set of giga slash cleaves
    'E10S Giga Slash Quadruple 2': '56E9',
    // quadruple set of giga slash cleaves
    'E10S Cloak Of Shadows 1': '5B13',
    // initial non-squiggly line explosions
    'E10S Cloak Of Shadows 2': '5B14',
    // second squiggly line explosions
    'E10S Throne Of Shadow': '5717',
    // standing up get out
    'E10S Shadowy Eruption': '5738' // baited ground aoe during amplifier

  },
  damageFail: {
    'E10S Swath Of Silence 1': '571A',
    // Shadow clone cleave (too close)
    'E10S Swath Of Silence 2': '5BBF' // Shadow clone cleave (timed)

  },
  shareWarn: {
    'E10S Shadefire': '5732',
    // purple tank umbral orbs
    'E10S Pitch Bog': '5722' // marker spread that drops a shadow puddle

  },
  shareFail: {
    'E10S Shadow\'s Edge': '5725' // Tankbuster single target followup

  },
  triggers: [{
    id: 'E10S Damage Down Orbs',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      source: 'Flameshadow',
      effectId: '82C'
    }),
    netRegexDe: netregexes/* default.gainsEffect */.Z.gainsEffect({
      source: 'Schattenflamme',
      effectId: '82C'
    }),
    netRegexFr: netregexes/* default.gainsEffect */.Z.gainsEffect({
      source: 'Flamme ombrale',
      effectId: '82C'
    }),
    netRegexJa: netregexes/* default.gainsEffect */.Z.gainsEffect({
      source: 'シャドウフレイム',
      effectId: '82C'
    }),
    netRegexCn: netregexes/* default.gainsEffect */.Z.gainsEffect({
      source: '影烈火',
      effectId: '82C'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'damage',
        blame: matches.target,
        reportId: matches.targetId,
        text: `${matches.effect} (partial stack)`
      };
    }
  }, {
    id: 'E10S Damage Down Boss',
    type: 'GainsEffect',
    // Shackles being messed up appear to just give the Damage Down, with nothing else.
    // Messing up towers is the Thrice-Come Ruin effect (9E2), but also Damage Down.
    // TODO: some of these will be duplicated with others, like `E10S Throne Of Shadow`.
    // Maybe it'd be nice to figure out how to put the damage marker on that?
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      source: 'Shadowkeeper',
      effectId: '82C'
    }),
    netRegexDe: netregexes/* default.gainsEffect */.Z.gainsEffect({
      source: 'Schattenkönig',
      effectId: '82C'
    }),
    netRegexFr: netregexes/* default.gainsEffect */.Z.gainsEffect({
      source: 'Roi De L\'Ombre',
      effectId: '82C'
    }),
    netRegexJa: netregexes/* default.gainsEffect */.Z.gainsEffect({
      source: '影の王',
      effectId: '82C'
    }),
    netRegexCn: netregexes/* default.gainsEffect */.Z.gainsEffect({
      source: '影之王',
      effectId: '82C'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'damage',
        blame: matches.target,
        reportId: matches.targetId,
        text: `${matches.effect}`
      };
    }
  }, {
    // Shadow Warrior 4 dog room cleave
    // This can be mitigated by the whole group, so add a damage condition.
    id: 'E10S Barbs Of Agony',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: ['572A', '5B27'],
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const e10s = (e10s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e11n.ts


const e11n_triggerSet = {
  zoneId: zone_id/* default.EdensPromiseAnamorphosis */.Z.EdensPromiseAnamorphosis,
  damageWarn: {
    'E11N Burnt Strike Lightning': '562E',
    // Line cleave
    'E11N Burnt Strike Fire': '562C',
    // Line cleave
    'E11N Burnt Strike Holy': '5630',
    // Line cleave
    'E11N Burnout': '562F',
    // Burnt Strike lightning expansion
    'E11N Shining Blade': '5631',
    // Baited explosion
    'E11N Halo Of Flame Brightfire': '563B',
    // Red circle intermission explosion
    'E11N Halo Of Levin Brightfire': '563C',
    // Blue circle intermission explosion
    'E11N Resounding Crack': '564D',
    // Demi-Gukumatz 270 degree frontal cleave
    'E11N Image Burnt Strike Lightning': '5645',
    // Fate Breaker's Image line cleave
    'E11N Image Burnt Strike Fire': '5643',
    // Fate Breaker's Image line cleave
    'E11N Image Burnout': '5646' // Fate Breaker's Image lightning expansion

  },
  damageFail: {
    'E11N Blasting Zone': '563E' // Prismatic Deception charges

  },
  shareWarn: {
    'E11N Burn Mark': '564F' // Powder Mark debuff explosion

  },
  triggers: [{
    id: 'E11N Blastburn Knocked Off',
    type: 'Ability',
    // 562D = Burnt Strike fire followup during most of the fight
    // 5644 = same thing, but from Fatebreaker's Image
    netRegex: netregexes/* default.ability */.Z.ability({
      id: ['562D', '5644']
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'Renversé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const e11n = (e11n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e11s.ts


// 565A/568D Sinsmoke Bound Of Faith share
// 565E/5699 Bowshock hits target of 565D (twice) and two others
const e11s_triggerSet = {
  zoneId: zone_id/* default.EdensPromiseAnamorphosisSavage */.Z.EdensPromiseAnamorphosisSavage,
  damageWarn: {
    'E11S Burnt Strike Fire': '5652',
    // Line cleave
    'E11S Burnt Strike Lightning': '5654',
    // Line cleave
    'E11S Burnt Strike Holy': '5656',
    // Line cleave
    'E11S Shining Blade': '5657',
    // Baited explosion
    'E11S Burnt Strike Cycle Fire': '568E',
    // Line cleave during Cycle
    'E11S Burnt Strike Cycle Lightning': '5695',
    // Line cleave during Cycle
    'E11S Burnt Strike Cycle Holy': '569D',
    // Line cleave during Cycle
    'E11S Shining Blade Cycle': '569E',
    // Baited explosion during Cycle
    'E11S Halo Of Flame Brightfire': '566D',
    // Red circle intermission explosion
    'E11S Halo Of Levin Brightfire': '566C',
    // Blue circle intermission explosion
    'E11S Portal Of Flame Bright Pulse': '5671',
    // Red card intermission explosion
    'E11S Portal Of Levin Bright Pulse': '5670',
    // Blue card intermission explosion
    'E11S Resonant Winds': '5689',
    // Demi-Gukumatz "get in"
    'E11S Resounding Crack': '5688',
    // Demi-Gukumatz 270 degree frontal cleave
    'E11S Image Burnt Strike Lightning': '567B',
    // Fate Breaker's Image line cleave
    'E11N Image Burnout': '567C',
    // Fate Breaker's Image lightning expansion
    'E11N Image Burnt Strike Fire': '5679',
    // Fate Breaker's Image line cleave
    'E11N Image Burnt Strike Holy': '567B',
    // Fate Breaker's Image line cleave
    'E11N Image Shining Blade': '567E' // Fate Breaker's Image baited explosion

  },
  damageFail: {
    'E11S Burnout': '5655',
    // Burnt Strike lightning expansion
    'E11S Burnout Cycle': '5696',
    // Burnt Strike lightning expansion
    'E11S Blasting Zone': '5674' // Prismatic Deception charges

  },
  shareWarn: {
    'E11S Elemental Break': '5664',
    // Elemental Break protean
    'E11S Elemental Break Cycle': '568C',
    // Elemental Break protean during Cycle
    'E11S Sinsmite': '5667',
    // Lightning Elemental Break spread
    'E11S Sinsmite Cycle': '5694' // Lightning Elemental Break spread during Cycle

  },
  shareFail: {
    'E11S Burn Mark': '56A3',
    // Powder Mark debuff explosion
    'E11S Sinsight 1': '5661',
    // Holy Bound Of Faith tether
    'E11S Sinsight 2': '5BC7',
    // Holy Bound Of Faith tether from Fatebreaker's Image
    'E11S Sinsight 3': '56A0' // Holy Bound Of Faith tether during Cycle

  },
  soloFail: {
    'E11S Holy Sinsight Group Share': '5669'
  },
  triggers: [{
    id: 'E11S Blastburn Knocked Off',
    type: 'Ability',
    // 5653 = Burnt Strike fire followup during most of the fight
    // 567A = same thing, but from Fatebreaker's Image
    // 568F = same thing, but during Cycle of Faith
    netRegex: netregexes/* default.ability */.Z.ability({
      id: ['5653', '567A', '568F']
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'Renversé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const e11s = (e11s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e12n.ts

const e12n_triggerSet = {
  zoneId: zone_id/* default.EdensPromiseEternity */.Z.EdensPromiseEternity,
  damageWarn: {
    'E12N Judgment Jolt Single': '585F',
    // Ramuh get out cast
    'E12N Judgment Jolt': '4E30',
    // Ramuh get out cast
    'E12N Temporary Current Single': '585C',
    // Levi get under cast
    'E12N Temporary Current': '4E2D',
    // Levi get under cast
    'E12N Conflag Strike Single': '585D',
    // Ifrit get sides cast
    'E12N Conflag Strike': '4E2E',
    // Ifrit get sides cast
    'E12N Ferostorm Single': '585E',
    // Garuda get intercardinals cast
    'E12N Ferostorm': '4E2F',
    // Garuda get intercardinals cast
    'E12N Rapturous Reach 1': '5878',
    // Haircut
    'E12N Rapturous Reach 2': '5877',
    // Haircut
    'E12N Bomb Explosion': '586D',
    // Small bomb explosion
    'E12N Titanic Bomb Explosion': '586F' // Large bomb explosion

  },
  shareWarn: {
    'E12N Earthshaker': '5885',
    // Earthshaker on first platform
    'E12N Promise Frigid Stone 1': '5867',
    // Shiva spread with sliding
    'E12N Promise Frigid Stone 2': '5869' // Shiva spread with Rapturous Reach

  }
};
/* harmony default export */ const e12n = (e12n_triggerSet);
// EXTERNAL MODULE: ./resources/not_reached.ts
var not_reached = __webpack_require__(62);
// EXTERNAL MODULE: ./resources/outputs.ts
var outputs = __webpack_require__(81);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e12s.ts





// TODO: add separate damageWarn-esque icon for damage downs?
// TODO: 58A6 Under The Weight / 58B2 Classical Sculpture missing somebody in party warning?
// TODO: 58CA Dark Water III / 58C5 Shell Crusher should hit everyone in party
// TODO: Dark Aero III 58D4 should not be a share except on advanced relativity for double aero.
// (for gains effect, single aero = ~23 seconds, double aero = ~31 seconds duration)
// Due to changes introduced in patch 5.2, overhead markers now have a random offset
// added to their ID. This offset currently appears to be set per instance, so
// we can determine what it is from the first overhead marker we see.
// The first 1B marker in the encounter is the formless tankbuster, ID 004F.
const firstHeadmarker = parseInt('00DA', 16);

const getHeadmarkerId = (data, matches) => {
  // If we naively just check !data.decOffset and leave it, it breaks if the first marker is 00DA.
  // (This makes the offset 0, and !0 is true.)
  if (typeof data.decOffset === 'undefined') data.decOffset = parseInt(matches.id, 16) - firstHeadmarker; // The leading zeroes are stripped when converting back to string, so we re-add them here.
  // Fortunately, we don't have to worry about whether or not this is robust,
  // since we know all the IDs that will be present in the encounter.

  return (parseInt(matches.id, 16) - data.decOffset).toString(16).toUpperCase().padStart(4, '0');
};

const e12s_triggerSet = {
  zoneId: zone_id/* default.EdensPromiseEternitySavage */.Z.EdensPromiseEternitySavage,
  damageWarn: {
    'E12S Promise Rapturous Reach Left': '58AD',
    // Haircut with left safe side
    'E12S Promise Rapturous Reach Right': '58AE',
    // Haircut with right safe side
    'E12S Promise Temporary Current': '4E44',
    // Levi get under cast (damage down)
    'E12S Promise Conflag Strike': '4E45',
    // Ifrit get sides cast (damage down)
    'E12S Promise Ferostorm': '4E46',
    // Garuda get intercardinals cast (damage down)
    'E12S Promise Judgment Jolt': '4E47',
    // Ramuh get out cast (damage down)
    'E12S Promise Shatter': '589C',
    // Ice Pillar explosion if tether not gotten
    'E12S Promise Impact': '58A1',
    // Titan bomb drop
    'E12S Oracle Dark Blizzard III': '58D3',
    // Relativity donut mechanic
    'E12S Oracle Apocalypse': '58E6' // Light up circle explosions (damage down)

  },
  damageFail: {
    'E12S Oracle Maelstrom': '58DA' // Advanced Relativity traffic light aoe

  },
  gainsEffectFail: {
    'E12S Oracle Doom': '9D4' // Relativity punishment for multiple mistakes

  },
  shareWarn: {
    'E12S Promise Frigid Stone': '589E',
    // Shiva spread
    'E12S Oracle Darkest Dance': '4E33',
    // Farthest target bait + jump before knockback
    'E12S Oracle Dark Current': '58D8',
    // Baited traffic light lasers
    'E12S Oracle Spirit Taker': '58C6',
    // Random jump spread mechanic after Shell Crusher
    'E12S Oracle Somber Dance 1': '58BF',
    // Farthest target bait for Dual Apocalypse
    'E12S Oracle Somber Dance 2': '58C0' // Second somber dance jump

  },
  shareFail: {
    'E12S Promise Weight Of The World': '58A5',
    // Titan bomb blue marker
    'E12S Promise Pulse Of The Land': '58A3',
    // Titan bomb yellow marker
    'E12S Oracle Dark Eruption 1': '58CE',
    // Initial warmup spread mechanic
    'E12S Oracle Dark Eruption 2': '58CD',
    // Relativity spread mechanic
    'E12S Oracle Black Halo': '58C7' // Tankbuster cleave

  },
  soloWarn: {
    'E12S Promise Force Of The Land': '58A4'
  },
  triggers: [{
    // Big circle ground aoes during Shiva junction.
    // This can be shielded through as long as that person doesn't stack.
    id: 'E12S Icicle Impact',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '4E5A',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    id: 'E12S Headmarker',
    type: 'HeadMarker',
    netRegex: netregexes/* default.headMarker */.Z.headMarker({}),
    run: (data, matches) => {
      const id = getHeadmarkerId(data, matches);
      const firstLaserMarker = '0091';
      const lastLaserMarker = '0098';

      if (id >= firstLaserMarker && id <= lastLaserMarker) {
        var _data$laserNameToNum;

        // ids are sequential: #1 square, #2 square, #3 square, #4 square, #1 triangle etc
        const decOffset = parseInt(id, 16) - parseInt(firstLaserMarker, 16); // decOffset is 0-7, so map 0-3 to 1-4 and 4-7 to 1-4.

        (_data$laserNameToNum = data.laserNameToNum) !== null && _data$laserNameToNum !== void 0 ? _data$laserNameToNum : data.laserNameToNum = {};
        data.laserNameToNum[matches.target] = decOffset % 4 + 1;
      }
    }
  }, {
    // These sculptures are added at the start of the fight, so we need to check where they
    // use the "Classical Sculpture" ability and end up on the arena for real.
    id: 'E12S Promise Chiseled Sculpture Classical Sculpture',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      source: 'Chiseled Sculpture',
      id: '58B2'
    }),
    run: (data, matches) => {
      var _data$sculptureYPosit;

      // This will run per person that gets hit by the same sculpture, but that's fine.
      // Record the y position of each sculpture so we can use it for better text later.
      (_data$sculptureYPosit = data.sculptureYPositions) !== null && _data$sculptureYPosit !== void 0 ? _data$sculptureYPosit : data.sculptureYPositions = {};
      data.sculptureYPositions[matches.sourceId.toUpperCase()] = parseFloat(matches.y);
    }
  }, {
    // The source of the tether is the player, the target is the sculpture.
    id: 'E12S Promise Chiseled Sculpture Tether',
    type: 'Tether',
    netRegex: netregexes/* default.tether */.Z.tether({
      target: 'Chiseled Sculpture',
      id: '0011'
    }),
    run: (data, matches) => {
      var _data$sculptureTether;

      (_data$sculptureTether = data.sculptureTetherNameToId) !== null && _data$sculptureTether !== void 0 ? _data$sculptureTether : data.sculptureTetherNameToId = {};
      data.sculptureTetherNameToId[matches.source] = matches.targetId.toUpperCase();
    }
  }, {
    id: 'E12S Promise Blade Of Flame Counter',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      source: 'Chiseled Sculpture',
      id: '58B3'
    }),
    delaySeconds: 1,
    suppressSeconds: 1,
    run: data => {
      data.bladeOfFlameCount = data.bladeOfFlameCount || 0;
      data.bladeOfFlameCount++;
    }
  }, {
    // This is the Chiseled Sculpture laser with the limit cut dots.
    id: 'E12S Promise Blade Of Flame',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      type: '22',
      source: 'Chiseled Sculpture',
      id: '58B3'
    }),
    mistake: (data, matches) => {
      if (!data.laserNameToNum || !data.sculptureTetherNameToId || !data.sculptureYPositions) return; // Find the person who has this laser number and is tethered to this statue.

      const number = (data.bladeOfFlameCount || 0) + 1;
      const sourceId = matches.sourceId.toUpperCase();
      const names = Object.keys(data.laserNameToNum);
      const withNum = names.filter(name => {
        var _data$laserNameToNum2;

        return ((_data$laserNameToNum2 = data.laserNameToNum) === null || _data$laserNameToNum2 === void 0 ? void 0 : _data$laserNameToNum2[name]) === number;
      });
      const owners = withNum.filter(name => {
        var _data$sculptureTether2;

        return ((_data$sculptureTether2 = data.sculptureTetherNameToId) === null || _data$sculptureTether2 === void 0 ? void 0 : _data$sculptureTether2[name]) === sourceId;
      }); // if some logic error, just abort.

      if (owners.length !== 1) return; // The owner hitting themselves isn't a mistake...technically.

      if (owners[0] === matches.target) return; // Now try to figure out which statue is which.
      // People can put these wherever.  They could go sideways, or diagonal, or whatever.
      // It seems mooooost people put these north / south (on the south edge of the arena).
      // Let's say a minimum of 2 yalms apart in the y direction to consider them "north/south".

      const minimumYalmsForStatues = 2;
      let isStatuePositionKnown = false;
      let isStatueNorth = false;
      const sculptureIds = Object.keys(data.sculptureYPositions);

      if (sculptureIds.length === 2 && sculptureIds.includes(sourceId)) {
        const otherId = sculptureIds[0] === sourceId ? sculptureIds[1] : sculptureIds[0];
        const sourceY = data.sculptureYPositions[sourceId];
        const otherY = data.sculptureYPositions[otherId !== null && otherId !== void 0 ? otherId : ''];
        if (sourceY === undefined || otherY === undefined || otherId === undefined) throw new not_reached/* UnreachableCode */.$();
        const yDiff = Math.abs(sourceY - otherY);

        if (yDiff > minimumYalmsForStatues) {
          isStatuePositionKnown = true;
          isStatueNorth = sourceY < otherY;
        }
      }

      const owner = owners[0];
      const ownerNick = data.ShortName(owner);
      let text = {
        en: `${matches.ability} (from ${ownerNick}, #${number})`,
        de: `${matches.ability} (von ${ownerNick}, #${number})`,
        fr: `${matches.ability} (de ${ownerNick}, #${number})`,
        ja: `${matches.ability} (${ownerNick}から、#${number})`,
        cn: `${matches.ability} (来自${ownerNick}，#${number})`,
        ko: `${matches.ability} (대상자 "${ownerNick}", ${number}번)`
      };

      if (isStatuePositionKnown && isStatueNorth) {
        text = {
          en: `${matches.ability} (from ${ownerNick}, #${number} north)`,
          de: `${matches.ability} (von ${ownerNick}, #${number} norden)`,
          fr: `${matches.ability} (de ${ownerNick}, #${number} nord)`,
          ja: `${matches.ability} (北の${ownerNick}から、#${number})`,
          cn: `${matches.ability} (来自北方${ownerNick}，#${number})`,
          ko: `${matches.ability} (대상자 "${ownerNick}", ${number}번 북쪽)`
        };
      } else if (isStatuePositionKnown && !isStatueNorth) {
        text = {
          en: `${matches.ability} (from ${ownerNick}, #${number} south)`,
          de: `${matches.ability} (von ${ownerNick}, #${number} Süden)`,
          fr: `${matches.ability} (de ${ownerNick}, #${number} sud)`,
          ja: `${matches.ability} (南の${ownerNick}から、#${number})`,
          cn: `${matches.ability} (来自南方${ownerNick}，#${number})`,
          ko: `${matches.ability} (대상자 "${ownerNick}", ${number}번 남쪽)`
        };
      }

      return {
        type: 'fail',
        name: matches.target,
        blame: owner,
        reportId: matches.targetId,
        text: text
      };
    }
  }, {
    id: 'E12S Promise Ice Pillar Tracker',
    type: 'Tether',
    netRegex: netregexes/* default.tether */.Z.tether({
      source: 'Ice Pillar',
      id: ['0001', '0039']
    }),
    run: (data, matches) => {
      var _data$pillarIdToOwner;

      (_data$pillarIdToOwner = data.pillarIdToOwner) !== null && _data$pillarIdToOwner !== void 0 ? _data$pillarIdToOwner : data.pillarIdToOwner = {};
      data.pillarIdToOwner[matches.sourceId] = matches.target;
    }
  }, {
    id: 'E12S Promise Ice Pillar Mistake',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      source: 'Ice Pillar',
      id: '589B'
    }),
    condition: (data, matches) => {
      if (!data.pillarIdToOwner) return false;
      return matches.target !== data.pillarIdToOwner[matches.sourceId];
    },
    mistake: (data, matches) => {
      var _data$pillarIdToOwner2;

      const pillarOwner = data.ShortName((_data$pillarIdToOwner2 = data.pillarIdToOwner) === null || _data$pillarIdToOwner2 === void 0 ? void 0 : _data$pillarIdToOwner2[matches.sourceId]);
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: `${matches.ability} (from ${pillarOwner})`,
          de: `${matches.ability} (von ${pillarOwner})`,
          fr: `${matches.ability} (de ${pillarOwner})`,
          ja: `${matches.ability} (${pillarOwner}から)`,
          cn: `${matches.ability} (来自${pillarOwner})`,
          ko: `${matches.ability} (대상자 "${pillarOwner}")`
        }
      };
    }
  }, {
    id: 'E12S Promise Gain Fire Resistance Down II',
    type: 'GainsEffect',
    // The Beastly Sculpture gives a 3 second debuff, the Regal Sculpture gives a 14s one.
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '832'
    }),
    run: (data, matches) => {
      var _data$fire;

      (_data$fire = data.fire) !== null && _data$fire !== void 0 ? _data$fire : data.fire = {};
      data.fire[matches.target] = true;
    }
  }, {
    id: 'E12S Promise Lose Fire Resistance Down II',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '832'
    }),
    run: (data, matches) => {
      var _data$fire2;

      (_data$fire2 = data.fire) !== null && _data$fire2 !== void 0 ? _data$fire2 : data.fire = {};
      data.fire[matches.target] = false;
    }
  }, {
    id: 'E12S Promise Small Lion Tether',
    type: 'Tether',
    netRegex: netregexes/* default.tether */.Z.tether({
      source: 'Beastly Sculpture',
      id: '0011'
    }),
    netRegexDe: netregexes/* default.tether */.Z.tether({
      source: 'Abbild Eines Löwen',
      id: '0011'
    }),
    netRegexFr: netregexes/* default.tether */.Z.tether({
      source: 'Création Léonine',
      id: '0011'
    }),
    netRegexJa: netregexes/* default.tether */.Z.tether({
      source: '創られた獅子',
      id: '0011'
    }),
    netRegexCn: netregexes/* default.tether */.Z.tether({
      source: '被创造的狮子',
      id: '0011'
    }),
    run: (data, matches) => {
      var _data$smallLionIdToOw, _data$smallLionOwners;

      (_data$smallLionIdToOw = data.smallLionIdToOwner) !== null && _data$smallLionIdToOw !== void 0 ? _data$smallLionIdToOw : data.smallLionIdToOwner = {};
      data.smallLionIdToOwner[matches.sourceId.toUpperCase()] = matches.target;
      (_data$smallLionOwners = data.smallLionOwners) !== null && _data$smallLionOwners !== void 0 ? _data$smallLionOwners : data.smallLionOwners = [];
      data.smallLionOwners.push(matches.target);
    }
  }, {
    id: 'E12S Promise Small Lion Lionsblaze',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      source: 'Beastly Sculpture',
      id: '58B9'
    }),
    netRegexDe: netregexes/* default.abilityFull */.Z.abilityFull({
      source: 'Abbild Eines Löwen',
      id: '58B9'
    }),
    netRegexFr: netregexes/* default.abilityFull */.Z.abilityFull({
      source: 'Création Léonine',
      id: '58B9'
    }),
    netRegexJa: netregexes/* default.abilityFull */.Z.abilityFull({
      source: '創られた獅子',
      id: '58B9'
    }),
    netRegexCn: netregexes/* default.abilityFull */.Z.abilityFull({
      source: '被创造的狮子',
      id: '58B9'
    }),
    mistake: (data, matches) => {
      var _data$smallLionIdToOw2;

      // Folks baiting the big lion second can take the first small lion hit,
      // so it's not sufficient to check only the owner.
      if (!data.smallLionOwners) return;
      const owner = (_data$smallLionIdToOw2 = data.smallLionIdToOwner) === null || _data$smallLionIdToOw2 === void 0 ? void 0 : _data$smallLionIdToOw2[matches.sourceId.toUpperCase()];
      if (!owner) return;
      if (matches.target === owner) return; // If the target also has a small lion tether, that is always a mistake.
      // Otherwise, it's only a mistake if the target has a fire debuff.

      const hasSmallLion = data.smallLionOwners.includes(matches.target);
      const hasFireDebuff = data.fire && data.fire[matches.target];

      if (hasSmallLion || hasFireDebuff) {
        const ownerNick = data.ShortName(owner);
        const centerY = -75;
        const x = parseFloat(matches.x);
        const y = parseFloat(matches.y);
        let dirObj = null;

        if (y < centerY) {
          if (x > 0) dirObj = outputs/* default.dirNE */.Z.dirNE;else dirObj = outputs/* default.dirNW */.Z.dirNW;
        } else {
          if (x > 0) dirObj = outputs/* default.dirSE */.Z.dirSE;else dirObj = outputs/* default.dirSW */.Z.dirSW;
        }

        return {
          type: 'fail',
          blame: owner,
          name: matches.target,
          reportId: matches.targetId,
          text: {
            en: `${matches.ability} (from ${ownerNick}, ${dirObj['en']})`,
            de: `${matches.ability} (von ${ownerNick}, ${dirObj['de']})`,
            fr: `${matches.ability} (de ${ownerNick}, ${dirObj['fr']})`,
            ja: `${matches.ability} (${ownerNick}から, ${dirObj['ja']})`,
            cn: `${matches.ability} (来自${ownerNick}, ${dirObj['cn']}`,
            ko: `${matches.ability} (대상자 "${ownerNick}", ${dirObj['ko']})`
          }
        };
      }
    }
  }, {
    id: 'E12S Promise North Big Lion',
    type: 'AddedCombatant',
    netRegex: netregexes/* default.addedCombatantFull */.Z.addedCombatantFull({
      name: 'Regal Sculpture'
    }),
    run: (data, matches) => {
      const y = parseFloat(matches.y);
      const centerY = -75;
      if (y < centerY) data.northBigLion = matches.id.toUpperCase();
    }
  }, {
    id: 'E12S Promise Big Lion Kingsblaze',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      source: 'Regal Sculpture',
      id: '4F9E'
    }),
    netRegexDe: netregexes/* default.ability */.Z.ability({
      source: 'Abbild eines großen Löwen',
      id: '4F9E'
    }),
    netRegexFr: netregexes/* default.ability */.Z.ability({
      source: 'création léonine royale',
      id: '4F9E'
    }),
    netRegexJa: netregexes/* default.ability */.Z.ability({
      source: '創られた獅子王',
      id: '4F9E'
    }),
    netRegexCn: netregexes/* default.ability */.Z.ability({
      source: '被创造的狮子王',
      id: '4F9E'
    }),
    mistake: (data, matches) => {
      var _shared$lang, _fireDebuff$lang;

      const singleTarget = matches.type === '21';
      const hasFireDebuff = data.fire && data.fire[matches.target]; // Success if only one person takes it and they have no fire debuff.

      if (singleTarget && !hasFireDebuff) return;
      const northBigLion = {
        en: 'north big lion',
        de: 'Nordem, großer Löwe',
        fr: 'Grand lion du nord',
        ja: '大ライオン(北)',
        cn: '北方大狮子',
        ko: '북쪽 큰 사자'
      };
      const southBigLion = {
        en: 'south big lion',
        de: 'Süden, großer Löwe',
        fr: 'Grand lion du sud',
        ja: '大ライオン(南)',
        cn: '南方大狮子',
        ko: '남쪽 큰 사자'
      };
      const shared = {
        en: 'shared',
        de: 'geteilt',
        fr: 'Partagé(e)',
        ja: '重ねた',
        cn: '重叠',
        ko: '같이 맞음'
      };
      const fireDebuff = {
        en: 'had fire',
        de: 'hatte Feuer',
        fr: 'A eu(e) le feu',
        ja: '炎付き',
        cn: '火Debuff',
        ko: '화염 디버프 받음'
      };
      const labels = [];
      const lang = data.options.ParserLanguage;

      if (data.northBigLion) {
        var _northBigLion$lang, _southBigLion$lang;

        if (data.northBigLion === matches.sourceId) labels.push((_northBigLion$lang = northBigLion[lang]) !== null && _northBigLion$lang !== void 0 ? _northBigLion$lang : northBigLion['en']);else labels.push((_southBigLion$lang = southBigLion[lang]) !== null && _southBigLion$lang !== void 0 ? _southBigLion$lang : southBigLion['en']);
      }

      if (!singleTarget) labels.push((_shared$lang = shared[lang]) !== null && _shared$lang !== void 0 ? _shared$lang : shared['en']);
      if (hasFireDebuff) labels.push((_fireDebuff$lang = fireDebuff[lang]) !== null && _fireDebuff$lang !== void 0 ? _fireDebuff$lang : fireDebuff['en']);
      return {
        type: 'fail',
        name: matches.target,
        reportId: matches.targetId,
        text: `${matches.ability} (${labels.join(', ')})`
      };
    }
  }, {
    id: 'E12S Knocked Off',
    type: 'Ability',
    // 589A = Ice Pillar (promise shiva phase)
    // 58B6 = Palm Of Temperance (promise statue hand)
    // 58B7 = Laser Eye (promise lion phase)
    // 58C1 = Darkest Dance (oracle tank jump + knockback in beginning and triple apoc)
    netRegex: netregexes/* default.ability */.Z.ability({
      id: ['589A', '58B6', '58B7', '58C1']
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'Renversé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }, {
    id: 'E12S Oracle Shadoweye',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '58D2',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const e12s = (e12s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e1n.ts

const e1n_triggerSet = {
  zoneId: zone_id/* default.EdensGateResurrection */.Z.EdensGateResurrection,
  damageWarn: {
    'E1N Eden\'s Thunder III': '44ED',
    'E1N Eden\'s Blizzard III': '44EC',
    'E1N Pure Beam': '3D9E',
    'E1N Paradise Lost': '3DA0'
  },
  damageFail: {
    'E1N Eden\'s Flare': '3D97',
    'E1N Pure Light': '3DA3'
  },
  shareFail: {
    'E1N Fire III': '44EB',
    'E1N Vice Of Vanity': '44E7',
    // tank lasers
    'E1N Vice Of Apathy': '44E8' // dps puddles

  }
};
/* harmony default export */ const e1n = (e1n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e1s.ts

// TODO: failing to interrupt Mana Boost (3D8D)
// TODO: failing to pass healer debuff?
// TODO: what happens if you don't kill a meteor during four orbs?
const e1s_triggerSet = {
  zoneId: zone_id/* default.EdensGateResurrectionSavage */.Z.EdensGateResurrectionSavage,
  damageWarn: {
    'E1S Eden\'s Thunder III': '44F7',
    'E1S Eden\'s Blizzard III': '44F6',
    'E1S Eden\'s Regained Blizzard III': '44FA',
    'E1S Pure Beam Trident 1': '3D83',
    'E1S Pure Beam Trident 2': '3D84',
    'E1S Paradise Lost': '3D87'
  },
  damageFail: {
    'E1S Eden\'s Flare': '3D73',
    'E1S Pure Light': '3D8A'
  },
  shareFail: {
    'E1S Fire/Thunder III': '44FB',
    'E1S Pure Beam Single': '3D81',
    'E1S Vice Of Vanity': '44F1',
    // tank lasers
    'E1S Vice of Apathy': '44F2' // dps puddles

  }
};
/* harmony default export */ const e1s = (e1s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e2n.ts



// TODO: shadoweye failure (top line fail, bottom line success, effect there too)
// [16:17:35.966] 16:400110FE:Voidwalker:40B7:Shadoweye:10612345:Tini Poutini:F:10000:100190F:
// [16:17:35.966] 16:400110FE:Voidwalker:40B7:Shadoweye:1067890A:Potato Chippy:1:0:1C:8000:
// gains the effect of Petrification from Voidwalker for 10.00 Seconds.
// TODO: puddle failure?
const e2n_triggerSet = {
  zoneId: zone_id/* default.EdensGateDescent */.Z.EdensGateDescent,
  damageWarn: {
    'E2N Doomvoid Slicer': '3E3C',
    'E2N Doomvoid Guillotine': '3E3B'
  },
  triggers: [{
    id: 'E2N Nyx',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '3E3D',
      ...oopsy_common/* playerDamageFields */.np
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: 'Booped',
          de: 'Nyx berührt',
          fr: 'Malus de dégâts',
          ja: '雑魚に当たる',
          cn: '吃头了',
          ko: '닉스'
        }
      };
    }
  }]
};
/* harmony default export */ const e2n = (e2n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e2s.ts



// TODO: shadoweye failure
// TODO: Empty Hate (3E59/3E5A) hits everybody, so hard to tell about knockback
// TODO: maybe mark hell wind people who got clipped by stack?
// TODO: missing puddles?
// TODO: missing light/dark circle stack
const e2s_triggerSet = {
  zoneId: zone_id/* default.EdensGateDescentSavage */.Z.EdensGateDescentSavage,
  damageWarn: {
    'E2S Doomvoid Slicer': '3E50',
    'E3S Empty Rage': '3E6C',
    'E3S Doomvoid Guillotine': '3E4F'
  },
  shareWarn: {
    'E2S Doomvoid Cleaver': '3E64'
  },
  triggers: [{
    id: 'E2S Shadoweye',
    type: 'GainsEffect',
    // Stone Curse
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '589'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }, {
    id: 'E2S Nyx',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '3E51',
      ...oopsy_common/* playerDamageFields */.np
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: 'Booped',
          de: 'Nyx berührt',
          fr: 'Malus de dégâts',
          ja: '雑魚に当たる',
          cn: '吃头了',
          ko: '닉스'
        }
      };
    }
  }]
};
/* harmony default export */ const e2s = (e2s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e3n.ts

const e3n_triggerSet = {
  zoneId: zone_id/* default.EdensGateInundation */.Z.EdensGateInundation,
  damageWarn: {
    'E3N Monster Wave 1': '3FCA',
    'E3N Monster Wave 2': '3FE9',
    'E3N Maelstrom': '3FD9',
    'E3N Swirling Tsunami': '3FD5'
  },
  damageFail: {
    'E3N Temporary Current 1': '3FCE',
    'E3N Temporary Current 2': '3FCD',
    'E3N Spinning Dive': '3FDB'
  },
  shareFail: {
    'E3N Rip Current': '3FC7'
  }
};
/* harmony default export */ const e3n = (e3n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e3s.ts

// TODO: Scouring Tsunami (3CE0) on somebody other than target
// TODO: Sweeping Tsunami (3FF5) on somebody other than tanks
// TODO: Rip Current (3FE0, 3FE1) on somebody other than target/tanks
// TODO: Boiled Alive (4006) is failing puddles???
// TODO: failing to cleanse Splashing Waters
// TODO: does getting hit by undersea quake cause an ability?
const e3s_triggerSet = {
  zoneId: zone_id/* default.EdensGateInundationSavage */.Z.EdensGateInundationSavage,
  damageWarn: {
    'E3S Monster Wave 1': '3FE5',
    'E3S Monster Wave 2': '3FE9',
    'E3S Maelstrom': '3FFB',
    'E3S Swirling Tsunami': '3FF4'
  },
  damageFail: {
    'E3S Temporary Current 1': '3FEA',
    'E3S Temporary Current 2': '3FEB',
    'E3S Temporary Current 3': '3FEC',
    'E3S Temporary Current 4': '3FED',
    'E3S Spinning Dive': '3FFD'
  }
};
/* harmony default export */ const e3s = (e3s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e4n.ts

const e4n_triggerSet = {
  zoneId: zone_id/* default.EdensGateSepulture */.Z.EdensGateSepulture,
  damageWarn: {
    'E4N Weight of the Land': '40EB',
    'E4N Evil Earth': '40EF',
    'E4N Aftershock 1': '41B4',
    'E4N Aftershock 2': '40F0',
    'E4N Explosion 1': '40ED',
    'E4N Explosion 2': '40F5',
    'E4N Landslide': '411B',
    'E4N Rightward Landslide': '4100',
    'E4N Leftward Landslide': '40FF',
    'E4N Massive Landslide': '40FC',
    'E4N Seismic Wave': '40F3',
    'E4N Fault Line': '4101'
  }
};
/* harmony default export */ const e4n = (e4n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e4s.ts



// TODO: could track people get hitting by markers they shouldn't
// TODO: could track non-tanks getting hit by tankbusters, megaliths
// TODO: could track non-target getting hit by tankbuster
const e4s_triggerSet = {
  zoneId: zone_id/* default.EdensGateSepultureSavage */.Z.EdensGateSepultureSavage,
  damageWarn: {
    'E4S Weight of the Land': '4108',
    'E4S Evil Earth': '410C',
    'E4S Aftershock 1': '41B5',
    'E4S Aftershock 2': '410D',
    'E4S Explosion': '410A',
    'E4S Landslide': '411B',
    'E4S Rightward Landslide': '411D',
    'E4S Leftward Landslide': '411C',
    'E4S Massive Landslide 1': '4118',
    'E4S Massive Landslide 2': '4119',
    'E4S Seismic Wave': '4110'
  },
  damageFail: {
    'E4S Dual Earthen Fists 1': '4135',
    'E4S Dual Earthen Fists 2': '4687',
    'E4S Plate Fracture': '43EA',
    'E4S Earthen Fist 1': '43CA',
    'E4S Earthen Fist 2': '43C9'
  },
  triggers: [{
    id: 'E4S Fault Line Collect',
    type: 'StartsUsing',
    netRegex: netregexes/* default.startsUsing */.Z.startsUsing({
      id: '411E',
      source: 'Titan'
    }),
    netRegexDe: netregexes/* default.startsUsing */.Z.startsUsing({
      id: '411E',
      source: 'Titan'
    }),
    netRegexFr: netregexes/* default.startsUsing */.Z.startsUsing({
      id: '411E',
      source: 'Titan'
    }),
    netRegexJa: netregexes/* default.startsUsing */.Z.startsUsing({
      id: '411E',
      source: 'タイタン'
    }),
    netRegexCn: netregexes/* default.startsUsing */.Z.startsUsing({
      id: '411E',
      source: '泰坦'
    }),
    netRegexKo: netregexes/* default.startsUsing */.Z.startsUsing({
      id: '411E',
      source: '타이탄'
    }),
    run: (data, matches) => {
      data.faultLineTarget = matches.target;
    }
  }, {
    id: 'E4S Fault Line',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '411E',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.faultLineTarget !== matches.target,
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: 'Run Over',
          de: 'Wurde überfahren',
          fr: 'Écrasé(e)',
          ja: '突進に当たる',
          cn: '被碾了',
          ko: '돌진 맞음'
        }
      };
    }
  }]
};
/* harmony default export */ const e4s = (e4s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e5n.ts



const e5n_triggerSet = {
  zoneId: zone_id/* default.EdensVerseFulmination */.Z.EdensVerseFulmination,
  damageWarn: {
    'E5N Impact': '4E3A',
    // Stratospear landing AoE
    'E5N Lightning Bolt': '4B9C',
    // Stormcloud standard attack
    'E5N Gallop': '4B97',
    // Sideways add charge
    'E5N Shock Strike': '4BA1',
    // Small AoE circles during Thunderstorm
    'E5N Volt Strike': '4CF2' // Large AoE circles during Thunderstorm

  },
  damageFail: {
    'E5N Judgment Jolt': '4B8F' // Stratospear explosions

  },
  triggers: [{
    // This happens when a player gets 4+ stacks of orbs. Don't be greedy!
    id: 'E5N Static Condensation',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '8B5'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }, {
    // Helper for orb pickup failures
    id: 'E5N Orb Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '8B4'
    }),
    run: (data, matches) => {
      var _data$hasOrb;

      (_data$hasOrb = data.hasOrb) !== null && _data$hasOrb !== void 0 ? _data$hasOrb : data.hasOrb = {};
      data.hasOrb[matches.target] = true;
    }
  }, {
    id: 'E5N Orb Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '8B4'
    }),
    run: (data, matches) => {
      var _data$hasOrb2;

      (_data$hasOrb2 = data.hasOrb) !== null && _data$hasOrb2 !== void 0 ? _data$hasOrb2 : data.hasOrb = {};
      data.hasOrb[matches.target] = false;
    }
  }, {
    id: 'E5N Divine Judgement Volts',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '4B9A',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => !data.hasOrb || !data.hasOrb[matches.target],
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: `${matches.ability} (no orb)`,
          de: `${matches.ability} (kein Orb)`,
          fr: `${matches.ability} (pas d'orbe)`,
          ja: `${matches.ability} (雷玉無し)`,
          cn: `${matches.ability} (没吃球)`,
          ko: `${matches.ability} (구슬 안먹음)`
        }
      };
    }
  }, {
    id: 'E5N Stormcloud Target Tracking',
    type: 'HeadMarker',
    netRegex: netregexes/* default.headMarker */.Z.headMarker({
      id: '006E'
    }),
    run: (data, matches) => {
      var _data$cloudMarkers;

      (_data$cloudMarkers = data.cloudMarkers) !== null && _data$cloudMarkers !== void 0 ? _data$cloudMarkers : data.cloudMarkers = [];
      data.cloudMarkers.push(matches.target);
    }
  }, {
    // This ability is seen only if players stacked the clouds instead of spreading them.
    id: 'E5N The Parting Clouds',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '4B9D',
      ...oopsy_common/* playerDamageFields */.np
    }),
    suppressSeconds: 30,
    mistake: (data, matches) => {
      for (const name of (_data$cloudMarkers2 = data.cloudMarkers) !== null && _data$cloudMarkers2 !== void 0 ? _data$cloudMarkers2 : []) {
        var _data$cloudMarkers2;

        return {
          type: 'fail',
          blame: name,
          text: {
            en: `${matches.ability} (clouds too close)`,
            de: `${matches.ability} (Wolken zu nahe)`,
            fr: `${matches.ability} (nuages trop proches)`,
            ja: `${matches.ability} (雲近すぎ)`,
            cn: `${matches.ability} (雷云重叠)`,
            ko: `${matches.ability} (구름이 너무 가까움)`
          }
        };
      }
    }
  }, {
    id: 'E5N Stormcloud cleanup',
    type: 'HeadMarker',
    netRegex: netregexes/* default.headMarker */.Z.headMarker({
      id: '006E'
    }),
    delaySeconds: 30,
    // Stormclouds resolve well before this.
    run: data => {
      delete data.cloudMarkers;
    }
  }]
};
/* harmony default export */ const e5n = (e5n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e5s.ts




// TODO: is there a different ability if the shield duty action isn't used properly?
// TODO: is there an ability from Raiden (the bird) if you get eaten?
// TODO: maybe chain lightning warning if you get hit while you have system shock (8B8)
const noOrb = str => {
  return {
    en: str + ' (no orb)',
    de: str + ' (kein Orb)',
    fr: str + ' (pas d\'orbe)',
    ja: str + ' (雷玉無し)',
    cn: str + ' (没吃球)',
    ko: str + ' (구슬 없음)'
  };
};

const e5s_triggerSet = {
  zoneId: zone_id/* default.EdensVerseFulminationSavage */.Z.EdensVerseFulminationSavage,
  damageWarn: {
    'E5S Impact': '4E3B',
    // Stratospear landing AoE
    'E5S Gallop': '4BB4',
    // Sideways add charge
    'E5S Shock Strike': '4BC1',
    // Small AoE circles during Thunderstorm
    'E5S Stepped Leader Twister': '4BC7',
    // Twister stepped leader
    'E5S Stepped Leader Donut': '4BC8',
    // Donut stepped leader
    'E5S Shock': '4E3D' // Hated of Levin Stormcloud-cleansable exploding debuff

  },
  damageFail: {
    'E5S Judgment Jolt': '4BA7' // Stratospear explosions

  },
  shareWarn: {
    'E5S Volt Strike Double': '4BC3',
    // Large AoE circles during Thunderstorm
    'E5S Crippling Blow': '4BCA',
    'E5S Chain Lightning Double': '4BC5'
  },
  triggers: [{
    // Helper for orb pickup failures
    id: 'E5S Orb Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '8B4'
    }),
    run: (data, matches) => {
      var _data$hasOrb;

      (_data$hasOrb = data.hasOrb) !== null && _data$hasOrb !== void 0 ? _data$hasOrb : data.hasOrb = {};
      data.hasOrb[matches.target] = true;
    }
  }, {
    id: 'E5S Orb Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '8B4'
    }),
    run: (data, matches) => {
      var _data$hasOrb2;

      (_data$hasOrb2 = data.hasOrb) !== null && _data$hasOrb2 !== void 0 ? _data$hasOrb2 : data.hasOrb = {};
      data.hasOrb[matches.target] = false;
    }
  }, {
    id: 'E5S Divine Judgement Volts',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '4BB7',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => !data.hasOrb || !data.hasOrb[matches.target],
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: noOrb(matches.ability)
      };
    }
  }, {
    id: 'E5S Volt Strike Orb',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '4BC3',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => !data.hasOrb || !data.hasOrb[matches.target],
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: noOrb(matches.ability)
      };
    }
  }, {
    id: 'E5S Deadly Discharge Big Knockback',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '4BB2',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => !data.hasOrb || !data.hasOrb[matches.target],
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: noOrb(matches.ability)
      };
    }
  }, {
    id: 'E5S Lightning Bolt',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '4BB9',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => {
      // Having a non-idempotent condition function is a bit <_<
      // Only consider lightning bolt damage if you have a debuff to clear.
      if (!data.hated || !data.hated[matches.target]) return true;
      delete data.hated[matches.target];
      return false;
    },
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    id: 'E5S Hated of Levin',
    type: 'HeadMarker',
    netRegex: netregexes/* default.headMarker */.Z.headMarker({
      id: '00D2'
    }),
    run: (data, matches) => {
      var _data$hated;

      (_data$hated = data.hated) !== null && _data$hated !== void 0 ? _data$hated : data.hated = {};
      data.hated[matches.target] = true;
    }
  }, {
    id: 'E5S Stormcloud Target Tracking',
    type: 'HeadMarker',
    netRegex: netregexes/* default.headMarker */.Z.headMarker({
      id: '006E'
    }),
    run: (data, matches) => {
      var _data$cloudMarkers;

      (_data$cloudMarkers = data.cloudMarkers) !== null && _data$cloudMarkers !== void 0 ? _data$cloudMarkers : data.cloudMarkers = [];
      data.cloudMarkers.push(matches.target);
    }
  }, {
    // This ability is seen only if players stacked the clouds instead of spreading them.
    id: 'E5S The Parting Clouds',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '4BBA',
      ...oopsy_common/* playerDamageFields */.np
    }),
    suppressSeconds: 30,
    mistake: (data, matches) => {
      for (const name of (_data$cloudMarkers2 = data.cloudMarkers) !== null && _data$cloudMarkers2 !== void 0 ? _data$cloudMarkers2 : []) {
        var _data$cloudMarkers2;

        return {
          type: 'fail',
          blame: name,
          text: {
            en: `${matches.ability} (clouds too close)`,
            de: `${matches.ability} (Wolken zu nahe)`,
            fr: `${matches.ability} (nuages trop proches)`,
            ja: `${matches.ability} (雲近すぎ)`,
            cn: `${matches.ability} (雷云重叠)`,
            ko: `${matches.ability} (구름이 너무 가까움)`
          }
        };
      }
    }
  }, {
    id: 'E5S Stormcloud cleanup',
    type: 'HeadMarker',
    netRegex: netregexes/* default.headMarker */.Z.headMarker({
      id: '006E'
    }),
    // Stormclouds resolve well before this.
    delaySeconds: 30,
    run: data => {
      delete data.cloudMarkers;
      delete data.hated;
    }
  }]
};
/* harmony default export */ const e5s = (e5s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e6n.ts

const e6n_triggerSet = {
  zoneId: zone_id/* default.EdensVerseFuror */.Z.EdensVerseFuror,
  damageWarn: {
    'E6N Thorns': '4BDA',
    // AoE markers after Enumeration
    'E6N Ferostorm 1': '4BDD',
    'E6N Ferostorm 2': '4BE5',
    'E6N Storm Of Fury 1': '4BE0',
    // Circle AoE during tethers--Garuda
    'E6N Storm Of Fury 2': '4BE6',
    // Circle AoE during tethers--Raktapaksa
    'E6N Explosion': '4BE2',
    // AoE circles, Garuda orbs
    'E6N Heat Burst': '4BEC',
    'E6N Conflag Strike': '4BEE',
    // 270-degree frontal AoE
    'E6N Spike Of Flame': '4BF0',
    // Orb explosions after Strike Spark
    'E6N Radiant Plume': '4BF2',
    'E6N Eruption': '4BF4'
  },
  damageFail: {
    'E6N Vacuum Slice': '4BD5',
    // Dark line AoE from Garuda
    'E6N Downburst': '4BDB' // Blue knockback circle. Actual knockback is unknown ability 4C20

  },
  shareFail: {
    // Kills non-tanks who get hit by it.
    'E6N Instant Incineration': '4BED'
  }
};
/* harmony default export */ const e6n = (e6n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e6s.ts

// TODO: check tethers being cut (when they shouldn't)
// TODO: check for concussed debuff
// TODO: check for taking tankbuster with lightheaded
// TODO: check for one person taking multiple Storm Of Fury Tethers (4C01/4C08)
const e6s_triggerSet = {
  zoneId: zone_id/* default.EdensVerseFurorSavage */.Z.EdensVerseFurorSavage,
  damageWarn: {
    // It's common to just ignore futbol mechanics, so don't warn on Strike Spark.
    // 'Spike Of Flame': '4C13', // Orb explosions after Strike Spark
    'E6S Thorns': '4BFA',
    // AoE markers after Enumeration
    'E6S Ferostorm 1': '4BFD',
    'E6S Ferostorm 2': '4C06',
    'E6S Storm Of Fury 1': '4C00',
    // Circle AoE during tethers--Garuda
    'E6S Storm Of Fury 2': '4C07',
    // Circle AoE during tethers--Raktapaksa
    'E6S Explosion': '4C03',
    // AoE circles, Garuda orbs
    'E6S Heat Burst': '4C1F',
    'E6S Conflag Strike': '4C10',
    // 270-degree frontal AoE
    'E6S Radiant Plume': '4C15',
    'E6S Eruption': '4C17',
    'E6S Wind Cutter': '4C02' // Tether-cutting line aoe

  },
  damageFail: {
    'E6S Vacuum Slice': '4BF5',
    // Dark line AoE from Garuda
    'E6S Downburst 1': '4BFB',
    // Blue knockback circle (Garuda).
    'E6S Downburst 2': '4BFC',
    // Blue knockback circle (Raktapaksa).
    'E6S Meteor Strike': '4C0F' // Frontal avoidable tank buster

  },
  shareWarn: {
    'E6S Hands of Hell': '4C0[BC]',
    // Tether charge
    'E6S Hands of Flame': '4C0A',
    // First Tankbuster
    'E6S Instant Incineration': '4C0E',
    // Second Tankbuster
    'E6S Blaze': '4C1B' // Flame Tornado Cleave

  },
  soloFail: {
    'E6S Air Bump': '4BF9'
  }
};
/* harmony default export */ const e6s = (e6s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e7n.ts




const wrongBuff = str => {
  return {
    en: str + ' (wrong buff)',
    de: str + ' (falscher Buff)',
    fr: str + ' (mauvais buff)',
    ja: str + ' (不適切なバフ)',
    cn: str + ' (Buff错了)',
    ko: str + ' (버프 틀림)'
  };
};

const noBuff = str => {
  return {
    en: str + ' (no buff)',
    de: str + ' (kein Buff)',
    fr: str + ' (pas de buff)',
    ja: str + ' (バフ無し)',
    cn: str + ' (没有Buff)',
    ko: str + '(버프 없음)'
  };
};

const e7n_triggerSet = {
  zoneId: zone_id/* default.EdensVerseIconoclasm */.Z.EdensVerseIconoclasm,
  damageWarn: {
    'E7N Stygian Sword': '4C55',
    // Circle ground AoEs after False Twilight
    'E7N Strength In Numbers Donut': '4C4C',
    // Large donut ground AoEs, intermission
    'E7N Strength In Numbers 2': '4C4D' // Large circle ground AoEs, intermission

  },
  shareWarn: {
    'E7N Stygian Stake': '4C33',
    // Laser tank buster, outside intermission phase
    'E5N Silver Shot': '4E7D' // Spread markers, intermission

  },
  triggers: [{
    id: 'E7N Astral Effect Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '8BE'
    }),
    run: (data, matches) => {
      var _data$hasAstral;

      (_data$hasAstral = data.hasAstral) !== null && _data$hasAstral !== void 0 ? _data$hasAstral : data.hasAstral = {};
      data.hasAstral[matches.target] = true;
    }
  }, {
    id: 'E7N Astral Effect Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '8BE'
    }),
    run: (data, matches) => {
      var _data$hasAstral2;

      (_data$hasAstral2 = data.hasAstral) !== null && _data$hasAstral2 !== void 0 ? _data$hasAstral2 : data.hasAstral = {};
      data.hasAstral[matches.target] = false;
    }
  }, {
    id: 'E7N Umbral Effect Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '8BF'
    }),
    run: (data, matches) => {
      var _data$hasUmbral;

      (_data$hasUmbral = data.hasUmbral) !== null && _data$hasUmbral !== void 0 ? _data$hasUmbral : data.hasUmbral = {};
      data.hasUmbral[matches.target] = true;
    }
  }, {
    id: 'E7N Umbral Effect Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '8BF'
    }),
    run: (data, matches) => {
      var _data$hasUmbral2;

      (_data$hasUmbral2 = data.hasUmbral) !== null && _data$hasUmbral2 !== void 0 ? _data$hasUmbral2 : data.hasUmbral = {};
      data.hasUmbral[matches.target] = false;
    }
  }, {
    id: 'E7N Light\'s Course',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: ['4C3E', '4C40', '4C22', '4C3C', '4E63'],
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => {
      return !data.hasUmbral || !data.hasUmbral[matches.target];
    },
    mistake: (data, matches) => {
      if (data.hasAstral && data.hasAstral[matches.target]) return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: wrongBuff(matches.ability)
      };
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: noBuff(matches.ability)
      };
    }
  }, {
    id: 'E7N Darks\'s Course',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: ['4C3D', '4C23', '4C41', '4C43'],
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => {
      return !data.hasAstral || !data.hasAstral[matches.target];
    },
    mistake: (data, matches) => {
      if (data.hasUmbral && data.hasUmbral[matches.target]) return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: wrongBuff(matches.ability)
      }; // This case is probably impossible, as the debuff ticks after death,
      // but leaving it here in case there's some rez or disconnect timing
      // that could lead to this.

      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: noBuff(matches.ability)
      };
    }
  }]
};
/* harmony default export */ const e7n = (e7n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e7s.ts


 // TODO: missing an orb during tornado phase
// TODO: jumping in the tornado damage??
// TODO: taking sungrace(4C80) or moongrace(4C82) with wrong debuff
// TODO: stygian spear/silver spear with the wrong debuff
// TODO: taking explosion from the wrong Chiaro/Scuro orb
// TODO: handle 4C89 Silver Stake tankbuster 2nd hit, as it's ok to have two in.

const e7s_wrongBuff = str => {
  return {
    en: str + ' (wrong buff)',
    de: str + ' (falscher Buff)',
    fr: str + ' (mauvais buff)',
    ja: str + ' (不適切なバフ)',
    cn: str + ' (Buff错了)',
    ko: str + ' (버프 틀림)'
  };
};

const e7s_noBuff = str => {
  return {
    en: str + ' (no buff)',
    de: str + ' (kein Buff)',
    fr: str + ' (pas de buff)',
    ja: str + ' (バフ無し)',
    cn: str + ' (没有Buff)',
    ko: str + ' (버프 없음)'
  };
};

const e7s_triggerSet = {
  zoneId: zone_id/* default.EdensVerseIconoclasmSavage */.Z.EdensVerseIconoclasmSavage,
  damageWarn: {
    'E7S Silver Sword': '4C8E',
    // ground aoe
    'E7S Overwhelming Force': '4C73',
    // add phase ground aoe
    'E7S Strength in Numbers 1': '4C70',
    // add get under
    'E7S Strength in Numbers 2': '4C71',
    // add get out
    'E7S Paper Cut': '4C7D',
    // tornado ground aoes
    'E7S Buffet': '4C77' // tornado ground aoes also??

  },
  damageFail: {
    'E7S Betwixt Worlds': '4C6B',
    // purple ground line aoes
    'E7S Crusade': '4C58',
    // blue knockback circle (standing in it)
    'E7S Explosion': '4C6F' // didn't kill an add

  },
  shareWarn: {
    'E7S Stygian Stake': '4C34',
    // Laser tank buster 1
    'E7S Silver Shot': '4C92',
    // Spread markers
    'E7S Silver Scourge': '4C93',
    // Ice markers
    'E7S Chiaro Scuro Explosion 1': '4D14',
    // orb explosion
    'E7S Chiaro Scuro Explosion 2': '4D15' // orb explosion

  },
  triggers: [{
    // Interrupt
    id: 'E7S Advent Of Light',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '4C6E'
    }),
    mistake: (_data, matches) => {
      // TODO: is this blame correct? does this have a target?
      return {
        type: 'fail',
        blame: matches.target,
        text: matches.ability
      };
    }
  }, {
    id: 'E7S Astral Effect Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '8BE'
    }),
    run: (data, matches) => {
      data.hasAstral = data.hasAstral || {};
      data.hasAstral[matches.target] = true;
    }
  }, {
    id: 'E7S Astral Effect Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '8BE'
    }),
    run: (data, matches) => {
      data.hasAstral = data.hasAstral || {};
      data.hasAstral[matches.target] = false;
    }
  }, {
    id: 'E7S Umbral Effect Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '8BF'
    }),
    run: (data, matches) => {
      data.hasUmbral = data.hasUmbral || {};
      data.hasUmbral[matches.target] = true;
    }
  }, {
    id: 'E7S Umbral Effect Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '8BF'
    }),
    run: (data, matches) => {
      data.hasUmbral = data.hasUmbral || {};
      data.hasUmbral[matches.target] = false;
    }
  }, {
    id: 'E7S Light\'s Course',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: ['4C62', '4C63', '4C64', '4C5B', '4C5F'],
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => {
      return !data.hasUmbral || !data.hasUmbral[matches.target];
    },
    mistake: (data, matches) => {
      if (data.hasAstral && data.hasAstral[matches.target]) return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: e7s_wrongBuff(matches.ability)
      };
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: e7s_noBuff(matches.ability)
      };
    }
  }, {
    id: 'E7S Darks\'s Course',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: ['4C65', '4C66', '4C67', '4C5A', '4C60'],
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => {
      return !data.hasAstral || !data.hasAstral[matches.target];
    },
    mistake: (data, matches) => {
      if (data.hasUmbral && data.hasUmbral[matches.target]) return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: e7s_wrongBuff(matches.ability)
      }; // This case is probably impossible, as the debuff ticks after death,
      // but leaving it here in case there's some rez or disconnect timing
      // that could lead to this.

      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: e7s_noBuff(matches.ability)
      };
    }
  }, {
    id: 'E7S Crusade Knockback',
    type: 'Ability',
    // 4C76 is the knockback damage, 4C58 is the damage for standing on the puck.
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '4C76',
      ...oopsy_common/* playerDamageFields */.np
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'Renversé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const e7s = (e7s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e8n.ts



const e8n_triggerSet = {
  zoneId: zone_id/* default.EdensVerseRefulgence */.Z.EdensVerseRefulgence,
  damageWarn: {
    'E8N Biting Frost': '4DDB',
    // 270-degree frontal AoE, Shiva
    'E8N Driving Frost': '4DDC',
    // Rear cone AoE, Shiva
    'E8N Frigid Stone': '4E66',
    // Small spread circles, phase 1
    'E8N Reflected Axe Kick': '4E00',
    // Large circle AoE, Frozen Mirror
    'E8N Reflected Scythe Kick': '4E01',
    // Donut AoE, Frozen Mirror
    'E8N Frigid Eruption': '4E09',
    // Small circle AoE puddles, phase 1
    'E8N Icicle Impact': '4E0A',
    // Large circle AoE puddles, phase 1
    'E8N Axe Kick': '4DE2',
    // Large circle AoE, Shiva
    'E8N Scythe Kick': '4DE3',
    // Donut AoE, Shiva
    'E8N Reflected Biting Frost': '4DFE',
    // 270-degree frontal AoE, Frozen Mirror
    'E8N Reflected Driving Frost': '4DFF' // Cone AoE, Frozen Mirror

  },
  damageFail: {},
  triggers: [{
    id: 'E8N Shining Armor',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '95'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }, {
    id: 'E8N Heavenly Strike',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '4DD8',
      ...oopsy_common/* playerDamageFields */.np
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Pushed off!',
          de: 'Runter gestoßen!',
          fr: 'Repoussé(e) !',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백됨!'
        }
      };
    }
  }, {
    id: 'E8N Frost Armor',
    type: 'GainsEffect',
    // Thin Ice
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '38F'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Slid off!',
          de: 'runtergerutscht!',
          fr: 'A glissé(e) !',
          ja: '滑った',
          cn: '滑落',
          ko: '미끄러짐!'
        }
      };
    }
  }]
};
/* harmony default export */ const e8n = (e8n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e8s.ts


// TODO: rush hitting the crystal
// TODO: adds not being killed
// TODO: taking the rush twice (when you have debuff)
// TODO: not hitting the dragon four times during wyrm's lament
// TODO: death reasons for not picking up puddle
// TODO: not being in the tower when you should
// TODO: picking up too many stacks
// Note: Banish III (4DA8) and Banish Iii Divided (4DA9) both are type=0x16 lines.
// The same is true for Banish (4DA6) and Banish Divided (4DA7).
// I'm not sure this makes any sense? But can't tell if the spread was a mistake or not.
// Maybe we could check for "Magic Vulnerability Up"?
const e8s_triggerSet = {
  zoneId: zone_id/* default.EdensVerseRefulgenceSavage */.Z.EdensVerseRefulgenceSavage,
  damageWarn: {
    'E8S Biting Frost': '4D66',
    // 270-degree frontal AoE, Shiva
    'E8S Driving Frost': '4D67',
    // Rear cone AoE, Shiva
    'E8S Axe Kick': '4D6D',
    // Large circle AoE, Shiva
    'E8S Scythe Kick': '4D6E',
    // Donut AoE, Shiva
    'E8S Reflected Axe Kick': '4DB9',
    // Large circle AoE, Frozen Mirror
    'E8S Reflected Scythe Kick': '4DBA',
    // Donut AoE, Frozen Mirror
    'E8S Frigid Eruption': '4D9F',
    // Small circle AoE puddles, phase 1
    'E8S Frigid Needle': '4D9D',
    // 8-way "flower" explosion
    'E8S Icicle Impact': '4DA0',
    // Large circle AoE puddles, phase 1
    'E8S Reflected Biting Frost 1': '4DB7',
    // 270-degree frontal AoE, Frozen Mirror
    'E8S Reflected Biting Frost 2': '4DC3',
    // 270-degree frontal AoE, Frozen Mirror
    'E8S Reflected Driving Frost 1': '4DB8',
    // Cone AoE, Frozen Mirror
    'E8S Reflected Driving Frost 2': '4DC4',
    // Cone AoE, Frozen Mirror
    'E8S Hallowed Wings 1': '4D75',
    // Left cleave
    'E8S Hallowed Wings 2': '4D76',
    // Right cleave
    'E8S Hallowed Wings 3': '4D77',
    // Knockback frontal cleave
    'E8S Reflected Hallowed Wings 1': '4D90',
    // Reflected left 2
    'E8S Reflected Hallowed Wings 2': '4DBB',
    // Reflected left 1
    'E8S Reflected Hallowed Wings 3': '4DC7',
    // Reflected right 2
    'E8S Reflected Hallowed Wings 4': '4D91',
    // Reflected right 1
    'E8S Twin Stillness 1': '4D68',
    'E8S Twin Stillness 2': '4D6B',
    'E8S Twin Silence 1': '4D69',
    'E8S Twin Silence 2': '4D6A',
    'E8S Akh Rhai': '4D99',
    'E8S Embittered Dance 1': '4D70',
    'E8S Embittered Dance 2': '4D71',
    'E8S Spiteful Dance 1': '4D6F',
    'E8S Spiteful Dance 2': '4D72'
  },
  damageFail: {
    // Broken tether.
    'E8S Refulgent Fate': '4DA4',
    // Shared orb, correct is Bright Pulse (4D95)
    'E8S Blinding Pulse': '4D96'
  },
  shareFail: {
    'E8S Path of Light': '4DA1' // Protean

  },
  triggers: [{
    id: 'E8S Shining Armor',
    type: 'GainsEffect',
    // Stun
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '95'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }, {
    // Interrupt
    id: 'E8S Stoneskin',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '4D85'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const e8s = (e8s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e9n.ts

const e9n_triggerSet = {
  zoneId: zone_id/* default.EdensPromiseUmbra */.Z.EdensPromiseUmbra,
  damageWarn: {
    'E9N The Art Of Darkness 1': '5223',
    // left-right cleave
    'E9N The Art Of Darkness 2': '5224',
    // left-right cleave
    'E9N Wide-Angle Particle Beam': '5AFF',
    // frontal cleave tutorial mechanic
    'E9N Wide-Angle Phaser': '55E1',
    // wide-angle "sides"
    'E9N Bad Vibrations': '55E6',
    // tethered outside giant tree ground aoes
    'E9N Earth-Shattering Particle Beam': '5225',
    // missing towers?
    'E9N Anti-Air Particle Beam': '55DC',
    // "get out" during panels
    'E9N Zero-Form Particle Beam 2': '55DB' // Clone line aoes w/ Anti-Air Particle Beam

  },
  damageFail: {
    'E9N Withdraw': '5534',
    // Slow to break seed chain, get sucked back in yikes
    'E9N Aetherosynthesis': '5535' // Standing on seeds during explosion (possibly via Withdraw)

  },
  shareWarn: {
    'E9N Zero-Form Particle Beam 1': '55EB' // tank laser with marker

  }
};
/* harmony default export */ const e9n = (e9n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/raid/e9s.ts



// TODO: 561D Evil Seed hits everyone, hard to know if there's a double tap
// TODO: falling through panel just does damage with no ability name, like a death wall
// TODO: what happens if you jump in seed thorns?
const e9s_triggerSet = {
  zoneId: zone_id/* default.EdensPromiseUmbraSavage */.Z.EdensPromiseUmbraSavage,
  damageWarn: {
    'E9S Bad Vibrations': '561C',
    // tethered outside giant tree ground aoes
    'E9S Wide-Angle Particle Beam': '5B00',
    // anti-air "sides"
    'E9S Wide-Angle Phaser Unlimited': '560E',
    // wide-angle "sides"
    'E9S Anti-Air Particle Beam': '5B01',
    // wide-angle "out"
    'E9S The Second Art Of Darkness 1': '5601',
    // left-right cleave
    'E9S The Second Art Of Darkness 2': '5602',
    // left-right cleave
    'E9S The Art Of Darkness 1': '5A95',
    // boss left-right summon/panel cleave
    'E9S The Art Of Darkness 2': '5A96',
    // boss left-right summon/panel cleave
    'E9S The Art Of Darkness Clone 1': '561E',
    // clone left-right summon cleave
    'E9S The Art Of Darkness Clone 2': '561F',
    // clone left-right summon cleave
    'E9S The Third Art Of Darkness 1': '5603',
    // third art left-right cleave initial
    'E9S The Third Art Of Darkness 2': '5604',
    // third art left-right cleave initial
    'E9S Art Of Darkness': '5606',
    // third art left-right cleave final
    'E9S Full-Perimiter Particle Beam': '5629',
    // panel "get in"
    'E9S Dark Chains': '5FAC' // Slow to break partner chains

  },
  damageFail: {
    'E9S Withdraw': '561A',
    // Slow to break seed chain, get sucked back in yikes
    'E9S Aetherosynthesis': '561B' // Standing on seeds during explosion (possibly via Withdraw)

  },
  gainsEffectWarn: {
    'E9S Stygian Tendrils': '952' // standing in the brambles

  },
  shareWarn: {
    'E9S Hyper-Focused Particle Beam': '55FD' // Art Of Darkness protean

  },
  shareFail: {
    'E9S Condensed Wide-Angle Particle Beam': '5610' // wide-angle "tank laser"

  },
  soloWarn: {
    'E9S Multi-Pronged Particle Beam': '5600' // Art Of Darkness Partner Stack

  },
  triggers: [{
    // Anti-air "tank spread".  This can be stacked by two tanks invulning.
    // Note: this will still show something for holmgang/living, but
    // arguably a healer might need to do something about that, so maybe
    // it's ok to still show as a warning??
    id: 'E9S Condensed Anti-Air Particle Beam',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      type: '22',
      id: '5615',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    // Anti-air "out".  This can be invulned by a tank along with the spread above.
    id: 'E9S Anti-Air Phaser Unlimited',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '5612',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const e9s = (e9s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/diamond_weapon.ts


// Diamond Weapon Normal
const diamond_weapon_triggerSet = {
  zoneId: zone_id/* default.TheCloudDeck */.Z.TheCloudDeck,
  damageWarn: {
    'Diamond Weapon Auri Arts': '5FE3',
    // Auri Arts dashes
    'Diamond Weapon Diamond Shrapnel Initial': '5FE1',
    // initial circle of Diamond Shrapnel
    'Diamond Weapon Diamond Shrapnel Chasing': '5FE2',
    // followup circles from Diamond Shrapnel
    'Diamond Weapon Aetherial Bullet': '5FD5' // bit lasers

  },
  damageFail: {
    'Diamond Weapon Claw Swipe Left': '5FD9',
    // Adamant Purge platform cleave
    'Diamond Weapon Claw Swipe Right': '5FDA',
    // Adamant Purge platform cleave
    'Diamond Weapon Auri Cyclone 1': '5FE6',
    // standing on the blue knockback puck
    'Diamond Weapon Auri Cyclone 2': '5FE7',
    // standing on the blue knockback puck
    'Diamond Weapon Airship\'s Bane 1': '5FE8',
    // destroying one of the platforms after Auri Cyclone
    'Diamond Weapon Airship\'s Bane 2': '5FFE' // destroying one of the platforms after Auri Cyclone

  },
  shareWarn: {
    'Diamond Weapon Homing Laser': '5FDB' // spread markers

  },
  triggers: [{
    id: 'Diamond Weapon Vertical Cleave Knocked Off',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '5FE5'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'Renversé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const diamond_weapon = (diamond_weapon_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/diamond_weapon-ex.ts


// TODO: warning for taking Diamond Flash (5FA1) stack on your own?
// Diamond Weapon Extreme
const diamond_weapon_ex_triggerSet = {
  zoneId: zone_id/* default.TheCloudDeckExtreme */.Z.TheCloudDeckExtreme,
  damageWarn: {
    'DiamondEx Auri Arts 1': '5FAF',
    // Auri Arts dashes/explosions
    'DiamondEx Auri Arts 2': '5FB2',
    // Auri Arts dashes/explosions
    'DiamondEx Auri Arts 3': '5FCD',
    // Auri Arts dashes/explosions
    'DiamondEx Auri Arts 4': '5FCE',
    // Auri Arts dashes/explosions
    'DiamondEx Auri Arts 5': '5FCF',
    // Auri Arts dashes/explosions
    'DiamondEx Auri Arts 6': '5FF8',
    // Auri Arts dashes/explosions
    'DiamondEx Auri Arts 7': '6159',
    // Auri Arts dashes/explosions
    'DiamondEx Articulated Bit Aetherial Bullet': '5FAB',
    // bit lasers during all phases
    'DiamondEx Diamond Shrapnel 1': '5FCB',
    // chasing circles
    'DiamondEx Diamond Shrapnel 2': '5FCC' // chasing circles

  },
  damageFail: {
    'DiamondEx Claw Swipe Left': '5FC2',
    // Adamant Purge platform cleave
    'DiamondEx Claw Swipe Right': '5FC3',
    // Adamant Purge platform cleave
    'DiamondEx Auri Cyclone 1': '5FD1',
    // standing on the blue knockback puck
    'DiamondEx Auri Cyclone 2': '5FD2',
    // standing on the blue knockback puck
    'DiamondEx Airship\'s Bane 1': '5FFE',
    // destroying one of the platforms after Auri Cyclone
    'DiamondEx Airship\'s Bane 2': '5FD3' // destroying one of the platforms after Auri Cyclone

  },
  shareWarn: {
    'DiamondEx Tank Lasers': '5FC8',
    // cleaving yellow lasers on top two enmity
    'DiamondEx Homing Laser': '5FC4' // Adamante Purge spread

  },
  shareFail: {
    'DiamondEx Flood Ray': '5FC7' // "limit cut" cleaves

  },
  triggers: [{
    id: 'DiamondEx Vertical Cleave Knocked Off',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '5FD0'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'Renversé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const diamond_weapon_ex = (diamond_weapon_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/emerald_weapon.ts


const emerald_weapon_triggerSet = {
  zoneId: zone_id/* default.CastrumMarinum */.Z.CastrumMarinum,
  damageWarn: {
    'Emerald Weapon Heat Ray': '4F9D',
    // Emerald Beam initial conal
    'Emerald Weapon Photon Laser 1': '5534',
    // Emerald Beam inside circle
    'Emerald Weapon Photon Laser 2': '5536',
    // Emerald Beam middle circle
    'Emerald Weapon Photon Laser 3': '5538',
    // Emerald Beam outside circle
    'Emerald Weapon Heat Ray 1': '5532',
    // Emerald Beam rotating pulsing laser
    'Emerald Weapon Heat Ray 2': '5533',
    // Emerald Beam rotating pulsing laser
    'Emerald Weapon Magnetic Mine Explosion': '5B04',
    // repulsing mine explosions
    'Emerald Weapon Sidescathe 1': '553F',
    // left/right cleave
    'Emerald Weapon Sidescathe 2': '5540',
    // left/right cleave
    'Emerald Weapon Sidescathe 3': '5541',
    // left/right cleave
    'Emerald Weapon Sidescathe 4': '5542',
    // left/right cleave
    'Emerald Weapon Bit Storm': '554A',
    // "get in"
    'Emerald Weapon Emerald Crusher': '553C',
    // blue knockback puck
    'Emerald Weapon Pulse Laser': '5548',
    // line aoe
    'Emerald Weapon Energy Aetheroplasm': '5551',
    // hitting a glowy orb
    'Emerald Weapon Divide Et Impera Ground': '556F',
    // party targeted ground cones
    'Emerald Weapon Primus Terminus Est': '4B3E',
    // ground circle during arrow headmarkers
    'Emerald Weapon Secundus Terminus Est': '556A',
    // X / + headmarkers
    'Emerald Weapon Tertius Terminus Est': '556D',
    // triple swords
    'Emerald Weapon Shots Fired': '555F' // line aoes from soldiers

  },
  shareWarn: {
    'Emerald Weapon Divide Et Impera P1': '554E',
    // tankbuster, probably cleaves, phase 1
    'Emerald Weapon Divide Et Impera P2': '5570' // tankbuster, probably cleaves, phase 2

  },
  triggers: [{
    id: 'Emerald Weapon Emerald Crusher Knocked Off',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '553E'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'Renversé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }, {
    // Getting knocked into a wall from the arrow headmarker.
    id: 'Emerald Weapon Primus Terminus Est Wall',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: ['5563', '5564']
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Pushed into wall',
          de: 'Rückstoß in die Wand',
          fr: 'Poussé(e) dans le mur',
          ja: '壁へノックバック',
          cn: '击退至墙',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const emerald_weapon = (emerald_weapon_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/emerald_weapon-ex.ts


const emerald_weapon_ex_triggerSet = {
  zoneId: zone_id/* default.CastrumMarinumExtreme */.Z.CastrumMarinumExtreme,
  damageWarn: {
    'EmeraldEx Heat Ray': '5BD3',
    // Emerald Beam initial conal
    'EmeraldEx Photon Laser 1': '557B',
    // Emerald Beam inside circle
    'EmeraldEx Photon Laser 2': '557D',
    // Emerald Beam outside circle
    'EmeraldEx Heat Ray 1': '557A',
    // Emerald Beam rotating pulsing laser
    'EmeraldEx Heat Ray 2': '5579',
    // Emerald Beam rotating pulsing laser
    'EmeraldEx Explosion': '5596',
    // Magitek Mine explosion
    'EmeraldEx Tertius Terminus Est Initial': '55CD',
    // sword initial puddles
    'EmeraldEx Tertius Terminus Est Explosion': '55CE',
    // sword explosions
    'EmeraldEx Airborne Explosion': '55BD',
    // exaflare
    'EmeraldEx Sidescathe 1': '55D4',
    // left/right cleave
    'EmeraldEx Sidescathe 2': '55D5',
    // left/right cleave
    'EmeraldEx Shots Fired': '55B7',
    // rank and file soldiers
    'EmeraldEx Secundus Terminus Est': '55CB',
    // dropped + and x headmarkers
    'EmeraldEx Expire': '55D1',
    // ground aoe on boss "get out"
    'EmeraldEx Photon Ring': '55A9',
    // untelegraphed "get out"
    'EmeraldEx Aire Tam Storm': '55D0' // expanding red and black ground aoe

  },
  shareWarn: {
    'EmeraldEx Divide Et Impera': '55D9',
    // non-tank protean spread
    'EmeraldEx Primus Terminus Est 1': '55C4',
    // knockback arrow
    'EmeraldEx Primus Terminus Est 2': '55C5',
    // knockback arrow
    'EmeraldEx Primus Terminus Est 3': '55C6',
    // knockback arrow
    'EmeraldEx Primus Terminus Est 4': '55C7' // knockback arrow

  },
  soloWarn: {
    'EmeraldEx Nitrosphere Aetheroplasm': '55AE',
    'EmeraldEx Ceruleum Sphere Aetheroplasm': '55AF'
  },
  triggers: [{
    id: 'EmeraldEx Nitrosphere Physical Vulnerability Up Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '82A'
    }),
    run: (data, matches) => {
      var _data$sphereNitro;

      data.sphereNitro = (_data$sphereNitro = data.sphereNitro) !== null && _data$sphereNitro !== void 0 ? _data$sphereNitro : {};
      data.sphereNitro[matches.target] = true;
    }
  }, {
    id: 'EmeraldEx Nitrosphere Physical Vulnerability Up Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '82A'
    }),
    run: (data, matches) => {
      var _data$sphereNitro2;

      // Need to track loss here for the 4/4 strategy.
      data.sphereNitro = (_data$sphereNitro2 = data.sphereNitro) !== null && _data$sphereNitro2 !== void 0 ? _data$sphereNitro2 : {};
      data.sphereNitro[matches.target] = false;
    }
  }, {
    id: 'EmeraldEx Ceruleum Sphere Magic Vulnerability Up Gain',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '82B'
    }),
    type: 'GainsEffect',
    run: (data, matches) => {
      var _data$sphereCeruleum;

      data.sphereCeruleum = (_data$sphereCeruleum = data.sphereCeruleum) !== null && _data$sphereCeruleum !== void 0 ? _data$sphereCeruleum : {};
      data.sphereCeruleum[matches.target] = true;
    }
  }, {
    id: 'EmeraldEx Ceruleum Sphere Magic Vulnerability Up Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '82B'
    }),
    run: (data, matches) => {
      var _data$sphereCeruleum2;

      data.sphereCeruleum = (_data$sphereCeruleum2 = data.sphereCeruleum) !== null && _data$sphereCeruleum2 !== void 0 ? _data$sphereCeruleum2 : {};
      data.sphereCeruleum[matches.target] = false;
    }
  }, {
    id: 'EmeraldEx Nitrosphere Twice',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '55AE'
    }),
    condition: (data, matches) => {
      var _data$sphereNitro3;

      return (_data$sphereNitro3 = data.sphereNitro) === null || _data$sphereNitro3 === void 0 ? void 0 : _data$sphereNitro3[matches.target];
    },
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: `${matches.ability} (wrong color)`,
          de: `${matches.ability} (falsche Farbe)`,
          fr: `${matches.ability} (mauvaise couleur)`,
          ja: `${matches.ability} (色違う)`,
          cn: `${matches.ability} (颜色错了)`,
          ko: `${matches.ability} (색 틀림)`
        }
      };
    }
  }, {
    id: 'EmeraldEx Ceruleum Sphere Twice',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '55AF'
    }),
    condition: (data, matches) => {
      var _data$sphereCeruleum3;

      return (_data$sphereCeruleum3 = data.sphereCeruleum) === null || _data$sphereCeruleum3 === void 0 ? void 0 : _data$sphereCeruleum3[matches.target];
    },
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: `${matches.ability} (wrong color)`,
          de: `${matches.ability} (falsche Farbe)`,
          fr: `${matches.ability} (mauvaise couleur)`,
          ja: `${matches.ability} (色違う)`,
          cn: `${matches.ability} (颜色错了)`,
          ko: `${matches.ability} (색 틀림)`
        }
      };
    }
  }]
};
/* harmony default export */ const emerald_weapon_ex = (emerald_weapon_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/hades.ts

// Hades Normal
const hades_triggerSet = {
  zoneId: zone_id/* default.TheDyingGasp */.Z.TheDyingGasp,
  damageWarn: {
    'Hades Bad Faith 1': '414B',
    'Hades Bad Faith 2': '414C',
    'Hades Dark Eruption': '4152',
    'Hades Shadow Spread 1': '4156',
    'Hades Shadow Spread 2': '4157',
    'Hades Broken Faith': '414E',
    'Hades Hellborn Yawp': '416F',
    'Hades Purgation': '4172',
    'Hades Shadow Stream': '415C',
    'Hades Aero': '4595',
    'Hades Echo 1': '4163',
    'Hades Echo 2': '4164'
  },
  shareFail: {
    'Hades Nether Blast': '4163',
    'Hades Ravenous Assault': '4158',
    'Hades Ancient Darkness': '4593',
    'Hades Dual Strike': '4162'
  }
};
/* harmony default export */ const hades = (hades_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/hades-ex.ts



// Hades Ex
const hades_ex_triggerSet = {
  zoneId: zone_id/* default.TheMinstrelsBalladHadessElegy */.Z.TheMinstrelsBalladHadessElegy,
  damageWarn: {
    'HadesEx Shadow Spread 2': '47AA',
    'HadesEx Shadow Spread 3': '47E4',
    'HadesEx Shadow Spread 4': '47E5',
    // Everybody stacks in good faith for Bad Faith, so don't call it a mistake.
    // 'HadesEx Bad Faith 1': '47AD',
    // 'HadesEx Bad Faith 2': '47B0',
    // 'HadesEx Bad Faith 3': '47AE',
    // 'HadesEx Bad Faith 4': '47AF',
    'HadesEx Broken Faith': '47B2',
    'HadesEx Magic Spear': '47B6',
    'HadesEx Magic Chakram': '47B5',
    'HadesEx Forked Lightning': '47C9',
    'HadesEx Dark Current 1': '47F1',
    'HadesEx Dark Current 2': '47F2'
  },
  damageFail: {
    'HadesEx Comet': '47B9',
    // missed tower
    'HadesEx Ancient Eruption': '47D3',
    'HadesEx Purgation 1': '47EC',
    'HadesEx Purgation 2': '47ED',
    'HadesEx Shadow Stream': '47EA',
    'HadesEx Dead Space': '47EE'
  },
  shareWarn: {
    'HadesEx Shadow Spread Initial': '47A9',
    'HadesEx Ravenous Assault': '(?:47A6|47A7)',
    'HadesEx Dark Flame 1': '47C6',
    'HadesEx Dark Freeze 1': '47C4',
    'HadesEx Dark Freeze 2': '47DF'
  },
  triggers: [{
    id: 'HadesEx Dark II Tether',
    type: 'Tether',
    netRegex: netregexes/* default.tether */.Z.tether({
      source: 'Shadow of the Ancients',
      id: '0011'
    }),
    run: (data, matches) => {
      var _data$hasDark;

      (_data$hasDark = data.hasDark) !== null && _data$hasDark !== void 0 ? _data$hasDark : data.hasDark = [];
      data.hasDark.push(matches.target);
    }
  }, {
    id: 'HadesEx Dark II',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      type: '22',
      id: '47BA',
      ...oopsy_common/* playerDamageFields */.np
    }),
    // Don't blame people who don't have tethers.
    condition: (data, matches) => data.hasDark && data.hasDark.includes(matches.target),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    id: 'HadesEx Boss Tether',
    type: 'Tether',
    netRegex: netregexes/* default.tether */.Z.tether({
      source: ['Igeyorhm\'s Shade', 'Lahabrea\'s Shade'],
      id: '000E',
      capture: false
    }),
    mistake: {
      type: 'warn',
      text: {
        en: 'Bosses Too Close',
        de: 'Bosses zu Nahe',
        fr: 'Boss trop proches',
        ja: 'ボス近すぎる',
        cn: 'BOSS靠太近了',
        ko: '쫄들이 너무 가까움'
      }
    }
  }, {
    id: 'HadesEx Death Shriek',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '47CB',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    id: 'HadesEx Beyond Death Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '566'
    }),
    run: (data, matches) => {
      var _data$hasBeyondDeath;

      (_data$hasBeyondDeath = data.hasBeyondDeath) !== null && _data$hasBeyondDeath !== void 0 ? _data$hasBeyondDeath : data.hasBeyondDeath = {};
      data.hasBeyondDeath[matches.target] = true;
    }
  }, {
    id: 'HadesEx Beyond Death Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '566'
    }),
    run: (data, matches) => {
      var _data$hasBeyondDeath2;

      (_data$hasBeyondDeath2 = data.hasBeyondDeath) !== null && _data$hasBeyondDeath2 !== void 0 ? _data$hasBeyondDeath2 : data.hasBeyondDeath = {};
      data.hasBeyondDeath[matches.target] = false;
    }
  }, {
    id: 'HadesEx Beyond Death',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '566'
    }),
    delaySeconds: (_data, matches) => parseFloat(matches.duration) - 0.5,
    deathReason: (data, matches) => {
      if (!data.hasBeyondDeath) return;
      if (!data.hasBeyondDeath[matches.target]) return;
      return {
        id: matches.targetId,
        name: matches.target,
        text: matches.effect
      };
    }
  }, {
    id: 'HadesEx Doom Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '6E9'
    }),
    run: (data, matches) => {
      var _data$hasDoom;

      (_data$hasDoom = data.hasDoom) !== null && _data$hasDoom !== void 0 ? _data$hasDoom : data.hasDoom = {};
      data.hasDoom[matches.target] = true;
    }
  }, {
    id: 'HadesEx Doom Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '6E9'
    }),
    run: (data, matches) => {
      var _data$hasDoom2;

      (_data$hasDoom2 = data.hasDoom) !== null && _data$hasDoom2 !== void 0 ? _data$hasDoom2 : data.hasDoom = {};
      data.hasDoom[matches.target] = false;
    }
  }, {
    id: 'HadesEx Doom',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '6E9'
    }),
    delaySeconds: (_data, matches) => parseFloat(matches.duration) - 0.5,
    deathReason: (data, matches) => {
      if (!data.hasDoom) return;
      if (!data.hasDoom[matches.target]) return;
      return {
        id: matches.targetId,
        name: matches.target,
        text: matches.effect
      };
    }
  }]
};
/* harmony default export */ const hades_ex = (hades_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/innocence.ts

// Innocence Normal
const innocence_triggerSet = {
  zoneId: zone_id/* default.TheCrownOfTheImmaculate */.Z.TheCrownOfTheImmaculate,
  damageWarn: {
    'Inno Daybreak': '3E9D',
    'Inno Holy Trinity': '3EB3',
    'Inno Reprobation 1': '3EB6',
    'Inno Reprobation 2': '3EB8',
    'Inno Reprobation 3': '3ECB',
    'Inno Reprobation 4': '3EB7',
    'Inno Soul and Body 1': '3EB1',
    'Inno Soul and Body 2': '3EB2',
    'Inno Soul and Body 3': '3EF9',
    'Inno Soul and Body 4': '3EFA',
    'Inno God Ray 1': '3EBD',
    'Inno God Ray 2': '3EBE',
    'Inno God Ray 3': '3EBF',
    'Inno God Ray 4': '3EC0'
  }
};
/* harmony default export */ const innocence = (innocence_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/innocence-ex.ts

// Innocence Extreme
const innocence_ex_triggerSet = {
  zoneId: zone_id/* default.TheCrownOfTheImmaculateExtreme */.Z.TheCrownOfTheImmaculateExtreme,
  damageWarn: {
    'InnoEx Duel Descent': '3ED2',
    'InnoEx Reprobation 1': '3EE0',
    'InnoEx Reprobation 2': '3ECC',
    'InnoEx Sword of Condemnation 1': '3EDE',
    'InnoEx Sword of Condemnation 2': '3EDF',
    'InnoEx Dream of the Rood 1': '3ED3',
    'InnoEx Dream of the Rood 2': '3ED4',
    'InnoEx Dream of the Rood 3': '3ED5',
    'InnoEx Dream of the Rood 4': '3ED6',
    'InnoEx Dream of the Rood 5': '3EFB',
    'InnoEx Dream of the Rood 6': '3EFC',
    'InnoEx Dream of the Rood 7': '3EFD',
    'InnoEx Dream of the Rood 8': '3EFE',
    'InnoEx Holy Trinity': '3EDB',
    'InnoEx Soul and Body 1': '3ED7',
    'InnoEx Soul and Body 2': '3ED8',
    'InnoEx Soul and Body 3': '3ED9',
    'InnoEx Soul and Body 4': '3EDA',
    'InnoEx Soul and Body 5': '3EFF',
    'InnoEx Soul and Body 6': '3F00',
    'InnoEx Soul and Body 7': '3F01',
    'InnoEx Soul and Body 8': '3F02',
    'InnoEx God Ray 1': '3EE6',
    'InnoEx God Ray 2': '3EE7',
    'InnoEx God Ray 3': '3EE8',
    'InnoEx Explosion': '3EF0'
  }
};
/* harmony default export */ const innocence_ex = (innocence_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/levi-un.ts


// It's hard to capture the reflection abilities from Leviathan's Head and Tail if you use
// ranged physical attacks / magic attacks respectively, as the ability names are the
// ability you used and don't appear to show up in the log as normal "ability" lines.
// That said, dots still tick independently on both so it's likely that people will atack
// them anyway.
// TODO: Figure out why Dread Tide / Waterspout appear like shares (i.e. 0x16 id).
// Dread Tide = 5CCA/5CCB/5CCC, Waterspout = 5CD1
// Leviathan Unreal
const levi_un_triggerSet = {
  zoneId: zone_id/* default.TheWhorleaterUnreal */.Z.TheWhorleaterUnreal,
  damageWarn: {
    'LeviUn Grand Fall': '5CDF',
    // very large circular aoe before spinny dives, applies heavy
    'LeviUn Hydroshot': '5CD5',
    // Wavespine Sahagin aoe that gives Dropsy effect
    'LeviUn Dreadstorm': '5CD6' // Wavetooth Sahagin aoe that gives Hysteria effect

  },
  damageFail: {
    'LeviUn Body Slam': '5CD2',
    // levi slam that tilts the boat
    'LeviUn Spinning Dive 1': '5CDB',
    // levi dash across the boat with knockback
    'LeviUn Spinning Dive 2': '5CE3',
    // levi dash across the boat with knockback
    'LeviUn Spinning Dive 3': '5CE8',
    // levi dash across the boat with knockback
    'LeviUn Spinning Dive 4': '5CE9' // levi dash across the boat with knockback

  },
  gainsEffectWarn: {
    'LeviUn Dropsy': '110' // standing in the hydro shot from the Wavespine Sahagin

  },
  gainsEffectFail: {
    'LeviUn Hysteria': '128' // standing in the dreadstorm from the Wavetooth Sahagin

  },
  triggers: [{
    id: 'LeviUn Body Slam Knocked Off',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '5CD2'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'Renversé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const levi_un = (levi_un_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/ruby_weapon.ts

// Ruby Normal
const ruby_weapon_triggerSet = {
  zoneId: zone_id/* default.CinderDrift */.Z.CinderDrift,
  damageWarn: {
    'Ruby Ravensclaw': '4A93',
    // centered circle aoe for ravensclaw
    'Ruby Spike Of Flame 1': '4A9A',
    // initial explosion during helicoclaw
    'Ruby Spike Of Flame 2': '4B2E',
    // followup helicoclaw explosions
    'Ruby Spike Of Flame 3': '4A94',
    // ravensclaw explosion at ends of lines
    'Ruby Spike Of Flame 4': '4A95',
    // ravensclaw explosion at ends of lines
    'Ruby Spike Of Flame 5': '4D02',
    // ravensclaw explosion at ends of lines
    'Ruby Spike Of Flame 6': '4D03',
    // ravensclaw explosion at ends of lines
    'Ruby Ruby Ray': '4AC6',
    // frontal laser
    'Ruby Undermine': '4A97',
    // ground aoes under the ravensclaw patches
    'Ruby Ravensflight 1': '4E69',
    // dash around the arena
    'Ruby Ravensflight 2': '4E6A',
    // dash around the arena
    'Ruby Ravensflight 3': '4AA1',
    // dash around the arena
    'Ruby Ravensflight 4': '4AA2',
    // dash around the arena
    'Ruby Ravensflight 5': '4AA3',
    // dash around the arena
    'Ruby Ravensflight 6': '4AA4',
    // dash around the arena
    'Ruby Ravensflight 7': '4AA5',
    // dash around the arena
    'Ruby Ravensflight 8': '4AA6',
    // dash around the arena
    'Ruby Ravensflight 9': '4AA7',
    // dash around the arena
    'Ruby Ravensflight 10': '4C21',
    // dash around the arena
    'Ruby Ravensflight 11': '4C2A',
    // dash around the arena
    'Ruby Comet Burst': '4AB4',
    // meteor exploding
    'Ruby Bradamante': '4ABC' // headmarkers with line aoes

  },
  shareWarn: {
    'Ruby Homing Laser': '4AC5',
    // spread markers in P1
    'Ruby Meteor Stream': '4E67' // spread markers in P2

  }
};
/* harmony default export */ const ruby_weapon = (ruby_weapon_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/ruby_weapon-ex.ts


// TODO: taking two different High-Powered Homing Lasers (4AD8)
// TODO: could blame the tethered player for White Agony / White Fury failures?
// Ruby Weapon Extreme
const ruby_weapon_ex_triggerSet = {
  zoneId: zone_id/* default.CinderDriftExtreme */.Z.CinderDriftExtreme,
  damageWarn: {
    'RubyEx Ruby Bit Magitek Ray': '4AD2',
    // line aoes during helicoclaw
    'RubyEx Spike Of Flame 1': '4AD3',
    // initial explosion during helicoclaw
    'RubyEx Spike Of Flame 2': '4B2F',
    // followup helicoclaw explosions
    'RubyEx Spike Of Flame 3': '4D04',
    // ravensclaw explosion at ends of lines
    'RubyEx Spike Of Flame 4': '4D05',
    // ravensclaw explosion at ends of lines
    'RubyEx Spike Of Flame 5': '4ACD',
    // ravensclaw explosion at ends of lines
    'RubyEx Spike Of Flame 6': '4ACE',
    // ravensclaw explosion at ends of lines
    'RubyEx Undermine': '4AD0',
    // ground aoes under the ravensclaw patches
    'RubyEx Ruby Ray': '4B02',
    // frontal laser
    'RubyEx Ravensflight 1': '4AD9',
    // dash around the arena
    'RubyEx Ravensflight 2': '4ADA',
    // dash around the arena
    'RubyEx Ravensflight 3': '4ADD',
    // dash around the arena
    'RubyEx Ravensflight 4': '4ADE',
    // dash around the arena
    'RubyEx Ravensflight 5': '4ADF',
    // dash around the arena
    'RubyEx Ravensflight 6': '4AE0',
    // dash around the arena
    'RubyEx Ravensflight 7': '4AE1',
    // dash around the arena
    'RubyEx Ravensflight 8': '4AE2',
    // dash around the arena
    'RubyEx Ravensflight 9': '4AE3',
    // dash around the arena
    'RubyEx Ravensflight 10': '4AE4',
    // dash around the arena
    'RubyEx Ravensflight 11': '4AE5',
    // dash around the arena
    'RubyEx Ravensflight 12': '4AE6',
    // dash around the arena
    'RubyEx Ravensflight 13': '4AE7',
    // dash around the arena
    'RubyEx Ravensflight 14': '4AE8',
    // dash around the arena
    'RubyEx Ravensflight 15': '4AE9',
    // dash around the arena
    'RubyEx Ravensflight 16': '4AEA',
    // dash around the arena
    'RubyEx Ravensflight 17': '4E6B',
    // dash around the arena
    'RubyEx Ravensflight 18': '4E6C',
    // dash around the arena
    'RubyEx Ravensflight 19': '4E6D',
    // dash around the arena
    'RubyEx Ravensflight 20': '4E6E',
    // dash around the arena
    'RubyEx Ravensflight 21': '4E6F',
    // dash around the arena
    'RubyEx Ravensflight 22': '4E70',
    // dash around the arena
    'RubyEx Cut And Run 1': '4B05',
    // slow charge across arena after stacks
    'RubyEx Cut And Run 2': '4B06',
    // slow charge across arena after stacks
    'RubyEx Cut And Run 3': '4B07',
    // slow charge across arena after stacks
    'RubyEx Cut And Run 4': '4B08',
    // slow charge across arena after stacks
    'RubyEx Cut And Run 5': '4DOD',
    // slow charge across arena after stacks
    'RubyEx Meteor Burst': '4AF2',
    // meteor exploding
    'RubyEx Bradamante': '4E38',
    // headmarkers with line aoes
    'RubyEx Comet Heavy Impact': '4AF6' // letting a tank comet land

  },
  damageFail: {
    'RubyEx Ruby Sphere Burst': '4ACB',
    // exploding the red mine
    'RubyEx Lunar Dynamo': '4EB0',
    // "get in" from Raven's Image
    'RubyEx Iron Chariot': '4EB1',
    // "get out" from Raven's Image
    'RubyEx Heart In The Machine': '4AFA' // White Agony/Fury skull hitting players

  },
  gainsEffectFail: {
    'RubyEx Hysteria': '128' // Negative Aura lookaway failure

  },
  shareWarn: {
    'RubyEx Homing Lasers': '4AD6',
    // spread markers during cut and run
    'RubyEx Meteor Stream': '4E68' // spread markers during P2

  },
  triggers: [{
    id: 'RubyEx Screech',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '4AEE'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked into wall',
          de: 'Rückstoß in die Wand',
          fr: 'Frappé(e) dans le mur',
          ja: '壁へノックバック',
          cn: '击退至墙',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const ruby_weapon_ex = (ruby_weapon_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/shiva-un.ts


// Shiva Unreal
const shiva_un_triggerSet = {
  zoneId: zone_id/* default.TheAkhAfahAmphitheatreUnreal */.Z.TheAkhAfahAmphitheatreUnreal,
  damageWarn: {
    // Large white circles.
    'ShivaEx Icicle Impact': '537B',
    // "get in" aoe
    'ShivaEx Whiteout': '5376',
    // Avoidable tank stun.
    'ShivaEx Glacier Bash': '5375'
  },
  damageFail: {
    // 270 degree attack.
    'ShivaEx Glass Dance': '5378'
  },
  shareWarn: {
    // Hailstorm spread marker.
    'ShivaEx Hailstorm': '536F'
  },
  shareFail: {
    // Laser.  TODO: maybe blame the person it's on??
    'ShivaEx Avalanche': '5379'
  },
  soloWarn: {
    // Party shared tank buster.
    'ShivaEx Icebrand': '5373'
  },
  triggers: [{
    id: 'ShivaEx Deep Freeze',
    type: 'GainsEffect',
    // Shiva also uses ability 537A on you, but it has an unknown name.
    // So, use the effect instead for free translation.
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '1E7'
    }),
    condition: (_data, matches) => {
      // The intermission also gets this effect, but for a shorter duration.
      return parseFloat(matches.duration) > 20;
    },
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        text: matches.effect
      };
    }
  }]
};
/* harmony default export */ const shiva_un = (shiva_un_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/titania.ts

const titania_triggerSet = {
  zoneId: zone_id/* default.TheDancingPlague */.Z.TheDancingPlague,
  damageWarn: {
    'Titania Wood\'s Embrace': '3D50',
    // 'Titania Frost Rune': '3D4E',
    'Titania Gentle Breeze': '3F83',
    'Titania Leafstorm 1': '3D55',
    'Titania Puck\'s Rebuke': '3D58',
    'Titania Leafstorm 2': '3E03'
  },
  damageFail: {
    'Titania Phantom Rune 1': '3D5D',
    'Titania Phantom Rune 2': '3D5E'
  },
  shareFail: {
    'Titania Divination Rune': '3D5B'
  }
};
/* harmony default export */ const titania = (titania_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/titania-ex.ts

const titania_ex_triggerSet = {
  zoneId: zone_id/* default.TheDancingPlagueExtreme */.Z.TheDancingPlagueExtreme,
  damageWarn: {
    'TitaniaEx Wood\'s Embrace': '3D2F',
    // 'TitaniaEx Frost Rune': '3D2B',
    'TitaniaEx Gentle Breeze': '3F82',
    'TitaniaEx Leafstorm 1': '3D39',
    'TitaniaEx Puck\'s Rebuke': '3D43',
    'TitaniaEx Wallop': '3D3B',
    'TitaniaEx Leafstorm 2': '3D49'
  },
  damageFail: {
    'TitaniaEx Phantom Rune 1': '3D4C',
    'TitaniaEx Phantom Rune 2': '3D4D'
  },
  shareFail: {
    // TODO: This could maybe blame the person with the tether?
    'TitaniaEx Thunder Rune': '3D29',
    'TitaniaEx Divination Rune': '3D4A'
  }
};
/* harmony default export */ const titania_ex = (titania_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/titan-un.ts

// Titan Unreal
const titan_un_triggerSet = {
  zoneId: zone_id/* default.TheNavelUnreal */.Z.TheNavelUnreal,
  damageWarn: {
    'TitanUn Weight Of The Land': '58FE',
    'TitanUn Burst': '5ADF'
  },
  damageFail: {
    'TitanUn Landslide': '5ADC',
    'TitanUn Gaoler Landslide': '5902'
  },
  shareWarn: {
    'TitanUn Rock Buster': '58F6'
  },
  shareFail: {
    'TitanUn Mountain Buster': '58F7'
  }
};
/* harmony default export */ const titan_un = (titan_un_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/varis-ex.ts



const varis_ex_triggerSet = {
  zoneId: zone_id/* default.MemoriaMiseraExtreme */.Z.MemoriaMiseraExtreme,
  damageWarn: {
    'VarisEx Alea Iacta Est 1': '4CD2',
    'VarisEx Alea Iacta Est 2': '4CD3',
    'VarisEx Alea Iacta Est 3': '4CD4',
    'VarisEx Alea Iacta Est 4': '4CD5',
    'VarisEx Alea Iacta Est 5': '4CD6',
    'VarisEx Ignis Est 1': '4CB5',
    'VarisEx Ignis Est 2': '4CC5',
    'VarisEx Ventus Est 1': '4CC7',
    'VarisEx Ventus Est 2': '4CC8',
    'VarisEx Assault Cannon': '4CE5',
    'VarisEx Fortius Rotating': '4CE9'
  },
  damageFail: {
    // Don't hit the shields!
    'VarisEx Repay': '4CDD'
  },
  shareWarn: {
    // This is the "protean" fortius.
    'VarisEx Fortius Protean': '4CE7'
  },
  shareFail: {
    'VarisEx Magitek Burst': '4CDF',
    'VarisEx Aetherochemical Grenado': '4CED'
  },
  triggers: [{
    id: 'VarisEx Terminus Est',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '4CB4',
      ...oopsy_common/* playerDamageFields */.np
    }),
    suppressSeconds: 1,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const varis_ex = (varis_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/wol.ts


// TODO: Radiant Braver is 4F16/4F17(x2), shouldn't get hit by both?
// TODO: Radiant Desperado is 4F18/4F19, shouldn't get hit by both?
// TODO: Radiant Meteor is 4F1A, and shouldn't get hit by more than 1?
// TODO: missing a tower?
// Note: Deliberately not including pyretic damage as an error.
// Note: It doesn't appear that there's any way to tell who failed the cutscene.
const wol_triggerSet = {
  zoneId: zone_id/* default.TheSeatOfSacrifice */.Z.TheSeatOfSacrifice,
  damageWarn: {
    'WOL Solemn Confiteor': '4F2A',
    // ground puddles
    'WOL Coruscant Saber In': '4F10',
    // saber in
    'WOL Coruscant Saber Out': '4F11',
    // saber out
    'WOL Imbued Corusance Out': '4F4B',
    // saber out
    'WOL Imbued Corusance In': '4F4C',
    // saber in
    'WOL Shining Wave': '4F26',
    // sword triangle
    'WOL Cauterize': '4F25',
    'WOL Brimstone Earth 1': '4F1E',
    // corner growing circles, initial
    'WOL Brimstone Earth 2': '4F1F',
    // corner growing circles, growing
    'WOL Flare Breath': '4F24',
    'WOL Decimation': '4F23'
  },
  gainsEffectWarn: {
    'WOL Deep Freeze': '4E6'
  },
  triggers: [{
    id: 'WOL True Walking Dead',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '38E'
    }),
    delaySeconds: (_data, matches) => parseFloat(matches.duration) - 0.5,
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: matches.effect
      };
    }
  }]
};
/* harmony default export */ const wol = (wol_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/trial/wol-ex.ts


// TODO: Radiant Braver is 4EF7/4EF8(x2), shouldn't get hit by both?
// TODO: Radiant Desperado is 4EF9/4EFA, shouldn't get hit by both?
// TODO: Radiant Meteor is 4EFC, and shouldn't get hit by more than 1?
// TODO: Absolute Holy should be shared?
// TODO: intersecting brimstones?
const wol_ex_triggerSet = {
  zoneId: zone_id/* default.TheSeatOfSacrificeExtreme */.Z.TheSeatOfSacrificeExtreme,
  damageWarn: {
    'WOLEx Solemn Confiteor': '4F0C',
    // ground puddles
    'WOLEx Coruscant Saber In': '4EF2',
    // saber in
    'WOLEx Coruscant Saber Out': '4EF1',
    // saber out
    'WOLEx Imbued Corusance Out': '4F49',
    // saber out
    'WOLEx Imbued Corusance In': '4F4A',
    // saber in
    'WOLEx Shining Wave': '4F08',
    // sword triangle
    'WOLEx Cauterize': '4F07',
    'WOLEx Brimstone Earth': '4F00' // corner growing circles, growing

  },
  gainsEffectWarn: {
    'WOLEx Deep Freeze': '4E6',
    // failing Absolute Blizzard III
    'WOLEx Damage Down': '274' // failing Absolute Flash

  },
  shareWarn: {
    'WOLEx Absolute Stone III': '4EEB',
    // protean wave imbued magic
    'WOLEx Flare Breath': '4F06',
    // tether from summoned bahamuts
    'WOLEx Perfect Decimation': '4F05' // smn/war phase marker

  },
  soloWarn: {
    'WolEx Katon San Share': '4EFE'
  },
  triggers: [{
    id: 'WOLEx True Walking Dead',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '8FF'
    }),
    delaySeconds: (_data, matches) => parseFloat(matches.duration) - 0.5,
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: matches.effect
      };
    }
  }, {
    id: 'WOLEx Tower',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '4F04',
      capture: false
    }),
    mistake: {
      type: 'fail',
      text: {
        en: 'Missed Tower',
        de: 'Turm verpasst',
        fr: 'Tour manquée',
        ja: '塔を踏まなかった',
        cn: '没踩塔',
        ko: '장판 실수'
      }
    }
  }, {
    id: 'WOLEx True Hallowed Ground',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '4F44'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        text: matches.ability
      };
    }
  }, {
    // For Berserk and Deep Darkside
    id: 'WOLEx Missed Interrupt',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: ['5156', '5158']
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const wol_ex = (wol_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/05-shb/ultimate/the_epic_of_alexander.ts



// TODO: FIX luminous aetheroplasm warning not working
// TODO: FIX doll death not working
// TODO: failing hand of pain/parting (check for high damage?)
// TODO: make sure everybody takes exactly one protean (rather than watching double hits)
// TODO: thunder not hitting exactly 2?
// TODO: person with water/thunder debuff dying
// TODO: bad nisi pass
// TODO: failed gavel mechanic
// TODO: double rocket punch not hitting exactly 2? (or tanks)
// TODO: standing in sludge puddles before hidden mine?
// TODO: hidden mine failure?
// TODO: failures of ordained motion / stillness
// TODO: failures of plaint of severity (tethers)
// TODO: failures of plaint of solidarity (shared sentence)
// TODO: ordained capital punishment hitting non-tanks
const the_epic_of_alexander_triggerSet = {
  zoneId: zone_id/* default.TheEpicOfAlexanderUltimate */.Z.TheEpicOfAlexanderUltimate,
  damageWarn: {
    'TEA Sluice': '49B1',
    'TEA Protean Wave 1': '4824',
    'TEA Protean Wave 2': '49B5',
    'TEA Spin Crusher': '4A72',
    'TEA Sacrament': '485F',
    'TEA Radiant Sacrament': '4886',
    'TEA Almighty Judgment': '4890'
  },
  damageFail: {
    'TEA Hawk Blaster': '4830',
    'TEA Chakram': '4855',
    'TEA Enumeration': '4850',
    'TEA Apocalyptic Ray': '484C',
    'TEA Propeller Wind': '4832'
  },
  shareWarn: {
    'TEA Protean Wave Double 1': '49B6',
    'TEA Protean Wave Double 2': '4825',
    'TEA Fluid Swing': '49B0',
    'TEA Fluid Strike': '49B7',
    'TEA Hidden Mine': '4852',
    'TEA Alpha Sword': '486B',
    'TEA Flarethrower': '486B',
    'TEA Chastening Heat': '4A80',
    'TEA Divine Spear': '4A82',
    'TEA Ordained Punishment': '4891',
    // Optical Spread
    'TEA Individual Reprobation': '488C'
  },
  soloFail: {
    // Optical Stack
    'TEA Collective Reprobation': '488D'
  },
  triggers: [{
    // "too much luminous aetheroplasm"
    // When this happens, the target explodes, hitting nearby people
    // but also themselves.
    id: 'TEA Exhaust',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '481F',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (_data, matches) => matches.target === matches.source,
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: 'luminous aetheroplasm',
          de: 'Luminiszentes Ätheroplasma',
          fr: 'Éthéroplasma lumineux',
          ja: '光性爆雷',
          cn: '光性爆雷',
          ko: '빛의 폭뢰'
        }
      };
    }
  }, {
    id: 'TEA Dropsy',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '121'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        text: matches.effect
      };
    }
  }, {
    id: 'TEA Tether Tracking',
    type: 'Tether',
    netRegex: netregexes/* default.tether */.Z.tether({
      source: 'Jagd Doll',
      id: '0011'
    }),
    run: (data, matches) => {
      var _data$jagdTether;

      (_data$jagdTether = data.jagdTether) !== null && _data$jagdTether !== void 0 ? _data$jagdTether : data.jagdTether = {};
      data.jagdTether[matches.sourceId] = matches.target;
    }
  }, {
    id: 'TEA Reducible Complexity',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '4821',
      ...oopsy_common/* playerDamageFields */.np
    }),
    mistake: (data, matches) => {
      return {
        type: 'fail',
        // This may be undefined, which is fine.
        name: data.jagdTether ? data.jagdTether[matches.sourceId] : undefined,
        text: {
          en: 'Doll Death',
          de: 'Puppe Tot',
          fr: 'Poupée morte',
          ja: 'ドールが死んだ',
          cn: '浮士德死亡',
          ko: '인형이 죽음'
        }
      };
    }
  }, {
    id: 'TEA Drainage',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '4827',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => !data.party.isTank(matches.target),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        name: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    id: 'TEA Throttle Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '2BC'
    }),
    run: (data, matches) => {
      var _data$hasThrottle;

      (_data$hasThrottle = data.hasThrottle) !== null && _data$hasThrottle !== void 0 ? _data$hasThrottle : data.hasThrottle = {};
      data.hasThrottle[matches.target] = true;
    }
  }, {
    id: 'TEA Throttle Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '2BC'
    }),
    run: (data, matches) => {
      var _data$hasThrottle2;

      (_data$hasThrottle2 = data.hasThrottle) !== null && _data$hasThrottle2 !== void 0 ? _data$hasThrottle2 : data.hasThrottle = {};
      data.hasThrottle[matches.target] = false;
    }
  }, {
    id: 'TEA Throttle',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '2BC'
    }),
    delaySeconds: (_data, matches) => parseFloat(matches.duration) - 0.5,
    deathReason: (data, matches) => {
      if (!data.hasThrottle) return;
      if (!data.hasThrottle[matches.target]) return;
      return {
        id: matches.targetId,
        name: matches.target,
        text: matches.effect
      };
    }
  }, {
    // Balloon Popping.  It seems like the person who pops it is the
    // first person listed damage-wise, so they are likely the culprit.
    id: 'TEA Outburst',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '482A',
      ...oopsy_common/* playerDamageFields */.np
    }),
    suppressSeconds: 5,
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.source
      };
    }
  }]
};
/* harmony default export */ const the_epic_of_alexander = (the_epic_of_alexander_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/alliance/aglaia.ts


const aglaia_triggerSet = {
  zoneId: zone_id/* default.Aglaia */.Z.Aglaia,
  damageWarn: {
    'Aglaia Byregot Byregot\'s Strike': '725A',
    // blue knockback puck
    'Aglaia Byregot Byregot\'s Strike Lightning': '7168',
    // cardinal lightning during strike #2
    'Aglaia Byregot Levinforge': '7172',
    // lightning hammer line
    'Aglaia Byregot Byregot\'s Spire': '7170',
    // wide line during hammer section
    'Aglaia Byregot Cloud to Ground 1': '704D',
    // moving purple/yellow bubbles
    'Aglaia Byregot Cloud to Ground 2': '704E',
    // moving purple/yellow bubbles
    'Aglaia Byregot Cloud to Ground 3': '716D',
    // moving purple/yellow bubbles
    'Aglaia Byregot Cloud to Ground 4': '716E',
    // moving purple/yellow bubbles
    'Aglaia Rhalgr\'s Emissary Destructive Static': '70E0',
    // front 180 cleave
    'Aglaia Rhalgr\'s Emissary Destructive Charge': '70DB',
    // lightning quadrants
    'Aglaia Rhalgr\'s Emissary Lightning Bolt': '70E2',
    // targeted circles
    'Aglaia Rhalgr\'s Emissary Boltloop 1': '70DD',
    // overlapping expanding lightning rings
    'Aglaia Rhalgr\'s Emissary Boltloop 2': '70DE',
    // overlapping expanding lightning rings
    'Aglaia Rhalgr\'s Emissary Boltloop 3': '70DF',
    // overlapping expanding lightning rings
    'Aglaia Rhalgr Fist of Judgment Hand of the Destroyer': '70B0',
    // 180 cleave punch through blue portal
    'Aglaia Rhalgr Fist of Wrath Hand of the Destroyer': '70AF',
    // 180 cleave punch through red portal
    'Aglaia Rhalgr Rhalgr\'s Beacon': '7314',
    // purple knockback puck
    'Aglaia Rhalgr Bronze Lightning': '70B9',
    // pinwheel ground lightning
    'Aglaia Rhalgr Striking Meteor': '70BB',
    // targeted circle during Bronze Lightning
    'Aglaia Rhalgr Lightning Orb Shock': '70B3',
    // orb explosion during Hell of Lightning + Beacon
    'Aglaia Lions Slash and Burn Donut 1': '71D2',
    // Lioness donut (1 dot)
    'Aglaia Lions Slash and Burn Donut 2': '71D6',
    // Lioness donut (2 dots)
    'Aglaia Lions Slash and Burn Circle 1': '71D0',
    // Lion circle (1 dot)
    'Aglaia Lions Slash and Burn Circle 2': '71D5',
    // Lion circle (2 dots)
    'Aglaia Lions Roaring Blaze 1': '71CE',
    // Lion half cleave (1 dot)
    'Aglaia Lions Roaring Blaze 2': '71CF',
    // Lion half cleave (2 dots)
    'Aglaia Lions Roaring Blaze 3': '72BF',
    // Lion half cleave (when Lioness is dead)
    'Aglaia Lions Roaring Blaze 4': '71CE',
    // Lioness half cleave (when Lion is dead)
    'Aglaia Lions Trial by Fire': '72C0',
    // large centered circle when Lioness is dead
    'Aglaia Lions Spinning Slash': '72C1',
    // donut when Lion is dead
    'Aglaia Azeyma Solar Wings 1': '7082',
    // narrow front/back safe attack
    'Aglaia Azeyma Solar Wings 2': '7083',
    // narrow front/back safe attack
    'Aglaia Azeyma Solar Flair': '7084',
    // orb exploding after Solar Wings
    'Aglaia Azeyma Solar Fans 1': '708E',
    // horizontal line aoe
    'Aglaia Azeyma Solar Fans 2': '72BE',
    // horizontal line aoe
    'Aglaia Azeyma Warden\'s Flame Radiant Flourish': '7094',
    // Radiant Rhythm/Finish explosion
    'Aglaia Azeyma Solar Fold': '71EE',
    // cross line aoe that spawns fire lines
    'Aglaia Azeyma Folding Flare 1': '7089',
    // expanding fire lines
    'Aglaia Azeyma Folding Flare 2': '731C',
    // expanding fire lines
    'Aglaia Azeyma Dancing Flame 1': '708B',
    // Haute Air-blown fire quadrant
    'Aglaia Azeyma Dancing Flame 2': '708C',
    // Haute Air-blown fire quadrant
    'Aglaia Azeyma Sunbeam': '7097',
    // trine puddles
    'Aglaia Nald\'thal Flames of the Dead': '73A7',
    // on blue out incorrectly during Heat Above, Flames Below
    'Aglaia Nald\'thal Living Heat': '73A9',
    // on red in incorrectly during Heat Above, Flames Below
    'Aglaia Nald\'thal Everfire': '73C4',
    // Once Above, Ever Below moving puddles
    'Aglaia Nald\'thal Once Burned 1': '73C5',
    // Once Above, Ever Below moving red puddles
    'Aglaia Nald\'thal Once Burned 2': '73C6',
    // Once Above, Ever Below moving red puddles
    'Aglaia Nald\'thal Everfire 1': '73C2',
    // Once Above, Ever Below moving blue puddles
    'Aglaia Nald\'thal Everfire 2': '73C3',
    // Once Above, Ever Below moving blue puddles
    'Aglaia Nald\'thal Hell of Fire': '72B8',
    // 180 cleave
    'Aglaia Nald\'thal Wayward Soul': '7110',
    // millions of large circles from dropping orbs
    'Aglaia Nald\'thal Seventh Passage 1': '7118',
    // Fired Up "get out" circle
    'Aglaia Nald\'thal Seventh Passage 2': '7119',
    // Fired Up "get out" circle
    'Aglaia Nald\'thal Soul Vessel Twingaze': '712A',
    // add phase narrow conal
    'Aglaia Nald\'thal Deepest Pit 1': '73C7',
    // Far Above, Deep Below chasing arrows
    'Aglaia Nald\'thal Deepest Pit 2': '73C8' // Far Above, Deep Below chasing arrows

  },
  damageFail: {
    'Aglaia Nald\'thal Tipped Scales': '737A' // failing Balance mechanic (7379 is damage for doing it correctly)

  },
  gainsEffectWarn: {
    // BF9 is the "9999 duration" effect, and BFA is what you get after you step out of fire.
    'Aglaia Azeyma Burns': 'BFA' // Azeyma Wildfire Ward burns

  },
  shareWarn: {
    'Aglaia Byregot Byregot\'s Ward': '7175',
    // tankbuster cleave
    'Aglaia Rhalgr\'s Emissary Destructive Strike': '70D9',
    // tankbuster cleave
    'Aglaia Rhalgr Destructive Bolt': '70B4',
    // 3x tankbuster cleave
    'Aglaia Rhalgr Lightning Storm': '70BA',
    // spread markers
    'Aglaia Nald\'thal Smelting': '7120' // protean spread

  },
  soloFail: {
    'Aglaia Nald\'thal Heaven\'s Trial': '711F',
    // stack marker
    'Aglaia Nald\'thal Soul Vessel Magmatic Spell': '712D' // 3x stack markers

  },
  triggers: [{
    id: 'Aglaia Knocked Off',
    type: 'Ability',
    // 70B8 = Rhalgr's Beacon purple knockback
    netRegex: netregexes/* default.ability */.Z.ability({
      id: ['70B8']
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'Renversé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const aglaia = (aglaia_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/dungeon/alzadaals_legacy.ts

const alzadaals_legacy_triggerSet = {
  zoneId: zone_id/* default.KtisisHyperboreia */.Z.KtisisHyperboreia,
  damageWarn: {
    'Alzadaal Alzadaal\'s Qutrub Whirling Slash': '703E',
    // Circle AoE, before boss 1
    'Alzadaal Alzadaal\'s Qutrub Leaping Cleave': '7040',
    // Circle AoE, before boss 1
    'Alzadaal Alzadaal\'s Asvattha Bad Breath': '7041',
    // Conal AoE, before boss 1
    'Alzadaal Ambujam Toxin Shower': '65FC',
    // Large AoE circles, boss 1
    'Alzadaal Abujam Corrosive Venom': '71E6',
    // Large AoE circles, boss 1
    'Alzadaal Ambujam Toxic Fountain': '731B',
    // Red AoE circles, boss 1
    'Alzadaal Ambujam Corrosive Fountain': '7374',
    // Blue AoE  circles, boss 1
    'Alzadaal Bounty Rockfin Aqua Spear': '704C',
    // Rectangle cleave AoE, before boss 2
    'Alzadaal Alzadaal\'s Rampart Pulse Laser': '7041',
    // Rectangle AoE, before boss 2
    'Alzadaal Bounty Uragnite Palsynixys': '7043',
    // Frontal cone AoE, before boss 2
    'Alzadaal Bounty Ruszor Aqua BLast': '7044',
    // Large frontal cone AoE, before boss 2
    'Alzadaal Shallows Ogrebon Flounder': '7046',
    // Rectangle AoE, before boss 2
    'Alzadaal Bounty Vepar Screwdriver': '7047',
    // Small frontal cone AoE, before boss 2
    'Alzadaal Bounty Clawtrap Alzadaal XIV Water III': '704F',
    // Frontal cone AoE, before boss 2
    'Alzadaal Armored Chariot Assault Cannon 1': '6F1C',
    // Primary cannon fire, boss 2
    'Alzadaal Armored Chariot Assault Cannon 2': '6F1D',
    // Primary cannon fire, boss 2
    'Alzadaal Armored Chariot Cannon Reflection': '6F27',
    // Secondary cannon fire, boss 2
    'Alzadaal Alzadaal\'s Acrolith Earthshatter': '7051',
    // Centered circle AoE, after boss 2
    'Alzadaal Alzadaal\'s Guardian Dominion Slash': '7052',
    // Large frontal cone AoE, after boss 2
    'Alzadaal Mystic Weapon Smite of Rage': '7053',
    // Line AoE, after boss 2
    'Alzadaal Mystic Weapon Whirl of Rage': '7054',
    // Centered circle AoE, after boss 2
    'Alzadaal Alzadaal\'s  Mimic Deathtrap': '7055',
    // Centered circle AoE, after boss 2
    'Alzadaal Kapikulu Basting Blade': '6F68',
    // Large Rectangle AoE, boss 3
    'Alzadaal Kapikulu Mana Explosion': '6F6B' // Power Serge explosion circles, boss 3

  },
  gainsEffectWarn: {
    'Alzadaal Kapikulu Stab Wound': 'BF6' // Spike traps, boss 3

  },
  shareWarn: {
    'Alzadaal Armored Chariot Graviton Cannon': '7373',
    // Large spread circles, boss 2
    'Alzadaal Kapikulu Rotary Gale': '6F6D' // Spread circles, boss 3

  },
  soloWarn: {
    'Alzadaal Kapikulu Magnitude Opus': '6F6F' // Standard stack marker, boss 3

  }
};
/* harmony default export */ const alzadaals_legacy = (alzadaals_legacy_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/dungeon/ktisis_hyperboreia.ts

const ktisis_hyperboreia_triggerSet = {
  zoneId: zone_id/* default.KtisisHyperboreia */.Z.KtisisHyperboreia,
  damageWarn: {
    'Ktisis Ktiseos Leon Cry': '6857',
    // centered ricle
    'KtisisKtiseos Panther Charged Whisker': '6855',
    // centered circle
    'KtisisKtiseos Panther Megablaster': '6856',
    // conal
    'Ktisis Ktiseos Chione Snowcap': '6707',
    // circle when appearing
    'Ktisis Ktiseos Chione White Death': '685B',
    // targeted conal
    'Ktisis Lyssa Punishing Slice': '6259',
    // 180 cleave after Frostbite and Seek
    'Ktisis Lyssa Ice Pillar': '625B',
    // lines from ice pillar adds
    'Ktisis Ktiseos Daidalion Transonic Blast': '685D',
    // conal
    'Ktisis Ktiseos Hippogryph Shriek': '6862',
    // targeted circle
    'Ktisis Ktiseos Lailaps Fire II': '6867',
    // targeted circle
    'Ktisis Ktiseos Gryps Freefall': '685F',
    // targeted jump
    'Ktisis Ktiseos Gryps Alpine Draft': '685F',
    // line
    'Ktisis Ktiseos Ophiotauros Butcher': '6863',
    // conal
    'Ktisis Ktiseos Ophiotauros Scythe Tail': '6865',
    // centered circle
    'Ktisis Ladon Lord Pyric Breath 1': '6486',
    // 1/3 wide conal breath
    'Ktisis Ladon Lord Pyric Breath 2': '6487',
    // 1/3 wide conal breath
    'Ktisis Ladon Lord Pyric Breath 3': '6488',
    // 1/3 wide conal breath
    'Ktisis Ladon Lord Pyric Breath 4': '6489',
    // 1/3 wide conal breath
    'Ktisis Ladon Lord Pyric Breath 5': '648A',
    // 1/3 wide conal breath
    'Ktisis Ladon Lord Pyric Breath 6': '648B',
    // 1/3 wide conal breath
    'Ktisis Ladon Lord Pyric Sphere': '6491',
    // sphere bomberman lines
    'Ktisis Ktiseos Stymphalid Tickle': '686B',
    // wide line
    'Ktisis Ktiseos Stymphalid Gust': '686D',
    // targeted circle
    'Ktisis Ktiseos Alkyone Flamespitter': '696A',
    // targeted conal
    'Ktisis Ktiseos Aello Sideslip': '686E',
    // centered circle
    'Ktisis Ktiseos Aello Feathercut': '686F',
    // line
    'Ktisis Ktiseos Aello Wingbeat': '6870',
    // narrow conal
    'Ktisis Hermes True Aero IV 1': '6521',
    // mirrors
    'Ktisis Hermes True Aero IV 2': '6CBC',
    // mirrors
    'Ktisis Hermes True Aero Double': '652D',
    // Doubled line from True Aero lines
    'Ktisis Hermes True Aero II Double': '652A',
    // Doubled circle from True Aero II spread
    'Ktisis Hermes True Tornado Double': '6532' // Doubled circle after tankbuster

  },
  gainsEffectWarn: {
    'Ktisis Hermes Windburn': '824' // outside Hermes ring

  },
  shareWarn: {
    'Ktisis Hermes True Aero II': '6528' // spread

  },
  shareFail: {
    'Ktisis Hermes True Tornado': '6531' // tankbuster cleave

  }
};
/* harmony default export */ const ktisis_hyperboreia = (ktisis_hyperboreia_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/dungeon/smileton.ts


const smileton_triggerSet = {
  zoneId: zone_id/* default.Smileton */.Z.Smileton,
  damageWarn: {
    'Smileton Smiley Wanderer Empty Beleaguer': '6964',
    // targeted circle
    'Smileton Smiley Lunatender La Vie en Epines': '695E',
    // frontal line
    'Smileton Smiley Lunatender Anthine Needles': '695F',
    // ??
    'Smileton Smiley Panopt Retinal Glare': '696A',
    // frontal cone
    'Smileton Face Mixed Feelings': '6738',
    // lines between relatively small faces
    'Smileton Smiley Scraper Headspin': '695D',
    // centered circle
    'Smileton Smiley Daphnia Acrid Stream': '6960',
    // targeted circle
    'Smileton Smiley Metalloid Lattice': '6969',
    // long line aoe
    'Smileton Frameworker Leap Forward': '6746',
    // jump to large circle
    'Smileton Frameworker Printed Worker Leap Forward': '6747',
    // jump to large circle
    'Smileton Frameworker Omnidirectional Onslaught': '6749',
    // alternating pinwheel'
    'Smileton Smiley Dynamite Burst': '696B',
    // quick centered circle near death
    'Smileton Smiley Regolith Metamorphic Blast': '6967',
    // large conal
    'Smileton Smiley Regolith Orogenic Storm': '6968',
    // targeted circle
    'Smileton Smiley Supporter Fire Fighter': '695C',
    // donut aoe
    'Smileton Smiley Sweeper Sewer Water 1': '6962',
    // front/back cleave
    'Smileton Smiley Sweeper Sewer Water 2': '6963',
    // front/back cleave
    'Smileton The Big Cheese Bomb Iron Kiss': '674D',
    // moving bomb circular explosion
    'Smileton The Big Cheese Excavation Bomb Excavated': '6C32',
    // mine explosion after Explosive Power
    'Smileton The Big Cheese Right Disassembler': '674F',
    // right cleave
    'Smileton The Big Cheese Left Disassembler': '6750' // left cleave

  },
  shareWarn: {
    'Smileton Face Temper, Temper': '6740',
    // spread
    'Smileton The Big Cheese Leveling Missiles': '' // spread

  },
  soloWarn: {
    'Smileton The Big Cheese Electric Arc': '6753' // stack marker

  },
  triggers: [{
    id: 'Smileton Face Wrong Face',
    type: 'GainsEffect',
    // ACB = Smiley Face
    // ACC = Frowny Face
    // Taking this multiple times stacks the effect.
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: 'AC[BC]',
      source: 'Face'
    }),
    condition: (_data, matches) => parseInt(matches.count) > 1,
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: `${matches.effect} x${matches.count}`,
          de: `${matches.effect} x${matches.count}`,
          fr: `${matches.effect} x${matches.count}`,
          cn: `${matches.effect} x${matches.count}`,
          ko: `${matches.effect} x${matches.count}`
        }
      };
    }
  }]
};
/* harmony default export */ const smileton = (smileton_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/dungeon/stigma_dreamscape.ts

// TODO: Do Mustard Bomb or Wheel splash?
// TODO: How to disambiguate the 828 Bleeding debuff? It's unavoidably inflicted by several things,
// including Mustard Bomb and Atomic Ray.
// However, it is also inflicted by arena walls on bosses 1/3.
const stigma_dreamscape_triggerSet = {
  zoneId: zone_id/* default.TheStigmaDreamscape */.Z.TheStigmaDreamscape,
  damageWarn: {
    'Dreamscape Omicron Invader Electric Stream': '6DB8',
    // Line AoE, before boss 1
    'Dreamscape Omicron Invader Shocking Discharge': '6B99',
    // Small Chariot AoE, before boss 1
    'Dreamscape Proto-Omega Starboard Side Cannons': '6320',
    // Half-arena cleave, boss 1
    'Dreamscape Proto-Omega Larboard Side Cannons': '6321',
    // Half-arena cleave, boss 1
    'Dreamscape Proto-Omega Forward Interceptors': '6323',
    // Forward half arena cleave, boss 1
    'Dreamscape Proto-Omega Rear Interceptors': '6325',
    // Rear half arena cleave, boss 1
    'Dreamscape Mark II Guided Missile Iron Kiss': '6327',
    // Missile explosion, boss 1
    'Dreamscape Delta Invader Rail Cannon': '6B9E',
    // Line AoE, before boss 2
    'Dreamscape Arch-Lambda Tread': '63AC',
    // Mobile Assault Cannon dashes, boss 2
    'Dreamscape Arch-Lambda Wave Cannon': '63AF',
    // Get-behind arena cleave after Tread, boss 2
    'Dreamscape Arch-Lambda Main Sniper Cannon': '63B0',
    // Charge during Auto-Mobile Sniper Cannon, boss 2
    'Dreamscape Hybrid Dragon Engulfing Flames': '6BA0',
    // Rectangle AoE, after boss 2
    'Dreamscape Omega Frame Thermite Bomb': '6BA1',
    // Small circle AoE, after boss 2
    'Dreamscape Omega Frame Starboard Proto-Wave Cannon': '642A',
    // Half-arena cleave, boss 3
    'Dreamscape Omega Frame Larboard Proto-Wave Cannon': '642B',
    // Half-arena cleave, boss 3
    'Dreamscape Hybrid Dragon Touchdown': '68F9',
    // Circle AoE, boss 3
    'Dreamscape Hybrid Dragon Fire Breath': '642E',
    // Giant cone AoE, boss 3
    'Dreamscape Proto-Rocket Punch Rush': '642D',
    // Line AoEs, boss 3
    'Dreamscape Stigma-4 Electromagnetic Release Dynamo': '6432',
    // Dynamo AoE, boss 3
    'Dreamscape Stigma-4 Electromagnetic Release Chariot': '6434' // Chariot AoE, boss 3

  },
  gainsEffectWarn: {
    'Dreamscape Proto-Omega Puddle Burns': '892' // Flame puddle effect, boss 1

  },
  shareWarn: {
    'Dreamscape Proto-Omega Spread Burn': '6329',
    // Spread circles, boss 1. (Cast name is Chemical Missile, 6328.)
    'Dreamscape Arch-Lambda Personal Sniper Cannon': '63B2' // Headmarker lasers, boss 2

  },
  soloWarn: {
    'Dreamscape Proto-Omega Electric Slide': '632A' // Stack marker, boss 1.

  }
};
/* harmony default export */ const stigma_dreamscape = (stigma_dreamscape_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/dungeon/the_aitiascope.ts

const the_aitiascope_triggerSet = {
  zoneId: zone_id/* default.TheAitiascope */.Z.TheAitiascope,
  damageWarn: {
    'Aitiascope Sinking Rivalry Egotism': '6B1A',
    // very large circle
    'Aitiascope Livia Aglaea Climb': '6444',
    // diagonal quadrant cleave
    'Aitiascope Livia Aglaea Shot 1': '6446',
    // lines
    'Aitiascope Livia Aglaea Shot 2': '6447',
    // lines coming back
    'Aitiascope Livia Ignis Amoris': '644C',
    // Odi et Amo targeted circles
    'Aitiascope Livia Disparagement': '644A',
    // wide conal
    'Aitiascope Sinking Desire The Path of Avarice': '6B1B',
    // line aoe
    'Aitiascope Sinking Partiality Unrightful Claim': '6B1C',
    // centered circle, gives disease
    'Aitiascope Sinking Dissension Whisper of Our Discontent': '6B1D',
    // conal
    'Aitiascope Rhitahtyn Tartarean Spark': '6457',
    // laser line aoe
    'Aitiascope Rhitahtyn Shield Skewer': '6450',
    // charge
    'Aitiascope Rhitahtyn Shrapnel Shell': '6454',
    'Aitiascope Sinking Regret Lost Opportunity': '6B1F',
    // absolutely gigantic conal
    'Aitiascope Amon Thundaga Forte 1': '645B',
    // initial pinwheel
    'Aitiascope Amon Thundaga Forte 2': '645C',
    // second pinwheel
    'Aitiascope Amon Epode': '645F',
    // coin laser
    'Aitiascope Amon Right Firaga Forte': '6460',
    // right cleave
    'Aitiascope Amon Left Firaga Forte': '6461',
    // left cleave
    'Aitiascope Amon Eruption Forte': '6468',
    // targeted circles
    'Aitiascope Amon Dreams of Ice': '6C6C' // shiva icicle appearing

  },
  damageFail: {
    'Aitiascope Rhitahtyn Impact': '644F',
    // walls appearing during Vexillatio cast
    'Aitiascope Amon Curtain Call': '6466' // line of sight

  },
  shareFail: {
    'Aitiascope Livia Aglaea Bite': '6449'
  }
};
/* harmony default export */ const the_aitiascope = (the_aitiascope_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/dungeon/the_dead_ends.ts


const the_dead_ends_triggerSet = {
  zoneId: zone_id/* default.TheDeadEnds */.Z.TheDeadEnds,
  damageWarn: {
    'DeadEnds Warped Flesh Amorphic Flail': '6E91',
    // centered circle (pudding)
    'DeadEnds Warped Flesh Terminal Bloom': '6FFF',
    // targeted circle (pudding)
    'DeadEnds Warped Flesh Plague Fang': '6E92',
    // targeted circle (tall
    'DeadEnds Grebuloff Cough Up': '653E',
    // 3x targeted circles
    'DeadEnds Ambient No Future': '6CC9',
    // ambient red reticule (before)
    'DeadEnds Airborne Freedom Fighter Air Blast': '6E72',
    // line aoe
    'DeadEnds Landed Freedom Fighter Photon Burst': '6E71',
    // targeted circle
    'DeadEnds Peacekeeper Electromagnetic Repellant': '6EC8',
    // red circle under boss prior to electric circle
    'DeadEnds Peacekeeper Perpetual War Machine Small-Bore Laser': '6EC0',
    // lasers from triangles, short telegraph
    'DeadEnds Peacekeeper Peacefire': '654E',
    // rotating large circles
    'DeadEnds Peacekeeper No Future': '6547',
    // red reticule (during boss)
    'DeadEnds Xenofauna Relevation': '6C47',
    // targeted black/yellow circle
    'DeadEnds Xenoflora Creeping Hush': '6C45',
    // frontal blue cleave
    'DeadEnds Ra-la Lamellar Light': '6553',
    // expanding circles from Prance
    'DeadEnds Ra-la Lifesbreath': '6554',
    // line aoe
    'DeadEnds Ra-la Loving Embrace 1': '6557',
    // left/right cleave
    'DeadEnds Ra-la Loving Embrace 2': '6558' // left/right cleave

  },
  damageFail: {
    // All give debuffs that require healer attention, so is a worse mistake.
    'DeadEnds Grebuloff Necrotic Fluid': '653F',
    // exaflare orbs
    'DeadEnds Grebuloff Wave of Nausea': '6EBB',
    // donut
    'DeadEnds Ra-la Golden Wings Lamellar Light 1': '6556',
    // Doom-giving Lifesbreath butterfly lines
    'DeadEnds Ra-la Golden Wings Lamellar Light 2': '655F' // Doom-giving Lifesbreath butterfly lines

  },
  gainsEffectWarn: {
    'DeadEnds Grebuloff Hysteria': '128',
    // failing dorito stack
    'DeadEnds Peacekeeper Burns': '892',
    // standing or getting knocked into outside edge
    'DeadEnds Peacekeeper Electrocution': '76B' // standing under Peacekeeper after Electromagnetic Repellant

  },
  shareWarn: {
    'DeadEnds Grebuloff Befoulment': '6544',
    // spread
    'DeadEnds Peacekeeper Infantry Deterrent': '6EC7',
    // spread
    'DeadEnds Peacekeeper No Future Spread': '6548',
    // spread at the end of No Future
    'DeadEnds Ra-la Still Embrace': '655C' // spread

  },
  shareFail: {
    'DeadEnds Peacekeeper Elimination': '654F' // tankbuster laser cleave

  },
  triggers: [{
    id: 'DeadEnds Ra-la Doom Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '6E9'
    }),
    run: (data, matches) => {
      var _data$hasDoom;

      (_data$hasDoom = data.hasDoom) !== null && _data$hasDoom !== void 0 ? _data$hasDoom : data.hasDoom = {};
      data.hasDoom[matches.target] = true;
    }
  }, {
    id: 'DeadEnds Ra-la Doom Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: '6E9'
    }),
    run: (data, matches) => {
      var _data$hasDoom2;

      (_data$hasDoom2 = data.hasDoom) !== null && _data$hasDoom2 !== void 0 ? _data$hasDoom2 : data.hasDoom = {};
      data.hasDoom[matches.target] = false;
    }
  }, {
    id: 'DeadEnds Ra-la Doom',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '6E9'
    }),
    delaySeconds: (_data, matches) => parseFloat(matches.duration) - 0.5,
    deathReason: (data, matches) => {
      if (!data.hasDoom) return;
      if (!data.hasDoom[matches.target]) return;
      return {
        id: matches.targetId,
        name: matches.target,
        text: matches.effect
      };
    }
  }]
};
/* harmony default export */ const the_dead_ends = (the_dead_ends_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/dungeon/the_fell_court_of_troia.ts

const the_fell_court_of_troia_triggerSet = {
  zoneId: zone_id/* default.TheFellCourtOfTroia */.Z.TheFellCourtOfTroia,
  damageWarn: {
    'Troia Troian Sentry Evil Pleghm': '7606',
    // targeted circle
    'Troia Troian Scavenger Dark Arrivisme': '7605',
    // targeted circle
    'Troia Troian Pawn Condemnation': '7604',
    // frontal conal
    'Troia Evil Dreamer Dark Vision 1': '73B8',
    // untelegraphed line aoes
    'Troia Evil Dreamer Dark Vision 2': '73BB',
    // untelegraphed line aoes
    'Troia Evil Dreamer Unite Mare Adds': '73BC',
    // large circles where you need to kill one add
    'Troia Evil Dreamer Unite Mare Small': '73B5',
    // final phase enrage small circles
    'Troia Evil Dreamer Unite Mare Big': '73B6',
    // final phase enrage large circle
    'Troia Troian Guard Void Trap': '760A',
    // large targeted circle
    'Troia Troian Footman Grim Halo': '7410',
    // large centered circle
    'Troia Troian Rider Geirrothr': '7607',
    // random player targeted front conal
    'Troia Troian Bishop Jester\'s Reap': '7609',
    // frontal conal
    'Troia Troian Knight Hall of Sorrow': '7608',
    // targeted circle
    'Troia Beatrice Beatific Scorn': '7479',
    // explosions
    'Troia Beatrice Voidshaker': '747E',
    // front conal
    'Troia Beatrice Toric Void': '79E7',
    // outside ring donut
    'Troia Troian Trapper Arachne Web': '760F',
    // targeted circle
    'Troia Troian Equerry Swoop': '760D',
    // circular entrance aoe
    'Troia Troian Butler Dark': '760E',
    // frontal contal
    'Troia Troian Steward Unholy Darkness': '760C',
    // centered circle
    'Troia Scarmiglione Rotten Rampage Circle': '7618',
    // untargeted ground circles
    'Troia Scarmiglione Blighted Bedevilment': '761B',
    // purple knockback circle
    'Troia Scarmiglione Blighted Bladework': '7633',
    // giant circle (with a line to it)
    'Troia Scarmiglione Blighted Sweep': '7635',
    // 180 "get behind" attack
    'Troia Scarmiglione Nox': '7621' // untargeted ground circles during add phase

  },
  gainsEffectFail: {
    'Troia Beatrice Doom': 'D24',
    // failing Death Forseen 747D lookaway
    'Troia Scarmiglione Zombification': '901',
    // taking three stacks of Brain Rot during Rotten Rampage
    // C09 is the 9999 duration while you are standing in the wall, and C0A is the 15s lingering debuff
    'Troia Scarmiglione Toxicosis': 'C0A' // getting knocked by Vacuum Wave not into a wall

  },
  shareWarn: {
    'Troia Beatrice Void Nail': '747F',
    // spread
    'Troia Scarmligione Rotten Rampage Spread': '7619',
    // spread markers
    'Troia Scarmiglione Void Gravity': '7622' // spread during add phase

  },
  shareFail: {
    'Troia Scarmiglione Firedamp': '7637' // cleaving tankbuster

  },
  soloWarn: {
    'Troia Beatrice Antipressure': '79E8',
    // stack
    'Troia Scarmiglione Void Vortex': '7623' // stack during add phase

  }
};
/* harmony default export */ const the_fell_court_of_troia = (the_fell_court_of_troia_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/dungeon/the_tower_of_babil.ts


// TODO: Figure out how to determine whether someone actively stood in Boundless Pain
const the_tower_of_babil_triggerSet = {
  zoneId: zone_id/* default.TheTowerOfBabil */.Z.TheTowerOfBabil,
  damageWarn: {
    'Babil Nimrod Cannon Shot': '6DE1',
    // Large circle AoE, before first boss
    'Babil Tempered Imperial Spread Shot': '6DE2',
    // Conal AoE, before first boss
    'Babil Satellite Incendiary Circle': '6DE3',
    // Large donut AoE, before first boss
    'Babil Reaper Magitek Cannon': '6DE4',
    // AOE circle, before first boss
    'Babil Barnabas Ground and Pound': '62EA',
    // Telegraphed line knockback, boss 1
    'Babil Barnabas Dynamic Scrapline': '62F0',
    // Inner circle during Dynamic Scrapline, boss 1
    'Babil Barnabas Dynamic Pound': '62EE',
    // Line during Dynamic Pound, boss 1
    'Babil Barnabas Electromagnetic Release 1': '62F1',
    // Center AoE circle, boss 1
    'Babil Barnabas Electromagnetic Release 2': '62EF',
    // Center magnetic line, boss 1
    'Babil Barnabas Rolling Scrapline': '62EB',
    // Center AoE circle, no magnets, boss 1
    'Babil Thunderball Shock': '62F2',
    // Cardinal/intercardinal AoE circles, boss 1
    'Babil Sky Armor Aethershot': '6DE7',
    // Circle AoE, after boss 1
    'Babil Rearguard Cermet Pile': '6DE8',
    // Line AoE, before boss 2
    'Babil Colossus Grand Sword': '6DE9',
    // Frontal cone, before boss 2
    'Babil Avenger Shoulder Cannon': '6DEA',
    // Targeted AoE circle, before boss 2
    'Babil Death Machine Magitek Ray': '6DEB',
    // Long line AoE, before boss 2
    'Babil Magitek Chakram Mighty Blow': '62F4',
    // Arena AoE, if not mini, boss 2
    'Babil Lugae Surface Missile': '62F7',
    // Targeted AoE circles from Magitek Missile, boss 2
    'Babil Magitek Explosive Explosion': '62F9',
    // Bomberman line AoE, boss 2
    'Babil Lugae Magitek Ray': '62FC',
    // Frontal line AoE, boss 2
    'Babil Gunship Garlean Fire': '6DEE',
    // Circle AoE, after boss 2
    'Babil Armored Weapon Diffractive Laser': '5E53',
    // Circle AoE, after boss 2
    'Babil Magitek Crane Crane Game': '6C35',
    // Large environmental circle AoE, after boss 2
    'Babil Hexadrone 2-Tonze Magitek Missile': '6DEC',
    // Circle AoE, after boss 2
    'Babil Roader Rush': '6DED',
    // Rectangle AoE, after boss 2
    'Babil Hypertuned Specimen Right-arm Blaster': '6DF0',
    // Rectangle AoE, after boss 2
    'Babil Anima Phantom Pain': '62FF',
    // Lunar Nail squares, boss 3
    'Babil Mega-graviton Graviton Spark': '6302',
    // Tether failure, boss 3
    'Babil Anima Pater Patiae': '6306',
    // Line AoE, boss 3
    'Babil Anima Obliviating Claw': '630A',
    // Chase puddle initial circle, boss 3
    'Babil Iron Nail Obliviating Claw': '630C',
    // Iron Nail spawn circles, boss 3
    'Babil Iron Nail Charnel Claw': '630D',
    // Line dashes, boss 3
    'Babil Anima Coffin Scratch': '630E' // Chase puddles, boss 3

  },
  gainsEffectWarn: {
    'Babil Barnabas Electrocution': '826' // Arena edge effect, boss 1

  },
  shareWarn: {
    'Babil Anima Erupting Pain': '6308' // Purple spread circles, boss 3

  },
  soloWarn: {
    'Babil Barnabas Shocking Force': '62EC' // Stack marker, boss 1

  },
  triggers: [{
    // Reaching 8 stacks of Breathless is a death
    id: 'Babil Lugae Breathless',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: 'A70',
      count: '7'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Suffocated',
          de: 'Erstickt',
          fr: 'A suffoqué(e)',
          cn: '窒息',
          ko: '질식'
        }
      };
    }
  }]
};
/* harmony default export */ const the_tower_of_babil = (the_tower_of_babil_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/dungeon/the_tower_of_zot.ts

const the_tower_of_zot_triggerSet = {
  zoneId: zone_id/* default.TheTowerOfZot */.Z.TheTowerOfZot,
  damageWarn: {
    'Zot Armored Fiend Soporific Gas': '6CE2',
    // centered circle
    'Zot Sky Armor Garlean Fire': '54EA',
    // targeted circle
    'Zot Minduruva Manusya Blizzard III': '6296',
    // blizzard pinwheel
    'Zot Minduruva Manusya Fire III': '6295',
    // fire donut
    'Zot Minduruva Manusya Thunder III': '6297',
    // thunder "cross" circles
    'Zot Minduruva Manusya Bio III': '6298',
    // 180 degree frontal cleave
    'Zot Death Claw Shred': '54ED',
    // line aoe
    'Zot Hypertuned Left-Arm Slash': '54EC',
    // frontal conal
    'Zot Sanduruva Berserker Sphere Sphere Shatter': '62A4',
    // circles during Explosive Force
    'Zot Predator Magitek Ray': '5E4F',
    // long line aoe
    'Zot Roader Haywire': '5E51',
    // line aoe charge
    'Zot Mark II Zot Colossus Exhaust': '5E4B',
    // long line aoe
    'Zot Armored Weapon Diffractive Laser': '5E53',
    // targeted circle
    'Zot Cinduruva Delta Blizzard III 1': '62B2',
    // lines/pinwheels
    'Zot Cinduruva Delta Blizzard III 2': '62B3',
    // lines/pinwheels
    'Zot Cinduruva Delta Thunder III 1': '62B5',
    // lines/circles
    'Zot Cinduruva Delta Thunder III 2': '62B6',
    // lines/circles
    'Zot Cinduruva Delta Fire III 1': '62AF',
    // lines/donuts
    'Zot Cinduruva Delta Fire III 2': '62B0',
    // lines/donuts
    'Zot Cinduruva Prapti Siddhi': '62BB',
    // Minduruva line during final boss
    'Zot Cinduruva Berserker Sphere Sphere Shatter': '62BF',
    // Explosive Force during final boss
    'Zot Cinduruva Prakamya Siddhi': '62BE' // ?? casted by Sinduruva after Minduruva has died

  },
  shareWarn: {
    'Zot Sanduruva Prapti Siddhi': '62A8' // targeted line, sometimes with stop

  }
};
/* harmony default export */ const the_tower_of_zot = (the_tower_of_zot_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/dungeon/vanaspati.ts


 // TODO: do tankbusters cleave?
// TODO: what's the effect for running into the outer edge on Terminus Wrecker?
// TODO: what's the effect for running into the outer ring on Svarbhanu?

const vanaspati_triggerSet = {
  zoneId: zone_id/* default.Vanaspati */.Z.Vanaspati,
  damageWarn: {
    'Vanaspati Terminus Trampler Tremblor': '6C22',
    // large centered circle
    'Vanaspati Terminus Idolizer Deadly Tentacles': '6CDD',
    // conal
    'Vanaspati Terminus Snatcher Vitriol': '6232',
    // Mouth Off mouth circles
    'Vanaspati Terminus Snatcher What Is Right': '6233',
    // right cleave
    'Vanaspati Terminus Snatcher What Is Left': '6234',
    // left cleave
    'Vanaspati Terminus Sprinter Hollow Spike': '6C1F',
    // long line aoe
    'Vanaspati Terminus Horror Bellows': '6C1E',
    // 90 degree conal
    'Vanaspati Terminus Bellwether Winds Of Despair': '6CDC',
    // line aoe
    'Vanaspati Svarbhanu Chaotic Undercurrent Purple': '624A',
    // purple square explosions
    'Vanaspati Svarbhanu Chaotic Undercurrent Blue': '624B',
    // blue square explosions
    'Vanaspati Svarbhanu Cosmic Kiss Circle': '624F',
    // midphase circles on ground
    'Vanaspati Svarbhanu Midphase Charge': '631E' // unnamed middphase line attacks

  },
  shareWarn: {
    'Vanaspati Terminus Snatcher Wallow': '6236',
    // spread marker
    'Vanaspati Svarbhanu Cosmic Kiss Spread': '6250' // spread marker

  },
  soloWarn: {
    'Vanaspati Terminus Wrecker Poison Heart': '6CDC' // stack marker

  },
  triggers: [{
    // Lookaway mechanic, does no damage on success.
    id: 'Vanaspati Terminus Twitcher Double Hex Eye',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '6C21',
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const vanaspati = (vanaspati_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/raid/p1n.ts


const p1n_triggerSet = {
  zoneId: zone_id/* default.AsphodelosTheFirstCircle */.Z.AsphodelosTheFirstCircle,
  damageWarn: {
    'P1N Gaoler\'s Flail 1': '6DA2',
    // left/right 180 cleave
    'P1N Gaoler\'s Flail 2': '6DA3',
    // left/right 180 cleave
    'P1N Powerful Light': '65ED',
    // light explosion during fire/light
    'P1N Powerful Fire': '65EC' // fire explosion during fire/light

  },
  damageFail: {
    'P1N Painful Flux': '65F2' // standing in cross between hot/cold sections

  },
  soloWarn: {
    'P1N True Holy': '65E7' // Pitiless Flail stack marker

  },
  triggers: [{
    id: 'P1N Hot Cold Spell Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: 'AB[34]'
    }),
    run: (data, matches) => {
      var _data$spell;

      const temp = matches.effectId === 'AB3' ? 'cold' : 'hot';
      ((_data$spell = data.spell) !== null && _data$spell !== void 0 ? _data$spell : data.spell = {})[matches.target] = temp;
    }
  }, {
    id: 'P1N Hot Cold Spell Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: 'AB[34]'
    }),
    run: (data, matches) => {
      var _data$spell2;

      return delete ((_data$spell2 = data.spell) !== null && _data$spell2 !== void 0 ? _data$spell2 : data.spell = {})[matches.target];
    }
  }, {
    id: 'P1N Cold Spell',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '65F1'
    }),
    condition: (data, matches) => {
      var _data$spell3;

      return ((_data$spell3 = data.spell) === null || _data$spell3 === void 0 ? void 0 : _data$spell3[matches.target]) === 'cold';
    },
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    id: 'P1N Hot Spell',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '65F0'
    }),
    condition: (data, matches) => {
      var _data$spell4;

      return ((_data$spell4 = data.spell) === null || _data$spell4 === void 0 ? void 0 : _data$spell4[matches.target]) === 'hot';
    },
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    id: 'P1N Pitiless Flail Knockback',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '65E5'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Pushed into wall',
          de: 'Rückstoß in die Wand',
          fr: 'Poussé(e) dans le mur',
          ja: '壁へノックバック',
          cn: '击退至墙',
          ko: '벽으로 넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const p1n = (p1n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/raid/p1s.ts


const p1s_triggerSet = {
  zoneId: zone_id/* default.AsphodelosTheFirstCircleSavage */.Z.AsphodelosTheFirstCircleSavage,
  damageWarn: {
    'P1S Gaoler\'s Flail 1': '6DA6',
    // go left first
    'P1S Gaoler\'s Flail 2': '6DA7',
    // go right first
    'P1S Gaoler\'s Flail 3': '6DA8',
    // go out first
    'P1S Gaoler\'s Flail 4': '6DA9',
    // go in first
    'P1S Gaoler\'s Flail 5': '6DAA',
    // go left second
    'P1S Gaoler\'s Flail 6': '6DAB',
    // go right second
    'P1S Gaoler\'s Flail 7': '6DAC',
    // go out second
    'P1S Gaoler\'s Flail 8': '6DAD',
    // go in second
    'P1S Powerful Fire': '661A',
    // fire explosion during fire/light
    'P1S Powerful Light': '661B',
    // light explosion during fire/light
    'P1S Intemperate Flames': '6C75',
    // missed fire temperature square
    'P1S Intemperate Ice': '6C76',
    // missed ice temperature square
    'P1S Inevitable Flame': '6EC1',
    // sharing the color with the shackles of time person
    'P1S Inevitable Light': '6EC2' // sharing the color with the shackles of time person

  },
  damageFail: {
    'P1S Disastrous Spell': '6623',
    // the purple middle blocks during Intemperate
    'P1S Painful Flux': '6624' // standing between temperature squares

  },
  shareFail: {
    'P1S Chain Pain 1': '6627',
    // close/far shackles
    'P1S Chain Pain 2': '6628' // close/far shackles

  },
  soloFail: {
    'P1S True Holy': '6612' // Pitiless Flail of Grace stack marker

  },
  triggers: [{
    id: 'P1S Hot Cold Spell Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: 'AB[34]'
    }),
    run: (data, matches) => {
      var _data$spell;

      const temp = matches.effectId === 'AB3' ? 'cold' : 'hot';
      ((_data$spell = data.spell) !== null && _data$spell !== void 0 ? _data$spell : data.spell = {})[matches.target] = temp;
    }
  }, {
    id: 'P1S Hot Cold Spell Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: 'AB[34]'
    }),
    run: (data, matches) => {
      var _data$spell2;

      return delete ((_data$spell2 = data.spell) !== null && _data$spell2 !== void 0 ? _data$spell2 : data.spell = {})[matches.target];
    }
  }, {
    id: 'P1S Cold Spell',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '6622'
    }),
    condition: (data, matches) => {
      var _data$spell3;

      return ((_data$spell3 = data.spell) === null || _data$spell3 === void 0 ? void 0 : _data$spell3[matches.target]) === 'cold';
    },
    mistake: (_data, matches) => {
      return {
        type: 'damage',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    id: 'P1S Hot Spell',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '6621'
    }),
    condition: (data, matches) => {
      var _data$spell4;

      return ((_data$spell4 = data.spell) === null || _data$spell4 === void 0 ? void 0 : _data$spell4[matches.target]) === 'hot';
    },
    mistake: (_data, matches) => {
      return {
        type: 'damage',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    id: 'P1S Pitiless Flail Knockback',
    type: 'Ability',
    // 660E = grace, 660F = purgation
    netRegex: netregexes/* default.ability */.Z.ability({
      id: ['660E', '660F']
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Pushed into wall',
          de: 'Rückstoß in die Wand',
          fr: 'Poussé(e) dans le mur',
          ja: '壁へノックバック',
          cn: '击退至墙',
          ko: '벽으로 넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const p1s = (p1s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/raid/p2n.ts

const p2n_triggerSet = {
  zoneId: zone_id/* default.AsphodelosTheSecondCircle */.Z.AsphodelosTheSecondCircle,
  damageWarn: {
    'P2N Spoken Cataract 1': '67F7',
    // head and body cleave
    'P2N Spoken Cataract 2': '67F8',
    // head and body cleave
    'P2N Spoken Cataract 3': '67F9',
    // head and body cleave
    'P2N Spoken Cataract 4': '67FD',
    // head and body cleave
    'P2N Dissociation': '6806',
    // head charge
    'P2N Sewage Eruption': '680D' // chasing targeted telegraphed circles

  },
  gainsEffectWarn: {
    'P2N Dropsy': 'B69' // standing in sludge

  },
  shareWarn: {
    'P2N Tainted Flood': '6809' // spread markers

  },
  soloWarn: {
    'P2N Coherence': '6802' // stack line

  }
};
/* harmony default export */ const p2n = (p2n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/raid/p2s.ts


const p2s_triggerSet = {
  zoneId: zone_id/* default.AsphodelosTheSecondCircleSavage */.Z.AsphodelosTheSecondCircleSavage,
  damageWarn: {
    'P2S Spoken Cataract 1': '6811',
    // forward head and body cleave
    'P2S Spoken Cataract 2': '6812',
    // forward head and body cleave
    'P2S Spoken Cataract 3': '6813',
    // forward head and body cleave
    'P2S Spoken Cataract 4': '6817',
    // forward head and body cleave
    'P2S Winged Cataract 1': '6814',
    // backwards head and body cleave
    'P2S Winged Cataract 2': '6815',
    // backwards head and body cleave
    'P2S Winged Cataract 3': '6816',
    // backwards head and body cleave
    'P2S Winged Cataract 4': '6818',
    // backwards head and body cleave
    'P2S Dissociation': '682E',
    // head charge
    'P2S Sewage Eruption': '6831' // chasing targeted telegraphed circles

  },
  damageFail: {
    'P2S Deadly Current': '6829',
    // predatory avarice knockback explosion
    'P2S Greater Typhoon': '681F' // being hit by an arrow, or not hitting a partner with your arrow

  },
  gainsEffectWarn: {
    // TODO: B86 is also dropsy, but maybe standing in dropsy for longer? or the edge?
    'P2S Dropsy': 'B69',
    // standing in sludge
    'P2S Sustained Damage': 'B77' // being hit by an arrow charge (not yours)

  },
  shareWarn: {
    'P2S Tainted Flood': '6838' // spread markers (both the 4 people at once and 8 people at once)

  },
  shareFail: {
    'P2S Kampeos Harma Square': '6824',
    // square dashes #1-4
    'P2S Kampeos Harma Triangle 1': '6825',
    // triangle circle aoes #1-3
    'P2S Kampeos Harma Triangle 2': '6826' // triangle circle aoes #4

  },
  soloWarn: {
    'P2S Ominous Bubbling': '682B',
    // healer stacks after shockwave
    'P2S Coherence Line': '681A' // stack line

  },
  triggers: [{
    id: 'P2S Shockwave',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '682F'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Pushed into wall',
          de: 'Rückstoß in die Wand',
          fr: 'Poussé(e) dans le mur',
          ja: '壁へノックバック',
          cn: '击退至墙',
          ko: '벽으로 넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const p2s = (p2s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/raid/p3n.ts


const p3n_triggerSet = {
  zoneId: zone_id/* default.AsphodelosTheThirdCircle */.Z.AsphodelosTheThirdCircle,
  damageWarn: {
    'P3N Fireplume Out': '6697',
    // get out Experimental Fireplume short telegraph
    'P3N Fireplume Circles': '6699',
    // optical sight Experimental Fireplume circles
    'P3N Left Cinderwing': '66B5',
    // left 180 cleave
    'P3N Right Cinderwing': '66B4',
    // right 180 cleave
    'P3N Trail of Condemnation': '66AF',
    // arena charge
    'P3N Sunbird Fore Carve': '66A7',
    // front 180 add cleave
    'P3N Sunbird Rear Carve': '66A*',
    // back 180 add cleave
    'P3N Sparkfledged Ashen Eye': '66AB',
    // 4x cardinal conal cleaves
    'P3N Sparkfledged Devouring Brand 1': '669F',
    // fire cross
    'P3N Sparkfledged Devouring Brand 2': '66A0',
    // fire cross
    'P3N Sparkfledged Devouring Brand 3': '66A1',
    // fire cross
    'P3N Sparkfledged Devouring Brand 4': '6D82',
    // fire cross
    'P3N Searing Breeze': '66B7' // circles during Devouring Brand fire cross

  },
  damageFail: {
    'P3N Darkened Blaze': '6EDB' // not killing Darkened Fire

  },
  shareWarn: {
    'P3N Charplume': '669D',
    // Experimental Fireplume spread markers
    'P3N Flare of Condemnation': '66B0' // spread markers after Ashen Eye

  },
  shareFail: {
    'P3N Heat of Condemnation': '66B3' // 2x tankbuster cleaves

  },
  triggers: [{
    id: 'P3N Bird Tether',
    type: 'Ability',
    // If the birds hit each other with Joint Pyre, it's a mistake.
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '66A5',
      source: 'Sparkfledged',
      target: 'Sparkfledged'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: 'Sparkfledged tethered',
          de: 'Saat des Phoinix verbunden',
          fr: 'Oiselet de feu lié',
          cn: '火灵鸟连线',
          ko: '화령조 선 연결됨'
        }
      };
    }
  }]
};
/* harmony default export */ const p3n = (p3n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/raid/p3s.ts

const p3s_triggerSet = {
  zoneId: zone_id/* default.AsphodelosTheThirdCircleSavage */.Z.AsphodelosTheThirdCircleSavage,
  damageWarn: {
    'P3S Fireplume Out': '66BF',
    // get out Experimental Fireplume short telegraph
    'P3S Fireplume Circles': '66C1',
    // optical sight Experimental Fireplume circles
    'P3S Left Cinderwing': '6703',
    // left 180 cleave
    'P3S Right Cinderwing': '6702',
    // right 180 cleave
    'P3S Devouring Brand 1': '66CE',
    // fire cross
    'P3S Devouring Brand 2': '66CF',
    // fire cross
    'P3S Devouring Brand 3': '66D0',
    // fire cross
    'P3S Devouring Brand 4': '66D1',
    // fire cross
    'P3S Devouring Brand 5': '6D83',
    // fire cross
    'P3S Searing Breeze 1': '66B7',
    // circles during Devouring Brand fire cross
    'P3S Searing Breeze 2': '6705',
    // circles during Firestorms
    'P3S Gloryplume Rotating': '66CB',
    // Experimental Glorypllume rotating circles
    'P3S Gloryplume Middle': '66C7',
    // Experimental Gloryplume middle
    'P3S Sparkfledged Ashen Eye': '66E6',
    // initial Fledgling Flight dodge
    'P3S Flames of Asphodelos 1': '66F2',
    // pizza slice 1
    'P3S Flames of Asphodelos 2': '66F3',
    // pizza slice 2
    'P3S Flames of Asphodelos 3': '66F4',
    // pizza slice 3
    'P3S Burning Twister': '66FA' // donut around tornado

  },
  damageFail: {
    'P3S Darkened Blaze': '66BA' // failing to kill the Darkened Fire in time

  },
  shareWarn: {
    'P3S Flare of Condemnation': '66FE',
    // sides spread during Trail of Condemnation
    'P3S Gloryplume Spread': '66C9',
    // spread during Experimental Gloryplume
    'P3S Ashplume Spread': '66C5',
    // spread during Experimental Ashplume
    'P3S Beacons of Asphodelos': '66F7',
    // tankbuster during Firestorms
    'P3S Sun\'s Pinion': '66EB' // spread marker during Fountain of Fire

  },
  shareFail: {
    'P3S Heat of Condemnation': '6701' // double tank buster

  },
  soloWarn: {
    'P3S Gloryplume Stack': '66CD',
    // stack during Experimental Gloryplume
    'P3S Ashplume Stack': '66C3' // stack during Experimental Ashplume

  }
};
/* harmony default export */ const p3s = (p3s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/raid/p4n.ts


const p4n_triggerSet = {
  zoneId: zone_id/* default.AsphodelosTheFourthCircle */.Z.AsphodelosTheFourthCircle,
  damageWarn: {
    'P4N Hell Skewer': '6A4F',
    // targeted line aoe with short telegraph
    'P4N Shifting Strike': '6A4E' // dash to wall and ~170 cleave

  },
  shareWarn: {
    'P4N Acid Mekhane': '6A38' // green Acid Pinax spread

  },
  shareFail: {
    'P4N Elegant Evisceration': '6A50' // circular tankbuster cleave

  },
  soloFail: {
    'P4N Lava Mekhane': '6A39' // red Lava stack

  },
  triggers: [{
    id: 'P4N Tower Burst No Tank',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '6A44'
    }),
    condition: (data, matches) => data.party.isTank(matches.target),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: 'Tank Tower',
          de: 'Tank-Turm',
          fr: 'Tour Tank',
          cn: '坦克塔',
          ko: '탱커 장판'
        }
      };
    }
  }, {
    id: 'P4N Tower Burst No Healer',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '6A45'
    }),
    condition: (data, matches) => data.party.isHealer(matches.target),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: 'Healer Tower',
          de: 'Heiler-Turm',
          fr: 'Tour Healer',
          cn: '治疗塔',
          ko: '힐러 장판'
        }
      };
    }
  }, {
    id: 'P4N Tower Burst No DPS',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '6A46'
    }),
    condition: (data, matches) => data.party.isDPS(matches.target),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: 'DPS Tower',
          de: 'DD-Turm',
          fr: 'Tour DPS',
          cn: 'DPS塔',
          ko: '딜러 장판'
        }
      };
    }
  }, {
    id: 'P4N Explosive Aether Burst No Tank',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '6A41'
    }),
    condition: (data, matches) => data.party.isTank(matches.target),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: 'Tank Orb',
          de: 'Tank-Orb',
          fr: 'Orbe Tank',
          cn: '坦克球',
          ko: '탱커 구슬'
        }
      };
    }
  }, {
    id: 'P4N Explosive Aether Burst No Healer',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '6A42'
    }),
    condition: (data, matches) => data.party.isHealer(matches.target),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: 'Healer Orb',
          de: 'Heiler-Orb',
          fr: 'Orbe Healer',
          cn: '治疗球',
          ko: '힐러 구슬'
        }
      };
    }
  }, {
    id: 'P4N Explosive Aether Burst No DPS',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '6A43'
    }),
    condition: (data, matches) => data.party.isDPS(matches.target),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: {
          en: 'DPS Orb',
          de: 'DD-Orb',
          fr: 'Orbe DPS',
          cn: 'DPS球',
          ko: '딜러 구슬'
        }
      };
    }
  }, {
    id: 'P4N Knockback',
    type: 'Ability',
    // 6A3A = Well Mekhane
    // 6DAE = Northerly Shift (knockback)
    // 6DAF = Southerly Shift (knockback)
    // 6DB0 = Easterly Shift (knockback)
    // 6DB1 = Westerly Shift (knockback)
    netRegex: netregexes/* default.ability */.Z.ability({
      id: ['6A3A', '6DAE', '6DAF', '6DB0', '6DB1']
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Pushed into wall',
          de: 'Rückstoß in die Wand',
          fr: 'Poussé(e) dans le mur',
          ja: '壁へノックバック',
          cn: '击退至墙',
          ko: '벽으로 넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const p4n = (p4n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/raid/p4s.ts


const p4s_triggerSet = {
  zoneId: zone_id/* default.AsphodelosTheFourthCircleSavage */.Z.AsphodelosTheFourthCircleSavage,
  damageWarn: {
    'P4S Acid Pinax': '69D4',
    // standing on acid square
    'P4S Lava Pinax': '69D5',
    // standing on fire square
    'P4S Well Pinax': '69D6',
    // standing on water square
    'P4S Levinstrike Pinax': '69D7',
    // standing on lightning square
    // The safe squares during Elemental Belone are 69F5 through 69F8.
    'P4S Elemental Belone Acid Pinax': '69F9',
    // acid square during Elemental Belone
    'P4S Elemental Belone Lava Pinax': '69FA',
    // fire square during Elemental Belone
    'P4S Elemental Belone Well Pinax': '69FB',
    // water square during Elemental Belone
    'P4S Elemental Belone Levinstrike Pinax': '69FC',
    // lightning square during Elemental Belone
    'P4S Shifting Strike': '6A06',
    // jump to cardinal + cleave
    'P4S Dark Design': '6A2A',
    // Act 2 baited puddles
    'P4S Hemitheos\'s Fire IV': '6A0D',
    // Act 1, Act 2, Act 4 boss tether fire explosion
    'P4S Hell\'s Sting 1': '6A20',
    // curtain call protean
    'P4S Hell\'s Sting 2': '6A21' // curtain call protean

  },
  damageFail: {
    'P4S Hemitheos\'s Thunder III': '6A0F' // missing a 6A0E tower

  },
  shareWarn: {
    'P4S Inversive Chlamys': '69EE',
    // tethers
    'P4S Acid Mekhane': '69D0',
    // acid pinax spread
    'P4S Hemitheos\'s Thunder III': '6A0E',
    // Act 1, Act 2, Act 3, Act 4, Finale towers
    'P4S Hemitheos\'s Water III': '6A14' // Act 4 water tether explosion

  },
  shareFail: {
    'P4S Elegant Evisceration': '6A08',
    // tank buster
    'P4S Farsight': '6A27',
    // tank buster
    'P4S Nearsight': '6A28',
    // tank buster
    // TODO: https://github.com/quisquous/cactbot/pull/4161
    // 'P4S Kothornos Kick': '6A23', // Act 3 jump
    'P4S Kothornos Quake': '6A24',
    // Act 3 earthshaker
    'P4S Fleeting Impulse': '6A1C' // Finale counted vulns

  },
  soloFail: {
    'P4S Lava Mekhane': '69D1' // lava pinax stack

  },
  triggers: [{
    id: 'P4S Knockback',
    type: 'Ability',
    // 69D2 = Well Mekhane
    // 6A01 = Shifting Strike (knockback)
    // 6A10 = Hemitheos's Water IV (Act 3 knockback)
    netRegex: netregexes/* default.ability */.Z.ability({
      id: ['69D2', '6A01', '6A10']
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Pushed into wall',
          de: 'Rückstoß in die Wand',
          fr: 'Poussé(e) dans le mur',
          ja: '壁へノックバック',
          cn: '击退至墙',
          ko: '벽으로 넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const p4s = (p4s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/raid/p5n.ts

// TODO: Touched poison wall
// TODO: Touched poison puddle
const p5n_triggerSet = {
  zoneId: zone_id/* default.AbyssosTheFifthCircle */.Z.AbyssosTheFifthCircle,
  damageWarn: {
    'P5N Searing Ray 1': '6697',
    // Normal
    'P5N Searing Ray 2': '6698',
    // With Reflection
    'P5N Topaz Stones': '76DE',
    // Topaz Stone AoE
    'P5N Topaz Ray': '79FC',
    // Topaz Stone Square Tile
    'P5N Venom Drops': '76EE',
    // Puddles
    'P5N Starving Stampede': '79E9',
    // Stomped
    'P5N Spit': '7727' // Spitting Devoured Player

  },
  damageFail: {
    'P5N Devour': '7728' // Nom

  },
  shareFail: {
    'P5N Venom Rain': '76ED' // Spread

  }
};
/* harmony default export */ const p5n = (p5n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/raid/p5s.ts

const p5s_triggerSet = {
  zoneId: zone_id/* default.AbyssosTheFifthCircleSavage */.Z.AbyssosTheFifthCircleSavage,
  damageWarn: {
    'P5S Topaz Ray': '79FE',
    // initial Topaz Stone explosion
    'P5S Ruby Reflection 1': '7701',
    // reflection of Topaz Ray (initial)
    'P5S Ruby Reflection 2': '76F9',
    // reflection of Topaz Ray (after Double Rush)
    'P5S Raging Claw 1': '770F',
    // initial front 180 cleave (part of Claw to Tail)
    'P5S Raging Claw 2': '7710',
    // front 180 cleave (part of Claw to Tail)
    'P5S Raging Claw 3': '76FB',
    // initial front 180 cleave (with Searing Ray)
    'P5S Raging Claw 4': '76FC',
    // front 180 cleave (with Searing Ray)
    'P5S Raging Claw 5': '7714',
    // initial front 180 cleave
    'P5S Raging Claw 6': '7715',
    // front 180 cleave
    'P5S Raging Tail 1': '7711',
    // rear 180 cleave
    'P5S Raging Tail 2': '7A0C',
    // rear 180 cleave
    'P5S Venom Drops': '7719' // baited puddles during Venom Squall/Surge

  },
  damageFail: {
    'P5S Starving Stampede': '7A03' // large circle during Starving Stampede jumps

  },
  gainsEffectFail: {
    // also D4F, but that's probably in tower puddles
    'P5S Toxicosis 1': 'C0A',
    // 15s debuff (poison puddle)
    'P5S Toxicosis 2': 'C09' // 9999 effect (wall?)

  },
  shareFail: {
    'P5S Venomous Mass': '771E',
    // First tankbuster
    'P5S Toxic Crunch': '771F',
    // Second tankbuster
    'P5S Venom Rain': '7718' // spread during Venom Squall/Surge

  },
  soloFail: {
    'P5S Venom Pool': '79E3' // stack during Venom Squall/Surge

  }
};
/* harmony default export */ const p5s = (p5s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/raid/p6n.ts

const p6n_triggerSet = {
  zoneId: zone_id/* default.AbyssosTheSixthCircle */.Z.AbyssosTheSixthCircle,
  damageWarn: {
    'P6N Polyominous Dark IV': '7855',
    // Radiating AoEs from totems
    'P6N Choros Ixou Front Back': '7859',
    'P6N Choros Ixou Sides': '785A',
    'P6N Reek Havoc': '79ED',
    // Parasite conal
    'P6N Pathogenic Cells': '7A14',
    // Front portion of Strophe Ixou spinny conal
    'P6N Chelic Vector': '7A15' // Rear portion of Strophe Ixou spinny conal

  },
  shareWarn: {
    'P6N Dark Ashes': '785F' // Orange spread circles

  },
  shareFail: {
    'P6N Synergy 1': '785C',
    // Off-tank buster
    'P6N Synergy 2': '785D' // Main tank buster (Square, why??)

  }
};
/* harmony default export */ const p6n = (p6n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/raid/p6s.ts

const p6s_triggerSet = {
  zoneId: zone_id/* default.AbyssosTheSixthCircleSavage */.Z.AbyssosTheSixthCircleSavage
};
/* harmony default export */ const p6s = (p6s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/raid/p7n.ts

const p7n_triggerSet = {
  zoneId: zone_id/* default.AbyssosTheSeventhCircle */.Z.AbyssosTheSeventhCircle,
  damageWarn: {
    'P7N Bough Of Attis Out': '77FA',
    'P7N Bough Of Attis In': '77FF',
    'P7N Bough Of Attis Sides': '77FD',
    'P7N Hemitheos Glare III 1': '77F8',
    // Donut attack alongside Hemitheos's Holy
    'P7N Hemitheos Glare III 2': '79FA',
    // Donut attack alongside platform regeneration
    'P7N Static Moon': '7802',
    // Behemoths' chariot attack
    'P7N Stymphalian Strike': '7803',
    // Birds' line attack
    'P7N Big Burst': '783E',
    // Missed tower
    'P7N Blades Of Attis Stationary': '7805',
    // Exaflare initial hit
    'P7N Blades Of Attis Exaflares': '7806'
  },
  shareWarn: {
    'P7N Hemitheos Holy': '7808' // Purple spread circles

  },
  shareFail: {
    'P7N Hemitheos Aero II': '780A' // Tank cleave

  }
};
/* harmony default export */ const p7n = (p7n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/raid/p7s.ts

// TODO: many things still missing here
const p7s_triggerSet = {
  zoneId: zone_id/* default.AbyssosTheSeventhCircleSavage */.Z.AbyssosTheSeventhCircleSavage,
  damageWarn: {
    'P7S Bough of Attis Close': '7822',
    // left/right arrow (from 7821 cast)
    'P7S Bough of Attis Arrow': '7825',
    // bough hit south (from 7823 cast)
    'P7S Bough of Attis Far': '7827',
    // bought hit north (from 7826 cast)
    'P7S Bullish Swipe': '7819',
    // baited Minotaur cleaves (from 7818 cast)
    'P7S Hemitheos\'s Glare': '782A' // chasing aoe

  },
  shareWarn: {
    'P7S Static Path': '7814' // Immature Io tether line aoe

  },
  shareFail: {
    'P7S Dispersed Aero II': '7837' // spread tankbuster

  },
  soloWarn: {
    'P7S Condensed Aero II': '7838' // shared tankbuster

  }
};
/* harmony default export */ const p7s = (p7s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/raid/p8n.ts

const p8n_triggerSet = {
  zoneId: zone_id/* default.AbyssosTheEighthCircle */.Z.AbyssosTheEighthCircle,
  damageWarn: {
    'P8N Scorching Fang': '78EE',
    // line aoe down the middle
    'P8N Sun\'s Pinion': '78EF',
    // line aoes down the sides
    'P8N Gorgospit': '78FF',
    // large line aoe
    'P8N Suneater Cthonic Vent 1': '78F5',
    // circular explosion from intercard volcanos
    'P8N Suneater Cthonic Vent 2': '78F6',
    // circular explosion from intercard volcanos
    'P8N Suneater Cthonic Vent 3': '794D',
    // circular explosion from intercard volcanos
    'P8N Quadrupedal Crush': '7904',
    // jump to the wall before knockback (??)
    'P8N Torch Flame': '78F8',
    // being hit by blue outlined squares from Volcanic Torches
    'P8N Illusory Hephaistos Gorgospit': '6FD7' // square outline line aoes after Into the Shadows

  },
  damageFail: {
    'P8N Gorgon Gorgoneion': '78FD' // failing to kill Gorgon adds in time

  },
  gainsEffectWarn: {
    'P8N Petrification': 'BBF',
    // failing 6273 Petrifaction lookaway
    'P8N Burns': 'BFA' // being knocked back into the fire wall, BF9 = 9999 duration status

  },
  shareWarn: {
    'P8N Hemitheos\'s Flare': '7907' // spread markers

  }
};
/* harmony default export */ const p8n = (p8n_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/raid/p8s.ts

const p8s_triggerSet = {
  zoneId: zone_id/* default.AbyssosTheEighthCircleSavage */.Z.AbyssosTheEighthCircleSavage
};
/* harmony default export */ const p8s = (p8s_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/trial/barbariccia.ts

// Note: ignoring Voidstrom 75BD, the 3k damage (but avoidable) damage from standing under boss.
const barbariccia_triggerSet = {
  zoneId: zone_id/* default.StormsCrown */.Z.StormsCrown,
  damageWarn: {
    'Barbariccia Savage Barbery Donut': '75BA',
    // donut aoe
    'Barbariccia Savage Barbery Line': '75C0',
    // line aoe through hitbox
    'Barbariccia Savage Barbery Out 1': '75BB',
    // sword explosion (after donut)
    'Barbariccia Savage Barbery Out 2': '75C1',
    // sword explosion (after line)
    'Barbariccia Hair Raid Wall': '75C2',
    // ~160 degree cleave from wall at sword
    'Barbariccia Tangle': '75E0',
    // ground circles before fetters
    'Barbariccia Secret Breeze 1': '75C4',
    // ground conal
    'Barbariccia Secret Breeze 2': '75C5',
    // ground conal
    'Barbariccia Brutal Gust': '75C8',
    // line aoe after Brutal Rush tether
    'Barbariccia Warning Gale 1': '7586',
    // center red/black circle
    'Barbariccia Warning Gale 2': '75C9',
    // center red/black circle
    'Barbariccia Winding Gale 1': '7487',
    // ground line aoes
    'Barbariccia Winding Gale 2': '75CA',
    // ground line aoes
    'Barbariccia Winding Gale 3': '75CB',
    // ground line aoes
    'Barbariccia Winding Gale 4': '75CC',
    // ground line aoes
    'Barbariccia Winding Gale 5': '75CD',
    // ground line aoes
    'Barbariccia Boulder 1': '759C',
    // large baited aoes from headmarkers
    'Barbariccia Boulder 2': '75D7',
    // large baited aoes from headmarkers
    'Barbariccia Blow Away 1': '7595',
    // baited ground circles
    'Barbariccia Blow Away 2': '75D3',
    // baited ground circles
    'Barbariccia Tornado Chain Out': '758E',
    // large inner circle
    'Barbariccia Tornado Chain In': '758F',
    // outer donut
    'Barbariccia Impact': '75D9',
    // blue knockback circle
    'Barbariccia Dry Blows': '7593',
    // many small ground circles
    'Barbariccia Stiff Breeze Tousle': '75D1' // moving green circles

  },
  gainsEffectFail: {
    'Barbariccia Windburn': 'BFD',
    // standing in outside ring
    'Barbariccia Sustained Damage': 'B77' // walking out of Tangled circle

  },
  shareFail: {
    'Barbariccia Hair Spray': '75DB' // spread markers

  },
  soloFail: {
    'Barbariccia Trample': '75DA' // stack marker with flares

  }
};
/* harmony default export */ const barbariccia = (barbariccia_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/trial/barbariccia-ex.ts

// Note: ignoring Voidstrom 7577, the 3k damage (but avoidable) damage from standing under boss.
const barbariccia_ex_triggerSet = {
  zoneId: zone_id/* default.StormsCrownExtreme */.Z.StormsCrownExtreme,
  damageWarn: {
    'BarbaricciaEx Savage Barbery Donut': '7574',
    // donut aoe
    'BarbaricciaEx Savage Barbery Line': '757A',
    // line aoe through hitbox
    'BarbaricciaEx Savage Barbery Out 1': '7575',
    // sword explosion (after donut)
    'BarbaricciaEx Savage Barbery Out 2': '757B',
    // sword explosion (after line)
    'BarbaricciaEx Hair Raid Wall': '757D',
    // ~160 degree cleave from wall at sword
    'BarbaricciaEx Hair Raid Donut': '757F',
    // donut aoe
    'BarbaricciaEx Tangle': '75AB',
    // ground circles before fetters
    'BarbaricciaEx Secret Breeze Pinwheel': '7415',
    // ground conals before protean
    'BarbaricciaEx Brutal Gust': '7585',
    // line aoe after Brutal Rush tether
    'BarbaricciaEx Warning Gale': '7587',
    // center red/black circle
    'BarbaricciaEx Winding Gale 1': '7588',
    // ground line aoes
    'BarbaricciaEx Winding Gale 2': '7486',
    // ground line aoes
    'BarbaricciaEx Winding Gale 3': '7589',
    // ground line aoes
    'BarbaricciaEx Winding Gale 4': '758A',
    // ground line aoes
    'BarbaricciaEx Boulder': '759D',
    // large baited aoes from headmarkers
    'BarbaricciaEx Blow Away': '7596',
    // baited ground circles
    'BarbaricciaEx Tornado Chain Out': '758C',
    // large inner circle
    'BarbaricciaEx Tornado Chain In': '758D',
    // outer donut
    'BarbaricciaEx Impact 1': '759F',
    // blue knockback circle
    'BarbaricciaEx Impact 2': '75A0',
    // blue knockback circle (??? maybe nothing)
    'BarbaricciaEx Dry Blows': '7594',
    // many small ground circles
    'BarbaricciaEx Stiff Breeze Tousle': '7592' // moving green circles

  },
  gainsEffectFail: {
    'BarbaricciaEx Windburn': '10D',
    // the 12s dot from death ring, `BFD` while standing in ring
    'BarbaricciaEx Sustained Damage': 'B77' // walking out of Tangled circle

  },
  shareFail: {
    'BarbaricciaEx Hair Spray': '75A6',
    // spread markers
    'BarbaricciaEx Hair Flay': '7413',
    // large circle during first fetters
    'BarbaricciaEx Secret Breeze Protean': '7580',
    // protean
    'BarbaricciaEx Brittle Boulder': '759E' // spread

  },
  soloFail: {
    'BarbaricciaEx Deadly Twist': '75A7',
    // stack markers
    'BarbaricciaEx Upbraid': '75A8',
    // partner stack circles
    'BarbaricciaEx Trample': '75A2' // stack marker with flares

  }
};
/* harmony default export */ const barbariccia_ex = (barbariccia_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/trial/endsinger.ts


const endsinger_triggerSet = {
  zoneId: zone_id/* default.TheFinalDay */.Z.TheFinalDay,
  damageWarn: {
    'Endsinger Stellar Collision 1': '662E',
    // planet collision
    'Endsinger Stellar Collision 2': '663B',
    // planet collision
    'Endsinger Elenchos Middle': '6644',
    // middle laser
    'Endsinger Elenchos Sides': '6643',
    // side lasers
    'Endsinger Elenchos Heads': '663E',
    // head lasers
    'Endsinger Feather of Despair Pharmakon': '664C',
    // feather circles after Death's Embrace
    'Endsinger Epigonoi': '664C',
    // circles after Ekstasis that spawn heads with puddles
    'Endsinger Misery': '6648',
    // black puddles
    'Endsinger Interstellar': '67FB',
    // large line dive (with spread during)
    'Endsinger Kakodaimon Crash': '6657',
    // planets being tossed during midphase
    'Endsinger Dead Star': '5E4E' // targeted circles during final phase

  },
  shareWarn: {
    'EndSinger Death\'s Embrace': '6649',
    // purple protean triangles
    'Endsinger Nemesis': '664E' // spread during Interstellar

  },
  shareFail: {
    'Endsinger Hubris': '6653' // tankbuster

  },
  triggers: [{
    id: 'Endsinger Galaxias',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '6C6A'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'Renversé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const endsinger = (endsinger_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/trial/endsinger-ex.ts


const endsinger_ex_triggerSet = {
  zoneId: zone_id/* default.TheMinstrelsBalladEndsingersAria */.Z.TheMinstrelsBalladEndsingersAria,
  damageWarn: {
    'EndsingerEx Rubistellar Collision 1': '6FFA',
    // red planet collision
    'EndsingerEx Rubistellar Collision 2': '7003',
    // Fatalism red planet collision
    'EndsingerEx Elenchos Middle': '7022',
    // side lasers
    'EndsingerEx Elenchos Sides': '7021',
    // side lasers
    'EndsingerEx Diairesis 1': '6FFC',
    // middle head conal cleave during initial planets
    'EndsingerEx Diairesis 2': '7006',
    // middle head conal cleave during Twinsong's Aporrhoia
    'EndsingerEx Diairesis 3': '7011',
    // middle head conal cleave during Twinsong's Aporrhoia + Theological Fatalism
    'EndsingerEx Necrotic Fluid 1': '7009',
    // Twinsong's Aporrhoia circle
    'EndsingerEx Necrotic Fluid 2': '700F',
    // Twinsong's Aporrhoia + Theological Fatalism circle
    'EndsingerEx Wave of Nausea 1': '700A',
    // Twinsong's Aporrhoia head donut
    'EndsingerEx Wave of Nausea 2': '7010',
    // Twinsong's Aporrhoia + Theological Fatalism head donut
    'EndsingerEx Wave of Nausea 3': '7013',
    // Despair Unforgotten donut
    'EndsingerEx Wave of Nausea 4': '7017',
    // Despair Unforgotten + Theological Fatalism donut
    'EndsingerEx Endsong': '701C' // Endsong's Aporrhoia big head circles from rings

  },
  damageFail: {
    'EndsingerEx Massive Explosion': '702B' // missing a tower

  },
  shareWarn: {
    'EndsingerEx Befoulment 1': '7014',
    // Despair Unforgotten spread
    'EndsingerEx Befoulment 2': '7018' // Despair Unforgotten + Theological Fatalism spread

  },
  shareFail: {
    'EndsingerEx Hubris': '702D ' // tankbuster

  },
  soloFail: {
    'EndsingerEx Benevolence 1': '7016',
    // Despair Unforgotten stack
    'EndsingerEx Benevolence 2': '701A' // Despair Unforgotten + Theological Fatalism stack

  },
  triggers: [{
    id: 'Endsinger Galaxias',
    type: 'Ability',
    // 6FFB = Azure Star Caerustellar Collision knockback
    // 7005 = Fatalism Azure Star Caerustellar Collision knockback
    netRegex: netregexes/* default.ability */.Z.ability({
      id: ['6FFB', '7005']
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Knocked off',
          de: 'Runtergefallen',
          fr: 'Renversé(e)',
          ja: 'ノックバック',
          cn: '击退坠落',
          ko: '넉백'
        }
      };
    }
  }]
};
/* harmony default export */ const endsinger_ex = (endsinger_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/trial/hydaelyn.ts

const hydaelyn_triggerSet = {
  zoneId: zone_id/* default.TheMothercrystal */.Z.TheMothercrystal,
  damageWarn: {
    'Hydaelyn Highest Holy': '65C7',
    // out
    'Hydaelyn Equinox': '668F',
    // cross
    'Hydaelyn Anthelion': '65C8',
    // in
    'Hydaelyn Mystic Refulgence Incandescence': '65CD',
    // Parhelic Circle orbs
    'Hydaelyn Parhelion Beacon 1': '65CE',
    // initial chakrams
    'Hydaelyn Parhelion Beacon 2': '65CF' // second chakrams

  },
  shareWarn: {
    'Hydaelyn Crystalline Blizzard III': '6C5A' // spread

  },
  shareFail: {
    'Hydaelyn Heros\'s Sundering': '65D5' // single tank cleave

  }
};
/* harmony default export */ const hydaelyn = (hydaelyn_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/trial/hydaelyn-ex.ts

const hydaelyn_ex_triggerSet = {
  zoneId: zone_id/* default.TheMinstrelsBalladHydaelynsCall */.Z.TheMinstrelsBalladHydaelynsCall,
  damageWarn: {
    'HydaelynEx Highest Holy': '6598',
    // out
    'HydaelynEx Equinox': '6EB2',
    // cross
    'HydaelynEx Anthelion': '6594',
    // in
    'HydaelynEx Aureole 1': '6F12',
    // go sides
    'HydaelynEx Aureole 2': '6C92',
    // go sides
    'HydaelynEx Lateral Aureole 1': '6690',
    // go front back
    'HydaelynEx Lateral Aureole 2': '6F14',
    // go front back
    'HydaelynEx Mystic Refulgence Incandescence': '65AF',
    // Parhelic Circle orbs
    'HydaelynEx Light of the Crystal': '65A6',
    // line of sight wave+crystal
    'HydaelynEx Heros\'s Glory': '65A8',
    // get behind
    'HydaelynEx Parhelion Beacon 1': '65B2',
    // initial chakrams
    'HydaelynEx Parhelion Beacon 2': '65B3' // second chakrams

  },
  shareWarn: {
    'HydaelynEx Crystalline Blizzard III': '65A4' // spread

  },
  shareFail: {
    'HydaelynEx Heros\'s Sundering': '65BF' // single tank cleave

  }
};
/* harmony default export */ const hydaelyn_ex = (hydaelyn_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/trial/sephirot-un.ts


const sephirot_un_triggerSet = {
  zoneId: zone_id/* default.ContainmentBayS1T7Unreal */.Z.ContainmentBayS1T7Unreal,
  damageWarn: {
    'SephirotUn Yesod': '76AB',
    // Snapshot floor spikes
    'SephirotUn Ain': '7696',
    // Half-arena baited frontal
    'SephirotUn Ein Sof': '769C',
    // Expanding green puddles
    'SephirotUn Fiendish Wail': '76A4' // Raidwide if tower is missed

  },
  damageFail: {
    'SephirotUn Pillar Of Mercy': '76AE',
    // Standing in the blue puddles
    'SephirotUn Storm Of Words Revelation': '7680' // Missing the enrage on Storm of Words

  },
  shareWarn: {
    'SephirotUn Triple Trial': '7693',
    // Instant tank cleave
    'SephirotUn Ratzon Green': '7698',
    // Small green spread circle
    'SephirotUn Ratzon Purple': '7699',
    // Large purple spread circle
    'SephirotUn Earth Shaker': '7688',
    'SephirotUn Spread Da\'at': '76A0'
  },
  soloWarn: {
    'SephirotUn Fiendish Rage': '769A' // Stack markers, phase 1

  },
  triggers: [{
    // Pillar of Mercy,  Malkuth, and Pillar of Severity
    id: 'SephirotUn Knockbacks',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: ['76AD', '76AF', '76B2'],
      source: 'Sephirot'
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Pushed off!',
          de: 'Runter geschubst!',
          fr: 'Repoussé(e) !',
          ja: '落ちた',
          cn: '击退坠落',
          ko: '넉백됨'
        }
      };
    }
  }, {
    // 3ED is Force Against Might orange, 3EE is Force Against Magic, green.
    id: 'SephirotUn Force Against Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: ['3ED', '3EE']
    }),
    run: (data, matches) => {
      var _data$force;

      (_data$force = data.force) !== null && _data$force !== void 0 ? _data$force : data.force = {};
      data.force[matches.target] = matches.effectId;
    }
  }, {
    id: 'SephirotUn Force Against Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: ['3ED', '3EE']
    }),
    run: (data, matches) => {
      var _data$force2;

      (_data$force2 = data.force) !== null && _data$force2 !== void 0 ? _data$force2 : data.force = {};
      delete data.force[matches.target];
    }
  }, {
    id: 'SephirotUn Spirit',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '76A8',
      source: 'Sephirot'
    }),
    condition: (data, matches) => {
      var _data$force3;

      return (data === null || data === void 0 ? void 0 : (_data$force3 = data.force) === null || _data$force3 === void 0 ? void 0 : _data$force3[matches.target]) === '3ED';
    },
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        text: matches.ability
      };
    }
  }, {
    id: 'SephirotUn Life Force',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '76A7',
      source: 'Sephirot'
    }),
    condition: (data, matches) => {
      var _data$force4;

      return (data === null || data === void 0 ? void 0 : (_data$force4 = data.force) === null || _data$force4 === void 0 ? void 0 : _data$force4[matches.target]) === '3EE';
    },
    mistake: (_data, matches) => {
      return {
        type: 'warn',
        blame: matches.target,
        text: matches.ability
      };
    }
  }, {
    id: 'SephirotUn Fiendish Wail Green',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '76A3',
      source: 'Sephirot'
    }),
    condition: (data, matches) => {
      var _data$force5;

      return (data === null || data === void 0 ? void 0 : (_data$force5 = data.force) === null || _data$force5 === void 0 ? void 0 : _data$force5[matches.target]) === '3EE';
    },
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        text: matches.ability
      };
    }
  }, {
    // Only tanks or Blue Mages should take towers without a Force debuff.
    id: 'SephirotUn Fiendish Wail Non-Tank',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '76A3',
      source: 'Sephirot'
    }),
    condition: (data, matches) => {
      var _data$force6;

      if (data.party.isTank(matches.target) || data.job === 'BLU') return false;
      return (data === null || data === void 0 ? void 0 : (_data$force6 = data.force) === null || _data$force6 === void 0 ? void 0 : _data$force6[matches.target]) === undefined;
    },
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        text: matches.ability
      };
    }
  }, {
    // Taking a tether while under Force Against Might (orange) kills the target
    id: 'SephirotUn Tether Da\'at',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '76A1',
      source: 'Sephirot'
    }),
    condition: (data, matches) => {
      var _data$force7;

      return (data === null || data === void 0 ? void 0 : (_data$force7 = data.force) === null || _data$force7 === void 0 ? void 0 : _data$force7[matches.target]) === '3ED';
    },
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        text: matches.ability
      };
    }
  }]
};
/* harmony default export */ const sephirot_un = (sephirot_un_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/trial/ultima-un.ts


const ultima_un_triggerSet = {
  zoneId: zone_id/* default.UltimasBaneUnreal */.Z.UltimasBaneUnreal,
  damageWarn: {
    'UltimaEx Mistral Song': '6EFC',
    // Garuda wide conal
    'UltimaEx Eye of the Storm': '6EFE',
    // Garuda donut
    'UltimaEx Radiant Plume': '6F00',
    // Ifrit fire eruptions
    'UltimaEx Weight of the Land': '6F01',
    // Titan puddles
    'UltimaEx Eruption': '6F03',
    // chasing Ifrit explosions
    'UltimaEx Crimson Cyclone': '6F04',
    // Ifrit dash
    'UltimaEx Magitek Ray 1': '6EF2',
    // trident laser
    'UltimaEx Magitek Ray 2': '6EF3',
    // trident laser
    'UltimaEx Magitek Ray 3': '6EF4',
    // trident laser
    'UltimaEx Homing Aetheroplasm': '6EF5',
    // chasing Aetheroplasm explosion
    'UltimaEx Magitek Bit Assault Cannon': '6F05' // line aoe from bits

  },
  damageFail: {
    'UltimaEx Fusion Burst': '6EF8' // failing to pop orbs

  },
  shareWarn: {
    'UltimaEx Homing Lasers': '6EF0',
    // distance? aggro? targeted circular cleave
    'UltimaEx Diffractive Laser': '6EF1' // frontal conal cleave

  },
  triggers: [{
    id: 'UltimaEx Viscous Aetheroplasm',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: '171',
      count: '05'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.effect
      };
    }
  }]
};
/* harmony default export */ const ultima_un = (ultima_un_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/trial/zodiark.ts



const zodiark_triggerSet = {
  zoneId: zone_id/* default.TheDarkInside */.Z.TheDarkInside,
  damageWarn: {
    'Zodiark Esoteric Sect': '67CC',
    // conal wall summon
    'Zodiark Esoteric Dyad': '67CB',
    // half arena wall summon
    'Zodiark Behemoth Meteoros Eidolon': '67C6',
    // large circles from Behemoth summons
    'Zodiark Python Opheos Eidolon': '67C7',
    // lines from Python summons
    'Zodiark Phlegothon': '67CE',
    // targeted circles
    'Zodiark Esoteric Ray': '67CA',
    // 1+2 lasers
    'Zodiark Adikia 1': '63A8',
    // very large circles that create N/S safe zones
    'Zodiark Adikia 2': '67D9',
    // very large circles that create N/S safe zones
    'Zodiark Algedon': '67D3',
    // move to corner large knockback attack
    'Zodiark Explosion': '67CD' // Astral Eclipse explosions

  },
  shareFail: {
    'Zodiark Ania': '6B62' // tank buster splash with headmarker

  },
  soloWarn: {
    'Zodiark Styx': '67DC' // multi-hit stack marker

  },
  triggers: [{
    id: 'Zodiark Algedon Push',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '67D3',
      ...oopsy_common/* playerDamageFields */.np
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Pushed off!',
          de: 'Runter geschubst!',
          fr: 'Repoussé(e) !',
          ja: '落ちた',
          cn: '击退坠落',
          ko: '넉백됨'
        }
      };
    }
  }]
};
/* harmony default export */ const zodiark = (zodiark_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/trial/zodiark-ex.ts



const zodiark_ex_triggerSet = {
  zoneId: zone_id/* default.TheMinstrelsBalladZodiarksFall */.Z.TheMinstrelsBalladZodiarksFall,
  damageWarn: {
    'ZodiarkEx Quetzalcoatl Keraunos Eidolon': '67E1',
    // bird donut
    'ZodiarkEx Behemoth Meteoros Eidolon': '67E2',
    // behemoth circle
    'ZodiarkEx Python Opheos Eidolon': '67E3',
    // python line
    'ZodiarkEx Infernal Stream 1': '52D1',
    // initial fire wall
    'ZodiarkEx Infernal Stream 2': '67E0',
    // rotating fire wall
    'ZodiarkEx Esoteric Ray': '67E4',
    // laser wall summon
    'ZodiarkEx Esoteric Dyad': '67E5',
    // half arena wall summon
    'ZodiarkEx Esoteric Sect': '67E6',
    // conal wall summon
    'ZodiarkEx Algedon': '67EE',
    // untelegraphed diagonal knockback
    'ZodiarkEx Adikia 1': '63A9',
    // two hit east west circles
    'ZodiarkEx Adikia 2': '67F2' // two hit east west circles

  },
  damageFail: {
    'ZodiarkEx Explosion': '67E7' // Astral Eclipse explosions

  },
  shareFail: {
    'ZodiarkEx Ania': '6B63' // tank buster splash with headmarker

  },
  triggers: [{
    id: 'ZodiarkEx Algedon Push',
    type: 'Ability',
    netRegex: netregexes/* default.abilityFull */.Z.abilityFull({
      id: '67EE',
      ...oopsy_common/* playerDamageFields */.np
    }),
    deathReason: (_data, matches) => {
      return {
        id: matches.targetId,
        name: matches.target,
        text: {
          en: 'Pushed off!',
          de: 'Runter geschubst!',
          fr: 'Repoussé(e) !',
          ja: '落ちた',
          cn: '击退坠落',
          ko: '넉백됨'
        }
      };
    }
  }]
};
/* harmony default export */ const zodiark_ex = (zodiark_ex_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/06-ew/ultimate/dragonsongs_reprise_ultimate.ts


 // TODO: 63DD Skyward Leap during Strength of the Heavens should ignore invulning tanks
// TODO: track vulns from Wrath tethers/blue marker in case they take a (deadly) liquid fire tick
// TODO: Akh Morn puddle damage is effectId=0 0x18 lines from Bleeding B87, but everybody gets this effect temporarily?
//       it is the only non-zero player dot damage between wroth flames and hot wing and hot-tail, though?
// TODO: Getting hit by the wrong cauterize at the end of adds phase
// TODO: trinity autos on wrong people, based on debuffs

const dragonsongs_reprise_ultimate_triggerSet = {
  zoneId: zone_id/* default.DragonsongsRepriseUltimate */.Z.DragonsongsRepriseUltimate,
  damageWarn: {
    'DSR Ser Grinnaux Empty Dimension': '62DA',
    // donut (phase1 and Wrath)
    'DSR Ser Grinnaux Full Dimension': '62DB',
    // circle (phase 1)
    'DSR Ser Adelphel Holy Shield Bash': '63EB',
    // line charge at tethered player
    'DSR Ser Adelphel Shining Blade': '62CE',
    // dash attack
    'DSR Brightsphere Bright Flare': '62CF',
    // spheres generated by 62CE Shining Blade
    'DSR Ser Charibert Skyblind': '631A',
    // puddles after Brightwing cleaves
    'DSR Spiral Thrust': '63D4',
    // dashes from Ser Vellguine, Ser Ignasse, Ser Paulecrain
    'DSR Ser Gerrique Heavy Impact 1': '63D6',
    // expanding earth ring
    'DSR Ser Gerrique Heavy Impact 2': '63D7',
    // expanding earth ring
    'DSR Ser Gerrique Heavy Impact 3': '63D8',
    // expanding earth ring
    'DSR Ser Gerrique Heavy Impact 4': '63D9',
    // expanding earth ring
    'DSR Ser Gerrique Heavy Impact 5': '63DA',
    // expanding earth ring
    'DSR Ser Grinnaux Dimensional Collapse': '63DC',
    // red/black puddles
    'DSR Ser Charibert Heaven\'s Stake 1': '6FAF',
    // initial Sanctity of the Ward 4x fire puddles
    'DSR Ser Charibert Heaven\'s Stake 2': '6FB0',
    // Sanctity of the Ward donut ring before fire/ice
    'DSR King Thordan Broad Swing': '63C2',
    // 3x directional cleaves
    'DSR Nidhogg Gnashing Wheel': '6715',
    // "get out" part of Gnash and Lash
    'DSR Nidhogg Lashing Wheel': '6716',
    // "get in" part of Gnash and Lash
    'DSR Nidhogg Geirskogul': '670A',
    // baited line aoes from tower clones
    'DSR Nidhogg Drachenlance': '670C',
    // front conal
    'DSR Vedrfolnir Twisting Dive': '6B8B',
    // initial dragon dive + twister during Wrath/Death
    'DSR Ser Charibert Altar Flare': '63E4',
    // 4x big explosions during Wrath of the Heavens
    'DSR Vidofnir Cauterize': '6B8E',
    // dive during Wrath/Death
    'DSR Darkscale Cauterize': '6B8D',
    // dive during Wrath/Death
    'DSR Darkscale Chain Lightning': '6B90',
    // 2x lightning spread during Wrath (doesn't hit player it's on)
    'DSR Ser Zephirin Spear of the Fury': '6B93',
    // spear line aoe during Death of the Heavens
    'DSR Vidofnir Wings of Salvation': '6B96',
    // white puddle that creates doom cleanser in Death of the Heavens
    'DSR Hrasevelgr Swirling Blizzard': '6D38',
    // wind donut during adds phase first tethers
    'DSR Nidhogg Dark Breath': '6D3B',
    // conal attack during single tank buster during adds phase tethers
    'DSR Hraesvelgr Holy Breath': '6D3C',
    // conal attack during single tank buster during adds phase tethers
    'DSR Hraesvelgr Hallowed Wings Left Wing': '6D25',
    // left glowing wing
    'DSR Hraesvelgr Hallowed Wings Right Wing': '6D28',
    // right glowing wing
    'DSR The Scarlet Price Flame Blast': '6729',
    // bomberman orbs during Wroth Flames
    'DSR Nidhogg Hot Tail': '6D2E',
    // center line aoe
    'DSR Nidhogg Hot Wing': '6D2C' // sides line aoes

  },
  damageFail: {
    'DSR Dimensional Torsion': '62D8',
    // player tethering a cloud
    'DSR Dimensional Purgation': '62D9',
    // Ser Adelphel tethering a cloud during charges
    'DSR Ser Charibert Holy Chain': '62E0',
    // failing to break chains, often kills people
    'DSR Ser Grinnaux Planar Prison': '63EC',
    // leaving the purple circle
    'DSR Holy Comet Holy Impact': '63EA',
    // meteor explosion from being too close
    'DSR King Thordan Ascalon\'s Mercy Concealed': '63C9',
    // protean 2nd hit
    'DSR Nidhogg Darkdragon Dive Miss': '671B',
    // tower failure
    'DSR Dragon-King Thordan Flames of Ascalon': '6D91',
    // final phase "get out"
    'DSR Dragon-King Thordan Ice of Ascalon': '6D92',
    // final phase "get in"
    'DSR Dragon-King Thordan Exaflare\'s Edge 1': '6D9C',
    // final phase exaflares (initial)
    'DSR Dragon-King Thordan Exaflare\'s Edge 2': '6D9D' // final phase exaflares

  },
  gainsEffectFail: {
    'DSR Burns': 'B81',
    // fire puddles during Sanctity of the Ward
    'DSR Frostbite': 'B82',
    // ice puddles during Sanctity of the Ward
    'DSR Suppuration': 'C3D' // sharing a Mortal Vow pass (or initial application)

  },
  shareWarn: {
    'DSR Ser Adelphel Execution': '62D5',
    // dive on main tank after 62CE Shining Blade
    'DSR Ser Charibert Heavensflame': '62DF',
    // spread with 62E0 Holy Chain (also in Death)
    'DSR Ser Charibert Brightwing': '6319',
    // cleaves during Pure of Heart
    'DSR King Thordan Attack': '63BB',
    // King Thordan cleave autos
    'DSR King Thordan Lightning Storm': '63CD',
    // spread during Strength of the Ward
    'DSR Nidhogg Attack': '6730',
    // Nidhogg cleave autos
    'DSR Nidhogg Dark High Jump': '670E',
    // sharing a circle marker tower drop
    'DSR Nidhogg Dark Spineshatter Dive': '670F',
    // sharing an up/forwards arrow marker tower drop
    'DSR Nidhogg Dark Elusive Jump': '6710',
    // sharing a down/back arrow marker tower drop
    'DSR Nidhogg Darkdragon Dive Share': '6711',
    // sharing a single tower
    'DSR Spiral Pierce': '6B8A',
    // Ser Ignasse and Ser Vellguine tether charges during Wrath
    'DSR King Thordan Ascalon\'s Mercy Revealed': '63CB' // protean during Wrath

  },
  shareFail: {
    'DSR King Thordan Ascalon\'s Might': '63C5',
    // tank cleaves
    'DSR Holy Shield Bash': '62D1',
    // Ser Adelphel/Janlenoux tank tether stun charges
    'DSR Nidhogg Soul Tether': '671C',
    // tank tether cleaves
    'DSR Nidhogg Mirage Dive': '68C4',
    // dives during eye phase, probably a wipe if shared
    'DSR Skyward Leap 1x': '72A2',
    // Ser Paulecraine single blue marker during Wrath
    'DSR Staggering Breath': '6D3D',
    // solo tank buster from Nidhogg/Hrae during adds phase tethers
    'DSR Hallowed Plume': '6D29',
    // Hallowed Wings tankbusters
    'DSR Nidhogg Spreading Flames': '742B',
    // Wroth Flames spread
    'DSR King Thordan Trinity Highest Enmity': '6D9F',
    // Trinity auto
    'DSR King Thordan Trinity Second Enmity': '6DA0',
    // Trinity auto
    'DSR King Thordan Trinity Nearest': '6DA1' // Trinity auto

  },
  soloWarn: {
    'DSR Ser Haumeric Hiemal Storm': '63E7' // Sanctity of the Ward ice pair stacks

  },
  soloFail: {
    'DSR Nidhogg Dark Orb': '6D39',
    // shared tank buster during adds phase tethers
    'DSR Hraesvelgr Holy Orb': '6D3A',
    // shared tank buster during adds phase tethers
    'DSR Nidhogg Entangled Flames': '742C' // Wroth Flames stack

  },
  triggers: [{
    // Interrupt.
    id: 'DSR Ser Adelphel Holiest Hallowing',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '62D0'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        text: matches.ability
      };
    }
  }, {
    id: 'DSR Ser Hermenost Conviction Cast Cleanup',
    type: 'StartsUsing',
    // 63DE/63DF = Strength of the Ward towers
    // 737B/737C = Sanctity of the Ward first towers
    // 6FEA/6FEB = Sanctity of the Ward second towers
    netRegex: netregexes/* default.startsUsing */.Z.startsUsing({
      id: ['63DE', '737B', '6FEA']
    }),
    run: (data, matches) => {
      data.towerAbility = matches.id;
      data.convictionTower = {};
    }
  }, {
    id: 'DSR Ser Hermenost Conviction Tower Collect',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: ['63DF', '737C', '6FEB'],
      ...oopsy_common/* playerDamageFields */.np
    }),
    run: (data, matches) => {
      var _data$convictionTower;

      return ((_data$convictionTower = data.convictionTower) !== null && _data$convictionTower !== void 0 ? _data$convictionTower : data.convictionTower = {})[matches.target] = true;
    }
  }, {
    id: 'DSR Ser Hermenost Eternal Conviction Failure',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '63E0'
    }),
    suppressSeconds: 1,
    mistake: data => {
      const missing = data.party.partyNames.filter(name => {
        var _data$convictionTower2;

        if ((_data$convictionTower2 = data.convictionTower) !== null && _data$convictionTower2 !== void 0 && _data$convictionTower2[name]) return false; // Skip tanks on Conviction during Strength of the Ward.

        if (data.towerAbility === '63DE' && data.party.isTank(name)) return false;
        return true;
      }).sort();
      return missing.map(name => {
        return {
          type: 'fail',
          blame: name,
          text: {
            en: 'Missed Tower',
            de: 'Tower verfehlt',
            fr: 'Tour manquée',
            cn: '错过塔',
            ko: '기둥 놓침'
          }
        };
      });
    }
  }, {
    id: 'DSR King Thordan Gaze',
    // Same abilities during both Thordan1 and Thordan2
    // 63D1 = The Dragon's Gaze (Thordan lookaway)
    // 63D2 = The Dragon's Glory (eye lookaway)
    // Technically there is also a Hysteria status (127) but sometimes this doesn't apply (if somebody dies too soon??).
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: ['63D1', '63D2'],
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: (data, matches) => data.DamageFromMatches(matches) > 0,
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    id: 'DSR King Thordan Twister',
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: '6B8C',
      ...oopsy_common/* playerDamageFields */.np
    }),
    mistake: (_data, matches) => {
      // Instant death has a special flag value, differentiating
      // from the explosion damage you take when somebody else
      // pops one.
      if (matches.flags === oopsy_common/* kFlagInstantDeath */.hm) {
        return {
          type: 'fail',
          blame: matches.target,
          reportId: matches.targetId,
          text: {
            en: 'Twister Pop',
            de: 'Wirbelsturm berührt',
            fr: 'Apparition des tornades',
            ja: 'ツイスター',
            cn: '旋风',
            ko: '회오리 밟음'
          }
        };
      } // If not the one popping, just print "Twister".


      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    id: 'DSR Doom Gain',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: 'BA0'
    }),
    run: (data, matches) => {
      var _data$hasDoom;

      return ((_data$hasDoom = data.hasDoom) !== null && _data$hasDoom !== void 0 ? _data$hasDoom : data.hasDoom = {})[matches.target] = true;
    }
  }, {
    id: 'DSR Doom Lose',
    type: 'LosesEffect',
    netRegex: netregexes/* default.losesEffect */.Z.losesEffect({
      effectId: 'BA0'
    }),
    run: (data, matches) => {
      var _data$hasDoom2;

      return ((_data$hasDoom2 = data.hasDoom) !== null && _data$hasDoom2 !== void 0 ? _data$hasDoom2 : data.hasDoom = {})[matches.target] = false;
    }
  }, {
    // There is no trigger line for when doom runs out, so check slightly
    // before to see if doom was cleared or if we should consider any
    // non-damage death after this a doom.
    id: 'DSR Doom Death',
    type: 'GainsEffect',
    netRegex: netregexes/* default.gainsEffect */.Z.gainsEffect({
      effectId: 'BA0'
    }),
    delaySeconds: (_data, matches) => parseFloat(matches.duration) - 0.5,
    deathReason: (data, matches) => {
      if (!data.hasDoom || !data.hasDoom[matches.target]) return;
      return {
        id: matches.targetId,
        name: matches.target,
        text: matches.effect
      };
    }
  }, {
    id: 'DSR Wroth Flames',
    // Wroth Flames cast happens, then cauterize that nobody should be hit by,
    // then at the end is the first Hot Wing / Hot Tail, marking the end of Wroth Flames.
    // Cauterize after this is intentionally hit.
    // 6D2B = Hot Wing (self-casted)
    // 6D2D = Hot Tail (self-casted)
    type: 'StartsUsing',
    netRegex: netregexes/* default.startsUsing */.Z.startsUsing({
      id: ['6D2B', '6D2D'],
      capture: false
    }),
    run: data => data.seenWrothFlames = true
  }, {
    id: 'DSR Hraesvelgr Nidhogg Cauterize',
    // During the first hallowed and wroth flames, there are cauterize casts.
    // 6D3E = Nidhogg (during Wroth Flames and before Touchdown)
    // 6D3F = Hraesvelgr (during the first Hallowed Wings and before Touchdown)
    type: 'Ability',
    netRegex: netregexes/* default.ability */.Z.ability({
      id: ['6D3E', '6D3F'],
      ...oopsy_common/* playerDamageFields */.np
    }),
    condition: data => !data.seenWrothFlames,
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.target,
        reportId: matches.targetId,
        text: matches.ability
      };
    }
  }, {
    id: 'DSR Pyretic',
    type: 'NetworkDoT',
    // Amazingly, the dot/hot line has the effect id for pyretic here.  Most dots don't.
    netRegex: netregexes/* default.networkDoT */.Z.networkDoT({
      effectId: '3C0'
    }),
    mistake: (_data, matches) => {
      return {
        type: 'fail',
        blame: matches.name,
        reportId: matches.id,
        text: {
          en: 'Pyretic',
          de: 'Pyretisch',
          fr: 'Pyretique',
          cn: '热病',
          ko: '열병'
        }
      };
    }
  }]
};
/* harmony default export */ const dragonsongs_reprise_ultimate = (dragonsongs_reprise_ultimate_triggerSet);
;// CONCATENATED MODULE: ./ui/oopsyraidsy/data/oopsy_manifest.txt























































































































































































/* harmony default export */ const oopsy_manifest = ({'00-misc/general.ts': general,'00-misc/test.ts': test,'02-arr/trial/ifrit-nm.ts': ifrit_nm,'02-arr/trial/levi-ex.ts': levi_ex,'02-arr/trial/shiva-ex.ts': shiva_ex,'02-arr/trial/shiva-hm.ts': shiva_hm,'02-arr/trial/titan-ex.ts': titan_ex,'02-arr/trial/titan-hm.ts': titan_hm,'02-arr/trial/titan-nm.ts': titan_nm,'02-arr/trial/ultima-ex.ts': ultima_ex,'03-hw/alliance/weeping_city.ts': weeping_city,'03-hw/dungeon/aetherochemical_research_facility.ts': aetherochemical_research_facility,'03-hw/dungeon/baelsars_wall.ts': baelsars_wall,'03-hw/dungeon/fractal_continuum.ts': fractal_continuum,'03-hw/dungeon/gubal_library_hard.ts': gubal_library_hard,'03-hw/dungeon/sohm_al_hard.ts': sohm_al_hard,'03-hw/dungeon/the_lost_city_of_amdapor_hard.ts': the_lost_city_of_amdapor_hard,'03-hw/raid/a3n.ts': a3n,'03-hw/raid/a12n.ts': a12n,'03-hw/raid/a10n.ts': a10n,'03-hw/raid/a6n.ts': a6n,'03-hw/trial/sephirot-ex.ts': sephirot_ex,'04-sb/alliance/orbonne_monastery.ts': orbonne_monastery,'04-sb/alliance/ridorana_lighthouse.ts': ridorana_lighthouse,'04-sb/alliance/royal_city_of_rabanastre.ts': royal_city_of_rabanastre,'04-sb/dungeon/ala_mhigo.ts': ala_mhigo,'04-sb/dungeon/bardams_mettle.ts': bardams_mettle,'04-sb/dungeon/castrum_abania.ts': castrum_abania,'04-sb/dungeon/doma_castle.ts': doma_castle,'04-sb/dungeon/drowned_city_of_skalla.ts': drowned_city_of_skalla,'04-sb/dungeon/fractal_continuum_hard.ts': fractal_continuum_hard,'04-sb/dungeon/ghimlyt_dark.ts': ghimlyt_dark,'04-sb/dungeon/hells_lid.ts': hells_lid,'04-sb/dungeon/kugane_castle.ts': kugane_castle,'04-sb/dungeon/shisui_of_the_violet_tides.ts': shisui_of_the_violet_tides,'04-sb/dungeon/sirensong_sea.ts': sirensong_sea,'04-sb/dungeon/st_mocianne_hard.ts': st_mocianne_hard,'04-sb/dungeon/swallows_compass.ts': swallows_compass,'04-sb/dungeon/temple_of_the_fist.ts': temple_of_the_fist,'04-sb/dungeon/the_burn.ts': the_burn,'04-sb/raid/o10n.ts': o10n,'04-sb/raid/o10s.ts': o10s,'04-sb/raid/o11n.ts': o11n,'04-sb/raid/o11s.ts': o11s,'04-sb/raid/o12n.ts': o12n,'04-sb/raid/o12s.ts': o12s,'04-sb/raid/o1n.ts': o1n,'04-sb/raid/o1s.ts': o1s,'04-sb/raid/o2n.ts': o2n,'04-sb/raid/o2s.ts': o2s,'04-sb/raid/o3n.ts': o3n,'04-sb/raid/o3s.ts': o3s,'04-sb/raid/o4n.ts': o4n,'04-sb/raid/o4s.ts': o4s,'04-sb/raid/o5n.ts': o5n,'04-sb/raid/o5s.ts': o5s,'04-sb/raid/o6n.ts': o6n,'04-sb/raid/o6s.ts': o6s,'04-sb/raid/o7n.ts': o7n,'04-sb/raid/o7s.ts': o7s,'04-sb/raid/o8n.ts': o8n,'04-sb/raid/o8s.ts': o8s,'04-sb/raid/o9n.ts': o9n,'04-sb/raid/o9s.ts': o9s,'04-sb/trial/byakko.ts': byakko,'04-sb/trial/byakko-ex.ts': byakko_ex,'04-sb/trial/lakshmi.ts': lakshmi,'04-sb/trial/lakshmi-ex.ts': lakshmi_ex,'04-sb/trial/rathalos.ts': rathalos,'04-sb/trial/rathalos-ex.ts': rathalos_ex,'04-sb/trial/seiryu.ts': seiryu,'04-sb/trial/seiryu-ex.ts': seiryu_ex,'04-sb/trial/shinryu.ts': shinryu,'04-sb/trial/shinryu-ex.ts': shinryu_ex,'04-sb/trial/susano.ts': susano,'04-sb/trial/susano-ex.ts': susano_ex,'04-sb/trial/suzaku.ts': suzaku,'04-sb/trial/suzaku-ex.ts': suzaku_ex,'04-sb/trial/tsukuyomi.ts': tsukuyomi,'04-sb/trial/tsukuyomi-ex.ts': tsukuyomi_ex,'04-sb/trial/yojimbo.ts': yojimbo,'04-sb/ultimate/ultima_weapon_ultimate.ts': ultima_weapon_ultimate,'04-sb/ultimate/unending_coil_ultimate.ts': unending_coil_ultimate,'05-shb/alliance/the_copied_factory.ts': the_copied_factory,'05-shb/alliance/the_puppets_bunker.ts': the_puppets_bunker,'05-shb/alliance/the_tower_at_paradigms_breach.ts': the_tower_at_paradigms_breach,'05-shb/dungeon/akadaemia_anyder.ts': akadaemia_anyder,'05-shb/dungeon/amaurot.ts': amaurot,'05-shb/dungeon/anamnesis_anyder.ts': anamnesis_anyder,'05-shb/dungeon/dohn_mheg.ts': dohn_mheg,'05-shb/dungeon/heroes_gauntlet.ts': heroes_gauntlet,'05-shb/dungeon/holminster_switch.ts': holminster_switch,'05-shb/dungeon/malikahs_well.ts': malikahs_well,'05-shb/dungeon/matoyas_relict.ts': matoyas_relict,'05-shb/dungeon/mt_gulg.ts': mt_gulg,'05-shb/dungeon/paglthan.ts': paglthan,'05-shb/dungeon/qitana_ravel.ts': qitana_ravel,'05-shb/dungeon/the_grand_cosmos.ts': the_grand_cosmos,'05-shb/dungeon/twinning.ts': twinning,'05-shb/eureka/delubrum_reginae.ts': delubrum_reginae,'05-shb/eureka/delubrum_reginae_savage.ts': delubrum_reginae_savage,'05-shb/raid/e10n.ts': e10n,'05-shb/raid/e10s.ts': e10s,'05-shb/raid/e11n.ts': e11n,'05-shb/raid/e11s.ts': e11s,'05-shb/raid/e12n.ts': e12n,'05-shb/raid/e12s.ts': e12s,'05-shb/raid/e1n.ts': e1n,'05-shb/raid/e1s.ts': e1s,'05-shb/raid/e2n.ts': e2n,'05-shb/raid/e2s.ts': e2s,'05-shb/raid/e3n.ts': e3n,'05-shb/raid/e3s.ts': e3s,'05-shb/raid/e4n.ts': e4n,'05-shb/raid/e4s.ts': e4s,'05-shb/raid/e5n.ts': e5n,'05-shb/raid/e5s.ts': e5s,'05-shb/raid/e6n.ts': e6n,'05-shb/raid/e6s.ts': e6s,'05-shb/raid/e7n.ts': e7n,'05-shb/raid/e7s.ts': e7s,'05-shb/raid/e8n.ts': e8n,'05-shb/raid/e8s.ts': e8s,'05-shb/raid/e9n.ts': e9n,'05-shb/raid/e9s.ts': e9s,'05-shb/trial/diamond_weapon.ts': diamond_weapon,'05-shb/trial/diamond_weapon-ex.ts': diamond_weapon_ex,'05-shb/trial/emerald_weapon.ts': emerald_weapon,'05-shb/trial/emerald_weapon-ex.ts': emerald_weapon_ex,'05-shb/trial/hades.ts': hades,'05-shb/trial/hades-ex.ts': hades_ex,'05-shb/trial/innocence.ts': innocence,'05-shb/trial/innocence-ex.ts': innocence_ex,'05-shb/trial/levi-un.ts': levi_un,'05-shb/trial/ruby_weapon.ts': ruby_weapon,'05-shb/trial/ruby_weapon-ex.ts': ruby_weapon_ex,'05-shb/trial/shiva-un.ts': shiva_un,'05-shb/trial/titania.ts': titania,'05-shb/trial/titania-ex.ts': titania_ex,'05-shb/trial/titan-un.ts': titan_un,'05-shb/trial/varis-ex.ts': varis_ex,'05-shb/trial/wol.ts': wol,'05-shb/trial/wol-ex.ts': wol_ex,'05-shb/ultimate/the_epic_of_alexander.ts': the_epic_of_alexander,'06-ew/alliance/aglaia.ts': aglaia,'06-ew/dungeon/alzadaals_legacy.ts': alzadaals_legacy,'06-ew/dungeon/ktisis_hyperboreia.ts': ktisis_hyperboreia,'06-ew/dungeon/smileton.ts': smileton,'06-ew/dungeon/stigma_dreamscape.ts': stigma_dreamscape,'06-ew/dungeon/the_aitiascope.ts': the_aitiascope,'06-ew/dungeon/the_dead_ends.ts': the_dead_ends,'06-ew/dungeon/the_fell_court_of_troia.ts': the_fell_court_of_troia,'06-ew/dungeon/the_tower_of_babil.ts': the_tower_of_babil,'06-ew/dungeon/the_tower_of_zot.ts': the_tower_of_zot,'06-ew/dungeon/vanaspati.ts': vanaspati,'06-ew/raid/p1n.ts': p1n,'06-ew/raid/p1s.ts': p1s,'06-ew/raid/p2n.ts': p2n,'06-ew/raid/p2s.ts': p2s,'06-ew/raid/p3n.ts': p3n,'06-ew/raid/p3s.ts': p3s,'06-ew/raid/p4n.ts': p4n,'06-ew/raid/p4s.ts': p4s,'06-ew/raid/p5n.ts': p5n,'06-ew/raid/p5s.ts': p5s,'06-ew/raid/p6n.ts': p6n,'06-ew/raid/p6s.ts': p6s,'06-ew/raid/p7n.ts': p7n,'06-ew/raid/p7s.ts': p7s,'06-ew/raid/p8n.ts': p8n,'06-ew/raid/p8s.ts': p8s,'06-ew/trial/barbariccia.ts': barbariccia,'06-ew/trial/barbariccia-ex.ts': barbariccia_ex,'06-ew/trial/endsinger.ts': endsinger,'06-ew/trial/endsinger-ex.ts': endsinger_ex,'06-ew/trial/hydaelyn.ts': hydaelyn,'06-ew/trial/hydaelyn-ex.ts': hydaelyn_ex,'06-ew/trial/sephirot-un.ts': sephirot_un,'06-ew/trial/ultima-un.ts': ultima_un,'06-ew/trial/zodiark.ts': zodiark,'06-ew/trial/zodiark-ex.ts': zodiark_ex,'06-ew/ultimate/dragonsongs_reprise_ultimate.ts': dragonsongs_reprise_ultimate,});

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QU8sNkJBQTZCLFNBQU8sZ0NBQWdDLFlBQU8sNEJBQTRCLFFBQU8sK0JBQStCLFdBQU8sK0JBQStCLFdBQU8sNkJBQTZCLFNBQU8sMkJBQTJCLE9BQU8sOEJBQThCLFVBQU8sbURBQW1ELDRCQUFPLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wMC1taXNjL2dlbmVyYWwudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDAtbWlzYy90ZXN0LnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzAyLWFyci90cmlhbC9pZnJpdC1ubS50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wMi1hcnIvdHJpYWwvbGV2aS1leC50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wMi1hcnIvdHJpYWwvc2hpdmEtZXgudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDItYXJyL3RyaWFsL3NoaXZhLWhtLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzAyLWFyci90cmlhbC90aXRhbi1leC50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wMi1hcnIvdHJpYWwvdGl0YW4taG0udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDItYXJyL3RyaWFsL3RpdGFuLW5tLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzAyLWFyci90cmlhbC91bHRpbWEtZXgudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDMtaHcvYWxsaWFuY2Uvd2VlcGluZ19jaXR5LnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzAzLWh3L2R1bmdlb24vYWV0aGVyb2NoZW1pY2FsX3Jlc2VhcmNoX2ZhY2lsaXR5LnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzAzLWh3L2R1bmdlb24vYmFlbHNhcnNfd2FsbC50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wMy1ody9kdW5nZW9uL2ZyYWN0YWxfY29udGludXVtLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzAzLWh3L2R1bmdlb24vZ3ViYWxfbGlicmFyeV9oYXJkLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzAzLWh3L2R1bmdlb24vc29obV9hbF9oYXJkLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzAzLWh3L2R1bmdlb24vdGhlX2xvc3RfY2l0eV9vZl9hbWRhcG9yX2hhcmQudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDMtaHcvcmFpZC9hM24udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDMtaHcvcmFpZC9hMTJuLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzAzLWh3L3JhaWQvYTEwbi50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wMy1ody9yYWlkL2E2bi50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wMy1ody90cmlhbC9zZXBoaXJvdC1leC50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi9hbGxpYW5jZS9vcmJvbm5lX21vbmFzdGVyeS50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi9hbGxpYW5jZS9yaWRvcmFuYV9saWdodGhvdXNlLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL2FsbGlhbmNlL3JveWFsX2NpdHlfb2ZfcmFiYW5hc3RyZS50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi9kdW5nZW9uL2FsYV9taGlnby50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi9kdW5nZW9uL2JhcmRhbXNfbWV0dGxlLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL2R1bmdlb24vY2FzdHJ1bV9hYmFuaWEudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvZHVuZ2Vvbi9kb21hX2Nhc3RsZS50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi9kdW5nZW9uL2Ryb3duZWRfY2l0eV9vZl9za2FsbGEudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvZHVuZ2Vvbi9mcmFjdGFsX2NvbnRpbnV1bV9oYXJkLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL2R1bmdlb24vZ2hpbWx5dF9kYXJrLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL2R1bmdlb24vaGVsbHNfbGlkLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL2R1bmdlb24va3VnYW5lX2Nhc3RsZS50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi9kdW5nZW9uL3NoaXN1aV9vZl90aGVfdmlvbGV0X3RpZGVzLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL2R1bmdlb24vc2lyZW5zb25nX3NlYS50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi9kdW5nZW9uL3N0X21vY2lhbm5lX2hhcmQudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvZHVuZ2Vvbi9zd2FsbG93c19jb21wYXNzLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL2R1bmdlb24vdGVtcGxlX29mX3RoZV9maXN0LnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL2R1bmdlb24vdGhlX2J1cm4udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvcmFpZC9vMTBuLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3JhaWQvbzEwcy50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi9yYWlkL28xMW4udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvcmFpZC9vMTFzLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3JhaWQvbzEybi50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi9yYWlkL28xMnMudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvcmFpZC9vMW4udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvcmFpZC9vMXMudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvcmFpZC9vMm4udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvcmFpZC9vMnMudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvcmFpZC9vM24udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvcmFpZC9vM3MudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvcmFpZC9vNG4udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvcmFpZC9vNHMudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvcmFpZC9vNW4udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvcmFpZC9vNXMudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvcmFpZC9vNm4udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvcmFpZC9vNnMudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvcmFpZC9vN24udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvcmFpZC9vN3MudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvcmFpZC9vOG4udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvcmFpZC9vOHMudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvcmFpZC9vOW4udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvcmFpZC9vOXMudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvdHJpYWwvYnlha2tvLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3RyaWFsL2J5YWtrby1leC50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi90cmlhbC9sYWtzaG1pLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3RyaWFsL2xha3NobWktZXgudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvdHJpYWwvcmF0aGFsb3MudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvdHJpYWwvcmF0aGFsb3MtZXgudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvdHJpYWwvc2Vpcnl1LnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3RyaWFsL3NlaXJ5dS1leC50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi90cmlhbC9zaGlucnl1LnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3RyaWFsL3NoaW5yeXUtZXgudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvdHJpYWwvc3VzYW5vLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3RyaWFsL3N1c2Fuby1leC50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi90cmlhbC9zdXpha3UudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvdHJpYWwvc3V6YWt1LWV4LnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3RyaWFsL3RzdWt1eW9taS50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi90cmlhbC90c3VrdXlvbWktZXgudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDQtc2IvdHJpYWwveW9qaW1iby50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNC1zYi91bHRpbWF0ZS91bHRpbWFfd2VhcG9uX3VsdGltYXRlLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA0LXNiL3VsdGltYXRlL3VuZW5kaW5nX2NvaWxfdWx0aW1hdGUudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL2FsbGlhbmNlL3RoZV9jb3BpZWRfZmFjdG9yeS50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvYWxsaWFuY2UvdGhlX3B1cHBldHNfYnVua2VyLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi9hbGxpYW5jZS90aGVfdG93ZXJfYXRfcGFyYWRpZ21zX2JyZWFjaC50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvZHVuZ2Vvbi9ha2FkYWVtaWFfYW55ZGVyLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi9kdW5nZW9uL2FtYXVyb3QudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL2R1bmdlb24vYW5hbW5lc2lzX2FueWRlci50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvZHVuZ2Vvbi9kb2huX21oZWcudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL2R1bmdlb24vaGVyb2VzX2dhdW50bGV0LnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi9kdW5nZW9uL2hvbG1pbnN0ZXJfc3dpdGNoLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi9kdW5nZW9uL21hbGlrYWhzX3dlbGwudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL2R1bmdlb24vbWF0b3lhc19yZWxpY3QudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL2R1bmdlb24vbXRfZ3VsZy50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvZHVuZ2Vvbi9wYWdsdGhhbi50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvZHVuZ2Vvbi9xaXRhbmFfcmF2ZWwudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL2R1bmdlb24vdGhlX2dyYW5kX2Nvc21vcy50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvZHVuZ2Vvbi90d2lubmluZy50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvZXVyZWthL2RlbHVicnVtX3JlZ2luYWUudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL2V1cmVrYS9kZWx1YnJ1bV9yZWdpbmFlX3NhdmFnZS50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvcmFpZC9lMTBuLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi9yYWlkL2UxMHMudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL3JhaWQvZTExbi50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvcmFpZC9lMTFzLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi9yYWlkL2UxMm4udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL3JhaWQvZTEycy50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvcmFpZC9lMW4udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL3JhaWQvZTFzLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi9yYWlkL2Uybi50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvcmFpZC9lMnMudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL3JhaWQvZTNuLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi9yYWlkL2Uzcy50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvcmFpZC9lNG4udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL3JhaWQvZTRzLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi9yYWlkL2U1bi50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvcmFpZC9lNXMudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL3JhaWQvZTZuLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi9yYWlkL2U2cy50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvcmFpZC9lN24udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL3JhaWQvZTdzLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi9yYWlkL2U4bi50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvcmFpZC9lOHMudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL3JhaWQvZTluLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi9yYWlkL2U5cy50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvdHJpYWwvZGlhbW9uZF93ZWFwb24udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL3RyaWFsL2RpYW1vbmRfd2VhcG9uLWV4LnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi90cmlhbC9lbWVyYWxkX3dlYXBvbi50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvdHJpYWwvZW1lcmFsZF93ZWFwb24tZXgudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL3RyaWFsL2hhZGVzLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi90cmlhbC9oYWRlcy1leC50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvdHJpYWwvaW5ub2NlbmNlLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi90cmlhbC9pbm5vY2VuY2UtZXgudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL3RyaWFsL2xldmktdW4udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL3RyaWFsL3J1Ynlfd2VhcG9uLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi90cmlhbC9ydWJ5X3dlYXBvbi1leC50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvdHJpYWwvc2hpdmEtdW4udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL3RyaWFsL3RpdGFuaWEudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL3RyaWFsL3RpdGFuaWEtZXgudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL3RyaWFsL3RpdGFuLXVuLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi90cmlhbC92YXJpcy1leC50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNS1zaGIvdHJpYWwvd29sLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA1LXNoYi90cmlhbC93b2wtZXgudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDUtc2hiL3VsdGltYXRlL3RoZV9lcGljX29mX2FsZXhhbmRlci50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNi1ldy9hbGxpYW5jZS9hZ2xhaWEudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDYtZXcvZHVuZ2Vvbi9hbHphZGFhbHNfbGVnYWN5LnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA2LWV3L2R1bmdlb24va3Rpc2lzX2h5cGVyYm9yZWlhLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA2LWV3L2R1bmdlb24vc21pbGV0b24udHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDYtZXcvZHVuZ2Vvbi9zdGlnbWFfZHJlYW1zY2FwZS50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNi1ldy9kdW5nZW9uL3RoZV9haXRpYXNjb3BlLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA2LWV3L2R1bmdlb24vdGhlX2RlYWRfZW5kcy50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNi1ldy9kdW5nZW9uL3RoZV9mZWxsX2NvdXJ0X29mX3Ryb2lhLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA2LWV3L2R1bmdlb24vdGhlX3Rvd2VyX29mX2JhYmlsLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA2LWV3L2R1bmdlb24vdGhlX3Rvd2VyX29mX3pvdC50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNi1ldy9kdW5nZW9uL3ZhbmFzcGF0aS50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNi1ldy9yYWlkL3Axbi50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNi1ldy9yYWlkL3Axcy50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNi1ldy9yYWlkL3Aybi50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNi1ldy9yYWlkL3Aycy50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNi1ldy9yYWlkL3Azbi50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNi1ldy9yYWlkL3Azcy50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNi1ldy9yYWlkL3A0bi50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNi1ldy9yYWlkL3A0cy50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNi1ldy9yYWlkL3A1bi50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNi1ldy9yYWlkL3A1cy50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNi1ldy9yYWlkL3A2bi50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNi1ldy9yYWlkL3A2cy50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNi1ldy9yYWlkL3A3bi50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNi1ldy9yYWlkL3A3cy50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNi1ldy9yYWlkL3A4bi50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNi1ldy9yYWlkL3A4cy50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNi1ldy90cmlhbC9iYXJiYXJpY2NpYS50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNi1ldy90cmlhbC9iYXJiYXJpY2NpYS1leC50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNi1ldy90cmlhbC9lbmRzaW5nZXIudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDYtZXcvdHJpYWwvZW5kc2luZ2VyLWV4LnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA2LWV3L3RyaWFsL2h5ZGFlbHluLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA2LWV3L3RyaWFsL2h5ZGFlbHluLWV4LnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA2LWV3L3RyaWFsL3NlcGhpcm90LXVuLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA2LWV3L3RyaWFsL3VsdGltYS11bi50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS8wNi1ldy90cmlhbC96b2RpYXJrLnRzIiwid2VicGFjazovL2NhY3Rib3QvLi91aS9vb3BzeXJhaWRzeS9kYXRhLzA2LWV3L3RyaWFsL3pvZGlhcmstZXgudHMiLCJ3ZWJwYWNrOi8vY2FjdGJvdC8uL3VpL29vcHN5cmFpZHN5L2RhdGEvMDYtZXcvdWx0aW1hdGUvZHJhZ29uc29uZ3NfcmVwcmlzZV91bHRpbWF0ZS50cyIsIndlYnBhY2s6Ly9jYWN0Ym90Ly4vdWkvb29wc3lyYWlkc3kvZGF0YS9vb3BzeV9tYW5pZmVzdC50eHQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSBleHRlbmRzIE9vcHN5RGF0YSB7XHJcbiAgbG9zdEZvb2Q/OiB7IFtuYW1lOiBzdHJpbmddOiBib29sZWFuIH07XHJcbn1cclxuXHJcbi8vIEdlbmVyYWwgbWlzdGFrZXM7IHRoZXNlIGFwcGx5IGV2ZXJ5d2hlcmUuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5NYXRjaEFsbCxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICAvLyBUcmlnZ2VyIGlkIGZvciBpbnRlcm5hbGx5IGdlbmVyYXRlZCBlYXJseSBwdWxsIHdhcm5pbmcuXHJcbiAgICAgIGlkOiAnR2VuZXJhbCBFYXJseSBQdWxsJyxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnR2VuZXJhbCBGb29kIEJ1ZmYnLFxyXG4gICAgICB0eXBlOiAnTG9zZXNFZmZlY3QnLFxyXG4gICAgICAvLyBXZWxsIEZlZFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5sb3Nlc0VmZmVjdCh7IGVmZmVjdElkOiAnNDgnIH0pLFxyXG4gICAgICBjb25kaXRpb246IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIC8vIFByZXZlbnQgXCJFb3MgbG9zZXMgdGhlIGVmZmVjdCBvZiBXZWxsIEZlZCBmcm9tIENyaXRsbyBNY2dlZVwiXHJcbiAgICAgICAgcmV0dXJuIG1hdGNoZXMudGFyZ2V0ID09PSBtYXRjaGVzLnNvdXJjZTtcclxuICAgICAgfSxcclxuICAgICAgbWlzdGFrZTogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLmxvc3RGb29kID8/PSB7fTtcclxuICAgICAgICAvLyBXZWxsIEZlZCBidWZmIGhhcHBlbnMgcmVwZWF0ZWRseSB3aGVuIGl0IGZhbGxzIG9mZiAoV0hZKSxcclxuICAgICAgICAvLyBzbyBzdXBwcmVzcyBtdWx0aXBsZSBvY2N1cnJlbmNlcy5cclxuICAgICAgICBpZiAoIWRhdGEuaW5Db21iYXQgfHwgZGF0YS5sb3N0Rm9vZFttYXRjaGVzLnRhcmdldF0pXHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgZGF0YS5sb3N0Rm9vZFttYXRjaGVzLnRhcmdldF0gPSB0cnVlO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICB0eXBlOiAnd2FybicsXHJcbiAgICAgICAgICBibGFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdsb3N0IGZvb2QgYnVmZicsXHJcbiAgICAgICAgICAgIGRlOiAnTmFocnVuZ3NidWZmIHZlcmxvcmVuJyxcclxuICAgICAgICAgICAgZnI6ICdCdWZmIG5vdXJyaXR1cmUgcGVyZHVlJyxcclxuICAgICAgICAgICAgamE6ICfpo6/lirnmnpzjgYzlpLHjgaPjgZ8nLFxyXG4gICAgICAgICAgICBjbjogJ+WkseWOu+mjn+eJqUJVRkYnLFxyXG4gICAgICAgICAgICBrbzogJ+ydjOyLnSDrsoTtlIQg7ZW07KCcJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnR2VuZXJhbCBXZWxsIEZlZCcsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICc0OCcgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBpZiAoIWRhdGEubG9zdEZvb2QpXHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgZGVsZXRlIGRhdGEubG9zdEZvb2RbbWF0Y2hlcy50YXJnZXRdO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdHZW5lcmFsIFJhYmJpdCBNZWRpdW0nLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzhFMCcgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEuSXNQbGF5ZXJJZChtYXRjaGVzLnNvdXJjZUlkKSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHR5cGU6ICd3YXJuJyxcclxuICAgICAgICAgIGJsYW1lOiBtYXRjaGVzLnNvdXJjZSxcclxuICAgICAgICAgIHJlcG9ydElkOiBtYXRjaGVzLnNvdXJjZUlkLFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ2J1bm55JyxcclxuICAgICAgICAgICAgZGU6ICdIYXNlJyxcclxuICAgICAgICAgICAgZnI6ICdsYXBpbicsXHJcbiAgICAgICAgICAgIGphOiAn44GG44GV44GOJyxcclxuICAgICAgICAgICAgY246ICflhZTlrZAnLFxyXG4gICAgICAgICAgICBrbzogJ+2GoOuBvCcsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBEYXRhIGV4dGVuZHMgT29wc3lEYXRhIHtcclxuICBib290Q291bnQ/OiBudW1iZXI7XHJcbiAgcG9rZUNvdW50PzogbnVtYmVyO1xyXG59XHJcblxyXG4vLyBUZXN0IG1pc3Rha2UgdHJpZ2dlcnMuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5NaWRkbGVMYU5vc2NlYSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ1Rlc3QgQm93JyxcclxuICAgICAgdHlwZTogJ0dhbWVMb2cnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYW1lTmFtZUxvZyh7IGxpbmU6ICdZb3UgYm93IGNvdXJ0ZW91c2x5IHRvIHRoZSBzdHJpa2luZyBkdW1teS4qPycgfSksXHJcbiAgICAgIG5ldFJlZ2V4RnI6IE5ldFJlZ2V4ZXMuZ2FtZU5hbWVMb2coeyBsaW5lOiAnVm91cyB2b3VzIGluY2xpbmV6IGRldmFudCBsZSBtYW5uZXF1aW4gZFxcJ2VudHJhw65uZW1lbnQuKj8nIH0pLFxyXG4gICAgICBuZXRSZWdleEphOiBOZXRSZWdleGVzLmdhbWVOYW1lTG9nKHsgbGluZTogJy4q44Gv5pyo5Lq644Gr44GK6L6e5YSA44GX44GfLio/JyB9KSxcclxuICAgICAgbmV0UmVnZXhDbjogTmV0UmVnZXhlcy5nYW1lTmFtZUxvZyh7IGxpbmU6ICcuKuaBreaVrOWcsOWvueacqOS6uuihjOekvC4qPycgfSksXHJcbiAgICAgIG5ldFJlZ2V4S286IE5ldFJlZ2V4ZXMuZ2FtZU5hbWVMb2coeyBsaW5lOiAnLirrgpjrrLTsnbjtmJXsl5Dqsowg6rO17IaQ7ZWY6rKMIOyduOyCrO2VqeuLiOuLpC4qPycgfSksXHJcbiAgICAgIG1pc3Rha2U6IChkYXRhKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHR5cGU6ICdwdWxsJyxcclxuICAgICAgICAgIGJsYW1lOiBkYXRhLm1lLFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ0JvdycsXHJcbiAgICAgICAgICAgIGRlOiAnQm9nZW4nLFxyXG4gICAgICAgICAgICBmcjogJ0FyYycsXHJcbiAgICAgICAgICAgIGphOiAn44GK6L6e5YSAJyxcclxuICAgICAgICAgICAgY246ICfpnqDouqwnLFxyXG4gICAgICAgICAgICBrbzogJ+yduOyCrCcsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ1Rlc3QgV2lwZScsXHJcbiAgICAgIHR5cGU6ICdHYW1lTG9nJyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FtZU5hbWVMb2coeyBsaW5lOiAnWW91IGJpZCBmYXJld2VsbCB0byB0aGUgc3RyaWtpbmcgZHVtbXkuKj8nIH0pLFxyXG4gICAgICBuZXRSZWdleEZyOiBOZXRSZWdleGVzLmdhbWVOYW1lTG9nKHsgbGluZTogJ1ZvdXMgZmFpdGVzIHZvcyBhZGlldXggYXUgbWFubmVxdWluIGRcXCdlbnRyYcOubmVtZW50Lio/JyB9KSxcclxuICAgICAgbmV0UmVnZXhKYTogTmV0UmVnZXhlcy5nYW1lTmFtZUxvZyh7IGxpbmU6ICcuKuOBr+acqOS6uuOBq+WIpeOCjOOBruaMqOaLtuOCkuOBl+OBny4qPycgfSksXHJcbiAgICAgIG5ldFJlZ2V4Q246IE5ldFJlZ2V4ZXMuZ2FtZU5hbWVMb2coeyBsaW5lOiAnLirlkJHmnKjkurrlkYrliKsuKj8nIH0pLFxyXG4gICAgICBuZXRSZWdleEtvOiBOZXRSZWdleGVzLmdhbWVOYW1lTG9nKHsgbGluZTogJy4q64KY66y07J247ZiV7JeQ6rKMIOyekeuzhCDsnbjsgqzrpbwg7ZWp64uI64ukLio/JyB9KSxcclxuICAgICAgbWlzdGFrZTogKGRhdGEpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ3dpcGUnLFxyXG4gICAgICAgICAgYmxhbWU6IGRhdGEubWUsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnUGFydHkgV2lwZScsXHJcbiAgICAgICAgICAgIGRlOiAnR3J1cHBlbndpcGUnLFxyXG4gICAgICAgICAgICBmcjogJ1BhcnR5IFdpcGUnLFxyXG4gICAgICAgICAgICBqYTogJ+ODr+OCpOODlycsXHJcbiAgICAgICAgICAgIGNuOiAn5Zui54GtJyxcclxuICAgICAgICAgICAga286ICftjIzti7Ag7KCE66m4JyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnVGVzdCBCb290c2hpbmUnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICczNScgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBpZiAobWF0Y2hlcy5zb3VyY2UgIT09IGRhdGEubWUpXHJcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgY29uc3Qgc3RyaWtpbmdEdW1teUJ5TG9jYWxlID0ge1xyXG4gICAgICAgICAgZW46ICdTdHJpa2luZyBEdW1teScsXHJcbiAgICAgICAgICBkZTogJ1RyYWluaW5nc3B1cHBlJyxcclxuICAgICAgICAgIGZyOiAnTWFubmVxdWluIGRcXCdlbnRyYcOubmVtZW50JyxcclxuICAgICAgICAgIGphOiAn5pyo5Lq6JyxcclxuICAgICAgICAgIGNuOiAn5pyo5Lq6JyxcclxuICAgICAgICAgIGtvOiAn64KY66y07J247ZiVJyxcclxuICAgICAgICB9O1xyXG4gICAgICAgIGNvbnN0IHN0cmlraW5nRHVtbXlOYW1lcyA9IE9iamVjdC52YWx1ZXMoc3RyaWtpbmdEdW1teUJ5TG9jYWxlKTtcclxuICAgICAgICByZXR1cm4gc3RyaWtpbmdEdW1teU5hbWVzLmluY2x1ZGVzKG1hdGNoZXMudGFyZ2V0KTtcclxuICAgICAgfSxcclxuICAgICAgbWlzdGFrZTogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLmJvb3RDb3VudCA/Pz0gMDtcclxuICAgICAgICBkYXRhLmJvb3RDb3VudCsrO1xyXG4gICAgICAgIGNvbnN0IHRleHQgPSBgJHttYXRjaGVzLmFiaWxpdHl9ICgke2RhdGEuYm9vdENvdW50fSk6ICR7ZGF0YS5EYW1hZ2VGcm9tTWF0Y2hlcyhtYXRjaGVzKX1gO1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IGRhdGEubWUsIHJlcG9ydElkOiBtYXRjaGVzLnNvdXJjZUlkLCB0ZXh0OiB0ZXh0IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ1Rlc3QgTGVhZGVuIEZpc3QnLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnNzQ1JyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gbWF0Y2hlcy5zb3VyY2UgPT09IGRhdGEubWUsXHJcbiAgICAgIG1pc3Rha2U6IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ2dvb2QnLCBibGFtZTogZGF0YS5tZSwgcmVwb3J0SWQ6IG1hdGNoZXMuc291cmNlSWQsIHRleHQ6IG1hdGNoZXMuZWZmZWN0IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ1Rlc3QgT29wcycsXHJcbiAgICAgIHR5cGU6ICdHYW1lTG9nJyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZWNobyh7IGxpbmU6ICcuKm9vcHMuKicgfSksXHJcbiAgICAgIHN1cHByZXNzU2Vjb25kczogMTAsXHJcbiAgICAgIG1pc3Rha2U6IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ2ZhaWwnLCBibGFtZTogZGF0YS5tZSwgdGV4dDogbWF0Y2hlcy5saW5lIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ1Rlc3QgUG9rZSBDb2xsZWN0JyxcclxuICAgICAgdHlwZTogJ0dhbWVMb2cnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYW1lTmFtZUxvZyh7IGxpbmU6ICdZb3UgcG9rZSB0aGUgc3RyaWtpbmcgZHVtbXkuKj8nIH0pLFxyXG4gICAgICBuZXRSZWdleEZyOiBOZXRSZWdleGVzLmdhbWVOYW1lTG9nKHsgbGluZTogJ1ZvdXMgdG91Y2hleiBsw6lnw6hyZW1lbnQgbGUgbWFubmVxdWluIGRcXCdlbnRyYcOubmVtZW50IGR1IGRvaWd0Lio/JyB9KSxcclxuICAgICAgbmV0UmVnZXhKYTogTmV0UmVnZXhlcy5nYW1lTmFtZUxvZyh7IGxpbmU6ICcuKuOBr+acqOS6uuOCkuOBpOOBpOOBhOOBny4qPycgfSksXHJcbiAgICAgIG5ldFJlZ2V4Q246IE5ldFJlZ2V4ZXMuZ2FtZU5hbWVMb2coeyBsaW5lOiAnLirnlKjmiYvmjIfmiLPlkJHmnKjkurouKj8nIH0pLFxyXG4gICAgICBuZXRSZWdleEtvOiBOZXRSZWdleGVzLmdhbWVOYW1lTG9nKHsgbGluZTogJy4q64KY66y07J247ZiV7J2EIOy/oey/oSDssIzrpoXri4jri6QuKj8nIH0pLFxyXG4gICAgICBydW46IChkYXRhKSA9PiB7XHJcbiAgICAgICAgZGF0YS5wb2tlQ291bnQgPSAoZGF0YS5wb2tlQ291bnQgPz8gMCkgKyAxO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdUZXN0IFBva2UnLFxyXG4gICAgICB0eXBlOiAnR2FtZUxvZycsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhbWVOYW1lTG9nKHsgbGluZTogJ1lvdSBwb2tlIHRoZSBzdHJpa2luZyBkdW1teS4qPycgfSksXHJcbiAgICAgIG5ldFJlZ2V4RnI6IE5ldFJlZ2V4ZXMuZ2FtZU5hbWVMb2coeyBsaW5lOiAnVm91cyB0b3VjaGV6IGzDqWfDqHJlbWVudCBsZSBtYW5uZXF1aW4gZFxcJ2VudHJhw65uZW1lbnQgZHUgZG9pZ3QuKj8nIH0pLFxyXG4gICAgICBuZXRSZWdleEphOiBOZXRSZWdleGVzLmdhbWVOYW1lTG9nKHsgbGluZTogJy4q44Gv5pyo5Lq644KS44Gk44Gk44GE44GfLio/JyB9KSxcclxuICAgICAgbmV0UmVnZXhDbjogTmV0UmVnZXhlcy5nYW1lTmFtZUxvZyh7IGxpbmU6ICcuKueUqOaJi+aMh+aIs+WQkeacqOS6ui4qPycgfSksXHJcbiAgICAgIG5ldFJlZ2V4S286IE5ldFJlZ2V4ZXMuZ2FtZU5hbWVMb2coeyBsaW5lOiAnLirrgpjrrLTsnbjtmJXsnYQg7L+h7L+hIOywjOumheuLiOuLpC4qPycgfSksXHJcbiAgICAgIGRlbGF5U2Vjb25kczogNSxcclxuICAgICAgbWlzdGFrZTogKGRhdGEpID0+IHtcclxuICAgICAgICAvLyAxIHBva2UgYXQgYSB0aW1lIGlzIGZpbmUsIGJ1dCBtb3JlIHRoYW4gb25lIGluIDUgc2Vjb25kcyBpcyAoT0JWSU9VU0xZKSBhIG1pc3Rha2UuXHJcbiAgICAgICAgaWYgKCFkYXRhLnBva2VDb3VudCB8fCBkYXRhLnBva2VDb3VudCA8PSAxKVxyXG4gICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICB0eXBlOiAnZmFpbCcsXHJcbiAgICAgICAgICBibGFtZTogZGF0YS5tZSxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46IGBUb28gbWFueSBwb2tlcyAoJHtkYXRhLnBva2VDb3VudH0pYCxcclxuICAgICAgICAgICAgZGU6IGBadSB2aWVsZSBQaWVrc2VyICgke2RhdGEucG9rZUNvdW50fSlgLFxyXG4gICAgICAgICAgICBmcjogYFRyb3AgZGUgdG91Y2hlcyAoJHtkYXRhLnBva2VDb3VudH0pYCxcclxuICAgICAgICAgICAgamE6IGDjgYTjgaPjgbHjgYTjgaTjgaTjgYTjgZ8gKCR7ZGF0YS5wb2tlQ291bnR9KWAsXHJcbiAgICAgICAgICAgIGNuOiBg5oiz5aSq5aSa5LiL5ZWmICgke2RhdGEucG9rZUNvdW50fSlgLFxyXG4gICAgICAgICAgICBrbzogYOuEiOustCDrp47snbQg7LCM66aEICgke2RhdGEucG9rZUNvdW50feuyiClgLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgICBydW46IChkYXRhKSA9PiBkZWxldGUgZGF0YS5wb2tlQ291bnQsXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBJZnJpdCBTdG9yeSBNb2RlXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVCb3dsT2ZFbWJlcnMsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0lmcml0Tm0gUmFkaWFudCBQbHVtZSc6ICcyREUnLFxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnSWZyaXRObSBJbmNpbmVyYXRlJzogJzFDNScsXHJcbiAgICAnSWZyaXRObSBFcnVwdGlvbic6ICcyREQnLFxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIEl0J3MgaGFyZCB0byBjYXB0dXJlIHRoZSByZWZsZWN0aW9uIGFiaWxpdGllcyBmcm9tIExldmlhdGhhbidzIEhlYWQgYW5kIFRhaWwgaWYgeW91IHVzZVxyXG4vLyByYW5nZWQgcGh5c2ljYWwgYXR0YWNrcyAvIG1hZ2ljIGF0dGFja3MgcmVzcGVjdGl2ZWx5LCBhcyB0aGUgYWJpbGl0eSBuYW1lcyBhcmUgdGhlXHJcbi8vIGFiaWxpdHkgeW91IHVzZWQgYW5kIGRvbid0IGFwcGVhciB0byBzaG93IHVwIGluIHRoZSBsb2cgYXMgbm9ybWFsIFwiYWJpbGl0eVwiIGxpbmVzLlxyXG4vLyBUaGF0IHNhaWQsIGRvdHMgc3RpbGwgdGljayBpbmRlcGVuZGVudGx5IG9uIGJvdGggc28gaXQncyBsaWtlbHkgdGhhdCBwZW9wbGUgd2lsbCBhdGFja1xyXG4vLyB0aGVtIGFueXdheS5cclxuXHJcbi8vIFRPRE86IEZpZ3VyZSBvdXQgd2h5IERyZWFkIFRpZGUgLyBXYXRlcnNwb3V0IGFwcGVhciBsaWtlIHNoYXJlcyAoaS5lLiAweDE2IGlkKS5cclxuLy8gRHJlYWQgVGlkZSA9IDgyMy84MjQvODI1LCBXYXRlcnNwb3V0ID0gODI5XHJcblxyXG4vLyBMZXZpYXRoYW4gRXh0cmVtZVxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlV2hvcmxlYXRlckV4dHJlbWUsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0xldmlFeCBHcmFuZCBGYWxsJzogJzgyRicsIC8vIHZlcnkgbGFyZ2UgY2lyY3VsYXIgYW9lIGJlZm9yZSBzcGlubnkgZGl2ZXMsIGFwcGxpZXMgaGVhdnlcclxuICAgICdMZXZpRXggSHlkcm8gU2hvdCc6ICc3NDgnLCAvLyBXYXZlc3BpbmUgU2FoYWdpbiBhb2UgdGhhdCBnaXZlcyBEcm9wc3kgZWZmZWN0XHJcbiAgICAnTGV2aUV4IERyZWFkc3Rvcm0nOiAnNzQ5JywgLy8gV2F2ZXRvb3RoIFNhaGFnaW4gYW9lIHRoYXQgZ2l2ZXMgSHlzdGVyaWEgZWZmZWN0XHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnTGV2aUV4IEJvZHkgU2xhbSc6ICc4MkEnLCAvLyBsZXZpIHNsYW0gdGhhdCB0aWx0cyB0aGUgYm9hdFxyXG4gICAgJ0xldmlFeCBTcGlubmluZyBEaXZlIDEnOiAnODhBJywgLy8gbGV2aSBkYXNoIGFjcm9zcyB0aGUgYm9hdCB3aXRoIGtub2NrYmFja1xyXG4gICAgJ0xldmlFeCBTcGlubmluZyBEaXZlIDInOiAnODhCJywgLy8gbGV2aSBkYXNoIGFjcm9zcyB0aGUgYm9hdCB3aXRoIGtub2NrYmFja1xyXG4gICAgJ0xldmlFeCBTcGlubmluZyBEaXZlIDMnOiAnODJDJywgLy8gbGV2aSBkYXNoIGFjcm9zcyB0aGUgYm9hdCB3aXRoIGtub2NrYmFja1xyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RXYXJuOiB7XHJcbiAgICAnTGV2aUV4IERyb3BzeSc6ICcxMTAnLCAvLyBzdGFuZGluZyBpbiB0aGUgaHlkcm8gc2hvdCBmcm9tIHRoZSBXYXZlc3BpbmUgU2FoYWdpblxyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RGYWlsOiB7XHJcbiAgICAnTGV2aUV4IEh5c3RlcmlhJzogJzEyOCcsIC8vIHN0YW5kaW5nIGluIHRoZSBkcmVhZHN0b3JtIGZyb20gdGhlIFdhdmV0b290aCBTYWhhZ2luXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ0xldmlFeCBCb2R5IFNsYW0gS25vY2tlZCBPZmYnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzgyQScgfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdLbm9ja2VkIG9mZicsXHJcbiAgICAgICAgICAgIGRlOiAnUnVudGVyZ2VmYWxsZW4nLFxyXG4gICAgICAgICAgICBmcjogJ1JlbnZlcnPDqShlKScsXHJcbiAgICAgICAgICAgIGphOiAn44OO44OD44Kv44OQ44OD44KvJyxcclxuICAgICAgICAgICAgY246ICflh7vpgIDlnaDokL0nLFxyXG4gICAgICAgICAgICBrbzogJ+uEieuwsScsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFNoaXZhIEV4dHJlbWVcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZUFraEFmYWhBbXBoaXRoZWF0cmVFeHRyZW1lLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgIC8vIExhcmdlIHdoaXRlIGNpcmNsZXMuXHJcbiAgICAnU2hpdmFFeCBJY2ljbGUgSW1wYWN0JzogJ0JFQicsXHJcbiAgICAvLyBcImdldCBpblwiIGFvZVxyXG4gICAgJ1NoaXZhRXggV2hpdGVvdXQnOiAnQkVDJyxcclxuICAgIC8vIEF2b2lkYWJsZSB0YW5rIHN0dW4uXHJcbiAgICAnU2hpdmFFeCBHbGFjaWVyIEJhc2gnOiAnQkU5JyxcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgIC8vIDI3MCBkZWdyZWUgYXR0YWNrLlxyXG4gICAgJ1NoaXZhRXggR2xhc3MgRGFuY2UnOiAnQkRGJyxcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgLy8gSGFpbHN0b3JtIHNwcmVhZCBtYXJrZXIuXHJcbiAgICAnU2hpdmFFeCBIYWlsc3Rvcm0nOiAnQkUyJyxcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgLy8gTGFzZXIuICBUT0RPOiBtYXliZSBibGFtZSB0aGUgcGVyc29uIGl0J3Mgb24/P1xyXG4gICAgJ1NoaXZhRXggQXZhbGFuY2hlJzogJ0JFMCcsXHJcbiAgfSxcclxuICBzb2xvV2Fybjoge1xyXG4gICAgLy8gUGFydHkgc2hhcmVkIHRhbmtidXN0ZXJcclxuICAgICdTaGl2YUV4IEljZWJyYW5kJzogJ0JFMScsXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ1NoaXZhRXggRGVlcCBGcmVlemUnLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICAvLyBTaGl2YSBhbHNvIHVzZXMgYWJpbGl0eSBDOEEgb24geW91LCBidXQgaXQgaGFzIHRoZSB1bnRyYW5zbGF0ZWQgbmFtZVxyXG4gICAgICAvLyDpgI/mmI7vvJrjgrfjg7TjgqHvvJrlh43ntZDjg6zjgq/jg4jvvJrjg47jg4Pjgq/jg5Djg4Pjgq/nlKgv44OS44Ot44Kk44OD44KvLiBTbywgdXNlIHRoZSBlZmZlY3QgaW5zdGVhZCBmb3IgZnJlZSB0cmFuc2xhdGlvbi5cclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzFFNycgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgLy8gVGhlIGludGVybWlzc2lvbiBhbHNvIGdldHMgdGhpcyBlZmZlY3QsIGJ1dCBmb3IgYSBzaG9ydGVyIGR1cmF0aW9uLlxyXG4gICAgICAgIHJldHVybiBwYXJzZUZsb2F0KG1hdGNoZXMuZHVyYXRpb24pID4gMjA7XHJcbiAgICAgIH0sXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICdmYWlsJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5lZmZlY3QgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIERhdGEgZXh0ZW5kcyBPb3BzeURhdGEge1xyXG4gIHNlZW5EaWFtb25kRHVzdD86IGJvb2xlYW47XHJcbn1cclxuXHJcbi8vIFNoaXZhIEhhcmRcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZUFraEFmYWhBbXBoaXRoZWF0cmVIYXJkLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgIC8vIExhcmdlIHdoaXRlIGNpcmNsZXMuXHJcbiAgICAnU2hpdmFIbSBJY2ljbGUgSW1wYWN0JzogJzk5MycsXHJcbiAgICAvLyBBdm9pZGFibGUgdGFuayBzdHVuLlxyXG4gICAgJ1NoaXZhSG0gR2xhY2llciBCYXNoJzogJzlBMScsXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgIC8vIEtub2NrYmFjayB0YW5rIGNsZWF2ZS5cclxuICAgICdTaGl2YUhtIEhlYXZlbmx5IFN0cmlrZSc6ICc5QTAnLFxyXG4gICAgLy8gSGFpbHN0b3JtIHNwcmVhZCBtYXJrZXIuXHJcbiAgICAnU2hpdmFIbSBIYWlsc3Rvcm0nOiAnOTk4JyxcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgLy8gVGFua2J1c3Rlci4gIFRoaXMgaXMgU2hpdmEgSGFyZCBtb2RlLCBub3QgU2hpdmEgRXh0cmVtZS4gIFBsZWFzZSFcclxuICAgICdTaGl2YUhtIEljZWJyYW5kJzogJzk5NicsXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ1NoaXZhSG0gRGlhbW9uZCBEdXN0JyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICc5OEEnIH0pLFxyXG4gICAgICBydW46IChkYXRhKSA9PiB7XHJcbiAgICAgICAgZGF0YS5zZWVuRGlhbW9uZER1c3QgPSB0cnVlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdTaGl2YUhtIERlZXAgRnJlZXplJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgLy8gU2hpdmEgYWxzbyB1c2VzIGFiaWxpdHkgOUEzIG9uIHlvdSwgYnV0IGl0IGhhcyB0aGUgdW50cmFuc2xhdGVkIG5hbWVcclxuICAgICAgLy8g6YCP5piO77ya44K344O044Kh77ya5YeN57WQ44Os44Kv44OI77ya44OO44OD44Kv44OQ44OD44Kv55SoLiBTbywgdXNlIHRoZSBlZmZlY3QgaW5zdGVhZCBmb3IgZnJlZSB0cmFuc2xhdGlvbi5cclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzFFNycgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEpID0+IHtcclxuICAgICAgICAvLyBUaGUgaW50ZXJtaXNzaW9uIGFsc28gZ2V0cyB0aGlzIGVmZmVjdCwgc28gb25seSBhIG1pc3Rha2UgYWZ0ZXIgdGhhdC5cclxuICAgICAgICAvLyBVbmxpa2UgZXh0cmVtZSwgdGhpcyBoYXMgdGhlIHNhbWUgMjAgc2Vjb25kIGR1cmF0aW9uIGFzIHRoZSBpbnRlcm1pc3Npb24uXHJcbiAgICAgICAgcmV0dXJuIGRhdGEuc2VlbkRpYW1vbmREdXN0O1xyXG4gICAgICB9LFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuZWZmZWN0IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFRpdGFuIEV4dHJlbWVcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZU5hdmVsRXh0cmVtZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnVGl0YW5FeCBXZWlnaHQgT2YgVGhlIExhbmQnOiAnNUJFJyxcclxuICAgICdUaXRhbkV4IEJ1cnN0JzogJzVCRicsXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnVGl0YW5FeCBMYW5kc2xpZGUnOiAnNUJCJyxcclxuICAgICdUaXRhbkV4IEdhb2xlciBMYW5kc2xpZGUnOiAnNUMzJyxcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1RpdGFuRXggUm9jayBCdXN0ZXInOiAnNUI3JyxcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ1RpdGFuRXggTW91bnRhaW4gQnVzdGVyJzogJzVCOCcsXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ1RpdGFuRXggTGFuZHNsaWRlJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnNUJCJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnUHVzaGVkIG9mZiEnLFxyXG4gICAgICAgICAgICBkZTogJ1J1bnRlciBnZXNjaHVic3QhJyxcclxuICAgICAgICAgICAgZnI6ICdSZXBvdXNzw6koZSkgIScsXHJcbiAgICAgICAgICAgIGphOiAn6JC944Gh44GfJyxcclxuICAgICAgICAgICAgY246ICflh7vpgIDlnaDokL0nLFxyXG4gICAgICAgICAgICBrbzogJ+uEieuwseuQqCcsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBUaXRhbiBIYXJkXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVOYXZlbEhhcmQsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1RpdGFuSG0gV2VpZ2h0IE9mIFRoZSBMYW5kJzogJzU1MycsXHJcbiAgICAnVGl0YW5IbSBCdXJzdCc6ICc0MUMnLFxyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ1RpdGFuSG0gTGFuZHNsaWRlJzogJzU1NCcsXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdUaXRhbkhtIFJvY2sgQnVzdGVyJzogJzU1MCcsXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdUaXRhbkhtIE1vdW50YWluIEJ1c3Rlcic6ICcyODMnLFxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBUaXRhbiBTdG9yeSBNb2RlXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVOYXZlbCxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnVGl0YW5ObSBXZWlnaHQgT2YgVGhlIExhbmQnOiAnM0NEJyxcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdUaXRhbk5tIExhbmRzbGlkZSc6ICcyOEEnLFxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnVGl0YW5ObSBSb2NrIEJ1c3Rlcic6ICcyODEnLFxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVNaW5zdHJlbHNCYWxsYWRVbHRpbWFzQmFuZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnVWx0aW1hRXggTWlzdHJhbCBTb25nJzogJzVFRCcsIC8vIEdhcnVkYSB3aWRlIGNvbmFsXHJcbiAgICAnVWx0aW1hRXggRXllIG9mIHRoZSBTdG9ybSc6ICc1RUYnLCAvLyBHYXJ1ZGEgZG9udXRcclxuICAgICdVbHRpbWFFeCBSYWRpYW50IFBsdW1lJzogJzVGMScsIC8vIElmcml0IGZpcmUgZXJ1cHRpb25zXHJcbiAgICAnVWx0aW1hRXggV2VpZ2h0IG9mIHRoZSBMYW5kJzogJzVGMicsIC8vIFRpdGFuIHB1ZGRsZXNcclxuICAgICdVbHRpbWFFeCBFcnVwdGlvbic6ICc1RjQnLCAvLyBjaGFzaW5nIElmcml0IGV4cGxvc2lvbnNcclxuICAgICdVbHRpbWFFeCBDcmltc29uIEN5Y2xvbmUnOiAnNUY1JywgLy8gSWZyaXQgZGFzaFxyXG4gICAgJ1VsdGltYUV4IE1hZ2l0ZWsgUmF5IDEnOiAnNUUzJywgLy8gdHJpZGVudCBsYXNlclxyXG4gICAgJ1VsdGltYUV4IE1hZ2l0ZWsgUmF5IDInOiAnNUU0JywgLy8gdHJpZGVudCBsYXNlclxyXG4gICAgJ1VsdGltYUV4IE1hZ2l0ZWsgUmF5IDMnOiAnNUU1JywgLy8gdHJpZGVudCBsYXNlclxyXG4gICAgJ1VsdGltYUV4IEhvbWluZyBBZXRoZXJvcGxhc20nOiAnNUU2JywgLy8gY2hhc2luZyBBZXRoZXJvcGxhc20gZXhwbG9zaW9uXHJcbiAgICAnVWx0aW1hRXggTWFnaXRlayBCaXQgQXNzYXVsdCBDYW5ub24nOiAnNUY2JywgLy8gbGluZSBhb2UgZnJvbSBiaXRzXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnVWx0aW1hRXggRnVzaW9uIEJ1cnN0JzogJzVFOScsIC8vIGZhaWxpbmcgdG8gcG9wIG9yYnNcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1VsdGltYUV4IEhvbWluZyBMYXNlcnMnOiAnNUUxJywgLy8gZGlzdGFuY2U/IGFnZ3JvPyB0YXJnZXRlZCBjaXJjdWxhciBjbGVhdmVcclxuICAgICdVbHRpbWFFeCBEaWZmcmFjdGl2ZSBMYXNlcic6ICc1RTInLCAvLyBmcm9udGFsIGNvbmFsIGNsZWF2ZVxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6ICdVbHRpbWFFeCBWaXNjb3VzIEFldGhlcm9wbGFzbScsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICcxNzEnLCBjb3VudDogJzA1JyB9KSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ2ZhaWwnLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmVmZmVjdCB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSBleHRlbmRzIE9vcHN5RGF0YSB7XHJcbiAgem9tYmllPzogeyBbbmFtZTogc3RyaW5nXTogYm9vbGVhbiB9O1xyXG4gIHNoaWVsZD86IHsgW25hbWU6IHN0cmluZ106IGJvb2xlYW4gfTtcclxufVxyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZVdlZXBpbmdDaXR5T2ZNaGFjaCxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnV2VlcGluZyBDcml0aWNhbCBCaXRlJzogJzE4NDgnLCAvLyBTYXJzdWNodXMgY29uZSBhb2VcclxuICAgICdXZWVwaW5nIFJlYWxtIFNoYWtlcic6ICcxODNFJywgLy8gRmlyc3QgRGF1Z2h0ZXIgY2lyY2xlIGFvZVxyXG4gICAgJ1dlZXBpbmcgU2lsa3NjcmVlbic6ICcxODNDJywgLy8gRmlyc3QgRGF1Z2h0ZXIgbGluZSBhb2VcclxuICAgICdXZWVwaW5nIFNpbGtlbiBTcHJheSc6ICcxODI0JywgLy8gQXJhY2huZSBFdmUgcmVhciBjb25hbCBhb2VcclxuICAgICdXZWVwaW5nIFRyZW1ibG9yIDEnOiAnMTgzNycsIC8vIEFyYWNobmUgRXZlIGRpc2FwcGVhciBjaXJjbGUgYW9lIDFcclxuICAgICdXZWVwaW5nIFRyZW1ibG9yIDInOiAnMTgzNicsIC8vIEFyYWNobmUgRXZlIGRpc2FwcGVhciBjaXJjbGUgYW9lIDJcclxuICAgICdXZWVwaW5nIFRyZW1ibG9yIDMnOiAnMTgzNScsIC8vIEFyYWNobmUgRXZlIGRpc2FwcGVhciBjaXJjbGUgYW9lIDNcclxuICAgICdXZWVwaW5nIFNwaWRlciBUaHJlYWQnOiAnMTgzOScsIC8vIEFyYWNobmUgRXZlIHNwaWRlciBsaW5lIGFvZVxyXG4gICAgJ1dlZXBpbmcgRmlyZSBJSSc6ICcxODRFJywgLy8gQmxhY2sgTWFnZSBDb3Jwc2UgY2lyY2xlIGFvZVxyXG4gICAgJ1dlZXBpbmcgTmVjcm9wdXJnZSc6ICcxN0Q3JywgLy8gRm9yZ2FsbCBTaHJpdmVsZWQgVGFsb24gbGluZSBhb2VcclxuICAgICdXZWVwaW5nIFJvdHRlbiBCcmVhdGgnOiAnMTdEMCcsIC8vIEZvcmdhbGwgRGFoYWsgY29uZSBhb2VcclxuICAgICdXZWVwaW5nIE1vdyc6ICcxN0QyJywgLy8gRm9yZ2FsbCBIYWFnZW50aSB1bm1hcmtlZCBjbGVhdmVcclxuICAgICdXZWVwaW5nIERhcmsgRXJ1cHRpb24nOiAnMTdDMycsIC8vIEZvcmdhbGwgcHVkZGxlIG1hcmtlclxyXG4gICAgLy8gMTgwNiBpcyBhbHNvIEZsYXJlIFN0YXIsIGJ1dCBpZiB5b3UgZ2V0IGJ5IDE4MDUgeW91IGFsc28gZ2V0IGhpdCBieSAxODA2P1xyXG4gICAgJ1dlZXBpbmcgRmxhcmUgU3Rhcic6ICcxODA1JywgLy8gT3ptYSBjdWJlIHBoYXNlIGRvbnV0XHJcbiAgICAnV2VlcGluZyBFeGVjcmF0aW9uJzogJzE4MjknLCAvLyBPem1hIHRyaWFuZ2xlIGxhc2VyXHJcbiAgICAnV2VlcGluZyBIYWlyY3V0IDEnOiAnMTgwQicsIC8vIENhbG9maXN0ZXJpIDE4MCBjbGVhdmUgMVxyXG4gICAgJ1dlZXBpbmcgSGFpcmN1dCAyJzogJzE4MEYnLCAvLyBDYWxvZmlzdGVyaSAxODAgY2xlYXZlIDJcclxuICAgICdXZWVwaW5nIEVudGFuZ2xlbWVudCc6ICcxODFEJywgLy8gQ2Fsb2Zpc3RlcmkgbGFuZG1pbmUgcHVkZGxlIHByb2NcclxuICAgICdXZWVwaW5nIEV2aWwgQ3VybCc6ICcxODE2JywgLy8gQ2Fsb2Zpc3RlcmkgYXhlXHJcbiAgICAnV2VlcGluZyBFdmlsIFRyZXNzJzogJzE4MTcnLCAvLyBDYWxvZmlzdGVyaSBidWxiXHJcbiAgICAnV2VlcGluZyBEZXB0aCBDaGFyZ2UnOiAnMTgyMCcsIC8vIENhbG9maXN0ZXJpIGNoYXJnZSB0byBlZGdlXHJcbiAgICAnV2VlcGluZyBGZWludCBQYXJ0aWNsZSBCZWFtJzogJzE5MjgnLCAvLyBDYWxvZmlzdGVyaSBza3kgbGFzZXJcclxuICAgICdXZWVwaW5nIEV2aWwgU3dpdGNoJzogJzE4MTUnLCAvLyBDYWxvZmlzdGVyaSBsYXNlcnNcclxuICB9LFxyXG4gIGdhaW5zRWZmZWN0V2Fybjoge1xyXG4gICAgJ1dlZXBpbmcgSHlzdGVyaWEnOiAnMTI4JywgLy8gQXJhY2huZSBFdmUgRnJvbmQgQWZmZWFyZFxyXG4gICAgJ1dlZXBpbmcgWm9tYmlmaWNhdGlvbic6ICcxNzMnLCAvLyBGb3JnYWxsIHRvbyBtYW55IHpvbWJpZSBwdWRkbGVzXHJcbiAgICAnV2VlcGluZyBUb2FkJzogJzFCNycsIC8vIEZvcmdhbGwgQnJhbmQgb2YgdGhlIEZhbGxlbiBmYWlsdXJlXHJcbiAgICAnV2VlcGluZyBEb29tJzogJzM4RScsIC8vIEZvcmdhbGwgSGFhZ2VudGkgTW9ydGFsIFJheVxyXG4gICAgJ1dlZXBpbmcgQXNzaW1pbGF0aW9uJzogJzQyQycsIC8vIE96bWFzaGFkZSBBc3NpbWlsYXRpb24gbG9vay1hd2F5XHJcbiAgICAnV2VlcGluZyBTdHVuJzogJzk1JywgLy8gQ2Fsb2Zpc3RlcmkgUGVuZXRyYXRpb24gbG9vay1hd2F5XHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdXZWVwaW5nIEFyYWNobmUgV2ViJzogJzE4NUUnLCAvLyBBcmFjaG5lIEV2ZSBoZWFkbWFya2VyIHdlYiBhb2VcclxuICAgICdXZWVwaW5nIEVhcnRoIEFldGhlcic6ICcxODQxJywgLy8gQXJhY2huZSBFdmUgb3Jic1xyXG4gICAgJ1dlZXBpbmcgRXBpZ3JhcGgnOiAnMTg1MicsIC8vIEhlYWRzdG9uZSB1bnRlbGVncmFwaGVkIGxhc2VyIGxpbmUgdGFuayBhdHRhY2tcclxuICAgIC8vIFRoaXMgaXMgdG9vIG5vaXN5LiAgQmV0dGVyIHRvIHBvcCB0aGUgYmFsbG9vbnMgdGhhbiB3b3JyeSBhYm91dCBmcmllbmRzLlxyXG4gICAgLy8gJ1dlZXBpbmcgRXhwbG9zaW9uJzogJzE4MDcnLCAvLyBPem1hc3BoZXJlIEN1YmUgb3JiIGV4cGxvc2lvblxyXG4gICAgJ1dlZXBpbmcgU3BsaXQgRW5kIDEnOiAnMTgwQycsIC8vIENhbG9maXN0ZXJpIHRhbmsgY2xlYXZlIDFcclxuICAgICdXZWVwaW5nIFNwbGl0IEVuZCAyJzogJzE4MTAnLCAvLyBDYWxvZmlzdGVyaSB0YW5rIGNsZWF2ZSAyXHJcbiAgICAnV2VlcGluZyBCbG9vZGllZCBOYWlsJzogJzE4MUYnLCAvLyBDYWxvZmlzdGVyaSBheGUvYnVsYiBhcHBlYXJpbmdcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnV2VlcGluZyBGb3JnYWxsIEdyYWR1YWwgWm9tYmlmaWNhdGlvbiBHYWluJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzQxNScgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLnpvbWJpZSA/Pz0ge307XHJcbiAgICAgICAgZGF0YS56b21iaWVbbWF0Y2hlcy50YXJnZXRdID0gdHJ1ZTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnV2VlcGluZyBGb3JnYWxsIEdyYWR1YWwgWm9tYmlmaWNhdGlvbiBMb3NlJyxcclxuICAgICAgdHlwZTogJ0xvc2VzRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMubG9zZXNFZmZlY3QoeyBlZmZlY3RJZDogJzQxNScgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLnpvbWJpZSA9IGRhdGEuem9tYmllIHx8IHt9O1xyXG4gICAgICAgIGRhdGEuem9tYmllW21hdGNoZXMudGFyZ2V0XSA9IGZhbHNlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdXZWVwaW5nIEZvcmdhbGwgTWVnYSBEZWF0aCcsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnMTdDQScgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEuem9tYmllICYmICFkYXRhLnpvbWJpZVttYXRjaGVzLnRhcmdldF0sXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICdmYWlsJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCB0ZXh0OiBtYXRjaGVzLmFiaWxpdHkgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnV2VlcGluZyBIZWFkc3RvbmUgU2hpZWxkIEdhaW4nLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnMTVFJyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuc2hpZWxkID8/PSB7fTtcclxuICAgICAgICBkYXRhLnNoaWVsZFttYXRjaGVzLnRhcmdldF0gPSB0cnVlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdXZWVwaW5nIEhlYWRzdG9uZSBTaGllbGQgTG9zZScsXHJcbiAgICAgIHR5cGU6ICdMb3Nlc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmxvc2VzRWZmZWN0KHsgZWZmZWN0SWQ6ICcxNUUnIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS5zaGllbGQgPSBkYXRhLnNoaWVsZCB8fCB7fTtcclxuICAgICAgICBkYXRhLnNoaWVsZFttYXRjaGVzLnRhcmdldF0gPSBmYWxzZTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnV2VlcGluZyBGbGFyaW5nIEVwaWdyYXBoJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICcxODU2JyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gZGF0YS5zaGllbGQgJiYgIWRhdGEuc2hpZWxkW21hdGNoZXMudGFyZ2V0XSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ2ZhaWwnLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgLy8gVGhpcyBhYmlsaXR5IG5hbWUgaXMgaGVscGZ1bGx5IGNhbGxlZCBcIkF0dGFja1wiIHNvIG5hbWUgaXQgc29tZXRoaW5nIGVsc2UuXHJcbiAgICAgIGlkOiAnV2VlcGluZyBPem1hIFRhbmsgTGFzZXInLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyB0eXBlOiAnMjInLCBpZDogJzE4MzEnIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ3dhcm4nLFxyXG4gICAgICAgICAgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ1RhbmsgTGFzZXInLFxyXG4gICAgICAgICAgICBkZTogJ1RhbmsgTGFzZXInLFxyXG4gICAgICAgICAgICBmcjogJ1RhbmsgTGFzZXInLFxyXG4gICAgICAgICAgICBqYTogJ+OCv+ODs+OCr+ODrOOCtuODvCcsXHJcbiAgICAgICAgICAgIGNuOiAn5Z2m5YWL5r+A5YWJJyxcclxuICAgICAgICAgICAga286ICftg7Hsu6Qg66CI7J207KCAJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnV2VlcGluZyBPem1hIEhvbHknLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzE4MkUnIH0pLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnU2xpZCBvZmYhJyxcclxuICAgICAgICAgICAgZGU6ICdpc3QgcnVudGVyZ2VydXRzY2h0IScsXHJcbiAgICAgICAgICAgIGZyOiAnQSBnbGlzc8OpKGUpICEnLFxyXG4gICAgICAgICAgICBqYTogJ+ODjuODg+OCr+ODkOODg+OCrycsXHJcbiAgICAgICAgICAgIGNuOiAn5Ye76YCA77yBJyxcclxuICAgICAgICAgICAga286ICfrhInrsLHrkKghJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gQWV0aGVyb2NoZW1pY2FsIFJlc2VhcmNoIEZhY2lsaXR5XHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVBZXRoZXJvY2hlbWljYWxSZXNlYXJjaEZhY2lsaXR5LFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdBUkYgR3JhbmQgU3dvcmQnOiAnMjE2JywgLy8gQ29uYWwgQW9FLCBTY3JhbWJsZWQgSXJvbiBHaWFudCB0cmFzaFxyXG4gICAgJ0FSRiBDZXJtZXQgRHJpbGwnOiAnMjBFJywgLy8gTGluZSBBb0UsIDZ0aCBMZWdpb24gTWFnaXRlayBWYW5ndWFyZCB0cmFzaFxyXG4gICAgJ0FSRiBNYWdpdGVrIFNsdWcnOiAnMTBEQicsIC8vIExpbmUgQW9FLCBib3NzIDFcclxuICAgICdBUkYgQWV0aGVyb2NoZW1pY2FsIEdyZW5hZG8nOiAnMTBFMicsIC8vIExhcmdlIHRhcmdldGVkIGNpcmNsZSBBb0UsIE1hZ2l0ZWsgVHVycmV0IElJLCBib3NzIDFcclxuICAgICdBUkYgTWFnaXRlayBTcHJlYWQnOiAnMTBEQycsIC8vIDI3MC1kZWdyZWUgcm9vbXdpZGUgQW9FLCBib3NzIDFcclxuICAgICdBUkYgRWVyaWUgU291bmR3YXZlJzogJzExNzAnLCAvLyBUYXJnZXRlZCBjaXJjbGUgQW9FLCBDdWx0dXJlZCBFbXB1c2EgdHJhc2gsIGJlZm9yZSBib3NzIDJcclxuICAgICdBUkYgVGFpbCBTbGFwJzogJzEyNUYnLCAvLyBDb25hbCBBb0UsIEN1bHR1cmVkIERhbmNlciB0cmFzaCwgYmVmb3JlIGJvc3MgMlxyXG4gICAgJ0FSRiBDYWxjaWZ5aW5nIE1pc3QnOiAnMTIzQScsIC8vIENvbmFsIEFvRSwgQ3VsdHVyZWQgTmFnYSB0cmFzaCwgYmVmb3JlIGJvc3MgMlxyXG4gICAgJ0FSRiBQdW5jdHVyZSc6ICcxMTcxJywgLy8gU2hvcnQgbGluZSBBb0UsIEN1bHR1cmVkIEVtcHVzYSB0cmFzaCwgYmVmb3JlIGJvc3MgMlxyXG4gICAgJ0FSRiBTaWRlc3dpcGUnOiAnMTFBNycsIC8vIENvbmFsIEFvRSwgQ3VsdHVyZWQgUmVwdG9pZCB0cmFzaCwgYmVmb3JlIGJvc3MgMlxyXG4gICAgJ0FSRiBHdXN0JzogJzM5NScsIC8vIFRhcmdldGVkIHNtYWxsIGNpcmNsZSBBb0UsIEN1bHR1cmVkIE1pcnJvcmtuaWdodCB0cmFzaCwgYmVmb3JlIGJvc3MgMlxyXG4gICAgJ0FSRiBNYXJyb3cgRHJhaW4nOiAnRDBFJywgLy8gQ29uYWwgQW9FLCBDdWx0dXJlZCBDaGltZXJhIHRyYXNoLCBiZWZvcmUgYm9zcyAyXHJcbiAgICAnQVJGIFJpZGRsZSBPZiBUaGUgU3BoaW54JzogJzEwRTQnLCAvLyBUYXJnZXRlZCBjaXJjbGUgQW9FLCBib3NzIDJcclxuICAgICdBUkYgS2EnOiAnMTA2RScsIC8vIENvbmFsIEFvRSwgYm9zcyAyXHJcbiAgICAnQVJGIFJvdG9zd2lwZSc6ICcxMUNDJywgLy8gQ29uYWwgQW9FLCBGYWNpbGl0eSBEcmVhZG5vdWdodCB0cmFzaCwgYmVmb3JlIGJvc3MgM1xyXG4gICAgJ0FSRiBBdXRvLWNhbm5vbnMnOiAnMTJEOScsIC8vIExpbmUgQW9FLCBNb25pdG9yaW5nIERyb25lIHRyYXNoLCBiZWZvcmUgYm9zcyAzXHJcbiAgICAnQVJGIERlYXRoXFwncyBEb29yJzogJzRFQycsIC8vIExpbmUgQW9FLCBDdWx0dXJlZCBTaGFidGkgdHJhc2gsIGJlZm9yZSBib3NzIDNcclxuICAgICdBUkYgU3BlbGxzd29yZCc6ICc0RUInLCAvLyBDb25hbCBBb0UsIEN1bHR1cmVkIFNoYWJ0aSB0cmFzaCwgYmVmb3JlIGJvc3MgM1xyXG4gICAgJ0FSRiBFbmQgT2YgRGF5cyc6ICcxMEZEJywgLy8gTGluZSBBb0UsIGJvc3MgM1xyXG4gICAgJ0FSRiBCbGl6emFyZCBCdXJzdCc6ICcxMEZFJywgLy8gRml4ZWQgY2lyY2xlIEFvRXMsIElnZXlvcmhtLCBib3NzIDNcclxuICAgICdBUkYgRmlyZSBCdXJzdCc6ICcxMEZGJywgLy8gRml4ZWQgY2lyY2xlIEFvRXMsIExhaGFicmVhLCBib3NzIDNcclxuICAgICdBUkYgU2VhIE9mIFBpdGNoJzogJzEyREUnLCAvLyBUYXJnZXRlZCBwZXJzaXN0ZW50IGNpcmNsZSBBb0VzLCBib3NzIDNcclxuICAgICdBUkYgRGFyayBCbGl6emFyZCBJSSc6ICcxMEYzJywgLy8gUmFuZG9tIGNpcmNsZSBBb0VzLCBJZ2V5b3JobSwgYm9zcyAzXHJcbiAgICAnQVJGIERhcmsgRmlyZSBJSSc6ICcxMEY4JywgLy8gUmFuZG9tIGNpcmNsZSBBb0VzLCBMYWhhYnJlYSwgYm9zcyAzXHJcbiAgICAnQVJGIEFuY2llbnQgRXJ1cHRpb24nOiAnMTEwNCcsIC8vIFNlbGYtdGFyZ2V0ZWQgY2lyY2xlIEFvRSwgYm9zcyA0XHJcbiAgICAnQVJGIEVudHJvcGljIEZsYW1lJzogJzExMDgnLCAvLyBMaW5lIEFvRXMsICBib3NzIDRcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0FSRiBDaHRob25pYyBIdXNoJzogJzEwRTcnLCAvLyBJbnN0YW50IHRhbmsgY2xlYXZlLCBib3NzIDJcclxuICAgICdBUkYgSGVpZ2h0IE9mIENoYW9zJzogJzExMDEnLCAvLyBUYW5rIGNsZWF2ZSwgYm9zcyA0XHJcbiAgICAnQVJGIEFuY2llbnQgQ2lyY2xlJzogJzExMDInLCAvLyBUYXJnZXRlZCBkb251dCBBb0VzLCBib3NzIDRcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnQVJGIFBldHJpZmFjdGlvbicsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICcwMScgfSksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5lZmZlY3QgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIEJhZWxzYXIncyBXYWxsXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5CYWVsc2Fyc1dhbGwsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0JhZWxzYXIgM3JkIENvaG9ydCBMYXF1ZXJpdXMgT3ZlcnBvd2VyJzogJzJEMCcsIC8vIENvbmFsIEFvRSwgYmVmb3JlIGJvc3MgMVxyXG4gICAgJ0JhZWxzYXIgM3JkIENvaG9ydCBDYW5pcyBQdWduYXggQmVsbG93aW5nIEdydW50JzogJzE1MCcsIC8vIFRhcmdldGVkIGNpcmNsZSBBb0UsIGJlZm9yZSBib3NzIDFcclxuICAgICdCYWVsc2FyIDNyZCBDb2hvcnQgU2lnbmlmaWVyIERhcmsgRmlyZSBJSUknOiAnNTE5JywgLy8gVGFyZ2V0ZWQgY2lyY2xlIEFvRSwgYmVmb3JlIGJvc3MgMVxyXG5cclxuICAgICdCYWVsc2FyIE1hZ2l0ZWsgUHJlZGF0b3IgTWFnaXRlayBSYXknOiAnMUNCMycsIC8vIExpbmUgQW9FLCBib3NzIDFcclxuXHJcbiAgICAnQmFlbHNhciBBZGFtYW50aXRlIENsYXcgU2hyZWQnOiAnMTI1NycsIC8vIFJlY3RhbmdsZSBBb0UsIGJlZm9yZSBib3NzIDJcclxuICAgICdCYWVsc2FyIE1hZ2l0ZWsgQ29sb3NzdXMgRXhoYXVzdCc6ICc1OTMnLCAvLyBMaW5lIEFvRSwgYmVmb3JlIGJvc3MgMlxyXG4gICAgJ0JhZWxzYXIgTWFnaXRlayBDb2xvc3N1cyBHcmFuZCBTd29yZCc6ICcxMjZBJywgLy8gQ29uYWwgQW9FLCBiZWZvcmUgYm9zcyAyXHJcblxyXG4gICAgJ0JhZWxzYXIgQXJtb3JlZCBXZWFwb24gRHluYW1pYyBTZW5zb3J5IEphbW1lcic6ICcxQ0JBJywgLy8gRXh0cmVtZSBDYXV0aW9uIGZhaWx1cmUsIGJvc3MgMlxyXG4gICAgJ0JhZWxzYXIgQXJtb3JlZCBXZWFwb24gRGlmZnJhY3RpdmUgTGFzZXInOiAnMUNCQicsIC8vIFRhcmdldGVkIGNpcmNsZSBBb0UsIGJvc3MgMlxyXG4gICAgJ0JhZWxzYXIgTWFnaXRlayBCaXQgQXNzYXVsdCBDYW5ub24nOiAnMUNDMCcsIC8vIENoZWNrZXJib2FyZCBsaW5lIEFvRXMsIGJvc3MgMlxyXG5cclxuICAgICdCYWVsc2FyIE1hZ2l0ZWsgR3Vuc2hpcCBDYXJwZXQgQm9tYic6ICcxQ0NGJywgLy8gVGFyZ2V0ZWQgY2lyY2xlIEFvRSwgYWZ0ZXIgYm9zcyAyXHJcbiAgICAnQmFlbHNhciBMYW5jZS1XaWVsZGluZyBMb3lhbGlzdCBIZWFydHN0b3BwZXInOiAnMzYyJywgLy8gUmVjdGFuZ2xlIEFvRSwgYWZ0ZXIgYm9zcyAyXHJcblxyXG4gICAgJ0JhZWxzYXIgVGhlIEdyaWZmaW4gU2FuZ3VpbmUgQmxhZGUnOiAnMUNDNScsIC8vIEFyZW5hIGNsZWF2ZSwgYm9zcyAzXHJcbiAgICAnQmFlbHNhciBCbGFkZSBPZiBUaGUgR3JpZmZpbiBDb3Jyb3Npb24nOiAnMUNDQycsIC8vIENpcmNsZSBBb0UsIGJvc3MgM1xyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RXYXJuOiB7XHJcbiAgICAnQmFlbHNhciBUaGUgR3JpZmZpbiBBY2N1cmFjeSBEb3duJzogJzFDJywgLy8gRmxhc2ggUG93ZGVyIGZhaWx1cmUsIGJvc3MgM1xyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBGcmFjdGFsIENvbnRpbnV1bVxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlRnJhY3RhbENvbnRpbnV1bSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnRnJhY3RhbCBEb3VibGUgU2V2ZXInOiAnRjdEJywgLy8gQ29uYWxzLCBib3NzIDFcclxuICAgICdGcmFjdGFsIEFldGhlcmljIENvbXByZXNzaW9uJzogJ0Y4MCcsIC8vIEdyb3VuZCBBb0UgY2lyY2xlcywgYm9zcyAxXHJcbiAgICAnRnJhY3RhbCAxMS1Ub256ZSBTd2lwZSc6ICdGODEnLCAvLyBGcm9udGFsIGNvbmUsIGJvc3MgMlxyXG4gICAgJ0ZyYWN0YWwgMTAtVG9uemUgU2xhc2gnOiAnRjgzJywgLy8gRnJvbnRhbCBsaW5lLCBib3NzIDJcclxuICAgICdGcmFjdGFsIDExMS1Ub256ZSBTd2luZyc6ICdGODcnLCAvLyBHZXQtb3V0IEFvRSwgYm9zcyAyXHJcbiAgICAnRnJhY3RhbCBCcm9rZW4gR2xhc3MnOiAnRjhFJywgLy8gR2xvd2luZyBwYW5lbHMsIGJvc3MgM1xyXG4gICAgJ0ZyYWN0YWwgTWluZXMnOiAnRjkwJyxcclxuICAgICdGcmFjdGFsIFNlZWQgb2YgdGhlIFJpdmVycyc6ICdGOTEnLCAvLyBHcm91bmQgQW9FIGNpcmNsZXMsIGJvc3MgM1xyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnRnJhY3RhbCBTYW5jdGlmaWNhdGlvbic6ICdGODknLCAvLyBJbnN0YW50IGNvbmFsIGJ1c3RlciwgYm9zcyAzXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcbmltcG9ydCB7IHBsYXllckRhbWFnZUZpZWxkcyB9IGZyb20gJy4uLy4uLy4uL29vcHN5X2NvbW1vbic7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIERhdGEgZXh0ZW5kcyBPb3BzeURhdGEge1xyXG4gIGhhc0ltcD86IHsgW25hbWU6IHN0cmluZ106IGJvb2xlYW4gfTtcclxufVxyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZUdyZWF0R3ViYWxMaWJyYXJ5SGFyZCxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnR3ViYWxIbSBUZXJyb3IgRXllJzogJzkzMCcsIC8vIENpcmNsZSBBb0UsIFNwaW5lIEJyZWFrZXIgdHJhc2hcclxuICAgICdHdWJhbEhtIEJhdHRlcic6ICcxOThBJywgLy8gQ2lyY2xlIEFvRSwgdHJhc2ggYmVmb3JlIGJvc3MgMVxyXG4gICAgJ0d1YmFsSG0gQ29uZGVtbmF0aW9uJzogJzM5MCcsIC8vIENvbmFsIEFvRSwgQmlibGlvdm9yZSB0cmFzaFxyXG4gICAgJ0d1YmFsSG0gRGlzY29udGludWUgMSc6ICcxOTQzJywgLy8gRmFsbGluZyBib29rIHNoYWRvdywgYm9zcyAxXHJcbiAgICAnR3ViYWxIbSBEaXNjb250aW51ZSAyJzogJzE5NDAnLCAvLyBSdXNoIEFvRSBmcm9tIGVuZHMsIGJvc3MgMVxyXG4gICAgJ0d1YmFsSG0gRGlzY29udGludWUgMyc6ICcxOTQyJywgLy8gUnVzaCBBb0UgYWNyb3NzLCBib3NzIDFcclxuICAgICdHdWJhbEhtIEZyaWdodGZ1bCBSb2FyJzogJzE5M0InLCAvLyBHZXQtT3V0IEFvRSwgYm9zcyAxXHJcbiAgICAnR3ViYWxIbSBJc3N1ZSAxJzogJzE5M0QnLCAvLyBJbml0aWFsIGVuZCBib29rIHdhcm5pbmcgQW9FLCBib3NzIDFcclxuICAgICdHdWJhbEhtIElzc3VlIDInOiAnMTkzRicsIC8vIEluaXRpYWwgZW5kIGJvb2sgd2FybmluZyBBb0UsIGJvc3MgMVxyXG4gICAgJ0d1YmFsSG0gSXNzdWUgMyc6ICcxOTQxJywgLy8gSW5pdGlhbCBzaWRlIGJvb2sgd2FybmluZyBBb0UsIGJvc3MgMVxyXG4gICAgJ0d1YmFsSG0gRGVzb2xhdGlvbic6ICcxOThDJywgLy8gTGluZSBBb0UsIEJpYmxpb2NsYXN0IHRyYXNoXHJcbiAgICAnR3ViYWxIbSBEb3VibGUgU21hc2gnOiAnMjZBJywgLy8gQ29uYWwgQW9FLCBCaWJsaW9jbGFzdCB0cmFzaFxyXG4gICAgJ0d1YmFsSG0gRGFya25lc3MnOiAnM0EwJywgLy8gQ29uYWwgQW9FLCBJbmtzdGFpbiB0cmFzaFxyXG4gICAgJ0d1YmFsSG0gRmlyZXdhdGVyJzogJzNCQScsIC8vIENpcmNsZSBBb0UsIEJpYmxpb2NsYXN0IHRyYXNoXHJcbiAgICAnR3ViYWxIbSBFbGJvdyBEcm9wJzogJ0NCQScsIC8vIENvbmFsIEFvRSwgQmlibGlvY2xhc3QgdHJhc2hcclxuICAgICdHdWJhbEhtIERhcmsnOiAnMTlERicsIC8vIExhcmdlIGNpcmNsZSBBb0UsIElua3N0YWluIHRyYXNoXHJcbiAgICAnR3ViYWxIbSBTZWFscyc6ICcxOTRBJywgLy8gU3VuL01vb25zZWFsIGZhaWx1cmUsIGJvc3MgMlxyXG4gICAgJ0d1YmFsSG0gV2F0ZXIgSUlJJzogJzFDNjcnLCAvLyBMYXJnZSBjaXJjbGUgQW9FLCBQb3JvZ28gUGVnaXN0IHRyYXNoXHJcbiAgICAnR3ViYWxIbSBSYWdpbmcgQXhlJzogJzE3MDMnLCAvLyBTbWFsbCBjb25hbCBBb0UsIE1lY2hhbm9zZXJ2aXRvciB0cmFzaFxyXG4gICAgJ0d1YmFsSG0gTWFnaWMgSGFtbWVyJzogJzE5OTAnLCAvLyBMYXJnZSBjaXJjbGUgQW9FLCBBcGFuZGEgbWluaS1ib3NzXHJcbiAgICAnR3ViYWxIbSBQcm9wZXJ0aWVzIE9mIEdyYXZpdHknOiAnMTk1MCcsIC8vIENpcmNsZSBBb0UgZnJvbSBncmF2aXR5IHB1ZGRsZXMsIGJvc3MgM1xyXG4gICAgJ0d1YmFsSG0gUHJvcGVydGllcyBPZiBMZXZpdGF0aW9uJzogJzE5NEYnLCAvLyBDaXJjbGUgQW9FIGZyb20gbGV2aXRhdGlvbiBwdWRkbGVzLCBib3NzIDNcclxuICAgICdHdWJhbEhtIENvbWV0JzogJzE5NjknLCAvLyBTbWFsbCBjaXJjbGUgQW9FLCBpbnRlcm1pc3Npb24sIGJvc3MgM1xyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ0d1YmFsSG0gRWNsaXB0aWMgTWV0ZW9yJzogJzE5NUMnLCAvLyBMb1MgbWVjaGFuaWMsIGJvc3MgM1xyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnR3ViYWxIbSBTZWFyaW5nIFdpbmQnOiAnMTk0NCcsIC8vIFRhbmsgY2xlYXZlLCBib3NzIDJcclxuICAgICdHdWJhbEhtIFRodW5kZXInOiAnMTlbQUJdJywgLy8gU3ByZWFkIG1hcmtlciwgYm9zcyAzXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICAvLyBGaXJlIGdhdGUgaW4gaGFsbHdheSB0byBib3NzIDIsIG1hZ25ldCBmYWlsdXJlIG9uIGJvc3MgMlxyXG4gICAgICBpZDogJ0d1YmFsSG0gQnVybnMnLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnMTBCJyB9KSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmVmZmVjdCB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgLy8gSGVscGVyIGZvciBUaHVuZGVyIDMgZmFpbHVyZXNcclxuICAgICAgaWQ6ICdHdWJhbEhtIEltcCBHYWluJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzQ2RScgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLmhhc0ltcCA/Pz0ge307XHJcbiAgICAgICAgZGF0YS5oYXNJbXBbbWF0Y2hlcy50YXJnZXRdID0gdHJ1ZTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnR3ViYWxIbSBJbXAgTG9zZScsXHJcbiAgICAgIHR5cGU6ICdMb3Nlc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmxvc2VzRWZmZWN0KHsgZWZmZWN0SWQ6ICc0NkUnIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS5oYXNJbXAgPSBkYXRhLmhhc0ltcCB8fCB7fTtcclxuICAgICAgICBkYXRhLmhhc0ltcFttYXRjaGVzLnRhcmdldF0gPSBmYWxzZTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIC8vIFRhcmdldHMgd2l0aCBJbXAgd2hlbiBUaHVuZGVyIElJSSByZXNvbHZlcyByZWNlaXZlIGEgdnVsbmVyYWJpbGl0eSBzdGFjayBhbmQgYnJpZWYgc3R1blxyXG4gICAgICBpZDogJ0d1YmFsSG0gSW1wIFRodW5kZXInLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICcxOTVbQUJdJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiBkYXRhLmhhc0ltcD8uW21hdGNoZXMudGFyZ2V0XSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHR5cGU6ICd3YXJuJyxcclxuICAgICAgICAgIGJsYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ1Nob2NrZWQgSW1wJyxcclxuICAgICAgICAgICAgZGU6ICdTY2hvY2tpZXJ0ZXIgSW1wJyxcclxuICAgICAgICAgICAgZnI6ICdLYXBwYSBjaG9xdcOpKGUpJyxcclxuICAgICAgICAgICAgamE6ICfjgqvjg4Pjg5HjgpLop6PpmaTjgZfjgarjgYvjgaPjgZ8nLFxyXG4gICAgICAgICAgICBjbjogJ+ays+erpeeKtuaAgeWQg+S6huaatOmbtycsXHJcbiAgICAgICAgICAgIGtvOiAn66y87JqU7KCVIOyDge2DnCDtlbTsoJztlZjsp4Ag7JWK7J2MJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnR3ViYWxIbSBRdWFrZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzE5NTYnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIC8vIEFsd2F5cyBoaXRzIHRhcmdldCwgYnV0IGlmIGNvcnJlY3RseSByZXNvbHZlZCB3aWxsIGRlYWwgMCBkYW1hZ2VcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gZGF0YS5EYW1hZ2VGcm9tTWF0Y2hlcyhtYXRjaGVzKSA+IDAsXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0d1YmFsSG0gVG9ybmFkbycsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzE5NVs3OF0nLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIC8vIEFsd2F5cyBoaXRzIHRhcmdldCwgYnV0IGlmIGNvcnJlY3RseSByZXNvbHZlZCB3aWxsIGRlYWwgMCBkYW1hZ2VcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gZGF0YS5EYW1hZ2VGcm9tTWF0Y2hlcyhtYXRjaGVzKSA+IDAsXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5Tb2htQWxIYXJkLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdTb2htQWxIbSBEZWFkbHkgVmFwb3InOiAnMURDOScsIC8vIEVudmlyb25tZW50YWwgY2lyY2xlIEFvRXNcclxuICAgICdTb2htQWxIbSBEZWVwcm9vdCc6ICcxQ0RBJywgLy8gVGFyZ2V0ZWQgY2lyY2xlIEFvRSwgQmxvb21pbmcgQ2hpY2h1IHRyYXNoXHJcbiAgICAnU29obUFsSG0gT2Rpb3VzIEFpcic6ICcxQ0RCJywgLy8gQ29uYWwgQW9FLCBCbG9vbWluZyBDaGljaHUgdHJhc2hcclxuICAgICdTb2htQWxIbSBHbG9yaW91cyBCbGF6ZSc6ICcxQzMzJywgLy8gQ2lyY2xlIEFvRSwgU21hbGwgU3BvcmUgU2FjLCBib3NzIDFcclxuICAgICdTb2htQWxIbSBGb3VsIFdhdGVycyc6ICcxMThBJywgLy8gQ29uYWwgQW9FLCBNb3VudGFpbnRvcCBPcGtlbiB0cmFzaFxyXG4gICAgJ1NvaG1BbEhtIFBsYWluIFBvdW5kJzogJzExODcnLCAvLyBUYXJnZXRlZCBjaXJjbGUgQW9FLCBNb3VudGFpbnRvcCBIcm9wa2VuIHRyYXNoXHJcbiAgICAnU29obUFsSG0gUGFsc3lueXhpcyc6ICcxMTYxJywgLy8gQ29uYWwgQW9FLCBPdmVyZ3Jvd24gRGlmZmx1Z2lhIHRyYXNoXHJcbiAgICAnU29obUFsSG0gU3VyZmFjZSBCcmVhY2gnOiAnMUU4MCcsIC8vIENpcmNsZSBBb0UsIEdpYW50IE5ldGhlcndvcm0gdHJhc2hcclxuICAgICdTb2htQWxIbSBGcmVzaHdhdGVyIENhbm5vbic6ICcxMTlGJywgLy8gTGluZSBBb0UsIEdpYW50IE5ldGhlcndvcm0gdHJhc2hcclxuICAgICdTb2htQWxIbSBUYWlsIFNtYXNoJzogJzFDMzUnLCAvLyBVbnRlbGVncmFwaGVkIHJlYXIgY29uYWwgQW9FLCBHb3dyb3csIGJvc3MgMlxyXG4gICAgJ1NvaG1BbEhtIFRhaWwgU3dpbmcnOiAnMUMzNicsIC8vIFVudGVsZWdyYXBoZWQgY2lyY2xlIEFvRSwgR293cm93LCBib3NzIDJcclxuICAgICdTb2htQWxIbSBSaXBwZXIgQ2xhdyc6ICcxQzM3JywgLy8gVW50ZWxlZ3JhcGhlZCBmcm9udGFsIEFvRSwgR293cm93LCBib3NzIDJcclxuICAgICdTb2htQWxIbSBXaW5kIFNsYXNoJzogJzFDMzgnLCAvLyBDaXJjbGUgQW9FLCBHb3dyb3csIGJvc3MgMlxyXG4gICAgJ1NvaG1BbEhtIFdpbGQgQ2hhcmdlJzogJzFDMzknLCAvLyBEYXNoIGF0dGFjaywgR293cm93LCBib3NzIDJcclxuICAgICdTb2htQWxIbSBIb3QgQ2hhcmdlJzogJzFDM0EnLCAvLyBEYXNoIGF0dGFjaywgR293cm93LCBib3NzIDJcclxuICAgICdTb2htQWxIbSBGaXJlYmFsbCc6ICcxQzNCJywgLy8gVW50ZWxlZ3JhcGhlZCB0YXJnZXRlZCBjaXJjbGUgQW9FLCBHb3dyb3csIGJvc3MgMlxyXG4gICAgJ1NvaG1BbEhtIExhdmEgRmxvdyc6ICcxQzNDJywgLy8gVW50ZWxlZ3JhcGhlZCBjb25hbCBBb0UsIEdvd3JvdywgYm9zcyAyXHJcbiAgICAnU29obUFsSG0gV2lsZCBIb3JuJzogJzE1MDcnLCAvLyBDb25hbCBBb0UsIEFiYWxhdGhpYW4gQ2xheSBHb2xlbSB0cmFzaFxyXG4gICAgJ1NvaG1BbEhtIExhdmEgQnJlYXRoJzogJzFDNEQnLCAvLyBDb25hbCBBb0UsIExhdmEgQ3JhYiB0cmFzaFxyXG4gICAgJ1NvaG1BbEhtIFJpbmcgb2YgRmlyZSc6ICcxQzRDJywgLy8gVGFyZ2V0ZWQgY2lyY2xlIEFvRSwgVm9sY2FubyBBbmFsYSB0cmFzaFxyXG4gICAgJ1NvaG1BbEhtIE1vbHRlbiBTaWxrIDEnOiAnMUM0MycsIC8vIDI3MC1kZWdyZWUgZnJvbnRhbCBBb0UsIExhdmEgU2NvcnBpb24sIGJvc3MgM1xyXG4gICAgJ1NvaG1BbEhtIE1vbHRlbiBTaWxrIDInOiAnMUM0NCcsIC8vIDI3MC1kZWdyZWUgcmVhciBBb0UsIExhdmEgU2NvcnBpb24sIGJvc3MgM1xyXG4gICAgJ1NvaG1BbEhtIE1vbHRlbiBTaWxrIDMnOiAnMUM0MicsIC8vIFJpbmcgQW9FLCBMYXZhIFNjb3JwaW9uLCBib3NzIDNcclxuICAgICdTb2htQWxIbSBSZWFsbSBTaGFrZXInOiAnMUM0MScsIC8vIENpcmNsZSBBb0UsIExhdmEgU2NvcnBpb24sIGJvc3MgM1xyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgLy8gV2FybnMgaWYgcGxheWVycyBzdGVwIGludG8gdGhlIGxhdmEgcHVkZGxlcy4gVGhlcmUgaXMgdW5mb3J0dW5hdGVseSBubyBkaXJlY3QgZGFtYWdlIGV2ZW50LlxyXG4gICAgICBpZDogJ1NvaG1BbEhtIEJ1cm5zJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzExQycgfSksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5lZmZlY3QgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFRPRE86IHRha2luZyB3cm9uZyBhbmNpZW50IGxpYnJhIHdpdGggZGVidWZmXHJcbi8vIFRPRE86IGRvZXMgc2NyYXRjaCBjbGVhdmU/XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlTG9zdENpdHlPZkFtZGFwb3JIYXJkLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdMb3N0Q2l0eUhhcmQgTWFnaWNrZWQgQ3Jhd2xlciBTdGlja3kgVGhyZWFkJzogJzExNjQnLCAvLyBmcm9udGFsIGNvbmFsXHJcbiAgICAnTG9zdENpdHlIYXJkIE1hZ2lja2VkIENyYXdsZXIgUG9pc29uIEJyZWF0aCc6ICcxMTY1JywgLy8gZnJvbnRhbCBjb25hbFxyXG4gICAgJ0xvc3RDaXR5SGFyZCBSYW50aW5nIFJhbmtzIEdyZW1saW4gRmlyZSBJSSc6ICcxNkMwJywgLy8gdGFyZ2V0ZWQgY2lyY2xlXHJcblxyXG4gICAgJ0xvc3RDaXR5SGFyZCBBY2hhbW90aCBQc3ljaG8gU3F1YW1hJzogJzE1QzYnLCAvLyBsYXJnZSBmcm9udGFsIGNvbmFsXHJcbiAgICAnTG9zdENpdHlIYXJkIEFjaGFtb3RoIERpc3NpcGF0ZSc6ICcxNUM4JywgLy8gYmVpbmcgaGl0IGJ5IHRoZSBjaGFzaW5nIFRveGljIFNxdWFtYSBvcmJcclxuICAgICdMb3N0Q2l0eUhhcmQgQWNoYW1vdGggRW50aHJhbGxtZW50JzogJzE1QzMnLCAvLyBjb25hbCBmcm9tIE5ldXJvIFNxdWFtYSBjbG9uZXNcclxuXHJcbiAgICAnTG9zdENpdHlIYXJkIFJpZnQgRHJhZ29uIE1pYXNtYSBCcmVhdGgnOiAnMTI0OScsIC8vIGZyb250YWwgY29uYWxcclxuICAgICdMb3N0Q2l0eUhhcmQgQW1kYXBvcmkgQ29ycHNlIEhvbHknOiAnMTcwNicsIC8vIHRhcmdldGVkIGNpcmNsZVxyXG4gICAgJ0xvc3RDaXR5SGFyZCBWb2lkIE1vbmsgV2F0ZXIgSUlJJzogJzE2QzcnLCAvLyBpbnRlcnJ1cHRpYmxlIHRhcmdldGVkIGNpcmNsZVxyXG4gICAgJ0xvc3RDaXR5SGFyZCBWb2lkIE1vbmsgRmxvb2QnOiAnMTZDNicsIC8vIHVudGVsZWdyYXBoZWQgY2lyY2xlPyBhZnRlciBTdWNrZXIgZHJhdy1pblxyXG5cclxuICAgICdMb3N0Q2l0eUhhcmQgV2luZ2VkIExpb24gQW5jaWVudCBBZXJvJzogJzE1Q0YnLCAvLyBsYXJnZSB0YXJnZXRlZCBjaXJjbGVcclxuICAgICdMb3N0Q2l0eUhhcmQgV2luZ2VkIExpb24gQW5jaWVudCBTdG9uZSc6ICcxNUQzJywgLy8gdGFyZ2V0ZWQgY2lyY2xlXHJcbiAgICAnTG9zdENpdHlIYXJkIFdpbmdlZCBMaW9uIEFuY2llbnQgQWVybyBHcm93bic6ICcxNzYwJywgLy8gcmFpZHdpZGUgaWYgYWVybyBub3QgcG9wcGVkXHJcbiAgICAnTG9zdENpdHlIYXJkIFdpbmdlZCBMaW9uIEFuY2llbnQgU3RvbmUgR3Jvd24nOiAnMTY3QicsIC8vIHVudGVsZWdyYXBoZWQgY2lyY2xlPyBpZiBzdG9uZSBub3QgcG9wcGVkXHJcbiAgICAnTG9zdENpdHlIYXJkIFdpbmdlZCBMaW9uIEFuY2llbnQgSG9seSBHcm93bic6ICcxNUNEJywgLy8gcmFpZHdpZGUgaWYgaG9seSBub3QgcG9wcGVkXHJcbiAgICAnTG9zdENpdHlIYXJkIFdpbmdlZCBMaW9uIEdhcmdveWxlIEhvbHknOiAnMTcwNicsIC8vIGxldHRpbmcgYWRkcyBsaXZlIHRvbyBsb25nXHJcblxyXG4gICAgJ0xvc3RDaXR5SGFyZCBDbGF5IEVmZmlneSBXaWxkIEhvcm4nOiAnMTUwNycsIC8vIGZyb250YWwgY29uYWxcclxuICAgICdMb3N0Q2l0eUhhcmQgTWFuYSBJZG9sIE5lY2sgU3BsaW50ZXInOiAnMTE2OScsIC8vIGNlbnRlcmVkIGNpcmNsZVxyXG5cclxuICAgICdMb3N0Q2l0eUhhcmQgS3VyaWJ1IEdsb3J5JzogJzE1RTQnLCAvLyBmcm9udGFsIGNvbmFsXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdFdhcm46IHtcclxuICAgICdMb3N0Q2l0eUhhcmQgQWNoYW1vdGggUG9sbGVuJzogJzEzJywgLy8gc3RhbmRpbmcgaW4gdGhlIFRveGljIFNxdWFtYSBwdWRkbGVcclxuICAgICdMb3N0Q2l0eUhhcmQgUmlmdCBEcmFnb24gVGVycm9yJzogJzQyJywgLy8gRXZpbCBFeWUgY29uYWxcclxuICAgICdMb3N0Q2l0eUhhcmQgV2luZ2VkIExpb24gTWFnaWMgRGVmZW5zZSBEb3duJzogJzI2JywgLy8gbm90IGZpbmlzaGluZyB0aGUgaG9seSBvcmIgaW4gdGltZVxyXG4gICAgJ0xvc3RDaXR5SGFyZCBNYW5hIFBvdCBNeXN0ZXJpb3VzIExpZ2h0IEJsaW5kJzogJzBGJywgLy8gbm90IGxvb2tpbmcgYXdheVxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnTG9zdENpdHlIYXJkIEt1cmlidSBSZXZlcnNlIEN1cmUgSUlJJzogJzE1REInLCAvLyBzcHJlYWRcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIERhdGEgZXh0ZW5kcyBPb3BzeURhdGEge1xyXG4gIGFzc2F1bHQ/OiBzdHJpbmdbXTtcclxufVxyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkFsZXhhbmRlclRoZUFybU9mVGhlRmF0aGVyLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdBM04gUHJvdGVhbiBXYXZlJzogJzEyRjAnLFxyXG4gICAgJ0EzTiBTbHVpY2UgUHVkZGxlcyc6ICcxMkY0JywgLy8gUHVkZGxlIEFvRXNcclxuICAgICdBM04gVWx0cmFtYWduZXRpc20nOiAnMTMwOCcsIC8vIEF0dHJhY3RpbmcgbWFnbmV0cyB0b28gY2xvc2VcclxuICAgICdBM04gQ3VycmVudCBMZWFrZWFnZSAxJzogJzEzMEMnLCAvLyBHZWFyIEx1YnJpY2FudCBlc2NhcGluZ1xyXG4gICAgJ0EzTiBDdXJyZW50IExlYWtlYWdlIDInOiAnMTMwRCcsIC8vIFBpc3RvbiBMdWJyaWNhbnQgZXNjYXBpbmdcclxuICB9LFxyXG4gIGdhaW5zRWZmZWN0V2Fybjoge1xyXG4gICAgJ0EzTiBFbGVjdHJvY3V0aW9uJzogJzEyMCcsIC8vIEFyZW5hIGVkZ2UgZGVidWZmLiAoQWxzbyBwYXJhbHlzaXMgYW5kIHN0dW4uKVxyXG4gICAgJ0EzTiBEcm9wc3knOiAnMTIxJywgLy8gV2F0ZXIgcHVkZGxlIGRlYnVmZi4gKFRvcm5hZG8gYW5kIGZpbmFsIHBoYXNlLilcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0EzTiBGbHVpZCBTd2luZyAxJzogJzEyRUUnLCAvLyBUYW5rIGNsZWF2ZSwgbm8gZGVidWZmXHJcbiAgICAnQTNOIEZsdWlkIFN3aW5nIDInOiAnMTJGNScsIC8vIFRhbmsgY2xlYXZlLCBibHVudCByZXNpc3RhbmNlIGRvd24gZGVidWZmXHJcbiAgICAnQTNOIEZsdWlkIFN0cmlrZSAxJzogJzEyRkQnLCAvLyBUYW5rIGNsZWF2ZSwgbm8gZGVidWZmXHJcbiAgICAnQTNOIEZsdWlkIFN0cmlrZSAyJzogJzEyRkUnLCAvLyBUYW5rIGNsZWF2ZSwgYmx1bnQgcmVzaXN0YW5jZSBkb3duIGRlYnVmZlxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBEYXRhIGV4dGVuZHMgT29wc3lEYXRhIHtcclxuICBhc3NhdWx0Pzogc3RyaW5nW107XHJcbn1cclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5BbGV4YW5kZXJUaGVTb3VsT2ZUaGVDcmVhdG9yLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdBMTJOIFNhY3JhbWVudCc6ICcxQUU2JywgLy8gQ3Jvc3MgTGFzZXJzXHJcbiAgICAnQTEyTiBHcmF2aXRhdGlvbmFsIEFub21hbHknOiAnMUFFQicsIC8vIEdyYXZpdHkgUHVkZGxlc1xyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnQTEyTiBEaXZpbmUgU3BlYXInOiAnMUFFMycsIC8vIEluc3RhbnQgY29uYWwgdGFuayBjbGVhdmVcclxuICAgICdBMTJOIEJsYXppbmcgU2NvdXJnZSc6ICcxQUU5JywgLy8gT3JhbmdlIGhlYWQgbWFya2VyIHNwbGFzaCBkYW1hZ2VcclxuICAgICdBMTJOIFBsYWludCBPZiBTZXZlcml0eSc6ICcxQUYxJywgLy8gQWdncmF2YXRlZCBBc3NhdWx0IHNwbGFzaCBkYW1hZ2VcclxuICAgICdBMTJOIENvbW11bmlvbic6ICcxQUZDJywgLy8gVGV0aGVyIFB1ZGRsZXNcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnQTEyTiBBc3NhdWx0IENvbGxlY3QnLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnNDYxJyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuYXNzYXVsdCA/Pz0gW107XHJcbiAgICAgICAgZGF0YS5hc3NhdWx0LnB1c2gobWF0Y2hlcy50YXJnZXQpO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgLy8gSXQgaXMgYSBmYWlsdXJlIGZvciBhIFNldmVyaXR5IG1hcmtlciB0byBzdGFjayB3aXRoIHRoZSBTb2xpZGFyaXR5IGdyb3VwLlxyXG4gICAgICBpZDogJ0ExMk4gQXNzYXVsdCBGYWlsdXJlJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnMUFGMicsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gZGF0YS5hc3NhdWx0Py5pbmNsdWRlcyhtYXRjaGVzLnRhcmdldCksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICB0eXBlOiAnZmFpbCcsXHJcbiAgICAgICAgICBibGFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdEaWRuXFwndCBTcHJlYWQhJyxcclxuICAgICAgICAgICAgZGU6ICdOaWNodCB2ZXJ0ZWlsdCEnLFxyXG4gICAgICAgICAgICBmcjogJ05lIHNcXCdlc3QgcGFzIGRpc3BlcnPDqShlKSAhJyxcclxuICAgICAgICAgICAgamE6ICfmlaPplovjgZfjgarjgYvjgaPjgZ8hJyxcclxuICAgICAgICAgICAgY246ICfmsqHmnInmlaPlvIAhJyxcclxuICAgICAgICAgICAga286ICfsgrDqsJztlZjsp4Ag7JWK7JWY7J2MIScsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0ExMk4gQXNzYXVsdCBDbGVhbnVwJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzQ2MScgfSksXHJcbiAgICAgIGRlbGF5U2Vjb25kczogMjAsXHJcbiAgICAgIHN1cHByZXNzU2Vjb25kczogNSxcclxuICAgICAgcnVuOiAoZGF0YSkgPT4ge1xyXG4gICAgICAgIGRlbGV0ZSBkYXRhLmFzc2F1bHQ7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuQWxleGFuZGVyVGhlQnJlYXRoT2ZUaGVDcmVhdG9yLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdBMTBOIExhbWVicml4IElsbHVtaW5hdGkgSGFuZCBDYW5ub24nOiAnMUFEMicsIC8vIFJlY3RhbmdsZSBBb0VcclxuICAgICdBMTBOIEJsaXp6YXJkIEFycm93IEZyb3N0Yml0ZSc6ICcxQUM3JywgLy8gSWNlIHRyYXAgQW9FIG9uIGVkZ2VzXHJcbiAgICAnQTEwTiBXZWlnaHQgT2YgVGhlIFdvcmxkIEltcGFjdCc6ICcxQUM2JywgLy8gTWFjZSB0cmFwcyBpbiB0aGUgY2VudGVyXHJcbiAgICAnQTEwTiBHb2JwcmVzcyBTdGVhbSBSb2xsZXInOiAnMUFCNCcsIC8vIEludGVybWlzc2lvbiBEZW1vbiBXYWxsIEFvRVxyXG4gICAgJ0ExME4gTGFtZWJyaXggR29ic3dpcGUgQ29ua2xvcHMnOiAnMUFDQicsIC8vIFNpbmdsZSBDaGFyZ2UgZHluYW1vL2dyZWVuXHJcbiAgICAnQTEwTiBMYW1lYnJpeCBHb2JzcGluIFdob29zaGRyb3AnOiAnMUFDQycsIC8vIFNpbmdsZSBDaGFyZ2UgY2hhcmlvdC9yZWRcclxuICAgICdBMTBOIEJ1enpzYXcgTGFjZXJhdGlvbic6ICcxQUM4JyxcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdBMTBOIEdvYmxpbiBPZiBGb3J0dW5lIEdvYmJpZWJvb20nOiAnMUFEMycsIC8vIEFkZCBlbnJhZ2VcclxuICB9LFxyXG4gIGdhaW5zRWZmZWN0V2Fybjoge1xyXG4gICAgJ0ExME4gRWxlY3Ryb2N1dGlvbic6ICcxMjAnLCAvLyBBcmVuYSBkYW5nZXIgd2FsbHNcclxuICAgICdBMTBOIFN0YWIgV291bmQnOiAnNDVEJywgLy8gQWN0aXZhdGlvbiBvZiB0aGUgc3Bpa2UgdHJhcC4gKE5vIGluZm8gb24gd2hvIGRpZCBpdC4pXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdBMTBOIExhbWVicml4IEdvYnNsYXNoIFNsaWNldG9wcyc6ICcxQUQxJywgLy8gU3RyZXRjaHkgdGV0aGVyIEFvRVxyXG4gICAgJ0ExME4gTGFtZWJyaXggQ3JpdGljYWwgV3JhdGgnOiAnMUFDRCcsIC8vIEZpcmUgc3ByZWFkIGNpcmNsZXNcclxuICB9LFxyXG4gIHNvbG9XYXJuOiB7XHJcbiAgICAnQTEwTiBMYW1lYnJpeCBCb21iIFRvc3MnOiAnMUFDRScsIC8vIFN0YW5kYXJkIHN0YWNrIG1hcmtlclxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxPb3BzeURhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkFsZXhhbmRlclRoZUN1ZmZPZlRoZVNvbixcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnTWluZWZpZWxkJzogJzE3MEQnLCAvLyBDaXJjbGUgQW9FLCBtaW5lcy5cclxuICAgICdNaW5lJzogJzE3MEUnLCAvLyBNaW5lIGV4cGxvc2lvbi5cclxuICAgICdTdXBlcmNoYXJnZSc6ICcxNzEzJywgLy8gTWlyYWdlIGNoYXJnZS5cclxuICAgICdIZWlnaHQgRXJyb3InOiAnMTcxRCcsIC8vIEluY29ycmVjdCBwYW5lbCBmb3IgSGVpZ2h0LlxyXG4gICAgJ0VhcnRoIE1pc3NpbGUnOiAnMTcyNicsIC8vIENpcmNsZSBBb0UsIGZpcmUgcHVkZGxlcy5cclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdVbHRyYSBGbGFzaCc6ICcxNzIyJywgLy8gUm9vbS13aWRlIGRlYXRoIEFvRSwgaWYgbm90IExvUydkLlxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnSWNlIE1pc3NpbGUnOiAnMTcyNycsIC8vIEljZSBoZWFkbWFya2VyIEFvRSBjaXJjbGVzLlxyXG4gIH0sXHJcbiAgc2hhcmVGYWlsOiB7XHJcbiAgICAnU2luZ2xlIEJ1c3Rlcic6ICcxNzE3JywgLy8gU2luZ2xlIGxhc2VyIEF0dGFjaG1lbnQuIE5vbi10YW5rcyBhcmUgKnByb2JhYmx5KiBkZWFkLlxyXG4gIH0sXHJcbiAgc29sb1dhcm46IHtcclxuICAgICdEb3VibGUgQnVzdGVyJzogJzE3MTgnLCAvLyBUd2luIGxhc2VyIEF0dGFjaG1lbnQuXHJcbiAgICAnRW51bWVyYXRpb24nOiAnMTcxRScsIC8vIEVudW1lcmF0aW9uIGNpcmNsZS5cclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSBleHRlbmRzIE9vcHN5RGF0YSB7XHJcbiAgZm9yY2U/OiB7IFtuYW1lOiBzdHJpbmddOiBzdHJpbmcgfTtcclxufVxyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkNvbnRhaW5tZW50QmF5UzFUN0V4dHJlbWUsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1NlcGhpcm90RVggWWVzb2QnOiAnMTU3RScsIC8vIFNuYXBzaG90IGZsb29yIHNwaWtlc1xyXG4gICAgJ1NlcGhpcm90RVggQWluJzogJzE1NjknLCAvLyBIYWxmLWFyZW5hIGJhaXRlZCBmcm9udGFsXHJcbiAgICAnU2VwaGlyb3RFWCBFaW4gU29mJzogJzE1NkYnLCAvLyBFeHBhbmRpbmcgZ3JlZW4gcHVkZGxlc1xyXG4gICAgJ1NlcGhpcm90RVggRmllbmRpc2ggV2FpbCc6ICcxNTc3JywgLy8gUmFpZHdpZGUgaWYgdG93ZXIgaXMgbWlzc2VkXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnU2VwaGlyb3RFWCBQaWxsYXIgT2YgTWVyY3knOiAnMTU4MScsIC8vIFN0YW5kaW5nIGluIHRoZSBibHVlIHB1ZGRsZXNcclxuICAgICdTZXBoaXJvdEVYIFN0b3JtIE9mIFdvcmRzIFJldmVsYXRpb24nOiAnMTU4MycsIC8vIE1pc3NpbmcgdGhlIGVucmFnZSBvbiBTdG9ybSBvZiBXb3Jkc1xyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnU2VwaGlyb3RFWCBUcmlwbGUgVHJpYWwnOiAnMTU2NicsIC8vIEluc3RhbnQgdGFuayBjbGVhdmVcclxuICAgICdTZXBoaXJvdEVYIFJhdHpvbiBHcmVlbic6ICcxNTZCJywgLy8gU21hbGwgZ3JlZW4gc3ByZWFkIGNpcmNsZVxyXG4gICAgJ1NlcGhpcm90RVggUmF0em9uIFB1cnBsZSc6ICcxNTZDJywgLy8gTGFyZ2UgcHVycGxlIHNwcmVhZCBjaXJjbGVcclxuICAgICdTZXBoaXJvdEVYIEVhcnRoIFNoYWtlcic6ICcxNTdEJyxcclxuICAgICdTZXBoaXJvdEVYIFNwcmVhZCBEYVxcJ2F0JzogJzE1NzMnLFxyXG4gIH0sXHJcbiAgc29sb1dhcm46IHtcclxuICAgICdTZXBoaXJvdEVYIEZpZW5kaXNoIFJhZ2UnOiAnMTU2RCcsIC8vIFN0YWNrIG1hcmtlcnMsIHBoYXNlIDFcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIC8vIFBpbGxhciBvZiBNZXJjeSwgIE1hbGt1dGgsIGFuZCBQaWxsYXIgb2YgU2V2ZXJpdHlcclxuICAgICAgaWQ6ICdTZXBoaXJvdEVYIEtub2NrYmFja3MnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogWycxNTgwJywgJzE1ODInLCAnMTU4NiddLCBzb3VyY2U6ICdTZXBoaXJvdCcgfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdQdXNoZWQgb2ZmIScsXHJcbiAgICAgICAgICAgIGRlOiAnUnVudGVyIGdlc2NodWJzdCEnLFxyXG4gICAgICAgICAgICBmcjogJ1JlcG91c3PDqShlKSAhJyxcclxuICAgICAgICAgICAgamE6ICfokL3jgaHjgZ8nLFxyXG4gICAgICAgICAgICBjbjogJ+WHu+mAgOWdoOiQvScsXHJcbiAgICAgICAgICAgIGtvOiAn64SJ67Cx65CoJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIC8vIDNFRCBpcyBGb3JjZSBBZ2FpbnN0IE1pZ2h0IG9yYW5nZSwgM0VFIGlzIEZvcmNlIEFnYWluc3QgTWFnaWMsIGdyZWVuLlxyXG4gICAgICBpZDogJ1NlcGhpcm90RVggRm9yY2UgQWdhaW5zdCBHYWluJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogWyczRUQnLCAnM0VFJ10gfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLmZvcmNlID8/PSB7fTtcclxuICAgICAgICBkYXRhLmZvcmNlW21hdGNoZXMudGFyZ2V0XSA9IG1hdGNoZXMuZWZmZWN0SWQ7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ1NlcGhpcm90RVggRm9yY2UgQWdhaW5zdCBMb3NlJyxcclxuICAgICAgdHlwZTogJ0xvc2VzRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMubG9zZXNFZmZlY3QoeyBlZmZlY3RJZDogWyczRUQnLCAnM0VFJ10gfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLmZvcmNlID8/PSB7fTtcclxuICAgICAgICBkZWxldGUgZGF0YS5mb3JjZVttYXRjaGVzLnRhcmdldF07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ1NlcGhpcm90RVggU3Bpcml0JyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICcxNTdCJywgc291cmNlOiAnU2VwaGlyb3QnIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiBkYXRhPy5mb3JjZT8uW21hdGNoZXMudGFyZ2V0XSA9PT0gJzNFRCcsXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICB0eXBlOiAnd2FybicsXHJcbiAgICAgICAgICBibGFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiBtYXRjaGVzLmFiaWxpdHksXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnU2VwaGlyb3RFWCBMaWZlIEZvcmNlJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICcxNTdBJywgc291cmNlOiAnU2VwaGlyb3QnIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiBkYXRhPy5mb3JjZT8uW21hdGNoZXMudGFyZ2V0XSA9PT0gJzNFRScsXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICB0eXBlOiAnd2FybicsXHJcbiAgICAgICAgICBibGFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiBtYXRjaGVzLmFiaWxpdHksXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnU2VwaGlyb3RFWCBGaWVuZGlzaCBXYWlsIEdyZWVuJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICcxNTc2Jywgc291cmNlOiAnU2VwaGlyb3QnIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiBkYXRhPy5mb3JjZT8uW21hdGNoZXMudGFyZ2V0XSA9PT0gJzNFRScsXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICB0eXBlOiAnd2FybicsXHJcbiAgICAgICAgICBibGFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiBtYXRjaGVzLmFiaWxpdHksXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIC8vIE9ubHkgdGFua3Mgb3IgQmx1ZSBNYWdlcyBzaG91bGQgdGFrZSB0b3dlcnMgd2l0aG91dCBhIEZvcmNlIGRlYnVmZi5cclxuICAgICAgaWQ6ICdTZXBoaXJvdEVYIEZpZW5kaXNoIFdhaWwgTm9uLVRhbmsnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzE1NzYnLCBzb3VyY2U6ICdTZXBoaXJvdCcgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBpZiAoZGF0YS5wYXJ0eS5pc1RhbmsobWF0Y2hlcy50YXJnZXQpIHx8IGRhdGEuam9iID09PSAnQkxVJylcclxuICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICByZXR1cm4gZGF0YT8uZm9yY2U/LlttYXRjaGVzLnRhcmdldF0gPT09IHVuZGVmaW5lZDtcclxuICAgICAgfSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHR5cGU6ICdmYWlsJyxcclxuICAgICAgICAgIGJsYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgLy8gVGFraW5nIGEgdGV0aGVyIHdoaWxlIHVuZGVyIEZvcmNlIEFnYWluc3QgTWlnaHQgKG9yYW5nZSkga2lsbHMgdGhlIHRhcmdldFxyXG4gICAgICBpZDogJ1NlcGhpcm90RVggVGV0aGVyIERhXFwnYXQnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzE1NzQnLCBzb3VyY2U6ICdTZXBoaXJvdCcgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGE/LmZvcmNlPy5bbWF0Y2hlcy50YXJnZXRdID09PSAnM0VEJyxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHR5cGU6ICdmYWlsJyxcclxuICAgICAgICAgIGJsYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbi8vIE5vdGU6IE11c3RhZGlvIExhc3QgVGVzdGFtZW50ICgzNzM3KSBkb2VzIGRhbWFnZSB3aGV0aGVyIHlvdSBzdWNjZWVkIG9yIGZhaWwsXHJcbi8vIGJ1dCBpcyBsZXRoYWwgaWYgeW91IGZhaWwsIHNvIGl0IHNob3VsZCBiZSBvYnZpb3VzIHdoZW4gZmFpbGVkLlxyXG4vLyBOb3RlOiBTaW1pbGFybHkgc2tpcHBpbmcgQWdyaWFzIER1c2tibGFkZSAoMzc2MSksIHdoaWNoIGFsc28gfndpcGVzIHdoZW4gdG93ZXJzIGFyZSBtaXNzZWQuXHJcbi8vIE5vdGU6IHNraXBwaW5nIEFncmlhcyBGcm9zdGJpdGUgKDExRCksIHdoaWNoIG1hbnkgcGVvcGxlIGdldCBhIHRpY2sgb2Ygd2hlbiBhZGQgaXMgbmVhcmx5IGRlYWQuXHJcbi8vIE5vdGU6IFVsdGltYSdzIEFzcGVyc29yeSBQZXJ2YWlsaW5nIEN1cnJlbnQgKDM4Q0MpIGhpdHMgYSBsb3QgZm9yIGxvdyBkYW1hZ2UsIHNvIHNraXBwaW5nLlxyXG5cclxuLy8gVE9ETzogRGFyayBDcnVzYWRlciBEYXJrIFJpdGUgKDM3N0YpIGdvaW5nIG9mZiBpZiB0b3dlcnMgYXJlbid0IHN0ZXBwZWQgaW4uXHJcbi8vIFRPRE86IEJsZWVkaW5nIGZyb20gQWdyaWFzIFNoYWRvd2JsYWRlIG9yYnMgbWVyZ2luZyBhbmQgZXhwbG9kaW5nP1xyXG4vLyBUT0RPOiBVbHRpbWEgRGFyayBDYW5ub25hZGUgZG9yaXRvIHN0YWNrIGRvZXMgZGFtYWdlIG9uIHN1Y2Nlc3MgYW5kIGZhaWx1cmUuXHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZU9yYm9ubmVNb25hc3RlcnksXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ09yYm9ubmUgSGFycHkgQmxhc3BoZW1vdXMgSG93bCc6ICczNzc5JywgLy8gbGFyZ2UgdGFyZ2V0ZWQgY2lyY2xlXHJcbiAgICAnT3Jib25uZSBNb25hc3RpYyBHaG9zdCBEYXJrIEVydXB0aW9uJzogJzNBMTUnLCAvLyB0YXJnZXRlZCBjaXJjbGVcclxuICAgICdPcmJvbm5lIE1vbmFzdGljIEdob3N0IExpbmdlcmluZyBSZXNlbmVudG1lbnQnOiAnMzc3QycsIC8vIGxhcmdlIHRhcmdldGVkIGNpcmNsZVxyXG4gICAgJ09yYm9ubmUgTXVzdGFkaW8gUmlnaHQgSGFuZGdvbm5lJzogJzM3M0UnLCAvLyBsZWZ0L3JpZ2h0IGhhaXJjdXRcclxuICAgICdPcmJvbm5lIE11c3RhZGlvIExlZnQgSGFuZGdvbm5lJzogJzM3M0YnLCAvLyBsZWZ0L3JpZ2h0IGhhaXJjdXRcclxuICAgICdPcmJvbm5lIE11c3RhZGlvIElyb24gR2lhbnQgQ29tcHJlc3MnOiAnMzc0MCcsIC8vIGxpbmUgYW9lIGZyb20gdGV0aGVyZWQgSXJvbiBHaWFudCBvbiBvdXRzaWRlXHJcbiAgICAnT3Jib25uZSBNdXN0YWRpbyBCYWxsaXN0aWMgSW1wYWN0JzogJzM3NDMnLCAvLyBzcHJlYWQgbWFya2VyXHJcbiAgICAnT3Jib25uZSBNdXN0YWRpbyBTZWFyY2hsaWdodCc6ICczNzQ0JywgLy8gY2hhc2luZyByZWQgY2lyY2xlIHRoYXQgbG9ja3MgaW5cclxuICAgICdPcmJvbm5lIE11c3RhZGlvIExlZyBTaG90JzogJzM3NDInLCAvLyBtaW5lc1xyXG4gICAgJ09yYm9ubmUgTXVzdGFkaW8gRWFybHkgVHVycmV0IFNhdGVsbGl0ZSBCZWFtJzogJzM3NDEnLCAvLyBxdWFkcmFudCBleHBsb3Npb24gZnJvbSB0ZXRoZXJlZCBFYXJseSBUdXJyZXRcclxuICAgICdPcmJvbm5lIEFncmlhcyBOb3J0aHN3YWluXFwncyBTdHJpa2UnOiAnMzg1MycsIC8vIGxpbmUgYW9lcyBmcm9tIG91dHNpZGUgYWRkcyBkdXJpbmcgc3dvcmQrY3J5c3RhbHMgcGhhc2VcclxuICAgICdPcmJvbm5lIEFncmlhcyBIYWxsb3dlZCBCb2x0IENpcmNsZSc6ICczODVCJywgLy8gdmVyeSBsYXJnZSBjaXJjbGVcclxuICAgICdPcmJvbm5lIEFncmlhcyBIYWxsb3dlZCBCb2x0IERvbnV0JzogJzM4NUMnLCAvLyB2ZXJ5IGxhcmdlIGRvbnV0XHJcbiAgICAnT3Jib25uZSBEYXJrIENydXNhZGVyIEluZmVybmFsIFdhdmUnOiAnMzc4MScsIC8vIGxpbmUgYW9lXHJcbiAgICAnT3Jib25uZSBDaWQgSGFsbG93ZWQgQm9sdCc6ICczNzRCJywgLy8gbGlnaHRuaW5nIHBsYXRmb3JtIGhpdCBmcm9tIHN3b3JkIGFmdGVyIFQuRy4gSG9seSBTd29yZCAoMzc0OSlcclxuICAgICdPcmJvbm5lIENpZCBOb3J0aHN3YWluXFwncyBTdHJpa2UnOiAnM0FEMycsIC8vIFwiZ2V0IG91dFwiIGFmdGVyIFQuRy4gSG9seSBTd29yZCAoMzc0RilcclxuICAgICdPcmJvbm5lIENpZCBKdWRnbWVudCBCbGFkZSc6ICczQUQ0JywgLy8gXCJnZXQgaW5cIiBhZnRlciBULkcuIEhvbHkgU3dvcmQgKDM3NEEpXHJcbiAgICAnT3Jib25uZSBDaWQgQWdyaWFzIFNoYWRvd2JsYWRlIE9yYnMnOiAnMzc1RicsIC8vIGZvbGxvd3VwIGhpdHMgZnJvbSBncm93aW5nIHJlZC9ibGFjayBvcmJzXHJcbiAgICAnT3Jib25uZSBDaWQgQ3J1c2ggV2VhcG9uIDEnOiAnNDc1NicsIC8vIGNoYXNpbmcgY2lyY2xlIGluaXRpYWwgaGl0XHJcbiAgICAnT3Jib25uZSBDaWQgQ3J1c2ggV2VhcG9uIDInOiAnNDc1NycsIC8vIGNoYXNpbmcgY2lyY2xlXHJcbiAgICAnT3Jib25uZSBDaWQgRXBoZW1lcmFsIEtuaWdodCBIYWxsb3dlZCBCb2x0IERvbnV0JzogJzM3NjcnLCAvLyBpbml0aWFsIGRvbnV0IGZyb20gRXBoZW1lcmFsIEtuaWdodCBoZWFkbWFya2VyXHJcbiAgICAnT3Jib25uZSBDaWQgRXBoZW1lcmFsIEtuaWdodCBIYWxsb3dlZCBCb2x0IENpcmNsZSc6ICczNzY2JywgLy8gZm9sbG93dXAgY2lyY2xlIGZyb20gRXBoZW1lcmFsIEtuaWdodFxyXG4gICAgJ09yYm9ubmUgQ2lkIENydXNoIEFjY2Vzc29yeSc6ICczNzVCJywgLy8gcGxhdGZvcm0gYW9lIHdpdGggc2FmZSBzcG90IG9uIEljZXdvbGYgYWRkXHJcbiAgICAnT3Jib25uZSBVbHRpbWEgSG9seSBJVic6ICczODlBJywgLy8gdGFyZ2V0ZWQgY2lyY2xlXHJcbiAgICAnT3Jib25uZSBVbHRpbWEgQXVyYWxpZ2h0IExpbmUnOiAnMzg5NycsIC8vIDN4IGxpbmVzIGR1cmluZyBBdXJhbGlnaHQgKDM4RUEpIGNhc3QgdGhhdCB0dXJuIGludG8gaWNlXHJcbiAgICAnT3Jib25uZSBVbHRpbWEgQXVyYWxpZ2h0IENpcmNsZSc6ICczODk4JywgLy8gY2VudGVyZWQgY2lyY2xlIGR1cmluZyBBdXJhbGlnaHQgKDM4RUEpIGNhc3RcclxuICAgICdPcmJvbm5lIFVsdGltYSBBdXJhY2l0ZSBTaGFyZCBQbHVtbWV0JzogJzM4QUQnLCAvLyAzeCBzaGFyZHMgZmFsbGluZyBiZWZvcmUgR3JhbmQgQ3Jvc3MgKDM4QUMpXHJcbiAgICAnT3Jib25uZSBVbHRpbWEgQXVyYWNpdGUgU2hhcmQgR3JhbmQgQ3Jvc3MnOiAnMzhBRScsIC8vIGNyb3NzIGV4cGxvc2lvbiBmcm9tIEF1cmFjaXRlIFNoYXJkc1xyXG4gICAgJ09yYm9ubmUgVWx0aW1hIERlbWktQmVsaWFzIFRpbWUgRXJ1cHRpb24gMSc6ICczOEQwJywgLy8gZmFzdC9zbG93IGNsb2Nrc1xyXG4gICAgJ09yYm9ubmUgVWx0aW1hIERlbWktQmVsaWFzIFRpbWUgRXJ1cHRpb24gMic6ICczOEQxJywgLy8gZmFzdC9zbG93IGNsb2Nrc1xyXG4gICAgJ09yYm9ubmUgVWx0aW1hIERlbWktSGFzaG1hbCBUb3dlcmZhbGwnOiAnMzhENycsIC8vIGNvbnRyb2wgdG93ZXIgZmFsbGluZyBvdmVyXHJcbiAgICAnT3Jib25uYSBVbHRpbWEgRGVtaS1IYXNobWFsIEV4dHJlbWUgRWRnZSAxJzogJzM4REEnLCAvLyBsZWZ0L3JpZ2h0IGNsZWF2ZSBkYXNoXHJcbiAgICAnT3Jib25uYSBVbHRpbWEgRGVtaS1IYXNobWFsIEV4dHJlbWUgRWRnZSAyJzogJzM4REInLCAvLyBsZWZ0L3JpZ2h0IGNsZWF2ZSBkYXNoXHJcbiAgICAnT3Jib25uZSBVbHRpbWEgRGVtaS1CZWxpYXMgRXJ1cHRpb24nOiAnMzdDOCcsIC8vIGhlYWRtYXJrZXIgd2l0aCBjaGFzaW5nIHRlbGVncmFwaGVkIGNpcmNsZSBhb2VzXHJcbiAgICAnT3Jib25uZSBVbHRpbWEgRG9taW5pb24gUmF5IE9mIExpZ2h0JzogJzM4QjcnLCAvLyBsaW5nZXJpbmcgbGluZSBhb2Ugd2l0aCBFYXN0d2FyZC9XZXN0d2FyZCBNYXJjaFxyXG4gICAgJ09yYm9ubmUgVWx0aW1hIEVtYnJhY2UgSW5pdGlhbCc6ICczOEI5JywgLy8gaGlkZGVuIGJsdWUgdHJhcHMgYmVpbmcgcGxhY2VkXHJcbiAgICAnT3Jib25uZSBVbHRpbWEgRW1icmFjZSBUcmlnZ2VyZWQnOiAnMzhCQScsIC8vIGhpZGRlbiBibHVlIHRyYXBzIGJlaW5nIHRyaWdnZXJlZFxyXG4gICAgJ09yYm9ubmUgVWx0aW1hIEV4cGxvc2lvbic6ICczOEU5JywgLy8gZmFpbGluZyB0byBzdG9wIGZvciBBY2NlbGVyYXRpb24gQm9tYlxyXG4gICAgJ09yYm9ubmUgVWx0aW1hIERvbWluaW9uIEJvbWJhcmRtZW50JzogJzM4QkUnLCAvLyBjaXJjbGUgZHVyaW5nIG1pZHBoYXNlIGljZSBtYXplXHJcbiAgICAnT3Jib25uZSBVbHRpbWEgSG9seSc6ICczOEFCJywgLy8gY2lyY2xlIGR1cmluZyBtaWRwaGFzZSBpY2UgbWF6ZVxyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ09yYm9ubmUgQ2lkIEljZXdvbGYgQnVyc3QnOiAnMzc1QycsIC8vIG5vdCBraWxsaW5nIEljZXdvbGYgYWRkIGluIHRpbWVcclxuICB9LFxyXG4gIGdhaW5zRWZmZWN0RmFpbDoge1xyXG4gICAgJ09yYm9ubmUgSGFycHkgRGV2aXRhbGl6ZSBEb29tJzogJzM4RScsIC8vIEhhcnB5IGxvb2thd2F5IG1lY2hhbmljXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdPcmJvbm5lIEFncmlhcyBDbGVhbnNpbmcgRmxhbWUnOiAnMzg2NScsIC8vIHNwcmVhZCBtYXJrZXJcclxuICAgICdPcmJvbm5lIEFncmlhcyBTaGFkb3dibGFkZSBJbml0aWFsJzogJzM3NUUnLCAvLyBpbml0aWFsIGhpdCBmcm9tIGdpYW50IHJlZC9ibGFjayBjaXJjbGUgaGVhZG1hcmtlclxyXG4gIH0sXHJcbiAgc2hhcmVGYWlsOiB7XHJcbiAgICAnT3Jib25uZSBBZ3JpYXMgVGh1bmRlciBTbGFzaCc6ICczODY2JywgLy8gY29uYWwgdGFuayBjbGVhdmUgd2l0aCBtYXJrZXJcclxuICB9LFxyXG4gIHNvbG9GYWlsOiB7XHJcbiAgICAnT3Jib25uZSBDaWQgRXBoZW1lcmFsIEtuaWdodCBIYWxsb3dlZCBCb2x0IFN0YWNrJzogJzM3NjgnLCAvLyBzdGFjayBtYXJrZXIgZnJvbSBFcGhlbWVyYWwgS25pZ2h0XHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICAvLyBjYXN0YmFyIHRoYXQgeW91IG5lZWQgdG8gaGF2ZSBIZWF2ZW5seSBTaGllbGQgdXAgZm9yLCBvciB5b3UgZ2V0IGEgdnVsbiBhbmQga25vY2tiYWNrLlxyXG4gICAgICBpZDogJ09yYm9ubmUgQWdyaWFzIEp1ZGdtZW50IEJsYWRlJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnMzg1NycsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gZGF0YS5EYW1hZ2VGcm9tTWF0Y2hlcyhtYXRjaGVzKSA+IDAsXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyBzYW1lIGFzIEp1ZGdtZW50IEJsYWRlLCBidXQgZnJvbSBTd29yZCBLbmlnaHRcclxuICAgICAgaWQ6ICdPcmJvbm5lIEFncmlhcyBNb3J0YWwgQmxvdycsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzM4NUUnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEuRGFtYWdlRnJvbU1hdGNoZXMobWF0Y2hlcykgPiAwLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbi8vIE5vdGU6IElnbm9yaW5nIEZhbWZyaXQgSmV0ICgyQzU0KSB3aGljaCBpcyB0aGUgd2F0ZXIganVnIGhpdC4gIEl0J3MgbG93IGRhbWFnZSBhbmQgZnJlcXVlbnQuXHJcbi8vIE5vdGU6IElnbm9yaW5nIHRoZSBGYW1mcml0IERhcmsgUmFpbiBFeHBsb3Npb24gKDJDNTUpLCBzaW5jZSBhZGRzIGFyZSBvZnRlbiBub3Qga2lsbGVkLlxyXG4vLyBOb3RlOiBJZ25vcmluZyBGYW1mcml0IERyb3BzeSAoMTIxKSBhcyB0aG9zZSBwdWRkbGVzIGNhbiBhcHBlYXIgb24geW91LCBhbmQgaXQgZHJvcHMgd2hlbiBvdXQuXHJcbi8vIE5vdGU6IElnbm9yaW5nIEJlbGlhcyB0ZXRoZXJzLCBiZWNhdXNlIG5vdCBzdXJlIHdoYXQgc2hvdWxkIGJlIGNvbnNpZGVyZWQgYW4gZXJyb3IgdGhlcmUuXHJcbi8vIE5vdGU6IElnbm9yaW5nIFlpYXptYXQgVHVyYnVsZW5jZSAoMkMzMCksIHdoaWNoIGlzIGxpa2UgSmV0IGFuZCB2ZXJ5IG5vaXN5LlxyXG5cclxuLy8gVE9ETzogRGFyayBDYW5ub25hZGUgKDJDNDQpIGlzIGEgZG9yaXRvIHN0YWNrLCBidXQgeW91IHRha2UgZGFtYWdlIG9uIHN1Y2Nlc3MgYW5kIGZhaWx1cmUuXHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZVJpZG9yYW5hTGlnaHRob3VzZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnUmlkb3JhbmEgRmFtZnJpdCBUc3VuYW1pIDEnOiAnMkM1MScsIC8vIHVudGVsZWdyYXBoZWQgOTAgZGVncmVlIGNvbmFsIGZyb20ganVnXHJcbiAgICAnUmlkb3JhbmEgRmFtZnJpdCBUc3VuYW1pIDInOiAnMkM1MicsIC8vIHVudGVsZWdyYXBoZWQgOTAgZGVncmVlIGNvbmFsIGZyb20ganVnXHJcbiAgICAnUmlkb3JhbmEgRmFtZnJpdCBEYXJrIFJhaW4nOiAnMkM0NicsIC8vIHRhcmdldGVkIG1lZGl1bSBzaXplIGNpcmNsZXNcclxuICAgICdSaWRvcmFuYSBGYW1mcml0IERhcmtlbmluZyBEZWx1Z2UnOiAnMkM1NCcsIC8vIHJhaW4gcHVkZGxlcyBhZnRlciBEYXJrZW5pbmcgUmFpbmZ1bGxcclxuICAgICdSaWRvcmFuYSBCdW5lIFRyaS1BdHRhY2snOiAnMkNFRCcsIC8vIGNvbmFsXHJcbiAgICAnUmlkb3JhbmEgQnVuZSBQdWxzYXIgV2F2ZSc6ICcyQ0VFJywgLy8gdGFyZ2V0ZWQgY2lyY2xlXHJcbiAgICAnUmlkb3JhbmEgQmVsaWFzIFRpbWUgRXJ1cHRpb24nOiAnMkNERicsIC8vIGV4cGxvZGluZyBjbG9ja1xyXG4gICAgJ1JpZG9yYW5hIEJlbGlhcyBDcmltc29uIEN5Y2xvbmUgMSc6ICcyQ0UyJywgLy8gY2xvbmUgZGFzaFxyXG4gICAgJ1JpZG9yYW5hIEJlbGlhcyBDcmltc29uIEN5Y2xvbmUgMic6ICcyQ0UzJywgLy8gY2xvbmUgZGFzaFxyXG4gICAgJ1JpZG9yYW5hIEJlbGlhcyBDcmltc29uIEN5Y2xvbmUgMyc6ICcyQ0U0JywgLy8gY2xvbmUgZGFzaFxyXG4gICAgJ1JpZG9yYW5hIEJlbGlhcyBDcmltc29uIEN5Y2xvbmUgNCc6ICcyRDVGJywgLy8gY2xvbmUgZGFzaFxyXG4gICAgJ1JpZG9yYW5hIEJlbGlhcyBFcnVwdGlvbic6ICcyQ0REJywgLy8gc2VyaWVzIG9mIHRhcmdldGVkIGNpcmNsZXNcclxuICAgICdSaWRvcmFuYSBCZWxpYXMgVGltZSBCb21iJzogJzJDRTcnLCAvLyBzdG9wcGFibGUgY2xvY2sgd2l0aCB0aW1lIGNvbmFsIGF0dGFja1xyXG4gICAgJ1JpZG9yYW5hIENvbnN0cnVjdCBQdWx2ZXJpemUgQ2xvc2UnOiAnMkM2MScsIC8vIHVudGVsZWdyYXBoZWQgY2VudGVyZWQgY2lyY2xlIGNsb3NlXHJcbiAgICAnUmlkb3JhbmEgQ29uc3RydWN0IFB1bHZlcml6ZSBGYXInOiAnMkM2MicsIC8vIHRhcmdldGVkIHRlbGVncmFwaGVkIGNpcmNsZXMgZmFyIGF3YXlcclxuICAgICdSaWRvcmFuYSBDb25zdHJ1Y3QgQ29tcHJlc3MnOiAnMkM1QycsIC8vIGxvbmcgc2tpbm55IGxpbmVcclxuICAgICdSaWRvcmFuYSBDb25zdHJ1Y3QgTG9vc2UgQ29nIFRyaWJvZWxlY3RyaWNpdHknOiAnMkM2RCcsIC8vIGJsdWUgY2lyY2xlIGZyb20gY29ncyBpbiBhaXJcclxuICAgICdSaWRvcmFuYSBDb25zdHJ1Y3QgRGlzcG9zZSc6ICcyQzYwJywgLy8gcm90YXRpbmcgZmlyZSBjb25hbFxyXG4gICAgJ1JpZG9yYW5hIENvbnN0cnVjdCBEaXNwb3NlIEFubmloaWxhdGlvbic6ICcyQ0VBJywgLy8gcm90YXRpbmcgZmlyZSBjb25hbCwgQW5uaWhpbGF0aW9uIE1vZGVcclxuICAgICdSaWRvcmFuYSBDb25zdHJ1Y3QgQWNjZWxlcmF0aW9uIEJvbWInOiAnMkQyNycsIC8vIGZhaWxpbmcgYWNjZWxlcmF0aW9uIGJvbWIgaW4gbWlkcGhhc2VcclxuICAgICdSaWRvcmFuYSBDb25zdHJ1Y3QgVWx0cmFtYWduZXRpc20nOiAnMkNENicsIC8vIGZhaWxpbmcgbWFnbmV0aWMgdGV0aGVycyBpbiBtaWRwaGFzZVxyXG4gICAgJ1JpZG9yYW5hIENvbnN0cnVjdCBNaXNzaWxlIEV4cGxvc2lvbic6ICcyQzZGJywgLy8gcnVubmluZyBpbnRvIGEgbWlzc2lsZSBpbiBtaWRwaGFzZVxyXG4gICAgJ1JpZG9yYW5hIFlpYXptYXQgR3VzdCBGcm9udCc6ICcyQzI0JywgLy8gdGFyZ2V0ZWQgYmxhY2sveWVsbG93IGNpcmNsZXNcclxuICAgICdSaWRvcmFuYSBZaWF6bWF0IFdoaXRlIEJyZWF0aCc6ICcyQzMxJywgLy8gZ2V0IHVuZGVyIGRvbnV0XHJcbiAgICAnUmlkb3JhbmEgWWlhem1hdCBSYWtlIENoYXJnZSAxJzogJzJDM0MnLCAvLyBsaWtlIGEga25pZmUgdGhyb3VnaCBidXR0ZXJcclxuICAgICdSaWRvcmFuYSBZaWF6bWF0IFJha2UgQ2hhcmdlIDInOiAnMkUzMicsXHJcbiAgICAnUmlkb3JhbmEgWWlhem1hdCBSYWtlIENoYXJnZSAzJzogJzJDMjgnLFxyXG4gICAgJ1JpZG9yYW5hIFlpYXptYXQgUmFrZSBDaGFyZ2UgNCc6ICcyRDRGJyxcclxuICAgICdSaWRvcmFuYSBZaWF6bWF0IFJha2UgQ2hhcmdlIDUnOiAnMkMyNycsXHJcbiAgICAnUmlkb3JhbmEgWWlhem1hdCBBcmNoYWVvZGVtb24gVW5ob2x5IERhcmtuZXNzJzogJzI2NzMnLCAvLyB0YXJnZXRlZCBjaXJjbGVcclxuICAgICdSaWRvcmFuYSBZaWF6bWF0IEFyY2hhZW9kZW1vbiBLYXJtYSc6ICcyNjcyJywgLy8gY29uYWxcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdSaWRvcmFuYSBZaWF6bWF0IFN0b25lIEJyZWF0aCc6ICcyQzI5JywgLy8gcGV0cmlmeWluZyBjb25hbCBicmVhdGhcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1JpZG9yYW5hIEZhbWZyaXQgQnJpbnkgQ2Fubm9uYWRlJzogJzJDNDUnLCAvLyBzcHJlYWQgbWFya2VyXHJcbiAgICAnUmlkb3JhbmEgQ29uc3RydWN0IElnbml0ZSc6ICcyQzY3JywgLy8gc3ByZWFkIG1hcmtlclxyXG4gICAgJ1JpZG9yYW5hIElyb24gR29sZW0gT3ZhdGlvbic6ICcyQ0YzJywgLy8gdW50ZWxlZ3JhcGhlZCBpbnN0YW50IGxpbmUgYXR0YWNrIChmb3IgdGFuaywgaWRlYWxseSlcclxuICAgICdSaWRvcmFuYSBZaWF6bWF0IFdpbmQgQXplciBBbmNpZW50IEFlcm8nOiAnMkMzOCcsIC8vIHRhcmdldGVkIHRldGhlciBsaW5lIGFvZSBmcm9tIEF6ZXIgYWRkc1xyXG4gIH0sXHJcbiAgc2hhcmVGYWlsOiB7XHJcbiAgICAnUmlkb3JhbmEgWWlhem1hdCBSYWtlIEJ1c3RlciAxJzogJzJDMjYnLCAvLyB1bnRlbGVncmFwaGVkIHRhbmtidXN0ZXIgY2xlYXZlXHJcbiAgICAnUmlkb3JhbmEgWWlhem1hdCBSYWtlIEJ1c3RlciAyJzogJzJERTQnLCAvLyB1bnRlbGVncmFwaGVkIHRhbmtidXN0ZXIgY2xlYXZlXHJcbiAgfSxcclxuICBzb2xvRmFpbDoge1xyXG4gICAgJ1JpZG9yYW5hIENvbnN0cnVjdCBBY2NlbGVyYXRlJzogJzJDNjUnLCAvLyBzdGFjayBtYXJrZXJcclxuICAgICdSaWRvcmFuYSBZaWF6bWF0IERlYXRoIFN0cmlrZSc6ICcyQzMzJywgLy8gc3RhY2sgbWFya2VyXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICAvLyBDb21wdXRhdGlvbiBNb2RlIGVycm9ycy5cclxuICAgICAgaWQ6ICdSaWRvcmFuYSBDb25zdHJ1Y3QgTWF0aHMnLFxyXG4gICAgICB0eXBlOiAnSGVhZE1hcmtlcicsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmhlYWRNYXJrZXIoeyBpZDogJzAwODknIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ3dhcm4nLFxyXG4gICAgICAgICAgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiBgTWF0aHNgLFxyXG4gICAgICAgICAgICBkZTogYE1hdGhlYCxcclxuICAgICAgICAgICAgZnI6IGBNYXRoc2AsXHJcbiAgICAgICAgICAgIGphOiBg566X6KGTYCxcclxuICAgICAgICAgICAgY246IGDnrpfmlbBgLFxyXG4gICAgICAgICAgICBrbzogJ+yCsOyImOyYpOuLtScsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuLy8gVE9ETzogaXMgTWF0ZXVzJ3MgQXp1cmUgR3VhcmQgRmluIFJheXMgKDI2NDIpIGEgdGFua2J1c3RlciB3aXRob3V0IGEgY2FzdGJhcj8gYSBjbGVhdmU/XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZVJveWFsQ2l0eU9mUmFiYW5hc3RyZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnUmFiYW5hc3RyZSBNYXRldXMgSWNlIEF6ZXIgSHlwb3RoZXJtYWwgQ29tYnVzdGlvbic6ICcyNjM5JywgLy8gbGFyZ2UgY2VudGVyZWQgY2lyY2xlIHdoZW4gSWNlIEF6ZXIgZGllc1xyXG4gICAgJ1JhYmFuYXN0cmUgTWF0ZXVzIEJsaXp6YXJkIFNwaGVyZSBDaGlsbCc6ICcyNjQ2JywgLy8gYmFpdGVkIGxvbmcgc2tpbm55IGNvbmFsIGZyb20gdGV0aGVyZWQgQmxpenphcmQgU3BoZXJlc1xyXG4gICAgJ1JhYmFuYXN0cmUgU25pZmZpbmcgU2VlcSBCYW5kaXQgTHVuZ2UnOiAnMjY3MCcsIC8vIGxpbmUgYW9lXHJcbiAgICAnUmFiYW5hc3RyZSBSYWJhbmFzdHJhbiBNaW1pYyBEZWF0aHRyYXAnOiAnNzVFJywgLy8gY2VudGVyZWQgY2lyY2xlXHJcbiAgICAnUmFiYW5hc3RyZSBIYXNobWFsIEphZ2dlZCBFZGdlJzogJzI1Q0QnLCAvLyByZWQgcHVycGxlIGdyb3VuZCBjaXJjbGVzXHJcbiAgICAnUmFiYW5hc3RyZSBIYXNobWFsIFRvd2VyZmFsbCc6ICcyNUNBJywgLy8gY29udHJvbCB0b3dlcnMgZmFsbGluZyBvdmVyXHJcbiAgICAnUmFiYW5hc3RyZSBIYXNobWFsIEV4dHJlbWUgRWRnZSAxJzogJzI1RDAnLCAvLyBsZWZ0L3JpZ2h0IGNsZWF2ZVxyXG4gICAgJ1JhYmFuYXN0cmUgSGFzaG1hbCBFeHRyZW1lIEVkZ2UgMic6ICcyNUNFJywgLy8gbGVmdC9yaWdodCBjbGVhdmVcclxuICAgICdSYWJhbmFzdHJlIEhhc2htYWwgRWFydGggU2hha2VyJzogJzI1QzgnLCAvLyAzeCAxLzYgcGllIHNsaWNlcyB0aGF0IHVzdWFsbHkgaGFwcGVuIHR3aWNlIGluIGEgcm93XHJcbiAgICAnUmFiYW5hc3RyZSBBcmNoYWVkZW1vbiBVbmhvbHkgRGFya25lc3MnOiAnMjY3MycsIC8vIHZlcnkgbGFyZ2UgY29uYWwgKGFsc28gZHVyaW5nIFJvZm9jYWxlKVxyXG4gICAgJ1JhYmFuYXN0cmUgQXJjaGFlZGVtb24gS2FybWEnOiAnMjY3MicsIC8vIHRhcmdldGVkIGNpcmNsZSAoYWxzbyBkdXJpbmcgUm9mb2NhbGUpXHJcbiAgICAnUmFiYW5hc3RyZSBBcmNoYWVvbGlvbiBUaGUgRHJhZ29uXFwncyBCcmVhdGgnOiAnMjczQycsIC8vIGNvbmFsXHJcbiAgICAnUmFiYW5hc3RyZSBBcmNoYWVvbGlvbiBUaGUgUmFtXFwncyBCcmVhdGgnOiAnMjczQicsIC8vIGNvbmFsXHJcbiAgICAnUmFiYW5hc3RyZSBBcmNoYWVvbGlvbiBUaGUgRHJhZ29uXFwncyBWb2ljZSc6ICdEMTAnLCAvLyBpbnRlcnJ1cHRhYmxlIGNlbnRlcmVkIGNpcmNsZVxyXG4gICAgJ1JhYmFuYXN0cmUgQXJjaGFlb2xpb24gVGhlIFJhbVxcJ3MgVm9pY2UnOiAnRDBGJywgLy8gaW50ZXJydXB0YWJsZSBjZW50ZXJlZCBjaXJjbGVcclxuICAgICdSYWJhbmFzdHJlIFJvZm9jYWxlIENydXNoIFdlYXBvbic6ICcyNjg0JywgLy8gdGFyZ2V0ZWQgY2lyY2xlc1xyXG4gICAgJ1JhYmFuYXN0cmUgUm9mb2NhbGUgTWF2ZXJpY2snOiAnMjY4OScsIC8vIG11bHRpcGxlIHRlbGVncmFwaGVkIGxpbmUgY2hhcmdlcyB3aGVuIHVudGFyZ2V0YWJsZSwgYW5kIGxhdGVyIHRhcmdldGFibGVcclxuICAgICdSYWJhbmFzdHJlIFJvZm9jYWxlIFRyYW1wbGUgMSc6ICcyNjc3JyxcclxuICAgICdSYWJhbmFzdHJlIFJvZm9jYWxlIFRyYW1wbGUgMic6ICcyNjc4JyxcclxuICAgICdSYWJhbmFzdHJlIFJvZm9jYWxlIFRyYW1wbGUgMyc6ICcyNjc5JyxcclxuICAgICdSYWJhbmFzdHJlIFJvZm9jYWxlIFRyYW1wbGUgNCc6ICcyNjdBJyxcclxuICAgICdSYWJhbmFzdHJlIFJvZm9jYWxlIFRyYW1wbGUgNSc6ICcyNjdCJyxcclxuICAgICdSYWJhbmFzdHJlIFJvZm9jYWxlIFRyYW1wbGUgNic6ICcyNjdDJyxcclxuICAgICdSYWJhbmFzdHJlIFJvZm9jYWxlIFRyYW1wbGUgNyc6ICcyNjdEJyxcclxuICAgICdSYWJhbmFzdHJlIFJvZm9jYWxlIFRyYW1wbGUgOCc6ICcyNjdFJyxcclxuICAgICdSYWJhbmFzdHJlIFJvZm9jYWxlIFRyYW1wbGUgOSc6ICcyNjdGJyxcclxuICAgICdSYWJhbmFzdHJlIFJvZm9jYWxlIENyeSBvZiBWaWN0b3J5JzogJzI2NzUnLCAvLyAxODAgY2xlYXZlXHJcbiAgICAnUmFiYW5hc3RyZSBSb2ZvY2FsZSBFbWJyYWNlIEluaXRpYWwnOiAnMjY4NicsIC8vIEVtYnJhY2UgaW5pdGlhbCBjaXJjbGVzXHJcbiAgICAnUmFiYW5hc3RyZSBSb2ZvY2FsZSBFbWJyYWNlIFRyaWdnZXJlZCc6ICcyNjg3JywgLy8gcnVubmluZyBpbnRvIEVtYnJhY2UgaGlkZGVuIHRyYXBzXHJcbiAgICAnUmFiYW5hc3RyZSBBcmdhdGggQ3J1c2ggV2VhcG9uJzogJzI3MTMnLCAvLyBzYW1lIGFzIFJvZm9jYWxlIENydXNoIFdlYXBvblxyXG4gICAgJ1JhYmFuYXN0cmUgQXJnYXRoIFVucmVsZW50aW5nJzogJzI2MkMnLCAvLyBmaXZlIGZhbiBhb2VzIGluIGEgY29uZVxyXG4gICAgJ1JhYmFuYXN0cmUgQXJnYXRoIEhlYXJ0bGVzcyBIZWFydGxlc3MnOiAnMjYzMicsIC8vIGNyb3NzIGFvZSBmcm9tIGp1ZGdtZW50IGJsYWRlIG1hcmtlcnNcclxuICAgICdSYWJhbmFzdHJlIEFyZ2F0aCBTb3VsZml4JzogJzI2MkEnLCAvLyBjZW50ZXJlZCBjaXJjbGUsIG9mdGVuIHBhaXJlZCB3aXRoIG1pc2RpcmVjdFxyXG4gICAgJ1JhYmFuYXN0cmUgQXJnYXRoIENvbGRibG9vZCBQdXR0IFB1dHQnOiAnMjYyNicsIC8vIGhvbGUgaW4gb25lIG1pc2RpcmVjdCBkb251dFxyXG4gICAgJ1JhYmFuYXN0cmUgQXJnYXRoIFJhaWwgT2YgVGhlIFJvb3N0ZXInOiAnMjYyMycsIC8vIHVubmVydmVkIHN0YWNrIGZyb20gbWVzc2luZyB1cCBSYWlsIE9mIFRoZSBSYXQgdG93ZXJzXHJcbiAgICAnUmFiYW5hc3RyZSBBcmdhdGggU2VsZi1EZXN0cnVjdCc6ICcyNjJGJywgLy8gZXhwbG9zaW9uIGZyb20gc29tZWJvZHkgd2hvIGhhcyBoaXQgdGhlIHdhbGwgYW5kIHR1cm5lZCBpbnRvIGEgem9tYmllXHJcbiAgICAnUmFiYW5hc3RyZSBBcmdhdGggVGhlIFdvcmQnOiAnMjRBMCcsIC8vIEZhaWxpbmcgTWFzayBPZiBUcnV0aCAvIE1hc2sgT2YgTGllc1xyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ1JhYmFuYXN0cmUgSGFzaG1hbCBUbyBEdXN0JzogJzI1QzknLCAvLyBGYWlsaW5nIHRvIGtpbGwgU2FuZCBTcGhlcmUgYWRkc1xyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RXYXJuOiB7XHJcbiAgICAnUmFiYW5hc3RyZSBBcmdhdGggQmxlZWRpbmcnOiAnMjgyJywgLy8gc3RhbmRpbmcgaW4gSnVkZ2VtZW50IEJsYWRlIHNxdWFyZXMgKDE0MCBpcyBpbmZpbml0ZSBlZmZlY3Qgd2hlbiBpbiwgMjgyIHdoZW4gb3V0KVxyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RGYWlsOiB7XHJcbiAgICAnUmFiYW5hc3RyZSBNYXRldXMgRGVlcCBGcmVlemUnOiAnNEU2JywgLy8gRnJvemVuIGJ5IGljZSBza2F0aW5nIGFkZHNcclxuICAgICdSYWJhbmFzdHJlIFRyYW5zZmlndXJhdGlvbic6ICc1QjMnLCAvLyBNYXRldXMgQmxpenphcmQgSUlJIFRoZSBXaGl0ZSBXaGlzcGVyICgyNzJFKSAvIEFyZ2F0aCBydW5uaW5nIGludG8gdGhlIHdhbGwgYW5kIHR1cm5pbmcgaW50byBhIHpvbWJpZVxyXG4gICAgJ1JhYmFuYXN0cmUgQXJnYXRoIENyYXZlbic6ICc1OEQnLCAvLyB0dXJuaW5nIGludG8gYSBjaGlja2VuIGZyb20gMyBVbm5lcnZlZCBzdGFja3NcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1JhYmFuYXN0cmUgTWF0ZXVzIEZsYXNoIEZyZWV6ZSc6ICcyNjQ3JywgLy8gdW50ZWxlZ3JhcGhlZCB0YW5rIGNvbmFsIGNsZWF2ZVxyXG4gICAgJ1JhYmFuYXN0cmUgTWF0ZXVzIEljaWNsZSBTbm93cGllcmNlJzogJzI2NDAnLCAvLyB0YXJnZXRlZCB0ZWxlZ3JhcGhlZCBza2lubnkgbGluZSBhb2VcclxuICAgICdSYWJhbmFzdHJlIEhhc2htYWwgUm9jayBDdXR0ZXInOiAnMjVENycsIC8vIHVudGVsZWdyYXBoZWQgdGFuayBjbGVhdmVcclxuICAgICdSYWJhbmFzdHJlIEhhc2htYWwgRmFsbGluZyBSb2NrJzogJzI1RDMnLCAvLyBTYW5kIFNwaGVyZSBzcHJlYWRcclxuICAgICdSYWJhbmFzdHJlIFJvZm9jYWxlIENoYXJpb3QnOiAnMjY3NCcsIC8vIHRhcmdldGVkIGxpbmUgYW9lIHdpdGggbWFya2VyIGJlZm9yZSBDcnkgb2YgVmljdG9yeVxyXG4gIH0sXHJcbiAgc29sb0ZhaWw6IHtcclxuICAgICdSYWJhbmFzdHJlIEhhc2htYWwgRmFsbGluZyBCb3VsZGVyJzogJzI1RDInLCAvLyBTYW5kIFNwaGVyZSBzdGFja1xyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6ICdSYWJhbmFzdHJlIE1hdGV1cyBCcmVhdGhsZXNzJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgLy8gVGVuIHN0YWNrcyBvZiBCcmVhdGhsZXNzIGlzIGRlYXRoLlxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnNTk1JywgY291bnQ6ICcxMCcgfSksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICB0eXBlOiAnZmFpbCcsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgdGV4dDogbWF0Y2hlcy5lZmZlY3QsXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIC8vIHVubmFtZWQgZGFtYWdlIGZyb20gYmVpbmcgaGl0IGJ5IFJvZm9jYWxlIGRyaXZpbmcgaW4gY2lyY2xlcyBkdXJpbmcgYWRkIHBoYXNlXHJcbiAgICAgIGlkOiAnUmFiYW5hc3RyZSBSb2ZvY2FsZSBDaGFyaW90IFJpbmcnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICcyNjhDJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ2ZhaWwnLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdDaGFyaW90JyxcclxuICAgICAgICAgICAgZGU6ICdTdHJlaXR3YWdlbicsXHJcbiAgICAgICAgICAgIGZyOiAnQ2hhcmlvdCcsXHJcbiAgICAgICAgICAgIGphOiAn5oim6LuKJyxcclxuICAgICAgICAgICAgY246IGDmiJjovaZgLFxyXG4gICAgICAgICAgICBrbzogJ+q3vOygkeq0keyXreq4sCcsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5BbGFNaGlnbyxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnQWxhIE1oaWdvIE1hZ2l0ZWsgUmF5JzogJzI0Q0UnLCAvLyBMaW5lIEFvRSwgTGVnaW9uIFByZWRhdG9yIHRyYXNoLCBiZWZvcmUgYm9zcyAxXHJcbiAgICAnQWxhIE1oaWdvIExvY2sgT24nOiAnMjA0NycsIC8vIEhvbWluZyBjaXJjbGVzLCBib3NzIDFcclxuICAgICdBbGEgTWhpZ28gVGFpbCBMYXNlciAxJzogJzIwNDknLCAvLyBGcm9udGFsIGxpbmUgQW9FLCBib3NzIDFcclxuICAgICdBbGEgTWhpZ28gVGFpbCBMYXNlciAyJzogJzIwNEInLCAvLyBSZWFyIGxpbmUgQW9FLCBib3NzIDFcclxuICAgICdBbGEgTWhpZ28gVGFpbCBMYXNlciAzJzogJzIwNEMnLCAvLyBSZWFyIGxpbmUgQW9FLCBib3NzIDFcclxuICAgICdBbGEgTWhpZ28gU2hvdWxkZXIgQ2Fubm9uJzogJzI0RDAnLCAvLyBDaXJjbGUgQW9FLCBMZWdpb24gQXZlbmdlciB0cmFzaCwgYmVmb3JlIGJvc3MgMlxyXG4gICAgJ0FsYSBNaGlnbyBDYW5ub25maXJlJzogJzIzRUQnLCAvLyBFbnZpcm9ubWVudGFsIGNpcmNsZSBBb0UsIHBhdGggdG8gYm9zcyAyXHJcbiAgICAnQWxhIE1oaWdvIEFldGhlcm9jaGVtaWNhbCBHcmVuYWRvJzogJzIwNUEnLCAvLyBDaXJjbGUgQW9FLCBib3NzIDJcclxuICAgICdBbGEgTWhpZ28gSW50ZWdyYXRlZCBBZXRoZXJvbW9kdWxhdG9yJzogJzIwNUInLCAvLyBSaW5nIEFvRSwgYm9zcyAyXHJcbiAgICAnQWxhIE1oaWdvIENpcmNsZSBPZiBEZWF0aCc6ICcyNEQ0JywgLy8gUHJveGltaXR5IGNpcmNsZSBBb0UsIEhleGFkcm9uZSB0cmFzaCwgYmVmb3JlIGJvc3MgM1xyXG4gICAgJ0FsYSBNaGlnbyBFeGhhdXN0JzogJzI0RDMnLCAvLyBMaW5lIEFvRSwgTGVnaW9uIENvbG9zc3VzIHRyYXNoLCBiZWZvcmUgYm9zcyAzXHJcbiAgICAnQWxhIE1oaWdvIEdyYW5kIFN3b3JkJzogJzI0RDInLCAvLyBDb25hbCBBb0UsIExlZ2lvbiBDb2xvc3N1cyB0cmFzaCwgYmVmb3JlIGJvc3MgM1xyXG4gICAgJ0FsYSBNaGlnbyBBcnQgT2YgVGhlIFN0b3JtIDEnOiAnMjA2NicsIC8vIFByb3hpbWl0eSBjaXJjbGUgQW9FLCBwcmUtaW50ZXJtaXNzaW9uLCBib3NzIDNcclxuICAgICdBbGEgTWhpZ28gQXJ0IE9mIFRoZSBTdG9ybSAyJzogJzI1ODcnLCAvLyBQcm94aW1pdHkgY2lyY2xlIEFvRSwgaW50ZXJtaXNzaW9uLCBib3NzIDNcclxuICAgICdBbGEgTWhpZ28gVmVpbiBTcGxpdHRlciAxJzogJzI0QjYnLCAvLyBQcm94aW1pdHkgY2lyY2xlIEFvRSwgcHJpbWFyeSBlbnRpdHksIGJvc3MgM1xyXG4gICAgJ0FsYSBNaGlnbyBWZWluIFNwbGl0dGVyIDInOiAnMjA2QycsIC8vIFByb3hpbWl0eSBjaXJjbGUgQW9FLCBoZWxwZXIgZW50aXR5LCBib3NzIDNcclxuICAgICdBbGEgTWhpZ28gTGlnaHRsZXNzIFNwYXJrJzogJzIwNkInLCAvLyBDb25hbCBBb0UsIGJvc3MgM1xyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnQWxhIE1oaWdvIERlbWltYWdpY2tzJzogJzIwNUUnLFxyXG4gICAgJ0FsYSBNaGlnbyBVbm1vdmluZyBUcm9pa2EnOiAnMjA2MCcsXHJcbiAgICAnQWxhIE1oaWdvIEFydCBPZiBUaGUgU3dvcmQgMSc6ICcyMDY5JyxcclxuICAgICdBbGEgTWhpZ28gQXJ0IE9mIFRoZSBTd29yZCAyJzogJzI1ODknLFxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgLy8gSXQncyBwb3NzaWJsZSBwbGF5ZXJzIG1pZ2h0IGp1c3Qgd2FuZGVyIGludG8gdGhlIGJhZCBvbiB0aGUgb3V0c2lkZSxcclxuICAgICAgLy8gYnV0IG5vcm1hbGx5IHBlb3BsZSBnZXQgcHVzaGVkIGludG8gaXQuXHJcbiAgICAgIGlkOiAnQWxhIE1oaWdvIEFydCBPZiBUaGUgU3dlbGwnLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICAvLyBEYW1hZ2UgRG93blxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnMkI4JyB9KSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmVmZmVjdCB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlciwgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIEZvciByZWFzb25zIG5vdCBjb21wbGV0ZWx5IHVuZGVyc3Rvb2QgYXQgdGhlIHRpbWUgdGhpcyB3YXMgbWVyZ2VkLFxyXG4vLyBidXQgbGlrZWx5IHJlbGF0ZWQgdG8gdGhlIGZhY3QgdGhhdCBubyBuYW1lcGxhdGVzIGFyZSB2aXNpYmxlIGR1cmluZyB0aGUgZW5jb3VudGVyLFxyXG4vLyBhbmQgdGhhdCBub3RoaW5nIGluIHRoZSBlbmNvdW50ZXIgYWN0dWFsbHkgZG9lcyBkYW1hZ2UsXHJcbi8vIHdlIGNhbid0IHVzZSBkYW1hZ2VXYXJuIG9yIGdhaW5zRWZmZWN0IGhlbHBlcnMgb24gdGhlIEJhcmRhbSBmaWdodC5cclxuLy8gSW5zdGVhZCwgd2UgdXNlIHRoaXMgaGVscGVyIGZ1bmN0aW9uIHRvIGxvb2sgZm9yIGZhaWx1cmUgZmxhZ3MuXHJcbi8vIElmIHRoZSBmbGFnIGlzIHByZXNlbnQsYSBmdWxsIHRyaWdnZXIgb2JqZWN0IGlzIHJldHVybmVkIHRoYXQgZHJvcHMgaW4gc2VhbWxlc3NseS5cclxuY29uc3QgYWJpbGl0eVdhcm4gPSAoYXJnczogeyBhYmlsaXR5SWQ6IHN0cmluZzsgaWQ6IHN0cmluZyB9KTogT29wc3lUcmlnZ2VyPERhdGE+ID0+IHtcclxuICBpZiAoIWFyZ3MuYWJpbGl0eUlkKVxyXG4gICAgY29uc29sZS5lcnJvcignTWlzc2luZyBhYmlsaXR5ICcgKyBKU09OLnN0cmluZ2lmeShhcmdzKSk7XHJcbiAgY29uc3QgdHJpZ2dlcjogT29wc3lUcmlnZ2VyPERhdGE+ID0ge1xyXG4gICAgaWQ6IGFyZ3MuaWQsXHJcbiAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiBhcmdzLmFiaWxpdHlJZCB9KSxcclxuICAgIGNvbmRpdGlvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiBtYXRjaGVzLmZsYWdzLnN1YnN0cigtMikgPT09ICcwRScsXHJcbiAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmFiaWxpdHkgfTtcclxuICAgIH0sXHJcbiAgfTtcclxuICByZXR1cm4gdHJpZ2dlcjtcclxufTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5CYXJkYW1zTWV0dGxlLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdCYXJkYW0gRGlydHkgQ2xhdyc6ICcyMUE4JywgLy8gRnJvbnRhbCBjbGVhdmUsIEd1bG8gR3VsbyB0cmFzaFxyXG4gICAgJ0JhcmRhbSBFcGlncmFwaCc6ICcyM0FGJywgLy8gTGluZSBBb0UsIFdhbGwgb2YgQmFyZGFtIHRyYXNoXHJcbiAgICAnQmFyZGFtIFRoZSBEdXNrIFN0YXInOiAnMjE4NycsIC8vIENpcmNsZSBBb0UsIGVudmlyb25tZW50IGJlZm9yZSBmaXJzdCBib3NzXHJcbiAgICAnQmFyZGFtIFRoZSBEYXduIFN0YXInOiAnMjE4NicsIC8vIENpcmNsZSBBb0UsIGVudmlyb25tZW50IGJlZm9yZSBmaXJzdCBib3NzXHJcbiAgICAnQmFyZGFtIENydW1ibGluZyBDcnVzdCc6ICcxRjEzJywgLy8gQ2lyY2xlIEFvRXMsIEdhcnVsYSwgZmlyc3QgYm9zc1xyXG4gICAgJ0JhcmRhbSBSYW0gUnVzaCc6ICcxRUZDJywgLy8gTGluZSBBb0VzLCBTdGVwcGUgWWFtYWEsIGZpcnN0IGJvc3MuXHJcbiAgICAnQmFyZGFtIEx1bGxhYnknOiAnMjRCMicsIC8vIENpcmNsZSBBb0VzLCBTdGVwcGUgU2hlZXAsIGZpcnN0IGJvc3MuXHJcbiAgICAnQmFyZGFtIEhlYXZlJzogJzFFRjcnLCAvLyBGcm9udGFsIGNsZWF2ZSwgR2FydWxhLCBmaXJzdCBib3NzXHJcbiAgICAnQmFyZGFtIFdpZGUgQmxhc3Rlcic6ICcyNEIzJywgLy8gRW5vcm1vdXMgZnJvbnRhbCBjbGVhdmUsIFN0ZXBwZSBDb2V1cmwsIGZpcnN0IGJvc3NcclxuICAgICdCYXJkYW0gRG91YmxlIFNtYXNoJzogJzI2QScsIC8vIENpcmNsZSBBb0UsIE1ldHRsaW5nIERoYXJhIHRyYXNoXHJcbiAgICAnQmFyZGFtIFRyYW5zb25pYyBCbGFzdCc6ICcxMjYyJywgLy8gQ2lyY2xlIEFvRSwgU3RlcHBlIEVhZ2xlIHRyYXNoXHJcbiAgICAnQmFyZGFtIFdpbGQgSG9ybic6ICcyMjA4JywgLy8gRnJvbnRhbCBjbGVhdmUsIEtodW4gR3VydmVsIHRyYXNoXHJcbiAgICAnQmFyZGFtIEhlYXZ5IFN0cmlrZSAxJzogJzI1NzgnLCAvLyAxIG9mIDMgMjcwLWRlZ3JlZSByaW5nIEFvRXMsIEJhcmRhbSwgc2Vjb25kIGJvc3NcclxuICAgICdCYXJkYW0gSGVhdnkgU3RyaWtlIDInOiAnMjU3OScsIC8vIDIgb2YgMyAyNzAtZGVncmVlIHJpbmcgQW9FcywgQmFyZGFtLCBzZWNvbmQgYm9zc1xyXG4gICAgJ0JhcmRhbSBIZWF2eSBTdHJpa2UgMyc6ICcyNTdBJywgLy8gMyBvZiAzIDI3MC1kZWdyZWUgcmluZyBBb0VzLCBCYXJkYW0sIHNlY29uZCBib3NzXHJcbiAgICAnQmFyZGFtIFRyZW1ibG9yIDEnOiAnMjU3QicsIC8vIDEgb2YgMiBjb25jZW50cmljIHJpbmcgQW9FcywgQmFyZGFtLCBzZWNvbmQgYm9zc1xyXG4gICAgJ0JhcmRhbSBUcmVtYmxvciAyJzogJzI1N0MnLCAvLyAyIG9mIDIgY29uY2VudHJpYyByaW5nIEFvRXMsIEJhcmRhbSwgc2Vjb25kIGJvc3NcclxuICAgICdCYXJkYW0gVGhyb3dpbmcgU3BlYXInOiAnMjU3RicsIC8vIENoZWNrZXJib2FyZCBBb0UsIFRocm93aW5nIFNwZWFyLCBzZWNvbmQgYm9zc1xyXG4gICAgJ0JhcmRhbSBCYXJkYW1cXCdzIFJpbmcnOiAnMjU4MScsIC8vIERvbnV0IEFvRSBoZWFkbWFya2VycywgQmFyZGFtLCBzZWNvbmQgYm9zc1xyXG4gICAgJ0JhcmRhbSBDb21ldCc6ICcyNTdEJywgLy8gVGFyZ2V0ZWQgY2lyY2xlIEFvRXMsIEJhcmRhbSwgc2Vjb25kIGJvc3NcclxuICAgICdCYXJkYW0gQ29tZXQgSW1wYWN0JzogJzI1ODAnLCAvLyBDaXJjbGUgQW9FcywgU3RhciBTaGFyZCwgc2Vjb25kIGJvc3NcclxuICAgICdCYXJkYW0gSXJvbiBTcGhlcmUgQXR0YWNrJzogJzE2QjYnLCAvLyBDb250YWN0IGRhbWFnZSwgSXJvbiBTcGhlcmUgdHJhc2gsIGJlZm9yZSB0aGlyZCBib3NzXHJcbiAgICAnQmFyZGFtIFRvcm5hZG8nOiAnMjQ3RScsIC8vIENpcmNsZSBBb0UsIEtodW4gU2hhdmFyYSB0cmFzaFxyXG4gICAgJ0JhcmRhbSBQaW5pb24nOiAnMUYxMScsIC8vIExpbmUgQW9FLCBZb2wgRmVhdGhlciwgdGhpcmQgYm9zc1xyXG4gICAgJ0JhcmRhbSBGZWF0aGVyIFNxdWFsbCc6ICcxRjBFJywgLy8gRGFzaCBhdHRhY2ssIFlvbCwgdGhpcmQgYm9zc1xyXG4gICAgJ0JhcmRhbSBGbHV0dGVyZmFsbCBVbnRhcmdldGVkJzogJzFGMTInLCAvLyBSb3RhdGluZyBjaXJjbGUgQW9FcywgWW9sLCB0aGlyZCBib3NzXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdFdhcm46IHtcclxuICAgICdCYXJkYW0gQ29uZnVzZWQnOiAnMEInLCAvLyBGYWlsZWQgZ2F6ZSBhdHRhY2ssIFlvbCwgdGhpcmQgYm9zc1xyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RGYWlsOiB7XHJcbiAgICAnQmFyZGFtIEZldHRlcnMnOiAnNTZGJywgLy8gRmFpbGluZyB0d28gbWVjaGFuaWNzIGluIGFueSBvbmUgcGhhc2Ugb24gQmFyZGFtLCBzZWNvbmQgYm9zcy5cclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0JhcmRhbSBHYXJ1bGEgUnVzaCc6ICcxRUY5JywgLy8gTGluZSBBb0UsIEdhcnVsYSwgZmlyc3QgYm9zcy5cclxuICAgICdCYXJkYW0gRmx1dHRlcmZhbGwgVGFyZ2V0ZWQnOiAnMUYwQycsIC8vIENpcmNsZSBBb0UgaGVhZG1hcmtlciwgWW9sLCB0aGlyZCBib3NzXHJcbiAgICAnQmFyZGFtIFdpbmdiZWF0JzogJzFGMEYnLCAvLyBDb25hbCBBb0UgaGVhZG1hcmtlciwgWW9sLCB0aGlyZCBib3NzXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAgLy8gMSBvZiAzIDI3MC1kZWdyZWUgcmluZyBBb0VzLCBCYXJkYW0sIHNlY29uZCBib3NzXHJcbiAgICBhYmlsaXR5V2Fybih7IGlkOiAnQmFyZGFtIEhlYXZ5IFN0cmlrZSAxJywgYWJpbGl0eUlkOiAnMjU3OCcgfSksXHJcbiAgICAvLyAyIG9mIDMgMjcwLWRlZ3JlZSByaW5nIEFvRXMsIEJhcmRhbSwgc2Vjb25kIGJvc3NcclxuICAgIGFiaWxpdHlXYXJuKHsgaWQ6ICdCYXJkYW0gSGVhdnkgU3RyaWtlIDInLCBhYmlsaXR5SWQ6ICcyNTc5JyB9KSxcclxuICAgIC8vIDMgb2YgMyAyNzAtZGVncmVlIHJpbmcgQW9FcywgQmFyZGFtLCBzZWNvbmQgYm9zc1xyXG4gICAgYWJpbGl0eVdhcm4oeyBpZDogJ0JhcmRhbSBIZWF2eSBTdHJpa2UgMycsIGFiaWxpdHlJZDogJzI1N0EnIH0pLFxyXG4gICAgLy8gMSBvZiAyIGNvbmNlbnRyaWMgcmluZyBBb0VzLCBCYXJkYW0sIHNlY29uZCBib3NzXHJcbiAgICBhYmlsaXR5V2Fybih7IGlkOiAnQmFyZGFtIFRyZW1ibG9yIDEnLCBhYmlsaXR5SWQ6ICcyNTdCJyB9KSxcclxuICAgIC8vIDIgb2YgMiBjb25jZW50cmljIHJpbmcgQW9FcywgQmFyZGFtLCBzZWNvbmQgYm9zc1xyXG4gICAgYWJpbGl0eVdhcm4oeyBpZDogJ0JhcmRhbSBUcmVtYmxvciAyJywgYWJpbGl0eUlkOiAnMjU3QycgfSksXHJcbiAgICAvLyBDaGVja2VyYm9hcmQgQW9FLCBUaHJvd2luZyBTcGVhciwgc2Vjb25kIGJvc3NcclxuICAgIGFiaWxpdHlXYXJuKHsgaWQ6ICdCYXJkYW0gVGhyb3dpbmcgU3BlYXInLCBhYmlsaXR5SWQ6ICcyNTdGJyB9KSxcclxuICAgIC8vIEdhemUgYXR0YWNrLCBXYXJyaW9yIG9mIEJhcmRhbSwgc2Vjb25kIGJvc3NcclxuICAgIGFiaWxpdHlXYXJuKHsgaWQ6ICdCYXJkYW0gRW1wdHkgR2F6ZScsIGFiaWxpdHlJZDogJzFGMDQnIH0pLFxyXG4gICAgLy8gRG9udXQgQW9FIGhlYWRtYXJrZXJzLCBCYXJkYW0sIHNlY29uZCBib3NzXHJcbiAgICBhYmlsaXR5V2Fybih7IGlkOiAnQmFyZGFtXFwncyBSaW5nJywgYWJpbGl0eUlkOiAnMjU4MScgfSksXHJcbiAgICAvLyBUYXJnZXRlZCBjaXJjbGUgQW9FcywgQmFyZGFtLCBzZWNvbmQgYm9zc1xyXG4gICAgYWJpbGl0eVdhcm4oeyBpZDogJ0JhcmRhbSBDb21ldCcsIGFiaWxpdHlJZDogJzI1N0QnIH0pLFxyXG4gICAgLy8gQ2lyY2xlIEFvRXMsIFN0YXIgU2hhcmQsIHNlY29uZCBib3NzXHJcbiAgICBhYmlsaXR5V2Fybih7IGlkOiAnQmFyZGFtIENvbWV0IEltcGFjdCcsIGFiaWxpdHlJZDogJzI1ODAnIH0pLFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbi8vIFRPRE86IHdlIGNvdWxkIGNvcnJlY3RseSBibGFtZSBtaXNzaW5nIE51bTI0IHRvd2VycyBmcm9tIDFGMUQvMUYxRS8xRjFGIHdoZW4gdGhleSBhcmUgdGFrZW4uXHJcbi8vIFRPRE86IDEydGggTGVnaW9uIFBhY2tlciBRdWljayBDaGFyZ2UgKDIxMjcpIGdvaW5nIG9mZiBpcyBhIG1pc3Rha2UgKHByb2JhYmx5KS5cclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuQ2FzdHJ1bUFiYW5pYSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnQ2FzdHJ1bUFiYW5pYSAxMnRoIExlZ2lvbiBMYXF1ZWFyaXVzIE92ZXJwb3dlcic6ICcyRDAnLCAvLyBjb25hbFxyXG4gICAgJ0Nhc3RydW1BYmFuaWEgMTJ0aCBMZWdpb24gQXZlbmdlciBTaG91bGRlciBDYW5ub24nOiAnMjMxQycsIC8vIHRhcmdldGVkIGNpcmNsZVxyXG4gICAgJ0Nhc3RydW1BYmFuaWEgMTJ0aCBMZWdpb24gVmFuZ3VhcmQgQ2VybWV0IERyaWxsJzogJzIwRScsIC8vIGxpbmUgYW9lXHJcbiAgICAnQ2FzdHJ1bUFiYW5pYSAxMnRoIExlZ2lvbiBTaWduaWZpZXIgRGFyayBGaXJlIElJSSc6ICc1MTknLCAvLyB0YXJnZXRlZCBjaXJjbGVcclxuICAgICdDYXN0cnVtQWJhbmlhIDEydGggTGVnaW9uIENhbmlzIFB1Z25heCBSZWNrbGFzcyBDaGFyZ2UnOiAnMTRGJywgLy8gbGluZSBhb2VcclxuICAgICdDYXN0cnVtQWJhbmlhIE1hZ25hIFJvYWRlciBNYWdpdGVrIEZpcmUgMic6ICcxRjE1JywgLy8gdGFyZ2V0ZWQgY2lyY2xlXHJcbiAgICAnQ2FzdHJ1bUFiYW5pYSBNYWduYSBSb2FkZXIgV2lsZCBTcGVlZCc6ICcxRkY4JywgLy8gNHggbGluZSBjaGFyZ2VzXHJcbiAgICAnQ2FzdHJ1bUFiYW5pYSBNYWduYSBSb2FkZXIgTWFnaXRlayBQdWxzZSAxJzogJzIwOTAnLCAvLyBNYXJrIFhMSUlJIE1pbmkgQ2Fubm9uIGFvZXNcclxuICAgICdDYXN0cnVtQWJhbmlhIE1hZ25hIFJvYWRlciBNYWdpdGVrIFB1bHNlIDInOiAnMUYxOScsIC8vIE1hcmsgWExJSUkgTWluaSBDYW5ub24gYW9lc1xyXG4gICAgJ0Nhc3RydW1BYmFuaWEgSHlwZXJ0dW5lZCBCbGFzdCBXYXZlJzogJzQyQycsIC8vIGxpbmUgYW9lXHJcbiAgICAnQ2FzdHJ1bUFiYW5pYSAxMnRoIExlZ2lvbiBSb2FkZXIgUnVzaCc6ICcyMDhBJywgLy8gbG9uZyBsaW5lIGFvZSB3aGVuIFJvYWRlcnMgZW50ZXJcclxuICAgICdDYXN0cnVtQWJhbmlhIE51bWJlciBYWElWIEdhbGUgQ3V0JzogJzIwODMnLCAvLyB0YXJnZXRlZCBjaXJjbGVcclxuICAgICdDYXN0cnVtQWJhbmlhIE51bWJlciBYWElWIE92ZXJmbG93JzogJzFGMjAnLCAvLyBmYWlsaW5nIHRvIGdldCBhIHRvd2VyXHJcbiAgICAnQ2FzdHJ1bUFiYW5pYSAxMnRoIExlZ2lvbiBSZWFyZ3VhcmQgQ2VybWV0IFBpbGUnOiAnMjNBQicsIC8vIGxpbmUgYW9lXHJcbiAgICAnQ2FzdHJ1bUFiYW5pYSAxMnRoIExlZ2lvbiBBcm1vcmVkIFdlYXBvbiBEaWZmcmFjdGl2ZSBMYXNlcic6ICcyMDlDJywgLy8gY2VudGVyZWQgY2lyY2xlXHJcbiAgICAnQ2FzdHJ1bUFiYW5pYSAxMnRoIExlZ2lvbiBDb2xvc3N1cyBHcmFuZCBTd29yZCc6ICcyNEE2JywgLy8gbGFyZ2UgY29uYWxcclxuICAgICdDYXN0cnVtQWJhbmlhIDEydGggTGVnaW9uIENvbG9zc3VzIEV4aGF1c3QnOiAnMjRBOCcsIC8vIGxhcmdlIGxpbmUgYW9lXHJcbiAgICAnQ2FzdHJ1bUFiYW5pYSBJbmZlcm5vIFJhaHUgQmxhc3RlciAxJzogJzFGMjknLCAvLyBsaW5lIGFvZSAoYXQgUmFodSAwKVxyXG4gICAgJ0Nhc3RydW1BYmFuaWEgSW5mZXJubyBSYWh1IEJsYXN0ZXIgMic6ICcyMDhFJywgLy8gbGluZSBhb2UgKGF0IFJhaHUgMSlcclxuICAgICdDYXN0cnVtQWJhbmlhIEluZmVybm8gUmFodSBCbGFzdGVyIDMnOiAnMjA4RicsIC8vIGxpbmUgYW9lIChhdCBSYWh1IDIpXHJcbiAgICAnQ2FzdHJ1bUFiYW5pYSBJbmZlcm5vIEtldHUgV2F2ZSc6ICcxRjI4JywgLy8gbGFyZ2UgY2lyY2xlIGR1cmluZyBLZXR1ICYgUmFodVxyXG4gICAgJ0Nhc3RydW1BYmFuaWEgSW5mZXJubyBLZXR1IEN1dHRlcic6ICcxRjI3JywgLy8gMTgwLzM2MCBwaW53aGVlbCBkdXJpbmcgS2V0dSAmIFJhaHVcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdDYXN0cnVtQWJhbmlhIE51bWJlciBYWElWIENvdW50ZXInOiAnMUYyNCcsIC8vIGhhdmluZyB0aGUgd3JvbmcgZWxlbWVudFxyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RXYXJuOiB7XHJcbiAgICAnQ2FzdHJ1bUFiYW5pYSBJbmZlcm5vIDEydGggTGVnaW9uIERlYXRoIENsYXcgU2VpemVkJzogJzUwNycsIC8vIGdldHRpbmcgZ3JhYmJlZCBieSB0ZXRoZXJlZCBEZWF0aCBDbGF3XHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdDYXN0cnVtQWJhbmlhIEluZmVybm8gUmFodSBSYXknOiAnMUYyQScsIC8vIHJlZCBzcHJlYWQgY2lyY2xlXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5Eb21hQ2FzdGxlLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdEb21hIENhc3RsZSBEb21hbiBDb2xvc3N1cyBHcmFuZCBTd29yZCc6ICcyMTc5JywgLy8gbGFyZ2Ugd2lkZSBjb25hbFxyXG4gICAgJ0RvbWEgQ2FzdGxlIERvbWFuIEd1bnNoaXAgR2FybGVhbiBGaXJlJzogJzIxN0MnLCAvLyB0YXJnZXRlZCBjaXJjbGUgKGNhbiBoYXBwZW4gb3V0IG9mIGNvbWJhdClcclxuICAgICdEb21hIENhc3RsZSBNYWdpdGVrIFJlYXJndWFyZCBHYXJsZWFuIEZpcmUnOiAnMjA5RicsIC8vIGxpbmUgb2YgdGFyZ2V0ZWQgZXhhZmxhcmUteSBjaXJjbGVzXHJcbiAgICAnRG9tYSBDYXN0bGUgTWFnaXRlayBSZWFyZ3VhcmQgTWFnaXRlayBSYXknOiAnMjBBMScsIC8vIFJlYXJndWFyZCBCaXQgZ3JlZW4gbGluZSBhb2VcclxuICAgICdEb21hIENhc3RsZSBNYWdpdGVrIFJlYXJndWFyZCBTZWxmLURldG9uYXRlJzogJzIwQTAnLCAvLyBydW5uaW5nIGludG8gYSBSZWFyZ3VhcmQgTWluZVxyXG4gICAgJ0RvbWEgQ2FzdGxlIERvbWFuIFZhbmd1YXJkIE92ZXJjaGFyZ2UnOiAnMjE3RScsIC8vIGNlbnRlcmVkIGNpcmNsZVxyXG4gICAgJ0RvbWEgQ2FzdGxlIERvbWFuIFZhbmd1YXJkIERyaWxsIENhbm5vbnMnOiAnMjE3RCcsIC8vIGZyb250YWwgbGluZVxyXG4gICAgJ0RvbWEgQ2FzdGxlIE1hcmsgWExJSUkgRmllbGQgQ2Fubm9uIE1hZ2l0ZWsgQ2Fubm9uJzogJzI0RTknLCAvLyBsaW5lIGFvZXMgZnJvbSBzdGF0aW9uYXJ5IGNhbm5vbnNcclxuICAgICdEb21hIENhc3RsZSBEb21hbiBSZWFwZXIgTWFnaXRlayBDYW5ub24nOiAnMjE4MScsIC8vIGNlbnRlcmVkIGNpcmNsZVxyXG4gICAgJ0RvbWEgQ2FzdGxlIEhleGFkcm9uZSBCaXQgQ2hhaW4gTWluZSAxJzogJzI0NDcnLCAvLyBEZXN0cm95YWJsZSBsYXNlciB0aGF0IGRvZXMga25vY2tiYWNrLCBib3RoIDImMyBib3NzXHJcbiAgICAnRG9tYSBDYXN0bGUgSGV4YWRyb25lIEJpdCBDaGFpbiBNaW5lIDInOiAnMjBBNycsIC8vIERlc3Ryb3lhYmxlIGxhc2VyIHRoYXQgZG9lcyBrbm9ja2JhY2ssIGJvdGggMiYzIGJvc3NcclxuICAgICdEb21hIENhc3RsZSBNYWdpdGVrIEhleGFkcm9uZSBDaXJjbGUgT2YgRGVhdGgnOiAnMjBBMicsIC8vIGNlbnRlcmVkIGNpcmNsZVxyXG4gICAgJ0RvbWEgQ2FzdGxlIE1hZ2l0ZWsgSGV4YWRyb25lIE1hZ2l0ZWsgTWlzc2lsZXMnOiAnMjBBNicsIC8vIGZhaWxpbmcgdG93ZXIgKDIwQTUgaXMgY29ycmVjdCB0b3dlciBkYW1hZ2UpXHJcbiAgICAnRG9tYSBDYXN0bGUgRG9tYW4gSGFzdGF0dXMgVGVua2EgR29rZW4nOiAnMjE4MicsIC8vIHdpZGUgY29uYWxcclxuICAgICdEb21hIENhc3RsZSBEb21hbiBBcm1vcmVkIFdlYXBvbiBEaWZmcmFjdGl2ZSBMYXNlcic6ICcyMTg0JywgLy8gY2VudGVyZWQgY2lyY2xlXHJcbiAgICAnRG9tYSBDYXN0bGUgSHlwZXJ0dW5lZCBHcnluZXdhaHQgQ2xlYW4gQ3V0JzogJzIwQjEnLCAvLyBNYWdpdGVrIENoYWtyYW0gbGluZXNcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0RvbWEgQ2FzdGxlIEh5cGVydHVuZWQgR3J5bmV3YWh0IERlbGF5LUFjdGlvbiBDaGFyZ2UnOiAnMjBBRCcsIC8vIHNwcmVhZCBtYXJrZXJcclxuICB9LFxyXG4gIHNvbG9XYXJuOiB7XHJcbiAgICAnRG9tYSBDYXN0bGUgTWFnaXRlayBIZXhhZHJvbmUgMi1Ub256ZSBNYWdpdGVrIE1pc3NpbGUnOiAnMjBBMycsIC8vIHN0YWNrIG1hcmtlclxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlRHJvd25lZENpdHlPZlNrYWxsYSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnSHlkcm9jYW5ub24nOiAnMjY5NycsIC8vIExpbmUgQW9FLCBTYWx0IFN3YWxsb3cgdHJhc2gsIGJlZm9yZSBib3NzIDFcclxuICAgICdTdGFnbmFudCBTcHJheSc6ICcyNjk5JywgLy8gQ29uYWwgQW9FLCBTa2FsbGEgTmFua2EgdHJhc2gsIGJlZm9yZSBib3NzIDFcclxuXHJcbiAgICAnQnViYmxlIEJ1cnN0JzogJzI2MUInLCAvLyBCdWJibGUgZXhwbG9zaW9uLCBIeWRyb3NwaGVyZSwgYm9zcyAxXHJcblxyXG4gICAgJ1BsYWluIFBvdW5kJzogJzI2OUEnLCAvLyBMYXJnZSBjaXJjbGUgQW9FLCBEaGFyYSBTZW50aW5lbCB0cmFzaCwgYmVmb3JlIGJvc3MgMlxyXG4gICAgJ0JvdWxkZXIgVG9zcyc6ICcyNjlCJywgLy8gU21hbGwgY2lyY2xlIEFvRSwgU3RvbmUgUGhvZWJhZCB0cmFzaCwgYmVmb3JlIGJvc3MgMlxyXG4gICAgJ0xhbmRzbGlwJzogJzI2OUMnLCAvLyBDb25hbCBBb0UsIFN0b25lIFBob2ViYWQgdHJhc2gsIGJlZm9yZSBib3NzIDJcclxuXHJcbiAgICAnTXlzdGljIExpZ2h0JzogJzI2NTcnLCAvLyBDb25hbCBBb0UsIFRoZSBPbGQgT25lLCBib3NzIDJcclxuICAgICdNeXN0aWMgRmxhbWUnOiAnMjY1OScsIC8vIExhcmdlIGNpcmNsZSBBb0UsIFRoZSBPbGQgT25lLCBib3NzIDIuIDI2NTggaXMgdGhlIGNhc3QtdGltZSBhYmlsaXR5LlxyXG5cclxuICAgICdEYXJrIElJJzogJzExMEUnLCAvLyBUaGluIGNvbmUgQW9FLCBMaWdodGxlc3MgSG9tdW5jdWx1cyB0cmFzaCwgYWZ0ZXIgYm9zcyAyXHJcbiAgICAnSW1wbG9zaXZlIEN1cnNlJzogJzI2OUUnLCAvLyBDb25hbCBBb0UsIFphbmdiZXRvIHRyYXNoLCBhZnRlciBib3NzIDJcclxuICAgICdVbmR5aW5nIEZJcmUnOiAnMjY5RicsIC8vIENpcmNsZSBBb0UsIFphbmdiZXRvIHRyYXNoLCBhZnRlciBib3NzIDJcclxuICAgICdGaXJlIElJJzogJzI2QTAnLCAvLyBDaXJjbGUgQW9FLCBBY2N1cnNlZCBJZG9sIHRyYXNoLCBhZnRlciBib3NzIDJcclxuXHJcbiAgICAnUnVzdGluZyBDbGF3JzogJzI2NjEnLCAvLyBGcm9udGFsIGNsZWF2ZSwgSHJvZHJpYyBQb2lzb250b25ndWUsIGJvc3MgM1xyXG4gICAgJ1dvcmRzIE9mIFdvZSc6ICcyNjYyJywgLy8gRXllIGxhc2VycywgSHJvZHJpYyBQb2lzb250b25ndWUsIGJvc3MgM1xyXG4gICAgJ1RhaWwgRHJpdmUnOiAnMjY2MycsIC8vIFJlYXIgY2xlYXZlLCBIcm9kcmljIFBvaXNvbnRvbmd1ZSwgYm9zcyAzXHJcbiAgICAnUmluZyBPZiBDaGFvcyc6ICcyNjY3JywgLy8gUmluZyBoZWFkbWFya2VyLCBIcm9kcmljIFBvaXNvbnRvbmd1ZSwgYm9zcyAzXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnU2VsZi1EZXRvbmF0ZSc6ICcyNjVDJywgLy8gUm9vbXdpZGUgZXhwbG9zaW9uLCBTdWJzZXJ2aWVudCwgYm9zcyAyXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdFdhcm46IHtcclxuICAgICdEcm9wc3knOiAnMTFCJywgLy8gU3RhbmRpbmcgaW4gQmxvb2R5IFB1ZGRsZXMsIG9yIGJlaW5nIGtub2NrZWQgb3V0c2lkZSB0aGUgYXJlbmEsIGJvc3MgMVxyXG4gICAgJ0NvbmZ1c2VkJzogJzBCJywgLy8gRmFpbGluZyB0aGUgZ2F6ZSBhdHRhY2ssIGJvc3MgM1xyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnQmxvb2R5IFB1ZGRsZSc6ICcyNjU1JywgLy8gTGFyZ2Ugd2F0ZXJ5IHNwcmVhZCBjaXJjbGVzLCBLZWxwaWUsIGJvc3MgMVxyXG4gICAgJ0Nyb3NzIE9mIENoYW9zJzogJzI2NjgnLCAvLyBDcm9zcyBoZWFkbWFya2VyLCBIcm9kcmljIFBvaXNvbnRvbmd1ZSwgYm9zcyAzXHJcbiAgICAnQ2lyY2xlIE9mIENoYW9zJzogJzI2NjknLCAvLyBTcHJlYWQgY2lyY2xlIGhlYWRtYXJrZXIsIEhyb2RyaWMgUG9pc29udG9uZ3VlLCBib3NzIDNcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG4vLyBUT0RPOiBEaXNjaG9yZGFudCBDbGVhbnNpbmcgKDI3OUMpIGZpcnN0LCB0aGVuIDI5N0E/XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZUZyYWN0YWxDb250aW51dW1IYXJkLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdGcmFjdGFsSGFyZCBQcm90b3R5cGUgQ2xhdyBTaHJlZCc6ICcxMjU3JywgLy8gbGluZSBhb2VcclxuICAgICdGcmFjdGFsSGFyZCBQcm90b3R5cGUgQ2xhdyBUaGUgSGFuZCc6ICcxMjU4JywgLy8gY29uYWxcclxuICAgICdGcmFjdGFsSGFyZCBTZXJ2b21lY2hhbmljYWwgTWlub3RhdXIgMTYtVG9uemUgU3dpcGUnOiAnMkFFNScsIC8vIHVudGVsZWdyYXBoZWQgY29uYWxcclxuICAgICdGcmFjdGFsSGFyZCBTZXJ2b21lY2hhbmljYWwgTWlub3RhdXIgMTI4LVRvbnplIFN3aW5nJzogJzJBRTQnLCAvLyB0ZWxlZ3JhcGhlZCBsYXJnZSBjaXJjbGVcclxuICAgIC8vIFRoZXNlIGFwcGx5IHRvIGJvdGggU2Vydm9tZWNoYW5pY2FsIENoaW1lcmEgYW5kIFByb3RvLUNoaW1lcmEuXHJcbiAgICAnRnJhY3RhbEhhcmQgQ2hpbWVyYSBUaGUgUmFtXFxzIEJyZWF0aCc6ICcxMjJBJywgLy8gY29uYWxcclxuICAgICdGcmFjdGFsSGFyZCBDaGltZXJhIFRoZSBEcmFnb25cXHMgQnJlYXRoJzogJzEyMkInLCAvLyBjb25hbFxyXG4gICAgJ0ZyYWN0YWxIYXJkIENoaW1lcmEgVGhlIERyYWdvblxccyBWb2ljZSc6ICc4NjEnLCAvLyB1bnRlbGVncmFwaGVkIGRvbnV0XHJcbiAgICAnRnJhY3RhbEhhcmQgQ2hpbWVyYSBUaGUgUmFtXFwncyBWb2ljZSc6ICc4NjAnLCAvLyB1bnRlbGVncmFwaGVkIGNlbnRlcmVkIGNpcmNsZVxyXG4gICAgJ0ZyYWN0YWxIYXJkIENoaW1lcmEgVGhlIExpb25cXCdzIEJyZWF0aCc6ICc4NUYnLCAvLyBjb25hbFxyXG4gICAgJ0ZyYWN0YWxIYXJkIE1vdGhlcmJpdCBQcm90b3R5cGUgQml0IERpZmZyYWN0aXZlIExhc2VyJzogJzI3QTgnLCAvLyBsaW5lIGFvZVxyXG4gICAgJ0ZyYWN0YWxIYXJkIE1vdGhlcmJpdCBQcm90b3R5cGUgQml0IEh5cGVyY3VycmVudCc6ICcyN0FDJywgLy8gaGl0dGluZyB0aGUgYml0IGxpbmUgbGFzZXIgZHVyaW5nIENpdGFkZWwgQnVzdGVyXHJcbiAgICAnRnJhY3RhbEhhcmQgTW90aGVyYml0IEFsbGFnYW4gR3Jhdml0eSc6ICcyN0E2JywgLy8gc3ByZWFkIG1hcmtlclxyXG4gICAgJ0ZyYWN0YWxIYXJkIE1vdGhlcmJpdCBDaXRhZGVsIEJ1c3Rlcic6ICcyN0E1JywgLy8gZnJvbnQgMTgwIGxhc2VyXHJcbiAgICAnRnJhY3RhbEhhcmQgUHJvdG90eXBlIE1pcnJvcmtuaWdodCBHdXN0JzogJzg2NScsIC8vIHRhcmdldGVkIGNpcmNsZVxyXG4gICAgJ0ZyYWN0YWxIYXJkIFJpbmtoYWxzIFJlZ29yZ2UnOiAnMjVCOCcsIC8vIHRhcmdldGVkIGNpcmNsZVxyXG4gICAgJ0ZyYWN0YWxIYXJkIFVsdGltYSBXYXJyaW9yIENpdGFkZWwgQnVzdGVyJzogJzI3OTInLCAvLyB1bnRlbGVncmFwaGVkIGZyb250IGxpbmUgbGFzZXJcclxuICAgICdGcmFjdGFsSGFyZCBVbHRpbWEgV2FycmlvciBFaW4gU29mJzogJzI3OTgnLCAvLyBTZXBoaXJvdCBwaGFzZSBiZWluZyBpbiB0aGUgZ3JlZW4gZ3Jvd2luZyBidWJibGVcclxuICAgICdGcmFjdGFsSGFyZCBCaW9tYW51ZmFjdHVyZWQgTWlub3RhdXIgMTEtVG9uemUgU3dpcGUnOiAnMjlBMicsIC8vIHVudGVsZWdyYXBoZWQgY29uYWxcclxuICAgICdGcmFjdGFsSGFyZCBCaW9tYW51ZmFjdHVyZWQgTWlub3RhdXIgMTExLVRvbnplIFN3aW5nJzogJzI5QTEnLCAvLyB0ZWxlZ3JhcGhlZCBsYXJnZSBjaXJjbGVcclxuICAgICdGcmFjdGFsaGFyZCBVbHRpbWEgQmVhc3QgRGVhdGggU3Bpbic6ICcyN0FEJywgLy8gbWVsZWUgcmFuZ2UgdW50ZWxlZ3JhcGhlZCBjaXJjbGVcclxuICAgICdGcmFjdGFsaGFyZCBVbHRpbWEgQmVhc3QgQWV0aGVyIEJlbmQnOiAnMjdBRicsIC8vIGdldCB1bmRlciBkb251dFxyXG4gICAgJ0ZyYWN0YWxoYXJkIFVsdGltYSBCZWFzdCBMaWdodCBQaWxsYXIgMSc6ICcyMjdCQScsIC8vIGluaXRpYWwgcG9pbnQgb2YgbGlnaHQgcGlsbGFyIGNpcmNsZXNcclxuICAgICdGcmFjdGFsaGFyZCBVbHRpbWEgQmVhc3QgTGlnaHQgUGlsbGFyIDInOiAnMjdCQicsIC8vIGZvbGxvdyB1cCBsaWdodCBwaWxsYXIgaGl0c1xyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ0ZyYWN0YWxIYXJkIE1vdGhlcmJpdCBGYWxzZSBHcmF2aXR5JzogJzI3QTcnLCAvLyBzdGFuZGluZyBpbiBBbGxhZ2FuIEdyYXZpdHkgcHVkZGxlLCBnaXZlcyBIZWF2eVxyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RXYXJuOiB7XHJcbiAgICAnRnJhY3RhbEhhcmQgVWx0aW1hIFdhcnJpb3IgSW5maW5pdGUgQW5ndWlzaCc6ICc0ODcnLCAvLyBQZXJzb25hbGx5IGZhaWxpbmcgWnVydmFuIHRvd2Vyc1xyXG4gICAgJ0ZyYWN0YWxIYXJkIFVsdGltYSBXYXJyaW9yIFJlZHVjZWQgSW1tdW5pdHknOiAnMTQzJywgLy8gRmFpbGluZyBTb3BoaWEgRGlzY2hvcmRhbnQgQ2xlYW5zaW5nXHJcbiAgICAnRnJhY3RhbGhhcmQgVWx0aW1hIEJlYXN0IEJ1cm5zJzogJzExQycsIC8vIHN0YW5kaW5nIGluIGZpcmUgZnJvbSBGbGFyZSBTdGFyXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdGcmFjdGFsSGFyZCBVbHRpbWEgV2FycmlvciBBZXRoZXJvcGxhc20nOiAnMjc5MycsIC8vIHRhbmtidXN0ZXIgY2xlYXZlXHJcbiAgICAnRnJhY3RhbEhhcmQgVWx0aW1hIFdhcnJpb3IgUmF0em9uJzogJzI3OTcnLCAvLyBTZXBoaXJvdCBwaGFzZSBidWJibGUgZHJvcFxyXG4gICAgJ0ZyYWN0YWxoYXJkIFVsdGltYSBCZWFzdCBBbGxhZ2FuIEdyYXZpdHknOiAnMjdCOScsIC8vIHNwcmVhZFxyXG4gIH0sXHJcbiAgc29sb1dhcm46IHtcclxuICAgICdGcmFjdGFsSGFyZCBVbHRpbWEgV2FycmlvciBNYXNzIEFldGhlcm9wbGFzbSc6ICcyNzk1JywgLy8gdGFua2J1c3RlciBjbGVhdmVcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG4vLyBTY2hvbGEgU2NvcnBpb24gSG9taW5nIE1pc3NpbGUgKDNBNjUpIGlzIGhhcmQgbm90IHRvIGhpdCBQaXBpbi9MeXNlIHNvIGp1c3QgaWdub3JlLlxyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVHaGltbHl0RGFyayxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnR2hpbWx5dCBBaXJib3JuZSBFeHBsb3Npb24nOiAnMzg4MScsIC8vIHNlbWktdGFyZ2V0ZWQgcmVkIGNpcmNsZVxyXG4gICAgJ0doaW1seXQgU2Nob2xhIEd1bnNoaXAgR2FybGVhbiBGaXJlJzogJzNBNkMnLCAvLyB0YXJnZXRlZCBjaXJjbGVcclxuICAgICdHaGltbHl0IE1hcmsgSUlJLUIgTWFnaXRlayBDb2xvc3N1cyBNYWdpdGVrIFNsYXNoIDEnOiAnMzc3NCcsIC8vIHNwaW5uaW5nIHBpZSBzbGljZXNcclxuICAgICdHaGltbHl0IE1hcmsgSUlJLUIgTWFnaXRlayBDb2xvc3N1cyBNYWdpdGVrIFNsYXNoIDInOiAnMzc3NScsIC8vIHNwaW5uaW5nIHBpZSBzbGljZXNcclxuICAgICdHaGltbHl0IE1hcmsgSUlJLUIgTWFnaXRlayBDb2xvc3N1cyBNYWdpdGVrIFNsYXNoIDMnOiAnMzk0RScsIC8vIHNwaW5uaW5nIHBpZSBzbGljZXNcclxuICAgICdHaGltbHl0IE1hcmsgSUlJLUIgTWFnaXRlayBDb2xvc3N1cyBNYWdpdGVrIFNsYXNoIDQnOiAnMzk0RicsIC8vIHNwaW5uaW5nIHBpZSBzbGljZXNcclxuICAgICdHaGltbHl0IE1hcmsgSUlJLUIgTWFnaXRlayBDb2xvc3N1cyBFeGhhdXN0JzogJzM3NzAnLCAvLyBsaW5lXHJcbiAgICAnR2hpbWx5dCBTY2hvbGEgQXJtb3JlZCBXZWFwb24gRGlmZnJhY3RpdmUgTGFzZXInOiAnM0E3NCcsIC8vIHRhcmdldGVkIGNpcmNsZVxyXG4gICAgJ0doaW1seXQgUHJvbWV0aGV1cyBOZWVkbGUgR3VuJzogJzM0NUEnLCAvLyBmcm9udCA5MCBkZWdyZWUgY29uYWxcclxuICAgICdHaGltbHl0IFByb21ldGhldXMgT2lsIFNob3dlcic6ICczNDU2JywgLy8gYmFjayAyNzAgZGVncmVlXHJcbiAgICAnR2hpbWx5dCBQcm9tZXRoZXVzIEhlYXQnOiAnMzQ1OCcsIC8vIHdhbGwgbGFzZXJcclxuICAgICdHaGltbHl0IFNjaG9sYSBDb2xvc3N1cyBHcmFuZCBTdHJpa2UnOiAnM0E3NScsIC8vIHRoaW4gbGluZVxyXG4gICAgJ0doaW1seXQgU2Nob2xhIEhleGFkcm9uZSBTd29vcCc6ICczODgyJywgLy8gbGluZSBhb2UgZW50ZXJpbmcgYXJlbmFcclxuICAgICdHaGltbHl0IFNjaG9sYSBIZXhhZHJvbmUgMi1Ub256ZSBNYWdpdGVrIE1pc3NpbGUnOiAnM0E3MScsIC8vIHRhcmdldGVkIGNpcmNsZVxyXG4gICAgJ0doaW1seXQgU2Nob2xhIEhleGFkcm9uZSBDaXJjbGUgb2YgRGVhdGgnOiAnM0E3MCcsIC8vIGNlbnRlcmVkIGNpcmNsZVxyXG4gICAgJ0doaW1seXQgU2Nob2xhIE1hcmsgSUkgQ29sb3NzdXMgRXhoYXVzdCc6ICczQTc2JywgLy8gbGluZVxyXG4gICAgJ0doaW1seXQgU2Nob2xhIE1hcmsgSUkgQ29sb3NzdXMgR3JhbmQgU3dvcmQnOiAnM0E3NycsIC8vIHdpZGUgY29uYWxcclxuICAgICdHaGltbHl0IFNvcmFudXMgRHVvIEFuZ3J5IFNhbGFtYW5kZXInOiAnMzcyQycsIC8vIHRhcmdldGVkIGxpbmVcclxuICAgICdHaGltbHl0IFNvcmFudXMgRHVvIENyb3NzYm9uZXMnOiAnM0M4MCcsIC8vIHRhcmdldGVkIGxpbmUgd2l0aCBrbm9ja2JhY2tcclxuICAgICdHaGltbHl0IFNvcmFudXMgRHVvIEJvbWJhcmRtZW50JzogJzNDNzEnLCAvLyBsYXJnZSBjaXJjbGVzIGR1cmluZyBPcmRlciB0byBCb21iYXJkXHJcbiAgICAnR2hpbWx5dCBTb3JhbnVzIER1byBTdHVubmluZyBTd2VlcCc6ICczQzcyJywgLy8gY2VudGVyZWQgY2lyY2xlXHJcbiAgICAnR2hpbWx5dCBTb3JhbnVzIER1byBDcm9zc2hhdGNoJzogJzM3MjInLCAvLyByZXBlYXRlZCBYIGNoYXJnZXMgZHVyaW5nIGludGVybWlzc2lvbnNcclxuICAgICdHaGltbHl0IFNvcmFudXMgRHVvIENlcnVsZXVtIFRhbmsgQnVyc3QnOiAnMzcxQScsIC8vIGNlcnVsZXVtIHRhbmsgY2lyY2xlIGV4cGxvc2lvbnNcclxuICAgICdHaGltbHl0IFNvcmFudXMgRHVvIFF1YXRlcm5pdHknOiAnMzczMycsIC8vIHNlcmllcyBvZiBYIGxpbmUgY2hhcmdlc1xyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RXYXJuOiB7XHJcbiAgICAnR2hpbWx5dCBNYXJrIElJSS1CIE1hZ2l0ZWsgQ29sb3NzdXMgQnVybnMnOiAnMUY3JywgLy8gc3RhbmRpbmcgaW4gTWFnaXRlayBTbGFzaCBmaXJlIHBpZSBzbGljZVxyXG4gICAgJ0doaW1seXQgUHJvbWV0aGV1cyBCdXJucyc6ICcxMUMnLCAvLyBzdGFuZGluZyBpbiBvdXRzaWRlIGZpcmUgY2lyY2xlXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdHaGltbHl0IE1hcmsgSUlJLUIgTWFnaXRlayBDb2xvc3N1cyBKYXJyaW5nIEJsb3cnOiAnMzc2RScsIC8vIHRhbmsgYnVzdGVyIGNvbmFsIGNsZWF2ZVxyXG4gICAgJ0doaW1seXQgTWFyayBJSUktQiBNYWdpdGVrIENvbG9zc3VzIFdpbGQgRmlyZSBCZWFtJzogJzM3NzInLCAvLyBzcHJlYWQgbWFya2VyXHJcbiAgICAnR2hpbWx5dCBTY2hvbGEgQ29sb3NzdXMgSG9taW5nIExhc2VyJzogJzM4ODQnLCAvLyBzcHJlYWQgbWFya2VyXHJcbiAgfSxcclxuICBzb2xvV2Fybjoge1xyXG4gICAgJ0doaW1seXQgTWFyayBJSUktQiBNYWdpdGVrIENvbG9zc3VzIE1hZ2l0ZWsgUmF5JzogJzM3NkYnLCAvLyBzdGFjayBtYXJrZXJcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkhlbGxzTGlkLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdIZWxsc0xpZCBOdXJpa2FiZSBGaXJlIElJJzogJzI5OUYnLCAvLyB0YXJnZXRlZCBjaXJjbGUnXHJcbiAgICAnSGVsbHNMaWQgTWFnbWEnOiAnMjg4MicsIC8vIGxpbmUgYXR0YWNrcyBmcm9tIHdhbGxcclxuICAgICdIZWxsc0xpZCBIZWxsaXNoIExpb24gSG93bGluZyBXYWlsJzogJzI5OUQnLCAvLyBsYXJnZSBjZW50ZXJlZCBjaXJjbGVcclxuICAgICdIZWxsc0xpZCBIZWxsZmlyZSBTaGlraWdhbWkgRmx1aWQgU3dpbmcnOiAnMjk5RScsIC8vIGNvbmFsXHJcbiAgICAnSGVsbHNMaWQgT3Rha2UtbWFydSAxMDAtdG9uemUgU3dpbmcnOiAnMjdCRScsIC8vIHVudGVsZWdyYXBoZWQgY2VudGVyZWQgY2lyY2xlXHJcbiAgICAnSGVsbHNMaWQgT3Rha2UtbWFydSBWb2xjYW5pYyBEZWJyaXMnOiAnMjdDNScsIC8vIGFtYmllbnQgY2lyY2xlcyBvbiBmbG9vclxyXG4gICAgJ0hlbGxzTGlkIE90YWtlLW1hcnUgMTAtdG9uemUgU2xhc2gnOiAnMjdCRicsIC8vIHRlbGVncmFwaGVkIGNvbmFsXHJcbiAgICAnSGVsbHNMaWQgT3Rha2UtbWFydSBEaXNyb2JlJzogJzI3QzInLCAvLyBzbWFsbCBjaXJjbGVzIGFwcGVhcmluZyBhZnRlciBwcmV5IG1hcmtlclxyXG4gICAgJ0hlbGxzTGlkIE90YWtlLW1hcnUgU3RvbmUgQ3VkZ2VsJzogJzI3QzMnLCAvLyBzcGluIGF0dGFjayB3aGVuIHRvdWNoaW5nIHN3b3JkL3NoaWVsZFxyXG4gICAgJ0hlbGxzTGlkIE90YWtlLW1hcnUgTGlxdWlkIENhcmFwYWNlJzogJzI3QzAnLCAvLyBiZWluZyB0b28gY2xvc2UgdG8gYm9zcyBkdXJpbmcgcHJleSBEaXNyb2JlIHBoYXNlXHJcbiAgICAnSGVsbHNMaWQgSGVsbGlzaCBZdW1lbWkgQmxhbmtldCBUaHVuZGVyJzogJzIxQjMnLCAvLyBjZW50ZXJlZCBjaXJjbGVcclxuICAgICdIZWxsc0xpZCBLYWphIEVsZWN0cm9nZW5lc2lzJzogJzExQzInLCAvLyB0YXJnZXRlZCBsYXJnZSBjaXJjbGUsIGJ5IGJvdGggS2FqYSBhbmQgS2FqYSBvZiB0aGUgU2V2ZW4gRmxhbWVzXHJcbiAgICAnSGVsbHNMaWQgS2FtYWl0YWNoaSBDaXJjbGluZyBXaW5kcyc6ICcyN0M4JywgLy8gd2luZCBkb251dFxyXG4gICAgJ0hlbGxzTGlkIEthbWFpdGFjaGkgUm9sbGluZyBXaW5kcyc6ICcyN0M5JywgLy8gbGFyZ2UgYmFjay9mcm9udCBsaW5lXHJcbiAgICAnSGVsbHNMaWQgS2FtYWl0YWNoaSBUaGUgUGF0aWVudCBCbGFkZSc6ICcyN0M3JywgLy8gZnJvbnQgMTgwIGNsZWF2ZVxyXG4gICAgJ0hlbGxzTGlkIEthbWFpdGFjaGkgTm9ydGhlcmx5JzogJzI3Q0QnLCAvLyB1bnRhcmdldGFibGUgdHJpZ2dlcmVkIHdpbmQgc3ByaXRlIGtub2NrYmFjayBleHBsb3Npb25cclxuICAgICdIZWxsc0xpZCBLYW1haXRhY2hpIFRzdW11amktS2F6ZSBUb3JuYWRvJzogJzI0N0UnLCAvLyBsYXJnZSB0YXJnZXRlZCBjaXJjbGVcclxuICAgICdIZWxsc0xpZCBLYW1haXRhY2hpIExhdGUgSGFydmVzdCc6ICcyN0NDJywgLy8gZGFzaGVzXHJcbiAgICAnSGVsbHNMaWQgS2FtYWl0YWNoaSBHYWxlIFRoZSBTdG9ybVxcJ3MgR3JpcCc6ICcyN0NFJywgLy8gc3RhbmRpbmcgaW4gdGhlIHRvcm5hZG9cclxuICAgICdIZWxsc0xpZCBTaGlraWdhbWkgb2YgdGhlIFNwcmluZyBCcmluZSBCb21iJzogJzI5QTAnLCAvLyB0YXJnZXRlZCBjaXJjbGVcclxuICAgICdIZWxsc0xpZCBTdGlsbHdpbmQgTnVlIFR3aXN0ZXInOiAnMjk2NScsIC8vIHRhcmdldGVkIGNpcmNsZVxyXG4gICAgJ0hlbGxzTGlkIEJvbHRzdG9ybSBOdWUgU2N5dGhlIFRhaWwnOiAnMkEwOCcsIC8vIGNlbnRlcmVkIGNpcmNsZVxyXG4gICAgJ0hlbGxzTGlkIEJvbHRzdG9ybSBOdWUgQnV0Y2hlcic6ICcyOTY0JywgLy8gbGFyZ2Ugd2lkZSBjb25hbFxyXG4gICAgJ0hlbGxzTGlkIEJvbHRzdG9ybSBOdWUgU3BhcmsnOiAnMjk2NCcsIC8vIGRvbnV0IHdpdGggYSB2ZXJ5IGxhcmdlIGhvbGVcclxuICAgICdIZWxsc0xpZCBHZW5idSBTaW5pc3RlciBUaWRlJzogJzI3RDUnLCAvLyBsaWdodCB1cCBhcnJvdyBoZXhlc1xyXG4gICAgJ0hlbGxzTGlkIEdlbmJ1IEhlbGwgb2YgV2F0ZXInOiAnMjdEMCcsIC8vIGNyb3NzIGFvZVxyXG4gICAgJ0hlbGxzTGlkIEdlbmJ1IFNoZWxsIFNob3dlcic6ICcyODUwJywgLy8gbGlnaHQgdXAgaGV4IHNxdWFyZXMgZHVyaW5nIENoZWxvbmlhbiBHYXRlIG1pZHBoYXNlXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdIZWxsc0xpZCBHZW5idSBIZWxsIG9mIFdhc3RlJzogJzI3RDInLCAvLyB2ZXJ5IGxhcmdlIHNwcmVhZCBtYXJrZXJcclxuICAgICdIZWxsc0xpZCBSZWlzZW4gVGF0c3Vub2tvIEh5ZHJhdGUnOiAnMjEzNCcsIC8vIHVudGVsZWdyYXBoZWQgY2xlYXZlIGZyb20gc25ha2UgbW9iXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5LdWdhbmVDYXN0bGUsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0t1Z2FuZSBDYXN0bGUgVGVua2EgR29ra2VuJzogJzIzMjknLCAvLyBGcm9udGFsIGNvbmUgQW9FLCAgSm9pIEJsYWRlIHRyYXNoLCBiZWZvcmUgYm9zcyAxXHJcbiAgICAnS3VnYW5lIENhc3RsZSBLZW5raSBSZWxlYXNlIFRyYXNoJzogJzIzMzAnLCAvLyBDaGFyaW90IEFvRSwgSm9pIEtpeW9mdXNhIHRyYXNoLCBiZWZvcmUgYm9zcyAxXHJcblxyXG4gICAgJ0t1Z2FuZSBDYXN0bGUgQ2xlYXJvdXQnOiAnMUU5MicsIC8vIEZyb250YWwgY29uZSBBb0UsIFp1aWtvLU1hcnUsIGJvc3MgMVxyXG4gICAgJ0t1Z2FuZSBDYXN0bGUgSGFyYS1LaXJpIDEnOiAnMUU5NicsIC8vIEdpYW50IGNpcmNsZSBBb0UsIEhhcmFraXJpIEtvc2hvLCBib3NzIDFcclxuICAgICdLdWdhbmUgQ2FzdGxlIEhhcmEtS2lyaSAyJzogJzI0RjknLCAvLyBHaWFudCBjaXJjbGUgQW9FLCBIYXJha2lyaSBLb3NobywgYm9zcyAxXHJcblxyXG4gICAgJ0t1Z2FuZSBDYXN0bGUgSnVqaSBTaHVyaWtlbiAxJzogJzIzMkQnLCAvLyBMaW5lIEFvRSwgS2FyYWt1cmkgT25taXRzdSB0cmFzaCwgYmVmb3JlIGJvc3MgMlxyXG4gICAgJ0t1Z2FuZSBDYXN0bGUgMTAwMCBCYXJicyc6ICcyMTk4JywgLy8gTGluZSBBb0UsIEpvaSBLb2phIHRyYXNoLCBiZWZvcmUgYm9zcyAyXHJcblxyXG4gICAgJ0t1Z2FuZSBDYXN0bGUgSnVqaSBTaHVyaWtlbiAyJzogJzFFOTgnLCAvLyBMaW5lIEFvRSwgRG9qdW4gTWFydSwgYm9zcyAyXHJcbiAgICAnS3VnYW5lIENhc3RsZSBUYXRhbWktR2Flc2hpJzogJzFFOUQnLCAvLyBGbG9vciB0aWxlIGxpbmUgYXR0YWNrLCBFbGtpdGUgT25taXRzdSwgYm9zcyAyXHJcbiAgICAnS3VnYW5lIENhc3RsZSBKdWppIFNodXJpa2VuIDMnOiAnMUVBMCcsIC8vIExpbmUgQW9FLCBFbGl0ZSBPbm1pdHN1LCBib3NzIDJcclxuXHJcbiAgICAnS3VnYW5lIENhc3RsZSBBdXRvIENyb3NzYm93JzogJzIzMzMnLCAvLyBGcm9udGFsIGNvbmUgQW9FLCBLYXJha3VyaSBIYW55YSB0cmFzaCwgYWZ0ZXIgYm9zcyAyXHJcbiAgICAnS3VnYW5lIENhc3RsZSBIYXJha2lyaSAzJzogJzIzQzknLCAvLyBHaWFudCBDaXJjbGUgQW9FLCBIYXJha2lyaSAgSGFueWEgdHJhc2gsIGFmdGVyIGJvc3MgMlxyXG5cclxuICAgICdLdWdhbmUgQ2FzdGxlIElhaS1HaXJpJzogJzFFQTInLCAvLyBDaGFyaW90IEFvRSwgWW9qaW1ibywgYm9zcyAzXHJcbiAgICAnS3VnYW5lIENhc3RsZSBGcmFnaWxpdHknOiAnMUVBQScsIC8vIENoYXJpb3QgQW9FLCBJbm9zaGlrYWNobywgYm9zcyAzXHJcbiAgICAnS3VnYW5lIENhc3RsZSBEcmFnb25maXJlJzogJzFFQUInLCAvLyBMaW5lIEFvRSwgRHJhZ29uIEhlYWQsIGJvc3MgM1xyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnS3VnYW5lIENhc3RsZSBJc3Nlbic6ICcxRTk3JywgLy8gSW5zdGFudCBmcm9udGFsIGNsZWF2ZSwgRG9qdW4gTWFydSwgYm9zcyAyXHJcbiAgICAnS3VnYW5lIENhc3RsZSBDbG9ja3dvcmsgUmFpdG9uJzogJzFFOUInLCAvLyBMYXJnZSBsaWdodG5pbmcgc3ByZWFkIGNpcmNsZXMsIERvanVuIE1hcnUsIGJvc3MgMlxyXG4gIH0sXHJcbiAgc29sb0ZhaWw6IHtcclxuICAgICdLdWdhbmUgQ2FzdGxlIEhlbG0gQ3JhY2snOiAnMUU5NCcsIC8vIFN0YWNrIG1hcmtlciwgWnVpa28gTWFydSwgYm9zcyAxXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuLy8gVE9ETzogY2FuIE11Y2FsIEdsb2IgKDFGNzMpIGhpdCBtdWx0aXBsZSBwZW9wbGU/XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlNoaXN1aU9mVGhlVmlvbGV0VGlkZXMsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1NoaXN1aSBWaW9sZXQgQ29yYWxzaGVsbCBCdWJibGUgU2hvd2VyJzogJzIzNicsIC8vIGZyb250YWwgY29uYWxcclxuICAgICdTaGlzdWkgSGlrYWdpcmkgRGVmaWJyaWxsYXRlJzogJzExQzEnLCAvLyBjZW50ZXJlZCBjaXJjbGVcclxuICAgICdTaGlzdWkgQnVyaWVkIE1vbmtmaXNoIEZpc2ggT3V0IE9mIFdhdGVyJzogJzFGODgnLCAvLyB1bnRlbGVncmFwaGVkIHRyaWdnZXJlZCBtb25rZmlzaCBtaW5lXHJcbiAgICAnU2hpc3VpIEFuZ28gRmxvdW5kZXInOiAnOTFGJywgLy8gbGluZSBhb2VcclxuICAgICdTaGlzdWkgSGlrYWdpcmkgRWxlY3Ryb2dlbmVzaXMnOiAnMTFDMicsIC8vIHRhcmdldGVkIGNpcmNsZVxyXG4gICAgJ1NoaXN1aSBBbWlraXJpIFNodWNrJzogJzFGNzUnLCAvLyBub3Qga2lsbGluZyBBbWlraXJpJ3MgbGVnXHJcbiAgICAnU2hpc3VpIFBhbGFjZSBHdWFyZCBIZWFydHN0b3BwZXInOiAnMzYyJywgLy8gZHJhZ29vbiBndWFyZCBsaW5lIGFvZVxyXG4gICAgJ1NoaXN1aSBQYWxhY2UgR3VhcmQgRmlyZSBBcnJvdyc6ICcxRjg5JywgLy8gYW1iaWVudCB1bnRhcmdldGVkIGNpcmNsZXNcclxuICAgICdTaGlzdWkgQ2FwdGFpbiBPZiBUaGUgR3VhcmQgVGVua2EgR29rZW4nOiAnMjNCNycsIC8vIHdpZGUgY29uYWxcclxuICAgICdTaGlzdWkgUnVieSBQcmluY2VzcyBDb3Jpb2xpcyBLaWNrJzogJzFGN0InLCAvLyBsYXJnZSBjZW50ZXJlZCBjaXJjbGUgKHNlZHVjZSBhbHdheXMgcGFpcmVkIHdpdGggdGhpcylcclxuICAgICdTaGlzdWkgUnVieSBQcmluY2VzcyBBYnlzc2FsIFZvbGNhbm8nOiAnMUY3QycsIC8vIGNlbnRlcmVkIGNpcmNsZSBwYWlyZWQgd2l0aCBjaGFzZSBhb2VcclxuICAgICdTaGlzdWkgUnVieSBQcmluY2VzcyBHZW90aGVybWFsIEZsYXR1bGVuY2UgMSc6ICcyNEQ3JywgLy8gY2hhc2UgYW9lIGluaXRpYWxcclxuICAgICdTaGlzdWkgUnVieSBQcmluY2VzcyBHZW90aGVybWFsIEZsYXR1bGVuY2UgMic6ICcxRjdEJywgLy8gY2hhc2UgYW9lIHgxMFxyXG4gICAgJ1NoaXN1aSBWaW9sZXQgQm9tYmZpc2ggMTAwMCBTcGluZXMnOiAnMUZGNycsIC8vIHJvYW1pbmcgYm9tYmZpc2ggdHJpZ2dlcmVkIGNpcmNsZVxyXG4gICAgJ1NoaXN1aSBCbHVlIFVua2l1IEZsdXNoJzogJzIxQTQnLCAvLyBpbnRlcnJ1cHRpYmxlIGNlbnRlcmVkIGNpcmNsZVxyXG4gICAgJ1NoaXN1aSBTaGlzdWkgWW9oaSBCbGFjayBUaWRlJzogJzFGODEnLCAvLyByZWFwcGVhcmFuY2UgYWZ0ZXIgdGhpY2sgZm9nXHJcbiAgICAnU2hpc3VpIFNoaXN1aSBZb2hpIENodXJuIEJ1YmJsZSBCdXJzdCc6ICcxRjg0JywgLy8gbm90IGtpbGxpbmcgYnViYmxlIGR1cmluZyB0aGljayBmb2dcclxuICAgICdTaGlzdWkgU2hpc3VpIFlvaGkgTmFpc2hpLU5vLUthbWkgQml0ZSBBbmQgUnVuJzogJzFGODUnLCAvLyBub3Qga2lsbGluZyBzaGFyayBhZGRcclxuICAgICdTaGlzdWkgU2hpc3VpIFlvaGkgTmFpc2hpLU5vLUpvIEJpdGUgQW5kIFJ1bic6ICcxRjg2JywgLy8gbm90IGtpbGxpbmcgc21hbGwgc2hhcmsgYWRkXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdFdhcm46IHtcclxuICAgIC8vIE5vdGU6IERyb3BzeSAoMjEzLCB3aXRoIGNvdW50IGZpZWxkKSBpcyB0aGUgZWZmZWN0IGR1cmluZyBTaGlzdWkgWW9oaSBUaGljayBGb2dcclxuICAgICdTaGlzdWkgRHJvcHN5JzogJzEyMScsIC8vIHN0YW5kaW5nIGluIEthbWlraXJpIGRpZ2VzdGl2ZSBmbHVpZCBwdWRkbGVcclxuICAgICdTaGlzdWkgSHlzdGVyaWEnOiAnMTI4JywgLy8gZmFpbGluZyBTaGlzdWkgWW9oaSBNYWQgU3RhcmUgKDFGODIpXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdTaGlzdWkgQW1pa2lyaSBEaWdlc3QnOiAnMUY3OScsIC8vIEthbWlraXJpIGRpZ2VzdGl2ZSBmbHVpZCBwdWRkbGUgbGFuZGluZ1xyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlU2lyZW5zb25nU2VhLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdTaXJlbnNvbmcgQW5jaWVudCBZbWlyIEhlYWQgU25hdGNoJzogJzIzNTMnLCAvLyBmcm9udGFsIGNvbmFsXHJcbiAgICAnU2lyZW5zb25nIFJlZmxlY3Rpb24gb2YgS2FybGFib3MgVGFpbCBTY3Jldyc6ICcxMkI3JywgLy8gdGFyZ2V0ZWQgY2lyY2xlXHJcbiAgICAnU2lyZW5zb25nIEx1Z2F0IEFtb3JwaG91cyBBcHBsYXVzZSc6ICcxRjU2JywgLy8gZnJvbnRhbCAxODAgY2xlYXZlXHJcbiAgICAnU2lyZW5zb25nIEx1Z2F0IENvbmN1c3NpdmUgT3NjaWxsYXRpb24nOiAnMUY1QicsIC8vIDUgb3IgNyBjaXJjbGVzXHJcbiAgICAnU2lyZW5zb25nIFRoZSBKYW5lIEd1eSBCYWxsIG9mIE1hbGljZSc6ICcxRjZBJywgLy8gYW1iaWVudCBjYW5ub24gY2lyY2xlXHJcbiAgICAnU2lyZW5zb25nIERhcmsnOiAnMTlERicsIC8vIFNraW5sZXNzIFNraXBwZXIgLyBGbGVzaGxlc3MgQ2FwdGl2ZSB0YXJnZXRlZCBjaXJjbGVcclxuICAgICdTaXJlbnNvbmcgVGhlIEdvdmVybm9yIFNoYWRvd3N0cmlrZSc6ICcxRjVEJywgLy8gc3RhbmRpbmcgaW4gc2hhZG93c1xyXG4gICAgJ1NpcmVuc29uZyBVbmRlYWQgV2FyZGVuIE1hcmNoIG9mIHRoZSBEZWFkJzogJzIzNTEnLCAvLyBmcm9udGFsIGNvbmFsXHJcbiAgICAnU2lyZW5zb25nIEZsZXNobGVzcyBDYXB0aXZlIEZsb29kJzogJzIxOEInLCAvLyBjZW50ZXJlZCBjaXJjbGUgYWZ0ZXIgc2VkdWN0aXZlIHNjcmVhbVxyXG4gICAgJ1NpcmVuc29uZyBMb3JlbGVpIFZvaWQgV2F0ZXIgSUlJJzogJzFGNjgnLCAvLyBsYXJnZSB0YXJnZXRlZCBjaXJjbGVcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlNhaW50TW9jaWFubmVzQXJib3JldHVtSGFyZCxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnU3QgTW9jaWFubmUgSGFyZCBNdWRzdHJlYW0nOiAnMzBEOScsIC8vIFRhcmdldGVkIGNpcmNsZSBBb0UsIEltbWFjdWxhdGUgQXBhIHRyYXNoLCBiZWZvcmUgYm9zcyAxXHJcbiAgICAnU3QgTW9jaWFubmUgSGFyZCBTaWxrZW4gU3ByYXknOiAnMzM4NScsIC8vIFJlYXIgY29uZSBBb0UsIFdpdGhlcmVkIEJlbGxhZG9ubmEgdHJhc2gsIGJlZm9yZSBib3NzIDFcclxuICAgICdTdCBNb2NpYW5uZSBIYXJkIE11ZGR5IFB1ZGRsZXMnOiAnMzBEQScsIC8vIFNtYWxsIHRhcmdldGVkIGNpcmNsZSBBb0VzLCBEb3Jwb2trdXIgdHJhc2gsIGJlZm9yZSBib3NzIDFcclxuICAgICdTdCBNb2NpYW5uZSBIYXJkIE9kaW91cyBBaXInOiAnMkU0OScsIC8vIEZyb250YWwgY29uZSBBb0UsIE51bGxjaHUsIGJvc3MgMVxyXG4gICAgJ1N0IE1vY2lhbm5lIEhhcmQgU0x1ZGdlIEJvbWInOiAnMkU0RScsIC8vIFRhcmdldGVkIGNpcmNsZSBBb0VzLCBOdWxsY2h1LCBib3NzIDFcclxuICAgICdTdCBNb2NpYW5uZSBIYXJkIE9kaW91cyBBdG1vc3BoZXJlJzogJzJFNTEnLCAvLyBDaGFubmVsZWQgMy80IGFyZW5hIGNsZWF2ZSwgTnVsbGNodSwgYm9zcyAxXHJcbiAgICAnU3QgTW9jaWFubmUgSGFyZCBDcmVlcGluZyBJdnknOiAnMzFBNScsIC8vIEZyb250YWwgY29uZSBBb0UsIFdpdGhlcmVkIEt1bGFrIHRyYXNoLCBiZWZvcmUgYm9zcyAyXHJcbiAgICAnU3QgTW9jaWFubmUgSGFyZCBSb2Nrc2xpZGUnOiAnMzEzNCcsIC8vIExpbmUgQW9FLCBTaWx0IEdvbGVtLCBib3NzIDJcclxuICAgICdTdCBNb2NpYW5uZSBIYXJkIEVhcnRocXVha2UgSW5uZXInOiAnMzEyRScsIC8vIENoYXJpb3QgQW9FLCBMYWtoYW11LCBib3NzIDJcclxuICAgICdTdCBNb2NpYW5uZSBIYXJkIEVhcnRocXVha2UgT3V0ZXInOiAnMzEyRicsIC8vIER5bmFtbyBBb0UsIExha2hhbXUsIGJvc3MgMlxyXG4gICAgJ1N0IE1vY2lhbm5lIEhhcmQgRW1iYWxtaW5nIEVhcnRoJzogJzMxQTYnLCAvLyBMYXJnZSBDaGFyaW90IEFvRSwgTXVkZHkgTWF0YSwgYWZ0ZXIgYm9zcyAyXHJcbiAgICAnU3QgTW9jaWFubmUgSGFyZCBRdWlja21pcmUnOiAnMzEzNicsIC8vIFNld2FnZSBzdXJnZSBhdm9pZGVkIG9uIHBsYXRmb3JtcywgVG9ra2FwY2hpLCBib3NzIDNcclxuICAgICdTdCBNb2NpYW5uZSBIYXJkIFF1YWdtaXJlIFBsYXRmb3Jtcyc6ICczMTM5JywgLy8gUXVhZ21pcmUgZXhwbG9zaW9uIG9uIHBsYXRmb3JtcywgVG9ra2FwY2hpLCBib3NzIDNcclxuICAgICdTdCBNb2NpYW5uZSBIYXJkIEZlY3VsZW50IEZsb29kJzogJzMxM0MnLCAvLyBUYXJnZXRlZCB0aGluIGNvbmUgQW9FLCBUb2trYXBjaGksIGJvc3MgM1xyXG4gICAgJ1N0IE1vY2lhbm5lIEhhcmQgQ29ycnVwdHVyZSc6ICczM0EwJywgLy8gTXVkIFNsaW1lIGV4cGxvc2lvbiwgYm9zcyAzLiAoTm8gZXhwbG9zaW9uIGlmIGRvbmUgY29ycmVjdGx5LilcclxuICB9LFxyXG4gIGdhaW5zRWZmZWN0V2Fybjoge1xyXG4gICAgJ1N0IE1vY2lhbm5lIEhhcmQgU2VkdWNlZCc6ICczREYnLCAvLyBHYXplIGZhaWx1cmUsIFdpdGhlcmVkIEJlbGxhZG9ubmEgdHJhc2gsIGJlZm9yZSBib3NzIDFcclxuICAgICdTdCBNb2NpYW5uZSBIYXJkIFBvbGxlbic6ICcxMycsIC8vIFNsdWRnZSBwdWRkbGVzLCBOdWxsY2h1LCBib3NzIDFcclxuICAgICdTdCBNb2NpYW5uZSBIYXJkIFRyYW5zZmlndXJhdGlvbic6ICc2NDgnLCAvLyBSb2x5LVBvbHkgQW9FIGNpcmNsZSBmYWlsdXJlLCBCTG9vbWluZyBCaWxva28gdHJhc2gsIGJlZm9yZSBib3NzIDJcclxuICAgICdTdCBNb2NpYW5uZSBIYXJkIEh5c3RlcmlhJzogJzEyOCcsIC8vIEdhemUgZmFpbHVyZSwgTGFraGFtdSwgYm9zcyAyXHJcbiAgICAnU3QgTW9jaWFubmUgSGFyZCBTdGFiIFdvdW5kJzogJzQ1RCcsIC8vIEFyZW5hIG91dGVyIHdhbGwgZWZmZWN0LCBib3NzIDJcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1N0IE1vY2lhbm5lIEhhcmQgVGFwcm9vdCc6ICcyRTRDJywgLy8gTGFyZ2Ugb3JhbmdlIHNwcmVhZCBjaXJjbGVzLCBOdWxsY2h1LCBib3NzIDFcclxuICAgICdTdCBNb2NpYW5uZSBIYXJkIEVhcnRoIFNoYWtlcic6ICczMTMxJywgLy8gRWFydGggU2hha2VyLCBMYWtoYW11LCBib3NzIDJcclxuICB9LFxyXG4gIHNvbG9GYWlsOiB7XHJcbiAgICAnU3QgTW9jaWFubmUgSGFyZCBGYXVsdCBXYXJyZW4nOiAnMkU0QScsIC8vIFN0YWNrIG1hcmtlciwgTnVsbGNodSwgYm9zcyAxXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZVN3YWxsb3dzQ29tcGFzcyxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnU3dhbGxvd3MgQ29tcGFzcyBJdnkgRmV0dGVycyc6ICcyQzA0JywgLy8gQ2lyY2xlIGdyb3VuZCBBb0UsIFNhaSBUYWlzdWkgdHJhc2gsIGJlZm9yZSBib3NzIDFcclxuICAgICdTd2FsbG93cyBDb21wYXNzIFdpbGRzd2luZCAxJzogJzJDMDUnLCAvLyBUb3JuYWRvIGdyb3VuZCBBb0UsIHBsYWNlZCBieSBTYWkgVGFpc3VpIHRyYXNoLCBiZWZvcmUgYm9zcyAxXHJcblxyXG4gICAgJ1N3YWxsb3dzIENvbXBhc3MgWWFtYS1LYWd1cmEnOiAnMkI5NicsIC8vIEZyb250YWwgbGluZSBBb0UsIE90ZW5ndSwgYm9zcyAxXHJcbiAgICAnU3dhbGxvd3MgQ29tcGFzcyBGbGFtZXMgT2YgSGF0ZSc6ICcyQjk4JywgLy8gRmlyZSBvcmIgZXhwbG9zaW9ucywgYm9zcyAxXHJcbiAgICAnU3dhbGxvd3MgQ29tcGFzcyBDb25mbGFncmF0ZSc6ICcyQjk5JywgLy8gQ29sbGlzaW9uIHdpdGggZmlyZSBvcmIsIGJvc3MgMVxyXG5cclxuICAgICdTd2FsbG93cyBDb21wYXNzIFVwd2VsbCc6ICcyQzA2JywgLy8gVGFyZ2V0ZWQgY2lyY2xlIGdyb3VuZCBBb0UsIFNhaSBUYWlzdWkgdHJhc2gsIGJlZm9yZSBib3NzIDJcclxuICAgICdTd2FsbG93cyBDb21wYXNzIEJhZCBCcmVhdGgnOiAnMkMwNycsIC8vIEZyb250YWwgY2xlYXZlLCBKaW5tZW5qdSB0cmFzaCwgYmVmb3JlIGJvc3MgMlxyXG5cclxuICAgICdTd2FsbG93cyBDb21wYXNzIEdyZWF0ZXIgUGFsbSAxJzogJzJCOUQnLCAvLyBIYWxmIGFyZW5hIHJpZ2h0IGNsZWF2ZSwgRGFpZGFyYWJvdGNoaSwgYm9zcyAyXHJcbiAgICAnU3dhbGxvd3MgQ29tcGFzcyBHcmVhdGVyIFBhbG0gMic6ICcyQjlFJywgLy8gSGFsZiBhcmVuYSBsZWZ0IGNsZWF2ZSwgRGFpZGFyYWJvdGNoaSwgYm9zcyAyXHJcbiAgICAnU3dhbGxvd3MgQ29tcGFzcyBUcmlidXRhcnknOiAnMkJBMCcsIC8vIFRhcmdldGVkIHRoaW4gY29uYWwgZ3JvdW5kIEFvRXMsIERhaWRhcmFib3RjaGksIGJvc3MgMlxyXG5cclxuICAgICdTd2FsbG93cyBDb21wYXNzIFdpbGRzd2luZCAyJzogJzJDMDYnLCAvLyBDaXJjbGUgZ3JvdW5kIEFvRSwgZW52aXJvbm1lbnQsIGFmdGVyIGJvc3MgMlxyXG4gICAgJ1N3YWxsb3dzIENvbXBhc3MgV2lsZHN3aW5kIDMnOiAnMkMwNycsIC8vIENpcmNsZSBncm91bmQgQW9FLCBwbGFjZWQgYnkgU2FpIFRhaXN1aSB0cmFzaCwgYWZ0ZXIgYm9zcyAyXHJcbiAgICAnU3dhbGxvd3MgQ29tcGFzcyBGaWxvcGx1bWVzJzogJzJDNzYnLCAvLyBGcm9udGFsIHJlY3RhbmdsZSBBb0UsIERyYWdvbiBCaSBGYW5nIHRyYXNoLCBhZnRlciBib3NzIDJcclxuXHJcbiAgICAnU3dhbGxvd3MgQ29tcGFzcyBCb3RoIEVuZHMgMSc6ICcyQkE4JywgLy8gQ2hhcmlvdCBBb0UsIFFpdGlhbiBEYXNoZW5nLCBib3NzIDNcclxuICAgICdTd2FsbG93cyBDb21wYXNzIEJvdGggRW5kcyAyJzogJzJCQTknLCAvLyBEeW5hbW8gQW9FLCBRaXRpYW4gRGFzaGVuZywgYm9zcyAzXHJcbiAgICAnU3dhbGxvd3MgQ29tcGFzcyBCb3RoIEVuZHMgMyc6ICcyQkFFJywgLy8gQ2hhcmlvdCBBb0UsIFNoYWRvdyBPZiBUaGUgU2FnZSwgYm9zcyAzXHJcbiAgICAnU3dhbGxvd3MgQ29tcGFzcyBCb3RoIEVuZHMgNCc6ICcyQkFGJywgLy8gRHluYW1vIEFvRSwgU2hhZG93IE9mIFRoZSBTYWdlLCBib3NzIDNcclxuICAgICdTd2FsbG93cyBDb21wYXNzIEVxdWFsIE9mIEhlYXZlbic6ICcyQkI0JywgLy8gU21hbGwgY2lyY2xlIGdyb3VuZCBBb0VzLCBRaXRpYW4gRGFzaGVuZywgYm9zcyAzXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdFdhcm46IHtcclxuICAgICdTd2FsbG93cyBDb21wYXNzIEh5c3RlcmlhJzogJzEyOCcsIC8vIEdhemUgYXR0YWNrIGZhaWx1cmUsIE90ZW5ndSwgYm9zcyAxXHJcbiAgICAnU3dhbGxvd3MgQ29tcGFzcyBCbGVlZGluZyc6ICcxMTJGJywgLy8gU3RlcHBpbmcgb3V0c2lkZSB0aGUgYXJlbmEsIGJvc3MgM1xyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnU3dhbGxvd3MgQ29tcGFzcyBNaXJhZ2UnOiAnMkJBMicsIC8vIFByZXktY2hhc2luZyBwdWRkbGVzLCBEYWlkYXJhYm90Y2hpLCBib3NzIDJcclxuICAgICdTd2FsbG93cyBDb21wYXNzIE1vdW50YWluIEZhbGxzJzogJzJCQTUnLCAvLyBDaXJjbGUgc3ByZWFkIG1hcmtlcnMsIERhaWRhcmFib3RjaGksIGJvc3MgMlxyXG4gICAgJ1N3YWxsb3dzIENvbXBhc3MgVGhlIExvbmcgRW5kJzogJzJCQTcnLCAvLyBMYXNlciB0ZXRoZXIsIFFpdGlhbiBEYXNoZW5nICBib3NzIDNcclxuICAgICdTd2FsbG93cyBDb21wYXNzIFRoZSBMb25nIEVuZCAyJzogJzJCQUQnLCAvLyBMYXNlciBUZXRoZXIsIFNoYWRvd3MgT2YgVGhlIFNhZ2UsIGJvc3MgM1xyXG4gIH0sXHJcbiAgc29sb0ZhaWw6IHtcclxuICAgICdTd2FsbG93cyBDb21wYXNzIEZpdmUgRmluZ2VyZWQgUHVuaXNobWVudCAxJzogJzJCQUInLCAvLyBTdGFjayBtYXJrZXIsIGJvc3MgM1xyXG4gICAgJ1N3YWxsb3dzIENvbXBhc3MgRml2ZSBGaW5nZXJlZCBQdW5pc2htZW50IDInOiAnMkJCMCcsIC8vIFN0YWNrIG1hcmtlciwgYm9zcyAzXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICAvLyBTdGFuZGluZyBpbiB0aGUgbGFrZSwgRGlhZGFyYWJvdGNoaSwgYm9zcyAyXHJcbiAgICAgIGlkOiAnU3dhbGxvd3MgQ29tcGFzcyBTaXggRnVsbXMgVW5kZXInLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnMjM3JyB9KSxcclxuICAgICAgZGVhdGhSZWFzb246IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDogbWF0Y2hlcy5lZmZlY3QsXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVUZW1wbGVPZlRoZUZpc3QsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1RlbXBsZSBGaXJlIEJyZWFrJzogJzIxRUQnLCAvLyBDb25hbCBBb0UsIEJsb29kZ2xpZGVyIE1vbmsgdHJhc2hcclxuICAgICdUZW1wbGUgUmFkaWFsIEJsYXN0ZXInOiAnMUZEMycsIC8vIENpcmNsZSBBb0UsIGJvc3MgMVxyXG4gICAgJ1RlbXBsZSBXaWRlIEJsYXN0ZXInOiAnMUZENCcsIC8vIENvbmFsIEFvRSwgYm9zcyAxXHJcbiAgICAnVGVtcGxlIENyaXBwbGluZyBCbG93JzogJzIwMTYnLCAvLyBMaW5lIEFvRXMsIGVudmlyb25tZW50YWwsIGJlZm9yZSBib3NzIDJcclxuICAgICdUZW1wbGUgQnJva2VuIEVhcnRoJzogJzIzNkUnLCAvLyBDaXJjbGUgQW9FLCBTaW5naGEgdHJhc2hcclxuICAgICdUZW1wbGUgU2hlYXInOiAnMUZERCcsIC8vIER1YWwgY29uYWwgQW9FLCBib3NzIDJcclxuICAgICdUZW1wbGUgQ291bnRlciBQYXJyeSc6ICcxRkUwJywgLy8gUmV0YWxpYXRpb24gZm9yIGluY29ycmVjdCBkaXJlY3Rpb24gYWZ0ZXIgS2lsbGVyIEluc3RpbmN0LCBib3NzIDJcclxuICAgICdUZW1wbGUgVGFwYXMnOiAnJywgLy8gVHJhY2tpbmcgY2lyY3VsYXIgZ3JvdW5kIEFvRXMsIGJvc3MgMlxyXG4gICAgJ1RlbXBsZSBIZWxsc2VhbCc6ICcyMDBGJywgLy8gUmVkL0JsdWUgc3ltYm9sIGZhaWx1cmUsIGJvc3MgMlxyXG4gICAgJ1RlbXBsZSBQdXJlIFdpbGwnOiAnMjAxNycsIC8vIENpcmNsZSBBb0UsIFNwaXJpdCBGbGFtZSB0cmFzaCwgYmVmb3JlIGJvc3MgM1xyXG4gICAgJ1RlbXBsZSBNZWdhYmxhc3Rlcic6ICcxNjMnLCAvLyBDb25hbCBBb0UsIENvZXVybCBQcmFuYSB0cmFzaCwgYmVmb3JlIGJvc3MgM1xyXG4gICAgJ1RlbXBsZSBXaW5kYnVybic6ICcxRkU4JywgLy8gQ2lyY2xlIEFvRSwgVHdpc3RlciB3aW5kLCBib3NzIDNcclxuICAgICdUZW1wbGUgSHVycmljYW5lIEtpY2snOiAnMUZFNScsIC8vIDI3MC1kZWdyZWUgZnJvbnRhbCBBb0UsIGJvc3MgM1xyXG4gICAgJ1RlbXBsZSBTaWxlbnQgUm9hcic6ICcxRkVCJywgLy8gRnJvbnRhbCBsaW5lIEFvRSwgYm9zcyAzXHJcbiAgICAnVGVtcGxlIE1pZ2h0eSBCbG93JzogJzFGRUEnLCAvLyBDb250YWN0IHdpdGggY29ldXJsIGhlYWQsIGJvc3MgM1xyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnVGVtcGxlIEhlYXQgTGlnaHRuaW5nJzogJzFGRDcnLCAvLyBQdXJwbGUgc3ByZWFkIGNpcmNsZXMsIGJvc3MgMVxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlQnVybixcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnVGhlIEJ1cm4gRmFsbGluZyBSb2NrJzogJzMxQTMnLCAvLyBFbnZpcm9ubWVudGFsIGxpbmUgQW9FXHJcbiAgICAnVGhlIEJ1cm4gQWV0aGVyaWFsIEJsYXN0JzogJzMyOEInLCAvLyBMaW5lIEFvRSwgS3VrdWxrYW4gdHJhc2hcclxuICAgICdUaGUgQnVybiBNb2xlLWEtd2hhY2snOiAnMzI4RCcsIC8vIENpcmNsZSBBb0UsIERlc2VydCBEZXNtYW4gdHJhc2hcclxuICAgICdUaGUgQnVybiBIZWFkIEJ1dHQnOiAnMzI4RScsIC8vIFNtYWxsIGNvbmFsIEFvRSwgRGVzZXJ0IERlc21hbiB0cmFzaFxyXG4gICAgJ1RoZSBCdXJuIFNoYXJkZmFsbCc6ICczMTkxJywgLy8gUm9vbXdpZGUgQW9FLCBMb1MgZm9yIHNhZmV0eSwgSGVkZXRldCwgYm9zcyAxXHJcbiAgICAnVGhlIEJ1cm4gRGlzc29uYW5jZSc6ICczMTkyJywgLy8gRG9udXQgQW9FLCBIZWRldGV0LCBib3NzIDFcclxuICAgICdUaGUgQnVybiBDcnlzdGFsbGluZSBGcmFjdHVyZSc6ICczMTk3JywgLy8gQ2lyY2xlIEFvRSwgRGltIENyeXN0YWwsIGJvc3MgMVxyXG4gICAgJ1RoZSBCdXJuIFJlc29uYW50IEZyZXF1ZW5jeSc6ICczMTk4JywgLy8gQ2lyY2xlIEFvRSwgRGltIENyeXN0YWwsIGJvc3MgMVxyXG4gICAgJ1RoZSBCdXJuIFJvdG9zd2lwZSc6ICczMjkxJywgLy8gRnJvbnRhbCBjb25lIEFvRSwgQ2hhcnJlZCBEcmVhZG5hdWdodCB0cmFzaFxyXG4gICAgJ1RoZSBCdXJuIFdyZWNraW5nIEJhbGwnOiAnMzI5MicsIC8vIENpcmNsZSBBb0UsIENoYXJyZWQgRHJlYWRuYXVnaHQgdHJhc2hcclxuICAgICdUaGUgQnVybiBTaGF0dGVyJzogJzMyOTQnLCAvLyBMYXJnZSBjaXJjbGUgQW9FLCBDaGFycmVkIERvYmx5biB0cmFzaFxyXG4gICAgJ1RoZSBCdXJuIEF1dG8tQ2Fubm9ucyc6ICczMjk1JywgLy8gTGluZSBBb0UsIENoYXJyZWQgRHJvbmUgdHJhc2hcclxuICAgICdUaGUgQnVybiBTZWxmLURldG9uYXRlJzogJzMyOTYnLCAvLyBDaXJjbGUgQW9FLCBDaGFycmVkIERyb25lIHRyYXNoXHJcbiAgICAnVGhlIEJ1cm4gRnVsbCBUaHJvdHRsZSc6ICcyRDc1JywgLy8gTGluZSBBb0UsIERlZmVjdGl2ZSBEcm9uZSwgYm9zcyAyXHJcbiAgICAnVGhlIEJ1cm4gVGhyb3R0bGUnOiAnMkQ3NicsIC8vIExpbmUgQW9FLCBNaW5pbmcgRHJvbmUgYWRkcywgYm9zcyAyXHJcbiAgICAnVGhlIEJ1cm4gQWRpdCBEcml2ZXInOiAnMkQ3OCcsIC8vIExpbmUgQW9FLCBSb2NrIEJpdGVyIGFkZHMsIGJvc3MgMlxyXG4gICAgJ1RoZSBCdXJuIFRyZW1ibG9yJzogJzMyOTcnLCAvLyBMYXJnZSBjaXJjbGUgQW9FLCBWZWlsZWQgR2lnYXdvcm0gdHJhc2hcclxuICAgICdUaGUgQnVybiBEZXNlcnQgU3BpY2UnOiAnMzI5OCcsIC8vIFRoZSBmcm9udGFsIGNsZWF2ZXMgbXVzdCBmbG93XHJcbiAgICAnVGhlIEJ1cm4gVG94aWMgU3ByYXknOiAnMzI5QScsIC8vIEZyb250YWwgY29uZSBBb0UsIEdpZ2F3b3JtIFN0YWxrZXIgdHJhc2hcclxuICAgICdUaGUgQnVybiBWZW5vbSBTcHJheSc6ICczMjlCJywgLy8gVGFyZ2V0ZWQgY2lyY2xlIEFvRSwgR2lnYXdvcm0gU3RhbGtlciB0cmFzaFxyXG4gICAgJ1RoZSBCdXJuIFdoaXRlIERlYXRoJzogJzMxNDMnLCAvLyBSZWFjdGl2ZSBkdXJpbmcgaW52dWxuZXJhYmlsaXR5LCBNaXN0IERyYWdvbiwgYm9zcyAzXHJcbiAgICAnVGhlIEJ1cm4gRm9nIFBsdW1lIDEnOiAnMzE0NScsIC8vIFN0YXIgQW9FLCBNaXN0IERyYWdvbiwgYm9zcyAzXHJcbiAgICAnVGhlIEJ1cm4gRm9nIFBsdW1lIDInOiAnMzE0NicsIC8vIExpbmUgQW9FcyBhZnRlciBzdGFycywgTWlzdCBEcmFnb24sIGJvc3MgM1xyXG4gICAgJ1RoZSBCdXJuIENhdXRlcml6ZSc6ICczMTQ4JywgLy8gTGluZS9Td29vcCBBb0UsIE1pc3QgRHJhZ29uLCBib3NzIDNcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdUaGUgQnVybiBDb2xkIEZvZyc6ICczMTQyJywgLy8gR3Jvd2luZyBjaXJjbGUgQW9FLCBNaXN0IERyYWdvbiwgYm9zcyAzXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdFdhcm46IHtcclxuICAgICdUaGUgQnVybiBMZWFkZW4nOiAnNDMnLCAvLyBQdWRkbGUgZWZmZWN0LCBib3NzIDIuIChBbHNvIGluZmxpY3RzIDExRiwgU2x1ZGdlLilcclxuICAgICdUaGUgQnVybiBQdWRkbGUgRnJvc3RiaXRlJzogJzExRCcsIC8vIEljZSBwdWRkbGUgZWZmZWN0LCBib3NzIDMuIChOT1QgdGhlIGNvbmFsLWluZmxpY3RlZCBvbmUsIDEwQy4pXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdUaGUgQnVybiBIYWlsZmlyZSc6ICczMTk0JywgLy8gSGVhZCBtYXJrZXIgbGluZSBBb0UsIEhlZGV0ZXQsIGJvc3MgMVxyXG4gICAgJ1RoZSBCdXJuIFNoYXJkc3RyaWtlJzogJzMxOTUnLCAvLyBPcmFuZ2Ugc3ByZWFkIGhlYWQgbWFya2VycywgSGVkZXRldCwgYm9zcyAxXHJcbiAgICAnVGhlIEJ1cm4gQ2hpbGxpbmcgQXNwaXJhdGlvbic6ICczMTREJywgLy8gSGVhZCBtYXJrZXIgY2xlYXZlLCBNaXN0IERyYWdvbiwgYm9zcyAzXHJcbiAgICAnVGhlIEJ1cm4gRnJvc3QgQnJlYXRoJzogJzMxNEMnLCAvLyBUYW5rIGNsZWF2ZSwgTWlzdCBEcmFnb24sIGJvc3MgM1xyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBUT0RPOiBBa2ggUmhhaSAoMzYyNCkgaXMgbm90IHVudXN1YWwgdG8gdGFrZSB+MSBoaXQgZnJvbSwgc28gZG9uJ3QgbGlzdC5cclxuXHJcbi8vIE8xME4gLSBBbHBoYXNjYXBlIDIuMCBOb3JtYWxcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkFscGhhc2NhcGVWMjAsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ08xME4gQXp1cmUgV2luZ3MnOiAnMzFDRCcsIC8vIE91dFxyXG4gICAgJ08xME4gU3R5Z2lhbiBNYXcnOiAnMzFDRicsIC8vIEluXHJcbiAgICAnTzEwTiBIb3JyaWQgUm9hcic6ICczMUQzJywgLy8gdGFyZ2V0ZWQgY2lyY2xlc1xyXG4gICAgJ08xME4gQmxvb2RpZWQgTWF3JzogJzMxRDAnLCAvLyBDb3JuZXJzXHJcbiAgICAnTzEwTiBDYXV0ZXJpemUnOiAnMzI0MScsIC8vIGRpdmVib21iIGF0dGFja1xyXG4gICAgJ08xME4gU2NhcmxldCBUaHJlYWQnOiAnMzYyQicsIC8vIG9yYiB3YWZmbGUgbGluZXNcclxuICAgICdPMTBOIEV4YWZsYXJlIDEnOiAnMzYyRCcsXHJcbiAgICAnTzEwTiBFeGFmbGFyZSAyJzogJzM2MkYnLFxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnTzEwTiBFYXJ0aCBTaGFrZXInOiAnMzFEMScsIC8vIGFzIGl0IHNheXMgb24gdGhlIHRpblxyXG4gICAgJ08xME4gRnJvc3QgQnJlYXRoJzogJzMzRUUnLCAvLyBBbmNpZW50IERyYWdvbiBmcm9udGFsIGNvbmFsXHJcbiAgICAnTzEwTiBUaHVuZGVyc3Rvcm0nOiAnMzFEMicsIC8vIHB1cnBsZSBzcHJlYWQgbWFya2VyXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuLy8gVE9ETzogRGVhdGggRnJvbSBBYm92ZSAvIERlYXRoIEZyb20gQmVsb3cgdGFuayBkZWJ1ZmYgcHJvYmxlbXNcclxuLy8gVE9ETzogQWtoIFJoYWkgKDM2MjMpIGlzIG5vdCB1bnVzdWFsIHRvIHRha2UgfjEgaGl0IGZyb20sIHNvIGRvbid0IGxpc3QuXHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkFscGhhc2NhcGVWMjBTYXZhZ2UsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ08xMFMgQXp1cmUgV2luZ3MnOiAnMzFCMicsIC8vIE91dFxyXG4gICAgJ08xMFMgU3R5Z2lhbiBNYXcnOiAnMzFCMCcsIC8vIEluXHJcbiAgICAnTzEwUyBCbG9vZGllZCBNYXcnOiAnMzFCNScsIC8vIENvcm5lcnNcclxuICAgICdPMTBTIENyaW1zb24gV2luZ3MnOiAnMzFCMycsIC8vIENhcmRpbmFsc1xyXG4gICAgJ08xMFMgSG9ycmlkIFJvYXInOiAnMzFCOScsIC8vIHRhcmdldGVkIGNpcmNsZXNcclxuICAgICdPMTBTIERhcmsgV2F2ZSc6ICczNDFBJywgLy8gQW5jaWVudCBEcmFnb24gY2lyY2xlIHVwb24gZGVhdGhcclxuICAgICdPMTBTIENhdXRlcml6ZSc6ICczMjQwJywgLy8gZGl2ZWJvbWIgYXR0YWNrXHJcbiAgICAnTzEwUyBGbGFtZSBCbGFzdCc6ICczMUMxJywgLy8gYm9tYnNcclxuICAgICdPMTBOIFNjYXJsZXQgVGhyZWFkJzogJzM2MkInLCAvLyBvcmIgd2FmZmxlIGxpbmVzXHJcbiAgICAnTzEwTiBFeGFmbGFyZSAxJzogJzM2MkMnLFxyXG4gICAgJ08xME4gRXhhZmxhcmUgMic6ICczNjJFJyxcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ08xMFMgRWFydGggU2hha2VyJzogJzMxQjYnLCAvLyBhcyBpdCBzYXlzIG9uIHRoZSB0aW5cclxuICAgICdPMTBTIEZyb3N0IEJyZWF0aCc6ICczM0YxJywgLy8gQW5jaWVudCBEcmFnb24gZnJvbnRhbCBjb25hbFxyXG4gICAgJ08xMFMgVGh1bmRlcnN0b3JtJzogJzMxQjgnLCAvLyBwdXJwbGUgc3ByZWFkIG1hcmtlclxyXG4gIH0sXHJcbiAgc2hhcmVGYWlsOiB7XHJcbiAgICAnTzEwUyBDcmltc29uIEJyZWF0aCc6ICczMUJDJywgLy8gZmxhbWUgYnJlYXRoIGRvZGdlZCB3aXRoIEFuY2llbnQgQnVsd2Fya1xyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBPMTFOIC0gQWxwaGFzY2FwZSAzLjAgTm9ybWFsXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5BbHBoYXNjYXBlVjMwLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdPMTFOIFN0YXJib2FyZCBXYXZlIENhbm5vbiAxJzogJzMyODEnLCAvLyBpbml0aWFsIHJpZ2h0IGNsZWF2ZVxyXG4gICAgJ08xMU4gU3RhcmJvYXJkIFdhdmUgQ2Fubm9uIDInOiAnMzI4MicsIC8vIGZvbGxvdy11cCByaWdodCBjbGVhdmVcclxuICAgICdPMTFOIExhcmJvYXJkIFdhdmUgQ2Fubm9uIDEnOiAnMzI4MycsIC8vIGluaXRpYWwgbGVmdCBjbGVhdmVcclxuICAgICdPMTFOIExhcmJvYXJkIFdhdmUgQ2Fubm9uIDInOiAnMzI4NCcsIC8vIGZvbGxvdy11cCBsZWZ0IGNsZWF2ZVxyXG4gICAgJ08xMU4gRmxhbWUgVGhyb3dlcic6ICczMjdEJywgLy8gcGlud2hlZWwgY29uYWxzXHJcbiAgICAnTzExTiBDcml0aWNhbCBTdG9yYWdlIFZpb2xhdGlvbic6ICczMjc5JywgLy8gbWlzc2luZyBtaWRwaGFzZSB0b3dlcnNcclxuICAgICdPMTFOIExldmVsIENoZWNrZXIgUmVzZXQnOiAnMzVBQScsIC8vIFwiZ2V0IG91dFwiIGNpcmNsZVxyXG4gICAgJ08xMU4gTGV2ZWwgQ2hlY2tlciBSZWZvcm1hdCc6ICczNUE5JywgLy8gXCJnZXQgaW5cIiBkb251dFxyXG4gICAgJ08xMU4gUm9ja2V0IFB1bmNoIFJ1c2gnOiAnMzYwNicsIC8vIGdpYW50IGhhbmQgMS8zIGFyZW5hIGxpbmUgYW9lc1xyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RXYXJuOiB7XHJcbiAgICAnTzExTiBCdXJucyc6ICdGQScsIC8vIHN0YW5kaW5nIGluIGJhbGxpc3RpYyBtaXNzaWxlIGZpcmUgcHVkZGxlXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdEZhaWw6IHtcclxuICAgICdPMTFOIE1lbW9yeSBMb3NzJzogJzY1QScsIC8vIGZhaWxpbmcgdG8gY2xlYW5zZSBMb29wZXIgaW4gYSB0b3dlclxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnTzExTiBCYWxsaXN0aWMgSW1wYWN0JzogJzMyN0YnLCAvLyBzcHJlYWQgbWFya2Vyc1xyXG4gIH0sXHJcbiAgc2hhcmVGYWlsOiB7XHJcbiAgICAnTzExTiBCbGFzdGVyJzogJzMyODAnLCAvLyB0YW5rIHRldGhlclxyXG4gIH0sXHJcbiAgc29sb0ZhaWw6IHtcclxuICAgICdPMTFOIEVsZWN0cmljIFNsaWRlJzogJzMyODUnLCAvLyBzdGFjayBtYXJrZXJcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG4vLyBUT0RPOiBBcG9jYWx5cHRpYyBFeHBsb3Npb24gKDI3OUIpIGZyb20gbm90IGhhbmRsaW5nIFJvY2tldCBQdW5jaCBhZGRzLCBidXRcclxuLy8gICAgICAgaWYgZG9pbmcgdGhpcyB1bnN5bmNlZCwgeW91IGNhbiBqdXN0IGlnbm9yZSB0aGVtIGFuZCB0aGF0J3Mgc3BhbW15LlxyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5BbHBoYXNjYXBlVjMwU2F2YWdlLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdPMTFTIEFmdGVyYnVybmVyJzogJzMyNUUnLCAvLyBmb2xsb3d1cCB0byBGbGFtZSBUaHJvd2VyXHJcbiAgICAnTzExUyBSb2NrZXQgUHVuY2ggSXJvbiBLaXNzIDEnOiAnMzYwOCcsIC8vIFJvY2tldCBQdW5jaCBoYW5kIGNpcmNsZSBmcm9tIFBlcmlwaGVyYWwgU3ludGhlc2lzICMxXHJcbiAgICAnTzExUyBSb2NrZXQgUHVuY2ggSXJvbiBLaXNzIDInOiAnMzZGNCcsIC8vIFJvY2tldCBQdW5jaCBoYW5kIGNpcmNsZSBmcm9tIFBlcmlwaGVyYWwgU3ludGhlc2lzICMzXHJcbiAgICAnTzExUyBTdGFyYm9hcmQgV2F2ZSBDYW5ub24gMSc6ICczMjYyJyxcclxuICAgICdPMTFTIFN0YXJib2FyZCBXYXZlIENhbm5vbiAyJzogJzMyNjMnLFxyXG4gICAgJ08xMVMgTGFyYm9hcmQgV2F2ZSBDYW5ub24gMSc6ICczMjY0JyxcclxuICAgICdPMTFTIExhcmJvYXJkIFdhdmUgQ2Fubm9uIDInOiAnMzI2NScsXHJcbiAgICAnTzExUyBTdGFyYm9hcmQgV2F2ZSBDYW5ub24gU3VyZ2UgMSc6ICczMjY2JyxcclxuICAgICdPMTFTIFN0YXJib2FyZCBXYXZlIENhbm5vbiBTdXJnZSAyJzogJzMyNjcnLFxyXG4gICAgJ08xMVMgTGFyYm9hcmQgV2F2ZSBDYW5ub24gU3VyZ2UgMSc6ICczMjY4JyxcclxuICAgICdPMTFTIExhcmJvYXJkIFdhdmUgQ2Fubm9uIFN1cmdlIDInOiAnMzI2OScsXHJcbiAgICAnTzExUyBDcml0aWNhbCBEdWFsIFN0b3JhZ2UgVmlvbGF0aW9uJzogJzMyNTgnLCAvLyBmYWlsaW5nIGEgdG93ZXJcclxuICAgICdPMTFTIExldmVsIENoZWNrZXIgUmVzZXQnOiAnMzI2OCcsIC8vIFwiZ2V0IG91dFwiIGNpcmNsZVxyXG4gICAgJ08xMVMgTGV2ZWwgQ2hlY2tlciBSZWZvcm1hdCc6ICczMjY3JywgLy8gXCJnZXQgaW5cIiBkb251dFxyXG4gICAgJ08xMVMgQmFsbGlzdGljIEltcGFjdCc6ICczNzBCJywgLy8gY2lyY2xlcyBkdXJpbmcgUGFudG8gMVxyXG4gICAgJ08xMVMgRmxhbWUgVGhyb3dlciBQYW50byc6ICczNzA3JywgLy8gcGlud2hlZWwgZHVyaW5nIFBhbnRvIDJcclxuICAgICdPMTFTIEd1aWRlZCBNaXNzaWxlIEt5cmlvcyc6ICczNzBBJywgLy8gUGFudG8gMiBiYWl0ZWQgY2lyY2xlXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdFdhcm46IHtcclxuICAgICdPMTFTIEJ1cm5zJzogJ0ZBJywgLy8gc3RhbmRpbmcgaW4gYmFsbGlzdGljIG1pc3NpbGUgZmlyZSBwdWRkbGVcclxuICB9LFxyXG4gIGdhaW5zRWZmZWN0RmFpbDoge1xyXG4gICAgJ08xMVMgTWVtb3J5IExvc3MnOiAnNjVBJywgLy8gZmFpbGluZyB0byBjbGVhbnNlIExvb3BlciBpbiBhIHRvd2VyXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdPMTFTIEZsYW1lIFRocm93ZXInOiAnMzI1RCcsIC8vIHByb3RlYW4gd2F2ZVxyXG4gICAgJ08xMVMgUm9ja2V0IFB1bmNoIFJ1c2gnOiAnMzI1MCcsIC8vIHRldGhlcmVkIFJvY2tldCBQdW5jaCBjaGFyZ2UgZnJvbSBQZXJpcGhlcmFsIFN5bnRoZXNpcyAjMlxyXG4gICAgJ08xMVMgV2F2ZSBDYW5ub24gS3lyaW9zJzogJzM3MDUnLCAvLyBQYW50byAyIGRpc3RhbmNlIGJhaXRlZCBsYXNlcnNcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ08xMVMgTXVzdGFyZCBCb21iJzogJzMyNkQnLCAvLyB0YW5rIGJ1c3RlclxyXG4gICAgJ08xMVMgQmxhc3Rlcic6ICczMjYxJywgLy8gdGV0aGVyZWQgZXhwbG9zaW9uXHJcbiAgICAnTzExUyBEaWZmdXNlIFdhdmUgQ2Fubm9uIEt5cmlvcyc6ICczNzA1JywgLy8gUGFudG8gMiB0YW5rIGxhc2Vyc1xyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIE8xMk4gLSBBbHBoYXNjYXBlIDQuMCBOb3JtYWxcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkFscGhhc2NhcGVWNDAsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ08xMk4gRmxvb2RsaWdodCc6ICczMzA5JywgLy8gdGFyZ2V0ZWQgY2lyY3VsYXIgYW9lcyBhZnRlciBQcm9ncmFtIEFscGhhXHJcbiAgICAnTzEyTiBFZmZpY2llbnQgQmxhZGV3b3JrJzogJzMyRkYnLCAvLyB0ZWxlZ3JhcGhlZCBjZW50ZXJlZCBjaXJjbGVcclxuICAgICdPMTJOIEVmZmljaWVudCBCbGFkZXdvcmsgVW50ZWxlZ3JhcGhlZCc6ICczMkYzJywgLy8gY2VudGVyZWQgY2lyY2xlIGFmdGVyIHRyYW5zZm9ybWF0aW9uXHJcbiAgICAnTzEyTiBPcHRpbWl6ZWQgQmxpenphcmQgSUlJJzogJzMzMDMnLCAvLyBjcm9zcyBhb2VcclxuICAgICdPMTJOIFN1cGVybGltaW5hbCBTdGVlbCAxJzogJzMzMDYnLCAvLyBzaWRlcyBvZiB0aGUgcm9vbVxyXG4gICAgJ08xMk4gU3VwZXJsaW1pbmFsIFN0ZWVsIDInOiAnMzMwNycsIC8vIHNpZGVzIG9mIHRoZSByb29tXHJcbiAgICAnTzEyTiBCZXlvbmQgU3RyZW5ndGgnOiAnMzMwMCcsIC8vIGRvbnV0XHJcbiAgICAnTzEyTiBPcHRpY2FsIExhc2VyJzogJzMzMjAnLCAvLyBsaW5lIGFvZSBmcm9tIGV5ZVxyXG4gICAgJ08xMk4gT3B0aW1pemVkIFNhZ2l0dGFyaXVzIEFycm93JzogJzMzMjMnLCAvLyBsaW5lIGFvZSBmcm9tIE9tZWdhLU1cclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ08xMk4gU29sYXIgUmF5JzogJzMzMEYnLCAvLyBjaXJjdWxhciB0YW5rYnVzdGVyXHJcbiAgfSxcclxuICBzb2xvV2Fybjoge1xyXG4gICAgJ08xMk4gU3BvdGxpZ2h0JzogJzMzMEEnLCAvLyBzdGFjayBtYXJrZXJcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTzEyTiBEaXNjaGFyZ2VyIEtub2NrZWQgT2ZmJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICczMkY2JyB9KSxcclxuICAgICAgZGVhdGhSZWFzb246IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ0tub2NrZWQgb2ZmJyxcclxuICAgICAgICAgICAgZGU6ICdSdW50ZXJnZWZhbGxlbicsXHJcbiAgICAgICAgICAgIGZyOiAnUmVudmVyc8OpKGUpJyxcclxuICAgICAgICAgICAgamE6ICfjg47jg4Pjgq/jg5Djg4Pjgq8nLFxyXG4gICAgICAgICAgICBjbjogJ+WHu+mAgOWdoOiQvScsXHJcbiAgICAgICAgICAgIGtvOiAn64SJ67CxJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcbmltcG9ydCB7IHBsYXllckRhbWFnZUZpZWxkcyB9IGZyb20gJy4uLy4uLy4uL29vcHN5X2NvbW1vbic7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIERhdGEgZXh0ZW5kcyBPb3BzeURhdGEge1xyXG4gIHZ1bG4/OiB7IFtuYW1lOiBzdHJpbmddOiBib29sZWFuIH07XHJcbn1cclxuXHJcbi8vIFRPRE86IGNvdWxkIGFkZCBQYXRjaCB3YXJuaW5ncyBmb3IgZG91YmxlL3VuYnJva2VuIHRldGhlcnNcclxuLy8gVE9ETzogSGVsbG8gV29ybGQgY291bGQgaGF2ZSBhbnkgd2FybmluZ3MgKHNvcnJ5KVxyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkFscGhhc2NhcGVWNDBTYXZhZ2UsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ08xMlMxIFN1cGVybGltaW5hbCBNb3Rpb24gMSc6ICczMzM0JywgLy8gMzAwKyBkZWdyZWUgY2xlYXZlIHdpdGggYmFjayBzYWZlIGFyZWFcclxuICAgICdPMTJTMSBFZmZpY2llbnQgQmxhZGV3b3JrIDEnOiAnMzMyOScsIC8vIE9tZWdhLU0gXCJnZXQgb3V0XCIgY2VudGVyZWQgYW9lIGFmdGVyIHNwbGl0XHJcbiAgICAnTzEyUzEgRWZmaWNpZW50IEJsYWRld29yayAyJzogJzMzMkEnLCAvLyBPbWVnYS1NIFwiZ2V0IG91dFwiIGNlbnRlcmVkIGFvZSBkdXJpbmcgYmxhZGVzXHJcbiAgICAnTzEyUzEgQmV5b25kIFN0cmVuZ3RoJzogJzMzMjgnLCAvLyBPbWVnYS1NIFwiZ2V0IGluXCIgY2VudGVyZWQgYW9lIGR1cmluZyBzaGllbGRcclxuICAgICdPMTJTMSBTdXBlcmxpbWluYWwgU3RlZWwgMSc6ICczMzMwJywgLy8gT21lZ2EtRiBcImdldCBmcm9udC9iYWNrXCIgYmxhZGVzIHBoYXNlXHJcbiAgICAnTzEyUzEgU3VwZXJsaW1pbmFsIFN0ZWVsIDInOiAnMzMzMScsIC8vIE9tZWdhLUYgXCJnZXQgZnJvbnQvYmFja1wiIGJsYWRlcyBwaGFzZVxyXG4gICAgJ08xMlMxIE9wdGltaXplZCBCbGl6emFyZCBJSUknOiAnMzMzMicsIC8vIE9tZWdhLUYgZ2lhbnQgY3Jvc3NcclxuICAgICdPMTJTMiBEaWZmdXNlIFdhdmUgQ2Fubm9uJzogJzMzNjknLCAvLyBiYWNrL3NpZGVzIGxhc2Vyc1xyXG4gICAgJ08xMlMyIFJpZ2h0IEFybSBVbml0IEh5cGVyIFB1bHNlIDEnOiAnMzM1QScsIC8vIFJvdGF0aW5nIEFyY2hpdmUgUGVyaXBoZXJhbCBsYXNlcnNcclxuICAgICdPMTJTMiBSaWdodCBBcm0gVW5pdCBIeXBlciBQdWxzZSAyJzogJzMzNUInLCAvLyBSb3RhdGluZyBBcmNoaXZlIFBlcmlwaGVyYWwgbGFzZXJzXHJcbiAgICAnTzEyUzIgUmlnaHQgQXJtIFVuaXQgQ29sb3NzYWwgQmxvdyc6ICczMzVGJywgLy8gRXhwbG9kaW5nIEFyY2hpdmUgQWxsIGhhbmRzXHJcbiAgICAnTzEyUzIgTGVmdCBBcm0gVW5pdCBDb2xvc3NhbCBCbG93JzogJzMzNjAnLCAvLyBFeHBsb2RpbmcgQXJjaGl2ZSBBbGwgaGFuZHNcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdPMTJTMSBPcHRpY2FsIExhc2VyJzogJzMzNDcnLCAvLyBtaWRkbGUgbGFzZXIgZnJvbSBleWVcclxuICAgICdPMTJTMSBBZHZhbmNlZCBPcHRpY2FsIExhc2VyJzogJzMzNEEnLCAvLyBnaWFudCBjaXJjbGUgY2VudGVyZWQgb24gZXllXHJcbiAgICAnTzEyUzIgUmVhciBQb3dlciBVbml0IFJlYXIgTGFzZXJzIDEnOiAnMzM2MScsIC8vIEFyY2hpdmUgQWxsIGluaXRpYWwgbGFzZXJcclxuICAgICdPMTJTMiBSZWFyIFBvd2VyIFVuaXQgUmVhciBMYXNlcnMgMic6ICczMzYyJywgLy8gQXJjaGl2ZSBBbGwgcm90YXRpbmcgbGFzZXJcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ08xMlMxIE9wdGltaXplZCBGaXJlIElJSSc6ICczMzM3JywgLy8gZmlyZSBzcHJlYWRcclxuICAgICdPMTJTMiBIeXBlciBQdWxzZSBUZXRoZXInOiAnMzM1QycsIC8vIEluZGV4IEFuZCBBcmNoaXZlIFBlcmlwaGVyYWwgdGV0aGVyc1xyXG4gICAgJ08xMlMyIFdhdmUgQ2Fubm9uJzogJzMzNkInLCAvLyBJbmRleCBBbmQgQXJjaGl2ZSBQZXJpcGhlcmFsIGJhaXRlZCBsYXNlcnNcclxuICAgICdPMTJTMiBPcHRpbWl6ZWQgRmlyZSBJSUknOiAnMzM3OScsIC8vIEFyY2hpdmUgQWxsIHNwcmVhZFxyXG4gIH0sXHJcbiAgc2hhcmVGYWlsOiB7XHJcbiAgICAnTzEyUzEgT3B0aW1pemVkIFNhZ2l0dGFyaXVzIEFycm93JzogJzMzNEQnLCAvLyBPbWVnYS1NIGJhcmQgbGltaXQgYnJlYWtcclxuICAgICdPMTJTMiBPdmVyc2FtcGxlZCBXYXZlIENhbm5vbic6ICczMzY2JywgLy8gTW9uaXRvciB0YW5rIGJ1c3RlcnNcclxuICAgICdPMTJTMiBTYXZhZ2UgV2F2ZSBDYW5ub24nOiAnMzM2RCcsIC8vIFRhbmsgYnVzdGVyIHdpdGggdGhlIHZ1bG4gZmlyc3RcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTzEyUzEgRGlzY2hhcmdlciBLbm9ja2VkIE9mZicsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnMzMyNycgfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdLbm9ja2VkIG9mZicsXHJcbiAgICAgICAgICAgIGRlOiAnUnVudGVyZ2VmYWxsZW4nLFxyXG4gICAgICAgICAgICBmcjogJ1JlbnZlcnPDqShlKScsXHJcbiAgICAgICAgICAgIGphOiAn44OO44OD44Kv44OQ44OD44KvJyxcclxuICAgICAgICAgICAgY246ICflh7vpgIDlnaDokL0nLFxyXG4gICAgICAgICAgICBrbzogJ+uEieuwsScsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ08xMlMxIE1hZ2ljIFZ1bG5lcmFiaWxpdHkgVXAgR2FpbicsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICc0NzInIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS52dWxuID8/PSB7fTtcclxuICAgICAgICBkYXRhLnZ1bG5bbWF0Y2hlcy50YXJnZXRdID0gdHJ1ZTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTzEyUzEgTWFnaWMgVnVsbmVyYWJpbGl0eSBVcCBMb3NlJyxcclxuICAgICAgdHlwZTogJ0xvc2VzRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMubG9zZXNFZmZlY3QoeyBlZmZlY3RJZDogJzQ3MicgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLnZ1bG4gPSBkYXRhLnZ1bG4gfHwge307XHJcbiAgICAgICAgZGF0YS52dWxuW21hdGNoZXMudGFyZ2V0XSA9IGZhbHNlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdPMTJTMSBNYWdpYyBWdWxuZXJhYmlsaXR5IERhbWFnZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgLy8gMzMyRSA9IFBpbGUgUGl0Y2ggc3RhY2tcclxuICAgICAgLy8gMzMzRSA9IEVsZWN0cmljIFNsaWRlIChPbWVnYS1NIHNxdWFyZSAxLTQgZGFzaGVzKVxyXG4gICAgICAvLyAzMzNGID0gRWxlY3RyaWMgU2xpZGUgKE9tZWdhLUYgdHJpYW5nbGUgMS00IGRhc2hlcylcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogWyczMzJFJywgJzMzM0UnLCAnMzMzRiddLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEudnVsbiAmJiBkYXRhLnZ1bG5bbWF0Y2hlcy50YXJnZXRdLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ2ZhaWwnLFxyXG4gICAgICAgICAgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiBgJHttYXRjaGVzLmFiaWxpdHl9ICh3aXRoIHZ1bG4pYCxcclxuICAgICAgICAgICAgZGU6IGAke21hdGNoZXMuYWJpbGl0eX0gKG1pdCBWZXJ3dW5kYmFya2VpdClgLFxyXG4gICAgICAgICAgICBmcjogYCR7bWF0Y2hlcy5hYmlsaXR5fSAoYXZlYyBWdWxuw6lyYWJpbGl0w6kpYCxcclxuICAgICAgICAgICAgamE6IGAke21hdGNoZXMuYWJpbGl0eX0gKOiiq+ODgOODoeODvOOCuOS4iuaYhylgLFxyXG4gICAgICAgICAgICBjbjogYCR7bWF0Y2hlcy5hYmlsaXR5fSAo5bim5piT5LykKWAsXHJcbiAgICAgICAgICAgIGtvOiBgJHttYXRjaGVzLmFiaWxpdHl9ICjrsJvtlLzspp0g7IOB7YOc7JeQ7IScIO2UvOqyqSlgLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gTzFOIC0gRGVsdGFzY2FwZSAxLjAgTm9ybWFsXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5EZWx0YXNjYXBlVjEwLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdPMU4gQnVybic6ICcyM0Q1JywgLy8gRmlyZWJhbGwgZXhwbG9zaW9uIGNpcmNsZSBBb0VzXHJcbiAgICAnTzFOIENsYW1wJzogJzIzRTInLCAvLyBGcm9udGFsIHJlY3RhbmdsZSBrbm9ja2JhY2sgQW9FLCBBbHRlIFJvaXRlXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdPMU4gTGV2aW5ib2x0JzogJzIzREEnLCAvLyBzbWFsbCBzcHJlYWQgY2lyY2xlc1xyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBPMVMgLSBEZWx0YXNjYXBlIDEuMCBTYXZhZ2VcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkRlbHRhc2NhcGVWMTBTYXZhZ2UsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ08xUyBUdXJidWxlbmNlJzogJzI1ODQnLCAvLyBzdGFuZGluZyB1bmRlciB0aGUgYm9zcyBiZWZvcmUgZG93bmJ1cnN0XHJcbiAgICAnTzFTIEJhbGwgT2YgRmlyZSBCdXJuJzogJzFFQ0InLCAvLyBmaXJlYmFsbCBleHBsb3Npb25cclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdPMVMgQ2xhbXAnOiAnMUVERScsIC8vIGxhcmdlIGZyb250YWwgbGluZSBhb2VcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ08xUyBMZXZpbmJvbHQnOiAnMUVEMicsIC8vIGxpZ2h0bmluZyBzcHJlYWRcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBPMk4gLSBEZWx0YXNjYXBlIDIuMCBOb3JtYWxcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkRlbHRhc2NhcGVWMjAsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ08yTiBNYWluIFF1YWtlJzogJzI0QTUnLCAvLyBOb24tdGVsZWdyYXBoZWQgY2lyY2xlIEFvRSwgRmxlc2h5IE1lbWJlclxyXG4gICAgJ08yTiBFcm9zaW9uJzogJzI1OTAnLCAvLyBTbWFsbCBjaXJjbGUgQW9FcywgRmxlc2h5IE1lbWJlclxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnTzJOIFBhcmFub3JtYWwgV2F2ZSc6ICcyNTBFJywgLy8gSW5zdGFudCB0YW5rIGNsZWF2ZVxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgLy8gV2UgY291bGQgdHJ5IHRvIHNlcGFyYXRlIG91dCB0aGUgbWlzdGFrZSB0aGF0IGxlZCB0byB0aGUgcGxheWVyIGJlaW5nIHBldHJpZmllZC5cclxuICAgICAgLy8gSG93ZXZlciwgaXQncyBOb3JtYWwgbW9kZSwgd2h5IG92ZXJ0aGluayBpdD9cclxuICAgICAgaWQ6ICdPMk4gUGV0cmlmaWNhdGlvbicsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICcyNjInIH0pLFxyXG4gICAgICAvLyBUaGUgdXNlciBtaWdodCBnZXQgaGl0IGJ5IGFub3RoZXIgcGV0cmlmeWluZyBhYmlsaXR5IGJlZm9yZSB0aGUgZWZmZWN0IGVuZHMuXHJcbiAgICAgIC8vIFRoZXJlJ3Mgbm8gcG9pbnQgaW4gbm90aWZ5aW5nIGZvciB0aGF0LlxyXG4gICAgICBzdXBwcmVzc1NlY29uZHM6IDEwLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuZWZmZWN0IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ08yTiBFYXJ0aHF1YWtlJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnMjUxNScsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgLy8gVGhpcyBkZWFscyBkYW1hZ2Ugb25seSB0byBub24tZmxvYXRpbmcgdGFyZ2V0cy5cclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gZGF0YS5EYW1hZ2VGcm9tTWF0Y2hlcyhtYXRjaGVzKSA+IDAsXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIE8yUyAtIERlbHRhc2NhcGUgMi4wIFNhdmFnZVxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuRGVsdGFzY2FwZVYyMFNhdmFnZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnTzJTIFdlaWdodGVkIFdpbmcnOiAnMjNFRicsIC8vIFVuc3RhYmxlIEdyYXZpdHkgZXhwbG9zaW9ucyBvbiBwbGF5ZXJzIChhZnRlciBMb25nIERyb3ApXHJcbiAgICAnTzJTIEdyYXZpdGF0aW9uYWwgRXhwbG9zaW9uIDEnOiAnMjM2NycsIC8vIGZhaWxpbmcgRm91ciBGb2xkIFNhY3JpZmljZSA0IHBlcnNvbiBzdGFja1xyXG4gICAgJ08yUyBHcmF2aXRhdGlvbmFsIEV4cGxvc2lvbiAyJzogJzIzNjgnLCAvLyBmYWlsaW5nIEZvdXIgRm9sZCBTYWNyaWZpY2UgNCBwZXJzb24gc3RhY2tcclxuICAgICdPMlMgTWFpbiBRdWFrZSc6ICcyMzU5JywgLy8gdW50ZWxlZ3JhcGhlZCBleHBsb3Npb25zIGZyb20gZXBpY2VudGVyIHRlbnRhY2xlc1xyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RGYWlsOiB7XHJcbiAgICAnTzJTIFN0b25lIEN1cnNlJzogJzU4OScsIC8vIGZhaWxpbmcgRGVhdGgncyBHYXplIG9yIHRha2luZyB0b28gbWFueSB0YW5rYnVzdGVyIHN0YWNrc1xyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgLy8gZ3JvdW5kIGJsdWUgYXJlbmEgY2lyY2xlczsgKHByb2JhYmx5Pykgb25seSBkbyBkYW1hZ2UgaWYgbm90IGZsb2F0aW5nXHJcbiAgICAgIC8vIFRPRE86IHVzdWFsbHkgdGhpcyBqdXN0IGRvZXNuJ3QgaGl0IGFueWJvZHkgYXQgYWxsLCBkdWUgdG8gcGF0dGVybnMuXHJcbiAgICAgIC8vIEZsb2F0aW5nIG92ZXIgb25lIGlzIHVudGVzdGVkLlxyXG4gICAgICBpZDogJ08yUyBQZXRyb3NwaGVyZSBFeHBsb3Npb24nLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICcyNDVEJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiBkYXRhLkRhbWFnZUZyb21NYXRjaGVzKG1hdGNoZXMpID4gMCxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmFiaWxpdHkgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIC8vIGZsb2F0aW5nIHllbGxvdyBhcmVuYSBjaXJjbGVzOyBvbmx5IGRvIGRhbWFnZSBpZiBmbG9hdGluZ1xyXG4gICAgICBpZDogJ08yUyBQb3RlbnQgUGV0cm9zcGhlcmUgRXhwbG9zaW9uJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnMjM2MicsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gZGF0YS5EYW1hZ2VGcm9tTWF0Y2hlcyhtYXRjaGVzKSA+IDAsXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyBNdXN0IGJlIGZsb2F0aW5nIHRvIHN1cnZpdmU7IGhpdHMgZXZlcnlvbmUgYnV0IG9ubHkgZG9lcyBkYW1hZ2UgaWYgbm90IGZsb2F0aW5nLlxyXG4gICAgICBpZDogJ08yUyBFYXJ0aHF1YWtlJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnMjQ3QScsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gZGF0YS5EYW1hZ2VGcm9tTWF0Y2hlcyhtYXRjaGVzKSA+IDAsXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBEYXRhIGV4dGVuZHMgT29wc3lEYXRhIHtcclxuICBpbml0aWFsaXplZD86IGJvb2xlYW47XHJcbiAgcGhhc2VOdW1iZXI/OiBudW1iZXI7XHJcbiAgZ2FtZUNvdW50PzogbnVtYmVyO1xyXG59XHJcblxyXG4vLyBPM04gLSBEZWx0YXNjYXBlIDMuMCBOb3JtYWxcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkRlbHRhc2NhcGVWMzAsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ08zTiBTcGVsbGJsYWRlIEZpcmUgSUlJJzogJzI0NjAnLCAvLyBEb251dCBBb0UsIEhhbGljYXJuYXNzdXNcclxuICAgICdPM04gU3BlbGxibGFkZSBCbGl6emFyZCBJSUknOiAnMjQ2MScsIC8vIENpcmNsZSBBb0UsIEhhbGljYXJuYXNzdXNcclxuICAgICdPM04gU3BlbGxibGFkZSBUaHVuZGVyIElJSSc6ICcyNDYyJywgLy8gTGluZSBBb0UsIEhhbGljYXJuYXNzdXNcclxuICAgICdPM04gQ3Jvc3MgUmVhcGVyJzogJzI0NkInLCAvLyBDaXJjbGUgQW9FLCBTb3VsIFJlYXBlclxyXG4gICAgJ08zTiBHdXN0aW5nIEdvdWdlJzogJzI0NkMnLCAvLyBHcmVlbiBsaW5lIEFvRSwgU291bCBSZWFwZXJcclxuICAgICdPM04gU3dvcmQgRGFuY2UnOiAnMjQ3MCcsIC8vIFRhcmdldGVkIHRoaW4gY29uZSBBb0UsIEhhbGljYXJuYXNzdXNcclxuICAgICdPM04gVXBsaWZ0JzogJzI0NzMnLCAvLyBHcm91bmQgc3BlYXJzLCBRdWVlbidzIFdhbHR6IGVmZmVjdCwgSGFsaWNhcm5hc3N1c1xyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ08zTiBVbHRpbXVtJzogJzI0NzcnLCAvLyBJbnN0YW50IGtpbGwuIFVzZWQgaWYgdGhlIHBsYXllciBkb2VzIG5vdCBleGl0IHRoZSBzYW5kIG1hemUgZmFzdCBlbm91Z2guXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdPM04gSG9seSBCbHVyJzogJzI0NjMnLCAvLyBTcHJlYWQgY2lyY2xlcy5cclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTzNOIFBoYXNlIFRyYWNrZXInLFxyXG4gICAgICB0eXBlOiAnU3RhcnRzVXNpbmcnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5zdGFydHNVc2luZyh7IGlkOiAnMjMwNCcsIHNvdXJjZTogJ0hhbGljYXJuYXNzdXMnLCBjYXB0dXJlOiBmYWxzZSB9KSxcclxuICAgICAgbmV0UmVnZXhEZTogTmV0UmVnZXhlcy5zdGFydHNVc2luZyh7IGlkOiAnMjMwNCcsIHNvdXJjZTogJ0hhbGlrYXJuYXNzb3MnLCBjYXB0dXJlOiBmYWxzZSB9KSxcclxuICAgICAgbmV0UmVnZXhGcjogTmV0UmVnZXhlcy5zdGFydHNVc2luZyh7IGlkOiAnMjMwNCcsIHNvdXJjZTogJ0hhbGljYXJuYXNzZScsIGNhcHR1cmU6IGZhbHNlIH0pLFxyXG4gICAgICBuZXRSZWdleEphOiBOZXRSZWdleGVzLnN0YXJ0c1VzaW5nKHsgaWQ6ICcyMzA0Jywgc291cmNlOiAn44OP44Oq44Kr44Or44OK44OD44K944K5JywgY2FwdHVyZTogZmFsc2UgfSksXHJcbiAgICAgIG5ldFJlZ2V4Q246IE5ldFJlZ2V4ZXMuc3RhcnRzVXNpbmcoeyBpZDogJzIzMDQnLCBzb3VyY2U6ICflk4jliKnljaHnurPoi4/mlq8nLCBjYXB0dXJlOiBmYWxzZSB9KSxcclxuICAgICAgbmV0UmVnZXhLbzogTmV0UmVnZXhlcy5zdGFydHNVc2luZyh7IGlkOiAnMjMwNCcsIHNvdXJjZTogJ+2VoOumrOy5tOultOuCmOyGjOyKpCcsIGNhcHR1cmU6IGZhbHNlIH0pLFxyXG4gICAgICBydW46IChkYXRhKSA9PiBkYXRhLnBoYXNlTnVtYmVyID0gKGRhdGEucGhhc2VOdW1iZXIgPz8gMCkgKyAxLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgLy8gVGhlcmUncyBhIGxvdCB0byB0cmFjaywgYW5kIGluIG9yZGVyIHRvIG1ha2UgaXQgYWxsIGNsZWFuLCBpdCdzIHNhZmVzdCBqdXN0IHRvXHJcbiAgICAgIC8vIGluaXRpYWxpemUgaXQgYWxsIHVwIGZyb250IGluc3RlYWQgb2YgdHJ5aW5nIHRvIGd1YXJkIGFnYWluc3QgdW5kZWZpbmVkIGNvbXBhcmlzb25zLlxyXG4gICAgICBpZDogJ08zTiBJbml0aWFsaXppbmcnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzM2NycsIHNvdXJjZTogJ0hhbGljYXJuYXNzdXMnLCBjYXB0dXJlOiBmYWxzZSB9KSxcclxuICAgICAgbmV0UmVnZXhEZTogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICczNjcnLCBzb3VyY2U6ICdIYWxpa2FybmFzc29zJywgY2FwdHVyZTogZmFsc2UgfSksXHJcbiAgICAgIG5ldFJlZ2V4RnI6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnMzY3Jywgc291cmNlOiAnSGFsaWNhcm5hc3NlJywgY2FwdHVyZTogZmFsc2UgfSksXHJcbiAgICAgIG5ldFJlZ2V4SmE6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnMzY3Jywgc291cmNlOiAn44OP44Oq44Kr44Or44OK44OD44K944K5JywgY2FwdHVyZTogZmFsc2UgfSksXHJcbiAgICAgIG5ldFJlZ2V4Q246IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnMzY3Jywgc291cmNlOiAn5ZOI5Yip5Y2h57qz6IuP5pavJywgY2FwdHVyZTogZmFsc2UgfSksXHJcbiAgICAgIG5ldFJlZ2V4S286IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnMzY3Jywgc291cmNlOiAn7ZWg66as7Lm066W064KY7IaM7IqkJywgY2FwdHVyZTogZmFsc2UgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEpID0+ICFkYXRhLmluaXRpYWxpemVkLFxyXG4gICAgICBydW46IChkYXRhKSA9PiB7XHJcbiAgICAgICAgZGF0YS5nYW1lQ291bnQgPSAwO1xyXG4gICAgICAgIC8vIEluZGV4aW5nIHBoYXNlcyBhdCAxIHNvIGFzIHRvIG1ha2UgcGhhc2VzIG1hdGNoIHdoYXQgaHVtYW5zIGV4cGVjdC5cclxuICAgICAgICAvLyAxOiBXZSBzdGFydCBoZXJlLlxyXG4gICAgICAgIC8vIDI6IENhdmUgcGhhc2Ugd2l0aCBVcGxpZnRzLlxyXG4gICAgICAgIC8vIDM6IFBvc3QtaW50ZXJtaXNzaW9uLCB3aXRoIGdvb2QgYW5kIGJhZCBmcm9ncy5cclxuICAgICAgICBkYXRhLnBoYXNlTnVtYmVyID0gMTtcclxuICAgICAgICBkYXRhLmluaXRpYWxpemVkID0gdHJ1ZTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTzNOIFJpYmJpdCcsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnMjQ2NicgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICAvLyBXZSBETyB3YW50IHRvIGJlIGhpdCBieSBUb2FkL1JpYmJpdCBpZiB0aGUgbmV4dCBjYXN0IG9mIFRoZSBHYW1lXHJcbiAgICAgICAgLy8gaXMgNHggdG9hZCBwYW5lbHMuXHJcbiAgICAgICAgY29uc3QgZ2FtZUNvdW50ID0gZGF0YS5nYW1lQ291bnQgPz8gMDtcclxuICAgICAgICByZXR1cm4gIShkYXRhLnBoYXNlTnVtYmVyID09PSAzICYmIGdhbWVDb3VudCAlIDIgPT09IDApICYmIG1hdGNoZXMudGFyZ2V0SWQgIT09ICdFMDAwMDAwMCc7XHJcbiAgICAgIH0sXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyBUaGVyZSdzIGEgbG90IHdlIGNvdWxkIGRvIHRvIHRyYWNrIGV4YWN0bHkgaG93IHRoZSBwbGF5ZXIgZmFpbGVkIFRoZSBHYW1lLlxyXG4gICAgICAvLyBXaHkgb3ZlcnRoaW5rIE5vcm1hbCBtb2RlLCBob3dldmVyP1xyXG4gICAgICBpZDogJ08zTiBUaGUgR2FtZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgLy8gR3Vlc3Mgd2hhdCB5b3UganVzdCBsb3N0P1xyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICcyNDZEJyB9KSxcclxuICAgICAgLy8gSWYgdGhlIHBsYXllciB0YWtlcyBubyBkYW1hZ2UsIHRoZXkgZGlkIHRoZSBtZWNoYW5pYyBjb3JyZWN0bHkuXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEuRGFtYWdlRnJvbU1hdGNoZXMobWF0Y2hlcykgPiAwLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgICBydW46IChkYXRhKSA9PiBkYXRhLmdhbWVDb3VudCA9IChkYXRhLmdhbWVDb3VudCA/PyAwKSArIDEsXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFRPRE86IGhhbmRsZSBSaWJiaXQgKDIyRjcpLCBPaW5rICgyMkY5LCBpZiBkYW1hZ2UpLCBTcXVlbGNoICgyMkY4LCBpZiBkYW1hZ2UpXHJcbi8vICAgICAgIHdoaWNoIGlzIGFuIGVycm9yIGV4Y2VwdCBkdXJpbmcgdGhlIHNlY29uZCBnYW1lXHJcblxyXG4vLyBPM1MgLSBEZWx0YXNjYXBlIDMuMCBTYXZhZ2VcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkRlbHRhc2NhcGVWMzBTYXZhZ2UsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ08zUyBTcGVsbGJsYWRlIEZpcmUgSUlJJzogJzIyRUMnLCAvLyBkb251dFxyXG4gICAgJ08zUyBTcGVsbGJsYWRlIFRodW5kZXIgSUlJJzogJzIyRUUnLCAvLyBsaW5lXHJcbiAgICAnTzNTIFNwZWxsYmxhZGUgQmxpenphcmQgSUlJJzogJzIyRUQnLCAvLyBjaXJjbGVcclxuICAgICdPM1MgVXBsaWZ0JzogJzIzMEQnLCAvLyBub3Qgc3RhbmRpbmcgb24gYmx1ZSBzcXVhcmVcclxuICAgICdPM1MgU291bCBSZWFwZXIgR3VzdGluZyBHb3VnZSc6ICcyMkZGJywgLy8gcmVhcGVyIGxpbmUgYW9lIGR1cmluZyBjYXZlIHBoYXNlXHJcbiAgICAnTzNTIFNvdWwgUmVhcGVyIENyb3NzIFJlYXBlcic6ICcyMkZEJywgLy8gbWlkZGxlIHJlYXBlciBjaXJjbGVcclxuICAgICdPM1MgU291bCBSZWFwZXIgU3RlbmNoIG9mIERlYXRoJzogJzIyRkUnLCAvLyBvdXRzaWRlIHJlYXBlcnMgKGR1cmluZyBmaW5hbCBwaGFzZSlcclxuICAgICdPM1MgQXBhbmRhIE1hZ2ljIEhhbW1lcic6ICcyMzE1JywgLy8gYm9va3MgcGhhc2UgbWFnaWMgaGFtbWVyIGNpcmNsZVxyXG4gICAgJ08zUyBCcmlhciBUaG9ybic6ICcyMzA5JywgLy8gbm90IGJyZWFraW5nIHRldGhlcnMgZmFzdCBlbm91Z2hcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ08zUyBIb2x5IEVkZ2UnOiAnMjJGMCcsIC8vIFNwZWxsYmxhZGUgSG9seSBzcHJlYWRcclxuICAgICdPM1MgU3dvcmQgRGFuY2UnOiAnMjMwNycsIC8vIHByb3RlYW4gd2F2ZVxyXG4gICAgJ08zUyBHcmVhdCBEcmFnb24gRnJvc3QgQnJlYXRoJzogJzIzMTInLCAvLyB0YW5rIGNsZWF2ZSBmcm9tIEdyZWF0IERyYWdvblxyXG4gICAgJ08zUyBJcm9uIEdpYW50IEdyYW5kIFN3b3JkJzogJzIzMTYnLCAvLyB0YW5rIGNsZWF2ZSBmcm9tIElyb24gR2lhbnRcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ08zUyBGb2xpbyc6ICcyMzBGJywgLy8gYm9va3MgYm9va3MgYm9va3NcclxuICB9LFxyXG4gIHNvbG9XYXJuOiB7XHJcbiAgICAnTzNTIEhvbHkgQmx1cic6ICcyMkYxJywgLy8gU3BlbGxibGFkZSBIb2x5IHN0YWNrXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICAvLyBFdmVyeWJvZHkgZ2V0cyBoaXRzIGJ5IHRoaXMsIGJ1dCBpdCdzIG9ubHkgYSBmYWlsdXJlIGlmIGl0IGRvZXMgZGFtYWdlLlxyXG4gICAgICBpZDogJ08zUyBUaGUgR2FtZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzIzMDEnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEuRGFtYWdlRnJvbU1hdGNoZXMobWF0Y2hlcykgPiAwLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBPNE4gLSBEZWx0YXNjYXBlIDQuMCBOb3JtYWxcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkRlbHRhc2NhcGVWNDAsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ080TiBCbGl6emFyZCBJSUknOiAnMjRCQycsIC8vIFRhcmdldGVkIGNpcmNsZSBBb0VzLCBFeGRlYXRoXHJcbiAgICAnTzROIEVtcG93ZXJlZCBUaHVuZGVyIElJSSc6ICcyNEMxJywgLy8gVW50ZWxlZ3JhcGhlZCBsYXJnZSBjaXJjbGUgQW9FLCBFeGRlYXRoXHJcbiAgICAnTzROIFpvbWJpZSBCcmVhdGgnOiAnMjRDQicsIC8vIENvbmFsLCB0cmVlIGhlYWQgYWZ0ZXIgRGVjaXNpdmUgQmF0dGxlXHJcbiAgICAnTzROIENsZWFyb3V0JzogJzI0Q0MnLCAvLyBPdmVybGFwcGluZyBjb25lIEFvRXMsIERlYXRobHkgVmluZSAodGVudGFjbGVzIGFsb25nc2lkZSB0cmVlIGhlYWQpXHJcbiAgICAnTzROIEJsYWNrIFNwYXJrJzogJzI0QzknLCAvLyBFeHBsb2RpbmcgQmxhY2sgSG9sZVxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAvLyBFbXBvd2VyZWQgRmlyZSBJSUkgaW5mbGljdHMgdGhlIFB5cmV0aWMgZGVidWZmLCB3aGljaCBkZWFscyBkYW1hZ2UgaWYgdGhlIHBsYXllclxyXG4gICAgLy8gbW92ZXMgb3IgYWN0cyBiZWZvcmUgdGhlIGRlYnVmZiBmYWxscy4gVW5mb3J0dW5hdGVseSBpdCBkb2Vzbid0IGxvb2sgbGlrZSB0aGVyZSdzXHJcbiAgICAvLyBjdXJyZW50bHkgYSBsb2cgbGluZSBmb3IgdGhpcywgc28gdGhlIG9ubHkgd2F5IHRvIGNoZWNrIGZvciB0aGlzIGlzIHRvIGNvbGxlY3RcclxuICAgIC8vIHRoZSBkZWJ1ZmZzIGFuZCB0aGVuIHdhcm4gaWYgYSBwbGF5ZXIgdGFrZXMgYW4gYWN0aW9uIGR1cmluZyB0aGF0IHRpbWUuIE5vdCB3b3J0aCBpdFxyXG4gICAgLy8gZm9yIE5vcm1hbC5cclxuICAgICdPNE4gU3RhbmRhcmQgRmlyZSc6ICcyNEJBJyxcclxuICAgICdPNE4gQnVzdGVyIFRodW5kZXInOiAnMjRCRScsIC8vIEEgY2xlYXZpbmcgdGFuayBidXN0ZXJcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIC8vIEtpbGxzIHRhcmdldCBpZiBub3QgY2xlYW5zZWRcclxuICAgICAgaWQ6ICdPNE4gRG9vbScsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICczOEUnIH0pLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnQ2xlYW5zZXJzIG1pc3NlZCBEb29tIScsXHJcbiAgICAgICAgICAgIGRlOiAnRG9vbS1SZWluaWd1bmcgdmVyZ2Vzc2VuIScsXHJcbiAgICAgICAgICAgIGZyOiAnRGlzc2lwYXRpb24gZHUgR2xhcyBtYW5xdcOpZSEnLFxyXG4gICAgICAgICAgICBqYTogJ+atu+OBruWuo+WRiicsXHJcbiAgICAgICAgICAgIGNuOiAn5rKh6Kej5q275a6jJyxcclxuICAgICAgICAgICAga286ICfso73snYzsnZgg7ISg6rOgJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIC8vIFNob3J0IGtub2NrYmFjayBmcm9tIEV4ZGVhdGhcclxuICAgICAgaWQ6ICdPNE4gVmFjdXVtIFdhdmUnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICcyNEI4JywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnUHVzaGVkIG9mZiEnLFxyXG4gICAgICAgICAgICBkZTogJ1J1bnRlciBnZXNjaHVic3QhJyxcclxuICAgICAgICAgICAgZnI6ICdSZXBvdXNzw6koZSkgIScsXHJcbiAgICAgICAgICAgIGphOiAn6JC944Gh44GfJyxcclxuICAgICAgICAgICAgY246ICflh7vpgIDlnaDokL0nLFxyXG4gICAgICAgICAgICBrbzogJ+uEieuwseuQqCcsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyBSb29tLXdpZGUgQW9FLCBmcmVlemVzIG5vbi1tb3ZpbmcgdGFyZ2V0c1xyXG4gICAgICBpZDogJ080TiBFbXBvd2VyZWQgQmxpenphcmQnLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnNEU2JyB9KSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmVmZmVjdCB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE5ldE1hdGNoZXMgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9uZXRfbWF0Y2hlcyc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbi8vIFRPRE86IHRha2luZyB0aGUgd3JvbmcgY29sb3Igd2hpdGUvYmxhY2sgYW50aWxpZ2h0XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIERhdGEgZXh0ZW5kcyBPb3BzeURhdGEge1xyXG4gIGlzRGVjaXNpdmVCYXR0bGVFbGVtZW50PzogYm9vbGVhbjtcclxuICBpc05lb0V4ZGVhdGg/OiBib29sZWFuO1xyXG4gIGhhc0JleW9uZERlYXRoPzogeyBbbmFtZTogc3RyaW5nXTogYm9vbGVhbiB9O1xyXG4gIGRvdWJsZUF0dGFja01hdGNoZXM/OiBOZXRNYXRjaGVzWydBYmlsaXR5J11bXTtcclxufVxyXG5cclxuLy8gTzRTIC0gRGVsdGFzY2FwZSA0LjAgU2F2YWdlXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5EZWx0YXNjYXBlVjQwU2F2YWdlLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdPNFMxIFZpbmUgQ2xlYXJvdXQnOiAnMjQwQycsIC8vIGNpcmNsZSBvZiB2aW5lc1xyXG4gICAgJ080UzEgWm9tYmllIEJyZWF0aCc6ICcyNDBCJywgLy8gdHJlZSBleGRlYXRoIGNvbmFsXHJcbiAgICAnTzRTMSBWYWN1dW0gV2F2ZSc6ICcyM0ZFJywgLy8gY2lyY2xlIGNlbnRlcmVkIG9uIGV4ZGVhdGhcclxuICAgICdPNFMyIE5lbyBWYWN1dW0gV2F2ZSc6ICcyNDFEJywgLy8gXCJvdXQgb2YgbWVsZWVcIlxyXG4gICAgJ080UzIgRGVhdGggQm9tYic6ICcyNDMxJywgLy8gZmFpbGVkIGFjY2VsZXJhdGlvbiBib21iXHJcbiAgICAnTzRTMiBFbXB0aW5lc3MgMSc6ICcyNDIxJywgLy8gZXhhZmxhcmVzIGluaXRpYWxcclxuICAgICdPNFMyIEVtcHRpbmVzcyAyJzogJzI0MjInLCAvLyBleGFmbGFyZXMgbW92aW5nXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnTzRTMSBCbGFjayBIb2xlIEJsYWNrIFNwYXJrJzogJzI0MDcnLCAvLyBibGFjayBob2xlIGNhdGNoaW5nIHlvdVxyXG4gICAgJ080UzIgRWRnZSBPZiBEZWF0aCc6ICcyNDE1JywgLy8gc3RhbmRpbmcgYmV0d2VlbiB0aGUgdHdvIGNvbG9yIGxhc2Vyc1xyXG4gICAgJ080UzIgSW5uZXIgQW50aWxpZ2h0JzogJzI0NEMnLCAvLyBpbm5lciBsYXNlclxyXG4gICAgJ080UzIgT3V0ZXIgQW50aWxpZ2h0JzogJzI0MTAnLCAvLyBvdXRlciBsYXNlclxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnTzRTMSBGaXJlIElJSSc6ICcyM0Y2JywgLy8gc3ByZWFkIGV4cGxvc2lvblxyXG4gIH0sXHJcbiAgc2hhcmVGYWlsOiB7XHJcbiAgICAnTzRTMSBUaHVuZGVyIElJSSc6ICcyM0ZBJywgLy8gdGFua2J1c3RlclxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6ICdPNFMyIERlY2lzaXZlIEJhdHRsZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnMjQwOCcsIGNhcHR1cmU6IGZhbHNlIH0pLFxyXG4gICAgICBydW46IChkYXRhKSA9PiB7XHJcbiAgICAgICAgZGF0YS5pc0RlY2lzaXZlQmF0dGxlRWxlbWVudCA9IHRydWU7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ080UzEgVmFjdXVtIFdhdmUnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzIzRkUnLCBjYXB0dXJlOiBmYWxzZSB9KSxcclxuICAgICAgcnVuOiAoZGF0YSkgPT4ge1xyXG4gICAgICAgIGRhdGEuaXNEZWNpc2l2ZUJhdHRsZUVsZW1lbnQgPSBmYWxzZTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTzRTMiBBbG1hZ2VzdCcsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnMjQxNycsIGNhcHR1cmU6IGZhbHNlIH0pLFxyXG4gICAgICBydW46IChkYXRhKSA9PiB7XHJcbiAgICAgICAgZGF0YS5pc05lb0V4ZGVhdGggPSB0cnVlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdPNFMyIEJsaXp6YXJkIElJSScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzIzRjgnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIC8vIElnbm9yZSB1bmF2b2lkYWJsZSByYWlkIGFvZSBCbGl6emFyZCBJSUkuXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEpID0+ICFkYXRhLmlzRGVjaXNpdmVCYXR0bGVFbGVtZW50LFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdPNFMyIFRodW5kZXIgSUlJJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnMjNGRCcsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgLy8gT25seSBjb25zaWRlciB0aGlzIGR1cmluZyByYW5kb20gbWVjaGFuaWMgYWZ0ZXIgZGVjaXNpdmUgYmF0dGxlLlxyXG4gICAgICBjb25kaXRpb246IChkYXRhKSA9PiBkYXRhLmlzRGVjaXNpdmVCYXR0bGVFbGVtZW50LFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdPNFMyIFBldHJpZmllZCcsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICcyNjInIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIC8vIE9uIE5lbywgYmVpbmcgcGV0cmlmaWVkIGlzIGJlY2F1c2UgeW91IGxvb2tlZCBhdCBTaHJpZWssIHNvIHlvdXIgZmF1bHQuXHJcbiAgICAgICAgaWYgKGRhdGEuaXNOZW9FeGRlYXRoKVxyXG4gICAgICAgICAgcmV0dXJuIHsgdHlwZTogJ2ZhaWwnLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmVmZmVjdCB9O1xyXG4gICAgICAgIC8vIE9uIG5vcm1hbCBFeERlYXRoLCB0aGlzIGlzIGR1ZSB0byBXaGl0ZSBIb2xlLlxyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgbmFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmVmZmVjdCB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdPNFMyIEZvcmtlZCBMaWdodG5pbmcnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICcyNDJFJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdPNFMyIEJleW9uZCBEZWF0aCBHYWluJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzU2NicgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLmhhc0JleW9uZERlYXRoID8/PSB7fTtcclxuICAgICAgICBkYXRhLmhhc0JleW9uZERlYXRoW21hdGNoZXMudGFyZ2V0XSA9IHRydWU7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ080UzIgQmV5b25kIERlYXRoIExvc2UnLFxyXG4gICAgICB0eXBlOiAnTG9zZXNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5sb3Nlc0VmZmVjdCh7IGVmZmVjdElkOiAnNTY2JyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuaGFzQmV5b25kRGVhdGggPz89IHt9O1xyXG4gICAgICAgIGRhdGEuaGFzQmV5b25kRGVhdGhbbWF0Y2hlcy50YXJnZXRdID0gZmFsc2U7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ080UzIgQmV5b25kIERlYXRoJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzU2NicgfSksXHJcbiAgICAgIGRlbGF5U2Vjb25kczogKF9kYXRhLCBtYXRjaGVzKSA9PiBwYXJzZUZsb2F0KG1hdGNoZXMuZHVyYXRpb24pIC0gMC41LFxyXG4gICAgICBkZWF0aFJlYXNvbjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBpZiAoIWRhdGEuaGFzQmV5b25kRGVhdGgpXHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgaWYgKCFkYXRhLmhhc0JleW9uZERlYXRoW21hdGNoZXMudGFyZ2V0XSlcclxuICAgICAgICAgIHJldHVybjtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IG1hdGNoZXMuZWZmZWN0LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ080UzIgRG91YmxlIEF0dGFjayBDb2xsZWN0JyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnMjQxQycsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuZG91YmxlQXR0YWNrTWF0Y2hlcyA9IGRhdGEuZG91YmxlQXR0YWNrTWF0Y2hlcyB8fCBbXTtcclxuICAgICAgICBkYXRhLmRvdWJsZUF0dGFja01hdGNoZXMucHVzaChtYXRjaGVzKTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTzRTMiBEb3VibGUgQXR0YWNrJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnMjQxQycsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgbWlzdGFrZTogKGRhdGEpID0+IHtcclxuICAgICAgICBjb25zdCBhcnIgPSBkYXRhLmRvdWJsZUF0dGFja01hdGNoZXM7XHJcbiAgICAgICAgaWYgKCFhcnIpXHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgaWYgKGFyci5sZW5ndGggPD0gMilcclxuICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAvLyBIYXJkIHRvIGtub3cgd2hvIHNob3VsZCBiZSBpbiB0aGlzIGFuZCB3aG8gc2hvdWxkbid0LCBidXRcclxuICAgICAgICAvLyBpdCBzaG91bGQgbmV2ZXIgaGl0IDMgcGVvcGxlLlxyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICdmYWlsJywgdGV4dDogYCR7YXJyWzBdPy5hYmlsaXR5ID8/ICcnfSB4ICR7YXJyLmxlbmd0aH1gIH07XHJcbiAgICAgIH0sXHJcbiAgICAgIHJ1bjogKGRhdGEpID0+IGRlbGV0ZSBkYXRhLmRvdWJsZUF0dGFja01hdGNoZXMsXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuLy8gVE9ETzogRGlhYm9saWMgV2luZCAoMjhCOSkgYWx3YXlzIHNlZW1zIHRvIGJlIDB4MTYgbm90IDB4MTUuXHJcblxyXG5pbnRlcmZhY2UgRGF0YSBleHRlbmRzIE9vcHN5RGF0YSB7XHJcbiAgaGFzVGhyb3R0bGU/OiB7IFtuYW1lOiBzdHJpbmddOiBib29sZWFuIH07XHJcbn1cclxuXHJcbi8vIE81TiAtIFNpZ21hc2NhcGUgMS4wIE5vcm1hbFxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuU2lnbWFzY2FwZVYxMCxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnTzVOIFdyb3RoIEdob3N0IEVuY3VtYmVyJzogJzI4QUUnLCAvLyBzcXVhcmVzIHRoYXQgZ2hvc3RzIGFwcGVhciBpblxyXG4gICAgJ081TiBTYWludGx5IEJlYW0nOiAnMjhBQScsIC8vIGNoYXNpbmcgY2lyY2xlcyB0aGF0IGRlc3Ryb3kgZ2hvc3RzXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ081TiBUaHJvdHRsZSBHYWluJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzNBQScgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICAoZGF0YS5oYXNUaHJvdHRsZSA/Pz0ge30pW21hdGNoZXMudGFyZ2V0XSA9IHRydWU7XHJcbiAgICAgICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkoZGF0YS5oYXNUaHJvdHRsZSkpO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdPNU4gVGhyb3R0bGUgRGVhdGgnLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnM0FBJyB9KSxcclxuICAgICAgZGVsYXlTZWNvbmRzOiAoX2RhdGEsIG1hdGNoZXMpID0+IHBhcnNlRmxvYXQobWF0Y2hlcy5kdXJhdGlvbikgLSAxLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBpZiAoIWRhdGEuaGFzVGhyb3R0bGU/LlttYXRjaGVzLnRhcmdldF0pXHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiBtYXRjaGVzLmVmZmVjdCxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdPNU4gVGhyb3R0bGUgTG9zZScsXHJcbiAgICAgIHR5cGU6ICdMb3Nlc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmxvc2VzRWZmZWN0KHsgZWZmZWN0SWQ6ICczQUEnIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgKGRhdGEuaGFzVGhyb3R0bGUgPz89IHt9KVttYXRjaGVzLnRhcmdldF0gPSBmYWxzZTtcclxuICAgICAgICBjb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeShkYXRhLmhhc1Rocm90dGxlKSk7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyBHZXR0aW5nIGhpdCBieSBhIGdob3N0IHdpdGhvdXQgdGhyb3R0bGUgKHRoZSBtYW5kYXRvcnkgcG9zdC1jaGltbmV5IG9uZSkuXHJcbiAgICAgIGlkOiAnTzVOIFBvc3Nlc3MnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICcyOEFDJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiAhZGF0YS5oYXNUaHJvdHRsZT8uW21hdGNoZXMudGFyZ2V0XSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ2ZhaWwnLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmFiaWxpdHkgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcbmltcG9ydCB7IHBsYXllckRhbWFnZUZpZWxkcyB9IGZyb20gJy4uLy4uLy4uL29vcHN5X2NvbW1vbic7XHJcblxyXG4vLyBUT0RPOiBEaWFib2xpYyBXaW5kICgyOEJEKSBhbHdheXMgc2VlbXMgdG8gYmUgMHgxNiBub3QgMHgxNS5cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSBleHRlbmRzIE9vcHN5RGF0YSB7XHJcbiAgaGFzVGhyb3R0bGU/OiB7IFtuYW1lOiBzdHJpbmddOiBib29sZWFuIH07XHJcbn1cclxuXHJcbi8vIE81UyAtIFNpZ21hc2NhcGUgMS4wIFNhdmFnZVxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuU2lnbWFzY2FwZVYxMFNhdmFnZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnTzVTIFdyb3RoIEdob3N0IEVuY3VtYmVyJzogJzI4QjYnLCAvLyBzcXVhcmVzIGFwcGVhcmluZ1xyXG4gICAgJ081UyBTYWludGx5IEJlYW4nOiAnMjhCNCcsIC8vIGNoYXNpbmcgbGlnaHRzXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ081UyBUaHJvdHRsZSBHYWluJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzNBQScgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IChkYXRhLmhhc1Rocm90dGxlID8/PSB7fSlbbWF0Y2hlcy50YXJnZXRdID0gdHJ1ZSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTzVTIFRocm90dGxlIERlYXRoJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzNBQScgfSksXHJcbiAgICAgIGRlbGF5U2Vjb25kczogKF9kYXRhLCBtYXRjaGVzKSA9PiBwYXJzZUZsb2F0KG1hdGNoZXMuZHVyYXRpb24pIC0gMSxcclxuICAgICAgZGVhdGhSZWFzb246IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgaWYgKCFkYXRhLmhhc1Rocm90dGxlPy5bbWF0Y2hlcy50YXJnZXRdKVxyXG4gICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDogbWF0Y2hlcy5lZmZlY3QsXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTzVTIFRocm90dGxlIExvc2UnLFxyXG4gICAgICB0eXBlOiAnTG9zZXNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5sb3Nlc0VmZmVjdCh7IGVmZmVjdElkOiAnM0FBJyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4gKGRhdGEuaGFzVGhyb3R0bGUgPz89IHt9KVttYXRjaGVzLnRhcmdldF0gPSBmYWxzZSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIC8vIEdldHRpbmcgaGl0IGJ5IGEgZ2hvc3Qgd2l0aG91dCB0aHJvdHRsZSAodGhlIG1hbmRhdG9yeSBwb3N0LWNoaW1uZXkgb25lKS5cclxuICAgICAgaWQ6ICdPNVMgUG9zc2VzcycsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzI4QUMnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+ICFkYXRhLmhhc1Rocm90dGxlPy5bbWF0Y2hlcy50YXJnZXRdLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmludGVyZmFjZSBEYXRhIGV4dGVuZHMgT29wc3lEYXRhIHtcclxuICBoYXNGaXJlUmVzaXN0PzogeyBbbmFtZTogc3RyaW5nXTogYm9vbGVhbiB9O1xyXG59XHJcblxyXG4vLyBPNk4gLSBTaWdtYXNjYXBlIDIuMCBOb3JtYWxcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlNpZ21hc2NhcGVWMjAsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ082TiBFYXJ0aHF1YWtlJzogJzI4MTEnLCAvLyBmYWlsaW5nIHRvIGJlIGluIGEgcGxhbmVcclxuICAgICdPNk4gRGVtb25pYyBTdG9uZSc6ICcyODQ3JywgLy8gY2hhc2luZyBjaXJjbGVzXHJcbiAgICAnTzZOIERlbW9uaWMgV2F2ZSc6ICcyODMxJywgLy8gZmFpbGluZyB0byBiZSBiZWhpbmQgcm9ja1xyXG4gICAgJ082TiBEZW1vbmljIFNwb3V0IDEnOiAnMjgzNScsIC8vIHBhaXIgb2YgdGFyZ2V0ZWQgY2lyY2xlcyAoIzEpXHJcbiAgICAnTzZOIERlbW9uaWMgU3BvdXQgMic6ICcyODM3JywgLy8gcGFpciBvZiB0YXJnZXRlZCBjaXJjbGVzICgjMilcclxuICAgICdPNk4gRmVhdGhlcmxhbmNlJzogJzJBRTgnLCAvLyBibG93biBhd2F5IEVhc3Rlcmx5IGNpcmNsZXNcclxuICAgICdPNk4gSW50ZW5zZSBQYWluJzogJzJBRTcnLCAvLyBmYWlsaW5nIHRvIHNwcmVhZCBmb3IgRGVtb25pYyBQYWluIHRldGhlclxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6ICdPNk4gRmlyZSBSZXNpc3RhbmNlIEdhaW4nLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnNUVEJyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4gKGRhdGEuaGFzRmlyZVJlc2lzdCA/Pz0ge30pW21hdGNoZXMudGFyZ2V0XSA9IHRydWUsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ082TiBGaXJlIFJlc2lzdGFuY2UgTG9zZScsXHJcbiAgICAgIHR5cGU6ICdMb3Nlc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmxvc2VzRWZmZWN0KHsgZWZmZWN0SWQ6ICc1RUQnIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiAoZGF0YS5oYXNGaXJlUmVzaXN0ID8/PSB7fSlbbWF0Y2hlcy50YXJnZXRdID0gZmFsc2UsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyBGbGFzaCBGaXJlIHdpdGhvdXQgRmlyZSBSZXNpc3RhbmNlLlxyXG4gICAgICBpZDogJ082TiBGbGFzaCBGaXJlJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICcyODBCJyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gIWRhdGEuaGFzRmlyZVJlc2lzdD8uW21hdGNoZXMudGFyZ2V0XSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmFiaWxpdHkgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbmludGVyZmFjZSBEYXRhIGV4dGVuZHMgT29wc3lEYXRhIHtcclxuICBoYXNGaXJlUmVzaXN0PzogeyBbbmFtZTogc3RyaW5nXTogYm9vbGVhbiB9O1xyXG59XHJcblxyXG4vLyBPNlMgLSBTaWdtYXNjYXBlIDIuMCBTYXZhZ2VcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlNpZ21hc2NhcGVWMjBTYXZhZ2UsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ082UyBFYXJ0aHF1YWtlJzogJzI4MTAnLCAvLyBmYWlsaW5nIHRvIGJlIGluIGEgcGxhbmVcclxuICAgICdPNlMgUm9jayBIYXJkJzogJzI4MTInLCAvLyBmcm9tIHBvcnRyYXlhbCBvZiBlYXJ0aD9cclxuICAgICdPNlMgRmxhc2ggVG9ycmVudCAxJzogJzJBQjknLCAvLyBmcm9tIHBvcnRyYXlhbCBvZiB3YXRlcj8/XHJcbiAgICAnTzZTIEZsYXNoIFRvcnJlbnQgMic6ICcyODBGJywgLy8gZnJvbSBwb3J0cmF5YWwgb2Ygd2F0ZXI/P1xyXG4gICAgJ082UyBFYXN0ZXJseSBGZWF0aGVybGFuY2UnOiAnMjgzRScsIC8vIGJsb3duIGF3YXkgRWFzdGVybHkgY2lyY2xlc1xyXG4gICAgJ082UyBEZW1vbmljIFdhdmUnOiAnMjgzMCcsIC8vIGZhaWxpbmcgdG8gYmUgYmVoaW5kIHJvY2tcclxuICAgICdPNlMgRGVtb25pYyBTcG91dCc6ICcyODM2JywgLy8gcGFpciBvZiB0YXJnZXRlZCBjaXJjbGUnXHJcbiAgICAnTzZTIERlbW9uaWMgU3RvbmUgMSc6ICcyODQ0JywgLy8gY2hhc2luZyBjaXJjbGUgaW5pdGlhbFxyXG4gICAgJ082UyBEZW1vbmljIFN0b25lIDInOiAnMjg0NScsIC8vIGNoYXNpbmcgY2lyY2xlIHJlcGVhdGVkXHJcbiAgICAnTzZTIEludGVuc2UgUGFpbic6ICcyODNBJywgLy8gZmFpbGluZyB0byBzcHJlYWQgZm9yIERlbW9uaWMgUGFpbiB0ZXRoZXJcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ082UyBUaGUgUHJpY2UnOiAnMjgyNicsIC8vIGV4cGxvZGluZyBMYXN0IEtpc3MgdGFua2J1c3RlciBkZWJ1ZmZcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTzZTIEZpcmUgUmVzaXN0YW5jZSBHYWluJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzVFRCcgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IChkYXRhLmhhc0ZpcmVSZXNpc3QgPz89IHt9KVttYXRjaGVzLnRhcmdldF0gPSB0cnVlLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdPNlMgRmlyZSBSZXNpc3RhbmNlIExvc2UnLFxyXG4gICAgICB0eXBlOiAnTG9zZXNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5sb3Nlc0VmZmVjdCh7IGVmZmVjdElkOiAnNUVEJyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4gKGRhdGEuaGFzRmlyZVJlc2lzdCA/Pz0ge30pW21hdGNoZXMudGFyZ2V0XSA9IGZhbHNlLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgLy8gRmxhc2ggRmlyZSB3aXRob3V0IEZpcmUgUmVzaXN0YW5jZS5cclxuICAgICAgaWQ6ICdPNlMgRmxhc2ggRmlyZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnMjgwQScgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+ICFkYXRhLmhhc0ZpcmVSZXNpc3Q/LlttYXRjaGVzLnRhcmdldF0sXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyBMb29rIGF3YXk7IGRvZXMgZGFtYWdlIGlmIGZhaWxlZC5cclxuICAgICAgaWQ6ICdPNlMgRGl2aW5lIEx1cmUnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICcyODIyJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiBkYXRhLkRhbWFnZUZyb21NYXRjaGVzKG1hdGNoZXMpID4gMCxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmFiaWxpdHkgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuLy8gVE9ETzogc3RhbmRpbmcgaW4gdGhlIHdyb25nIHNpZGUgb2YgSW50ZXJkaW1lbnNpb25hbCBCb21iIGNhdXNlc1xyXG4vLyAgICAgICBJbnRlcmRpbWVuc2lvbmFsIEV4cGxvc2lvbiAoMjc2MykgYW5kIGFsc28gZ2l2ZXMgeW91IGEgcmVkXHJcbi8vICAgICAgIFggaGVhZG1hcmtlciBsaWtlIEJhcmRhbSdzIE1ldHRsZSBib3NzIDIuICBIb3dldmVyLCB0aGlzXHJcbi8vICAgICAgIGlzbid0IGFuIGFjdHVhbCBoZWFkbWFya2VyIGxpbmUuICBTbywgdGhlcmUgaXMgbm8gd2F5IHRvXHJcbi8vICAgICAgIGRpZmZlcmVudGlhdGUgXCJzb21lYm9keSBmYWlsZWQgdGhpc1wiIHZzIFwibm9ib2R5IGdvdCBpdFwiLlxyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIE83TiAtIFNpZ21hc2NhcGUgMy4wIE5vcm1hbFxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuU2lnbWFzY2FwZVYzMCxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnTzdOIE1hZ2l0ZWsgUmF5JzogJzI3NkInLCAvLyB1bnRlbGVncmFwaGVkIGZyb250YWwgbGluZVxyXG4gICAgJ083TiBJbmsnOiAnMjc1RCcsIC8vIEluaXRpYWwgVWx0cm9zIHRhcmdldGVkIGNpcmNsZXNcclxuICAgICdPN04gVGVudGFjbGUnOiAnMjc1RicsIC8vIFRlbnRhY2xlIHNpbXVsYXRpb24gdGFyZ2V0ZWQgY2lyY2xlc1xyXG4gICAgJ083TiBXYWxsb3AnOiAnMjc2MCcsIC8vIFVsdHJvcyB0ZW50YWNsZXMgYXR0YWNraW5nXHJcbiAgICAnTzdOIENoYWluIENhbm5vbic6ICcyNzcwJywgLy8gYmFpdGVkIGFpcnNoaXAgYWRkIGNhbm5vblxyXG4gICAgJ083TiBNaXNzaWxlIEV4cGxvc2lvbic6ICcyNzY1JywgLy8gSGl0dGluZyBhIG1pc3NpbGVcclxuICAgICdPN04gQmlibGlvdGFwaCBEZWVwIERhcmtuZXNzJzogJzI5QkYnLCAvLyBnaWFudCBkb251dFxyXG4gICAgJ083TiBEYWRhbHVtYSBBdXJhIENhbm5vbic6ICcyNzY3JywgLy8gbGFyZ2UgbGluZSBhb2VcclxuICAgICdPN04gR3VhcmRpYW4gRGlmZnJhY3RpdmUgTGFzZXInOiAnMjc2MScsIC8vIGluaXRpYWwgQWlyIEZvcmNlIGNlbnRlcmVkIGNpcmNsZSBvbiBHdWFyZGlhblxyXG4gICAgJ083TiBBaXIgRm9yY2UgRGlmZnJhY3RpdmUgTGFzZXInOiAnMjczRicsIC8vIEFpciBGb3JjZSBhZGQgbGFyZ2UgY29uYWxcclxuICAgICdPN04gSW50ZXJkaW1lbnNpb25hbCBFeHBsb3Npb24nOiAnMjc2MycsIC8vIEZhaWxlZCBib21iIChlaXRoZXIgd3Jvbmcgc2lkZSBvciBpZ25vcmVkKVxyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ083TiBTdXBlciBDaGFrcmEgQnVyc3QnOiAnMjc2OScsIC8vIE1pc3NlZCBEYWRhbHVtYSB0b3dlciAoaGl0cyBldmVyeWJvZHkpXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdEZhaWw6IHtcclxuICAgICdPN04gU2hvY2tlZCc6ICc1REEnLCAvLyB0b3VjaGluZyBhcmVuYSBlZGdlXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gVE9ETzogSW5rICgyNzdEKSBzZWVtcyB0byBhbHdheXMgYmUgMHgxNlxyXG4vLyBUT0RPOiBGYWlsaW5nIFZpcnVzP1xyXG4vLyBUT0RPOiBmYWlsaW5nIEludGVyZGltZW5zaW9uYWwgQm9tYnM/XHJcblxyXG4vLyBPN1MgLSBTaWdtYXNjYXBlIDMuMCBTYXZhZ2VcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlNpZ21hc2NhcGVWMzBTYXZhZ2UsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ083UyBNYWdpdGVrIFJheSc6ICcyNzg4JywgLy8gZnJvbnQgbGluZSBsYXNlclxyXG4gICAgJ083UyBMaWdodG5pbmcgQm9tYiBFeHBsb3Npb24nOiAnMjc4RScsIC8vIGJhaXRlZCBvcmJzXHJcbiAgICAnTzdTIENoYWluIENhbm5vbic6ICcyNzhGJywgLy8gZGFtYWdlIGZyb20gYmFpdGVkIGFlcmlhbCBhdHRhY2tcclxuICAgICdPN1MgVGVudGFjbGUnOiAnMjc3RScsIC8vIHRlbnRhY2xlcyBhcHBlYXJpbmdcclxuICAgICdPN1MgVGVudGFjbGUgV2FsbG9wJzogJzI3N0YnLCAvLyB0ZW50YWNsZXMgYXR0YWNraW5nXHJcbiAgICAnTzdTIEFpciBGb3JjZSBEaWZmcmFjdGl2ZSBMYXNlcic6ICcyNzQwJywgLy8gQWlyIEZvcmNlIGFkZHMgY29uYWxcclxuICAgICdPN04gR3VhcmRpYW4gRGlmZnJhY3RpdmUgTGFzZXInOiAnMjc4MCcsIC8vIGluaXRpYWwgQWlyIEZvcmNlIGNlbnRlcmVkIGNpcmNsZSBvbiBHdWFyZGlhblxyXG4gICAgJ083UyBUaGUgSGVhdCc6ICcyNzc3JywgLy8gZXhwbG9zaW9uIGZyb20gc2VhcmluZyB3aW5kXHJcbiAgICAnTzdTIFN1cGVyIENoYWtyYSBCdXJzdCc6ICcyNzg2JywgLy8gZmFpbGluZyBEYWRhbHVtYSB0b3dlcnNcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdPN1MgTWlzc2lsZSc6ICcyNzgyJyxcclxuICB9LFxyXG4gIGdhaW5zRWZmZWN0RmFpbDoge1xyXG4gICAgJ083UyBTaG9ja2VkJzogJzVEQScsIC8vIHRvdWNoaW5nIGFyZW5hIGVkZ2VcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ083UyBBdXJhIENhbm5vbic6ICcyNzg0JywgLy8gRGFkYWx1bWEgbGluZSBhb2VcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTzdTIFN0b25lc2tpbicsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnMkFCNScgfSksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICdmYWlsJywgYmxhbWU6IG1hdGNoZXMuc291cmNlLCB0ZXh0OiBtYXRjaGVzLmFiaWxpdHkgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcbmltcG9ydCB7IHBsYXllckRhbWFnZUZpZWxkcyB9IGZyb20gJy4uLy4uLy4uL29vcHN5X2NvbW1vbic7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gTzhOIC0gU2lnbWFzY2FwZSA0LjAgTm9ybWFsXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5TaWdtYXNjYXBlVjQwLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdPOE4gQmxpenphcmQgQmxpdHogMSc6ICcyOTE4JyxcclxuICAgICdPOE4gQmxpenphcmQgQmxpdHogMic6ICcyOTE0JyxcclxuICAgICdPOE4gVGhydW1taW5nIFRodW5kZXIgMSc6ICcyOTFEJyxcclxuICAgICdPOE4gVGhydW1taW5nIFRodW5kZXIgMic6ICcyOTFDJyxcclxuICAgICdPOE4gVGhydW1taW5nIFRodW5kZXIgMyc6ICcyOTFCJyxcclxuICAgICdPOE4gV2F2ZSBDYW5ub24nOiAnMjkyOCcsIC8vIHRlbGVncmFwaGVkIGxpbmUgYW9lc1xyXG4gICAgJ084TiBSZXZvbHRpbmcgUnVpbic6ICcyOTIzJywgLy8gbGFyZ2UgMTgwIGNsZWF2ZSBhZnRlciBUaW1lbHkgVGVsZXBvcnRcclxuICAgICdPOE4gSW50ZW1wZXJhdGUgV2lsbCc6ICcyOTJBJywgLy8gZWFzdCAxODAgY2xlYXZlXHJcbiAgICAnTzhOIEdyYXZpdGF0aW9uYWwgV2F2ZSc6ICcyOTJCJywgLy8gd2VzdCAxODAgY2xlYXZlXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdPOE4gRmxhZ3JhbnQgRmlyZSBTcHJlYWQnOiAnMjkxRicsIC8vIHRydWUgc3ByZWFkIG1hcmtlcnNcclxuICB9LFxyXG4gIHNvbG9XYXJuOiB7XHJcbiAgICAnTzhOIEZsYWdyYW50IEZpcmUgU3RhY2snOiAnMjkyMCcsIC8vIGZha2Ugc3ByZWFkIG1hcmtlclxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgLy8gTG9vayBhd2F5OyBkb2VzIGRhbWFnZSBpZiBmYWlsZWQuXHJcbiAgICAgIGlkOiAnTzhOIEluZG9sZW50IFdpbGwnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICcyOTJDJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiBkYXRhLkRhbWFnZUZyb21NYXRjaGVzKG1hdGNoZXMpID4gMCxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmFiaWxpdHkgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIC8vIExvb2sgdG93YXJkczsgZG9lcyBkYW1hZ2UgaWYgZmFpbGVkLlxyXG4gICAgICBpZDogJ084TiBBdmUgTWFyaWEnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICcyOTJCJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiBkYXRhLkRhbWFnZUZyb21NYXRjaGVzKG1hdGNoZXMpID4gMCxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmFiaWxpdHkgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTzhOIFNob2Nrd2F2ZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnMjkyNycgfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdLbm9ja2VkIG9mZicsXHJcbiAgICAgICAgICAgIGRlOiAnUnVudGVyZ2VmYWxsZW4nLFxyXG4gICAgICAgICAgICBmcjogJ1JlbnZlcnPDqShlKScsXHJcbiAgICAgICAgICAgIGphOiAn44OO44OD44Kv44OQ44OD44KvJyxcclxuICAgICAgICAgICAgY246ICflh7vpgIDlnaDokL0nLFxyXG4gICAgICAgICAgICBrbzogJ+uEieuwsScsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ084TiBBZXJvIEFzc2F1bHQnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzI5MjQnIH0pLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnS25vY2tlZCBvZmYnLFxyXG4gICAgICAgICAgICBkZTogJ1J1bnRlcmdlZmFsbGVuJyxcclxuICAgICAgICAgICAgZnI6ICdSZW52ZXJzw6koZSknLFxyXG4gICAgICAgICAgICBqYTogJ+ODjuODg+OCr+ODkOODg+OCrycsXHJcbiAgICAgICAgICAgIGNuOiAn5Ye76YCA5Z2g6JC9JyxcclxuICAgICAgICAgICAga286ICfrhInrsLEnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBUT0RPOiBmYWlsaW5nIG1ldGVvciB0b3dlcnM/XHJcblxyXG4vLyBPOFMgLSBTaWdtYXNjYXBlIDQuMCBTYXZhZ2VcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlNpZ21hc2NhcGVWNDBTYXZhZ2UsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ084UzEgVGhydW1taW5nIFRodW5kZXIgMSc6ICcyOENCJyxcclxuICAgICdPOFMxIFRocnVtbWluZyBUaHVuZGVyIDInOiAnMjhDQycsXHJcbiAgICAnTzhTMSBUaHJ1bW1pbmcgVGh1bmRlciAzJzogJzI4Q0QnLFxyXG4gICAgJ084UzEgVGhydW1taW5nIFRodW5kZXIgNCc6ICcyQjMxJyxcclxuICAgICdPOFMxIFRocnVtbWluZyBUaHVuZGVyIDUnOiAnMkIyRicsXHJcbiAgICAnTzhTMSBUaHJ1bW1pbmcgVGh1bmRlciA2JzogJzJCMzAnLFxyXG4gICAgJ084UzEgQmxpenphcmQgQmxpdHogMSc6ICcyOEM0JyxcclxuICAgICdPOFMxIEJsaXp6YXJkIEJsaXR6IDInOiAnMkJDQScsXHJcbiAgICAnTzhTMSBJbmV4b3JhYmxlIFdpbGwnOiAnMjhEQScsIC8vIGdyb3VuZCBjaXJjbGVzXHJcbiAgICAnTzhTMSBSZXZvbHRpbmcgUnVpbic6ICcyOEQ1JywgLy8gbGFyZ2UgMTgwIGNsZWF2ZSBhZnRlciBUaW1lbHkgVGVsZXBvcnRcclxuICAgICdPOFMxIEludGVtcGVyYXRlIFdpbGwnOiAnMjhERicsIC8vIGVhc3QgMTgwIGNsZWF2ZVxyXG4gICAgJ084UzEgR3Jhdml0YXRpb25hbCBXYXZlJzogJzI4REUnLCAvLyB3ZXN0IDE4MCBjbGVhdmVcclxuICAgICdPOFMyIEJsaXp6YXJkIElJSSAxJzogJzI5MDgnLCAvLyBjZWxlc3RyaWFkIGNlbnRlciBjaXJjbGVcclxuICAgICdPOFMyIEJsaXp6YXJkIElJSSAyJzogJzI5MDknLCAvLyBjZWxlc3RyaWFkIGRvbnV0XHJcbiAgICAnTzhTMiBUaHVuZGVyIElJSSc6ICcyOTBBJywgLy8gY2VsZXN0cmlhZCBjcm9zcyBsaW5lc1xyXG4gICAgJ084UzIgVHJpbmUgMSc6ICcyOTBFJywgLy8gZWF0aW5nIHRoZSBnb2xkZW4gZG9yaXRvXHJcbiAgICAnTzhTMiBUcmluZSAyJzogJzI5MEYnLCAvLyBlYXRpbmcgdGhlIGJpZyBnb2xkZW4gZG9yaXRvXHJcbiAgICAnTzhTMiBNZXRlb3InOiAnMjkwMycsIC8vIGNoYXNpbmcgcHVkZGxlcyBkdXJpbmcgMm5kIGZvcnNha2VuIChNZXRlb3IgMjkwNCA9IHRvd2VyKVxyXG4gICAgJ084UzIgQWxsIFRoaW5ncyBFbmRpbmcgMSc6ICcyOEYwJywgLy8gRnV0dXJlcyBOdW1iZXJlZCBmb2xsb3d1cFxyXG4gICAgJ084UzIgQWxsIFRoaW5ncyBFbmRpbmcgMic6ICcyOEYyJywgLy8gUGFzdHMgRm9yZ290dGVuIGZvbGxvd3VwXHJcbiAgICAnTzhTMiBBbGwgVGhpbmdzIEVuZGluZyAzJzogJzI4RjYnLCAvLyBGdXR1cmUncyBFbmQgZm9sbG93dXBcclxuICAgICdPOFMyIEFsbCBUaGluZ3MgRW5kaW5nIDQnOiAnMjhGOScsIC8vIFBhc3QncyBFbmQgZm9sbG93dXBcclxuICAgICdPOFMyIFdpbmdzIE9mIERlc3RydWN0aW9uIDEnOiAnMjhGRicsIC8vIGhhbGYgY2xlYXZlXHJcbiAgICAnTzhTMiBXaW5ncyBPZiBEZXN0cnVjdGlvbiAyJzogJzI4RkUnLCAvLyBoYWxmIGNsZWF2ZVxyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ084UzIgVGhlIE1hZCBIZWFkIEJpZyBFeHBsb3Npb24nOiAnMjhGRCcsIC8vIG5vdCB0b3VjaGluZyBza3VsbFxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnTzhTMSBWaXRyb3BoeXJlJzogJzI4RTInLCAvLyB5ZWxsb3cgcmlnaHQgdGV0aGVyIHRoYXQgbXVzdCBiZSBzb2xvIChvciBrbm9ja2JhY2spXHJcbiAgICAnTzhTMSBGbGFncmFudCBGaXJlIFNwcmVhZCc6ICcyOENGJyxcclxuICAgICdPOFMyIEZpcmUgSUlJIFNwcmVhZCc6ICcyOTBCJywgLy8gY2VsZXN0cmlhZCBzcHJlYWRcclxuICAgICdPOFMyIFRoZSBNYWQgSGVhZCBFeHBsb3Npb24nOiAnMjhGQycsIC8vIHNrdWxsIHRldGhlcnNcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ084UzEgSHlwZXJkcml2ZSc6ICcyOEU4JywgLy8gcGhhc2UgMSB0YW5rYnVzdGVyXHJcbiAgICAnTzhTMiBIeXBlcmRyaXZlJzogJzIyOTEyOEU4JywgLy8gcGhhc2UgMiB0YW5rYnVzdGVyXHJcbiAgICAnTzhTMiBXaW5ncyBPZiBEZXN0cnVjdGlvbic6ICcyOTAxJywgLy8gY2xvc2UvZmFyIHRhbmsgYnVzdGVyc1xyXG4gIH0sXHJcbiAgc29sb1dhcm46IHtcclxuICAgICdPOFMxIEZsYWdyYW50IEZpcmUgU3RhY2snOiAnMjhEMCcsXHJcbiAgICAnTzhTMSBHcmF2aXRhcyc6ICcyOEUwJywgLy8gcHVycGxlIGxlZnQgdGV0aGVyIHRoYXQgbXVzdCBiZSBzaGFyZWQsIGxlYXZpbmcgYSBwdWRkbGVcclxuICAgICdPOFMxIEluZG9taXRhYmxlIFdpbGwnOiAnMjhEOScsIC8vIDR4IHN0YWNrIG1hcmtlcnNcclxuICAgICdPOFMyIEZpcmUgSUlJIFN0YWNrJzogJzI5MEMnLCAvLyBjZWxlc3RyaWFkIHN0YWNrXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICAvLyBMb29rIGF3YXk7IGRvZXMgZGFtYWdlIGlmIGZhaWxlZC5cclxuICAgICAgaWQ6ICdPOFMgSW5kb2xlbnQgV2lsbCcsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzI4RTQnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEuRGFtYWdlRnJvbU1hdGNoZXMobWF0Y2hlcykgPiAwLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgLy8gTG9vayB0b3dhcmRzOyBkb2VzIGRhbWFnZSBpZiBmYWlsZWQuXHJcbiAgICAgIGlkOiAnTzhTIEF2ZSBNYXJpYScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzI4RTMnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEuRGFtYWdlRnJvbU1hdGNoZXMobWF0Y2hlcykgPiAwLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdPOFMgU2hvY2t3YXZlJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICcyOERCJyB9KSxcclxuICAgICAgZGVhdGhSZWFzb246IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ0tub2NrZWQgb2ZmJyxcclxuICAgICAgICAgICAgZGU6ICdSdW50ZXJnZWZhbGxlbicsXHJcbiAgICAgICAgICAgIGZyOiAnUmVudmVyc8OpKGUpJyxcclxuICAgICAgICAgICAgamE6ICfjg47jg4Pjgq/jg5Djg4Pjgq8nLFxyXG4gICAgICAgICAgICBjbjogJ+WHu+mAgOWdoOiQvScsXHJcbiAgICAgICAgICAgIGtvOiAn64SJ67CxJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTzhTIEFlcm8gQXNzYXVsdCcsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnMjhENicgfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdLbm9ja2VkIG9mZicsXHJcbiAgICAgICAgICAgIGRlOiAnUnVudGVyZ2VmYWxsZW4nLFxyXG4gICAgICAgICAgICBmcjogJ1JlbnZlcnPDqShlKScsXHJcbiAgICAgICAgICAgIGphOiAn44OO44OD44Kv44OQ44OD44KvJyxcclxuICAgICAgICAgICAgY246ICflh7vpgIDlnaDokL0nLFxyXG4gICAgICAgICAgICBrbzogJ+uEieuwsScsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBPOU4gLSBBbHBoYXNjYXBlIDEuMCBOb3JtYWxcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkFscGhhc2NhcGVWMTAsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ085TiBEYW1uaW5nIEVkaWN0JzogJzMxNTAnLCAvLyBodWdlIDE4MCBmcm9udGFsIGNsZWF2ZVxyXG4gICAgJ085TiBTdHJheSBTcHJheSc6ICczMTZDJywgLy8gRHluYW1pYyBGbHVpZCBkZWJ1ZmYgZG9udXQgZXhwbG9zaW9uXHJcbiAgICAnTzlOIFN0cmF5IEZsYW1lcyc6ICczMTZCJywgLy8gRW50cm9weSBkZWJ1ZmYgY2lyY2xlIGV4cGxvc2lvblxyXG4gICAgJ085TiBLbm9ja2Rvd24gQmlnIEJhbmcnOiAnMzE2MCcsIC8vIGJpZyBjaXJjbGUgd2hlcmUgS25vY2tkb3duIG1hcmtlciBkcm9wcGVkXHJcbiAgICAnTzlOIEZpcmUgQmlnIEJhbmcnOiAnMzE1RicsIC8vIGdyb3VuZCBjaXJjbGVzIGR1cmluZyBmaXJlIHBoYXNlXHJcbiAgICAnTzlOIFNob2Nrd2F2ZSc6ICczMTUzJywgLy8gTG9uZ2l0dWRpbmFsL0xhdGl1ZGluYWwgSW1wbG9zaW9uXHJcbiAgICAnTzlOIENoYW9zcGhlcmUgRmllbmRpc2ggT3JicyBPcmJzaGFkb3cgMSc6ICczMTYyJywgLy8gbGluZSBhb2VzIGZyb20gRWFydGggcGhhc2Ugb3Jic1xyXG4gICAgJ085TiBDaGFvc3BoZXJlIEZpZW5kaXNoIE9yYnMgT3Jic2hhZG93IDInOiAnMzE2MycsIC8vIGxpbmUgYW9lcyBmcm9tIEVhcnRoIHBoYXNlIG9yYnNcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSBleHRlbmRzIE9vcHN5RGF0YSB7XHJcbiAgaGFzSGVhZHdpbmQ/OiB7IFtuYW1lOiBzdHJpbmddOiBib29sZWFuIH07XHJcbiAgaGFzUHJpbW9yZGlhbD86IHsgW25hbWU6IHN0cmluZ106IGJvb2xlYW4gfTtcclxufVxyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkFscGhhc2NhcGVWMTBTYXZhZ2UsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ085UyBTaG9ja3dhdmUnOiAnMzE3NCcsIC8vIExvbmdpdHVkaW5hbC9MYXRpdWRpbmFsIEltcGxvc2lvblxyXG4gICAgJ085UyBEYW1uaW5nIEVkaWN0JzogJzMxNzEnLCAvLyBodWdlIDE4MCBmcm9udGFsIGNsZWF2ZVxyXG4gICAgJ085UyBLbm9ja2Rvd24gQmlnIEJhbmcnOiAnMzE4MScsIC8vIGJpZyBjaXJjbGUgd2hlcmUgS25vY2tkb3duIG1hcmtlciBkcm9wcGVkXHJcbiAgICAnTzlTIEZpcmUgQmlnIEJhbmcnOiAnMzE4MCcsIC8vIGdyb3VuZCBjaXJjbGVzIGR1cmluZyBmaXJlIHBoYXNlXHJcbiAgICAnTzlTIENoYW9zcGhlcmUgRmllbmRpc2ggT3JicyBPcmJzaGFkb3cgMSc6ICczMTgzJywgLy8gbGluZSBhb2VzIGZyb20gRWFydGggcGhhc2Ugb3Jic1xyXG4gICAgJ085UyBDaGFvc3BoZXJlIEZpZW5kaXNoIE9yYnMgT3Jic2hhZG93IDInOiAnMzE4NCcsIC8vIGxpbmUgYW9lcyBmcm9tIEVhcnRoIHBoYXNlIG9yYnNcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIC8vIEZhY2luZyB0aGUgd3Jvbmcgd2F5IGZvciBIZWFkd2luZC9UYWlsd2FpbmRcclxuICAgICAgaWQ6ICdPOVMgQ3ljbG9uZSBLbm9ja2VkIE9mZicsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnMzE4RicgfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdLbm9ja2VkIG9mZicsXHJcbiAgICAgICAgICAgIGRlOiAnUnVudGVyZ2VmYWxsZW4nLFxyXG4gICAgICAgICAgICBmcjogJ1JlbnZlcnPDqShlKScsXHJcbiAgICAgICAgICAgIGphOiAn44OO44OD44Kv44OQ44OD44KvJyxcclxuICAgICAgICAgICAgY246ICflh7vpgIDlnaDokL0nLFxyXG4gICAgICAgICAgICBrbzogJ+uEieuwsScsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ085UyBIZWFkd2luZCBHYWluJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzY0MicgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IChkYXRhLmhhc0hlYWR3aW5kID8/PSB7fSlbbWF0Y2hlcy50YXJnZXRdID0gdHJ1ZSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTzlTIEhlYWR3aW5kIExvc2UnLFxyXG4gICAgICB0eXBlOiAnTG9zZXNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5sb3Nlc0VmZmVjdCh7IGVmZmVjdElkOiAnNjQyJyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4gKGRhdGEuaGFzSGVhZHdpbmQgPz89IHt9KVttYXRjaGVzLnRhcmdldF0gPSBmYWxzZSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTzlTIFByaW1vcmRpYWwgR2FpbicsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICc2NDUnIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiAoZGF0YS5oYXNQcmltb3JkaWFsID8/PSB7fSlbbWF0Y2hlcy50YXJnZXRdID0gdHJ1ZSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTzlTIFByaW1vcmRpYWwgTG9zZScsXHJcbiAgICAgIHR5cGU6ICdMb3Nlc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmxvc2VzRWZmZWN0KHsgZWZmZWN0SWQ6ICc2NDUnIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiAoZGF0YS5oYXNQcmltb3JkaWFsID8/PSB7fSlbbWF0Y2hlcy50YXJnZXRdID0gZmFsc2UsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyBFbnRyb3B5IGRlYnVmZiBjaXJjbGUgZXhwbG9zaW9uLlxyXG4gICAgICAvLyBEdXJpbmcgdGhlIG1pZHBoYXNlLCB0YW5rcy9oZWFsZXJzIG5lZWQgdG8gY2xlYXIgaGVhZHdpbmQgd2l0aCBFbnRyb3B5IGNpcmNsZSBhbmRcclxuICAgICAgLy8gZHBzIG5lZWQgdG8gY2xlYXIgUHJpbW9yZGlhbCBDcnVzdCB3aXRoIER5bmFtaWMgRmx1aWQgZG9udXQuICBJbiBjYXNlIHRoZXJlJ3NcclxuICAgICAgLy8gc29tZSBvdGhlciBzdHJhdGVneSwganVzdCBjaGVjayBib3RoIGRlYnVmZnMuXHJcbiAgICAgIGlkOiAnTzlTIFN0cmF5IEZsYW1lcycsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnMzE4QycgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4gIWRhdGEuaGFzSGVhZHdpbmQ/LlttYXRjaGVzLnRhcmdldF0gJiYgIWRhdGEuaGFzUHJpbW9yZGlhbD8uW21hdGNoZXMudGFyZ2V0XTtcclxuICAgICAgfSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmFiaWxpdHkgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIC8vIER5bmFtaWMgRmx1aWQgZGVidWZmIGRvbnV0IGV4cGxvc2lvbi5cclxuICAgICAgLy8gU2VlIFN0cmF5IEZsYW1lcyBub3RlIGFib3ZlLlxyXG4gICAgICBpZDogJ085UyBTdHJheSBTcHJheScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnMzE4RCcgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4gIWRhdGEuaGFzSGVhZHdpbmQ/LlttYXRjaGVzLnRhcmdldF0gJiYgIWRhdGEuaGFzUHJpbW9yZGlhbD8uW21hdGNoZXMudGFyZ2V0XTtcclxuICAgICAgfSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmFiaWxpdHkgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuLy8gVE9ETzogd2hhdCBpcyB0aGUgZmFpbHVyZSBmb3IgU3RhdGUgb2YgU2hvY2sgLyBDbHV0Y2ggLyBIaWdoZXN0IFN0YWtlcz9cclxuLy8gV2hlbiBzb2xvLCAyN0UyIGhpdHMgcGxheWVyIGFuZCAyQTM2IGhpdHMgbm9ib2R5LlxyXG4vLyBXaGVuIGluIGEgcGFydHksIDJBMzYgaGl0cyBldmVyeWJvZHkgc3RhY2tpbmcgYW5kIDI3RTIgaGl0cyBub2JvZHkuXHJcbi8vIElzIDI3RTIgdGhlIFwia2lsbHMgeW91IHdoZW4gbm8gZnJpZW5kc1wiIGRhbWFnZT8gKEl0IHdhcyBsaWtlIH4xMDBrIGF0IGxldmVsIDgwKS5cclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBCeWFra28gTm9ybWFsXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVKYWRlU3RvYSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnQnlha2tvIFN3ZWVwIHRoZSBMZWcnOiAnMkEyRScsIC8vIDI3MCBkZWdyZWUgZ2V0IGJlaGluZFxyXG4gICAgJ0J5YWtrbyBBcmF0YW1hIEZvcmNlIEFyYXRhbWEnOiAnMkE0OCcsIC8vIHBvcHBpbmcgVW5yZWxlbnRpbmcgQW5ndWlzaCBidWJibGVzXHJcbiAgICAnQnlha2tvIEZpcmUgYW5kIExpZ2h0bmluZyc6ICcyQTJDJywgLy8gbGFyZ2UgcmVkL3B1cnBsZSBsaW5lIGFvZVxyXG4gICAgJ0J5YWtrbyBIYWt1dGVpIEFyYXRhbWEnOiAnMkEyOScsIC8vIHRhcmdldGVkIGdyb3VuZCBjaXJjbGUgZHVyaW5nIHRpZ2VyIHBoYXNlXHJcbiAgICAnQnlha2tvIEh1bmRyZWRmb2xkIEhhdm9jIDEnOiAnMkEzOCcsIC8vIGxpZ2h0bmluZyBwdWRkbGVzIGluaXRpYWxcclxuICAgICdCeWFra28gSHVuZHJlZGZvbGQgSGF2b2MgMic6ICcyQTM5JywgLy8gbGlnaHRuaW5nIHB1ZGRsZXMgbW92aW5nXHJcbiAgICAnQnlha2tvIERpc3RhbnQgQ2xhcCc6ICcyQTMwJywgLy8gZG9udXRcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdCeWFra28gQXJhdGFtYSBNaWRwaGFzZSc6ICcyQTQyJywgLy8gcG9wcGluZyBhIGJ1YmJsZSBkdXJpbmcgbWlkcGhhc2VcclxuICAgICdCeWFra28gU3dlZXAgVGhlIExlZyc6ICcyQTQ2JywgLy8gZG9udXQgZHVyaW5nIG1pZHBoYXNlXHJcbiAgICAnQnlha2tvIEltcGVyaWFsIEd1YXJkJzogJzJBNDMnLCAvLyBsaW5lIGFvZSBmcm9tIHRpZ2VyIGR1cmluZyBtaWRwaGFzZVxyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RXYXJuOiB7XHJcbiAgICAnQnlha2tvIEJsZWVkaW5nJzogJzExMScsIC8vIHN0YW5kaW5nIGluIEhha3V0ZWkncyBBcmF0YW1hIGNpcmNsZSAoMkEyOSlcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0J5YWtrbyBCb21ib2dlbmVzaXMnOiAnMkEzQicsIC8vIHJlZCBzcHJlYWQgbWFya2VyXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcbmltcG9ydCB7IHBsYXllckRhbWFnZUZpZWxkcyB9IGZyb20gJy4uLy4uLy4uL29vcHN5X2NvbW1vbic7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gQnlha2tvIEV4dHJlbWVcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZUphZGVTdG9hRXh0cmVtZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAvLyBQb3BwaW5nIFVucmVsZW50aW5nIEFuZ3Vpc2ggYnViYmxlc1xyXG4gICAgJ0J5YUV4IEFyYXRhbWEnOiAnMjdGNicsXHJcbiAgICAvLyBTdGVwcGluZyBpbiBncm93aW5nIG9yYlxyXG4gICAgJ0J5YUV4IFZhY3V1bSBDbGF3JzogJzI3RTknLFxyXG4gICAgLy8gTGlnaHRuaW5nIFB1ZGRsZXNcclxuICAgICdCeWFFeCBIdW5kZXJmb2xkIEhhdm9jIDEnOiAnMjdFNScsXHJcbiAgICAnQnlhRXggSHVuZGVyZm9sZCBIYXZvYyAyJzogJzI3RTYnLFxyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ0J5YUV4IFN3ZWVwIFRoZSBMZWcnOiAnMjdEQicsXHJcbiAgICAnQnlhRXggRmlyZSBhbmQgTGlnaHRuaW5nJzogJzI3REUnLFxyXG4gICAgJ0J5YUV4IERpc3RhbnQgQ2xhcCc6ICcyN0REJyxcclxuICAgIC8vIE1pZHBoYXNlIGxpbmUgYXR0YWNrXHJcbiAgICAnQnlhRXggSW1wZXJpYWwgR3VhcmQnOiAnMjdGMScsXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICAvLyBQaW5rIGJ1YmJsZSBjb2xsaXNpb25cclxuICAgICAgaWQ6ICdCeWFFeCBPbWlub3VzIFdpbmQnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICcyN0VDJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ3dhcm4nLFxyXG4gICAgICAgICAgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnYnViYmxlIGNvbGxpc2lvbicsXHJcbiAgICAgICAgICAgIGRlOiAnQmxhc2VuIHNpbmQgenVzYW1tZW5nZXN0b8OfZW4nLFxyXG4gICAgICAgICAgICBmcjogJ0NvbGxpc2lvbiBhdmVjIHVuZSBidWxsZScsXHJcbiAgICAgICAgICAgIGphOiAn6KGd56qBJyxcclxuICAgICAgICAgICAgY246ICfnm7jmkp4nLFxyXG4gICAgICAgICAgICBrbzogJ+yepe2MkCDqsrnss5DshJwg7YSw7KeQJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcbmltcG9ydCB7IHBsYXllckRhbWFnZUZpZWxkcyB9IGZyb20gJy4uLy4uLy4uL29vcHN5X2NvbW1vbic7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gTGFrc2htaSBOb3JtYWxcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkVtYW5hdGlvbixcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnTGFrc2htaSBCbGlzc2Z1bCBTcGVhciBDcm9zcyc6ICcyNDhCJywgLy8gYmxpc3NmdWwgYXJyb3cncyBjcm9zcyBsaW5lcyAoY2FsbGVkIEJsaXNzZnVsIFNwZWFyKVxyXG4gICAgJ0xha3NobWkgQmxpc3NmdWwgU3BlYXIgQ3Jvc3MgQ2hhbmNoYWxhJzogJzI0OEMnLCAvLyBibGlzc2Z1bCBhcnJvdydzIGNyb3NzIGxpbmVzIChjYWxsZWQgQmxpc3NmdWwgU3BlYXIpXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdFdhcm46IHtcclxuICAgICdMYWtzaG1pIEJsZWVkaW5nJzogJzE0MCcsIC8vIHN0YW5kaW5nIGluIGV4cGFuZGluZyBibHVlIGZsb3dlciBjaXJjbGVcclxuICB9LFxyXG4gIGdhaW5zRWZmZWN0RmFpbDoge1xyXG4gICAgJ0xha3NobWkgRHJlYW1pbmcgS3NoYXRyaXlhIFRlcnJvcic6ICc0MicsIC8vIGZhaWxpbmcgSW5uZXIgRGVtb25zIGZyb20gaW5pdGlhbCBhZGRcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0xha3NobWkgQmxpc3NmdWwgQXJyb3cnOiAnMjQ4OScsIC8vIGNyb3NzIG1hcmtlciBkcm9wcGluZ1xyXG4gICAgJ0xha3NobWkgQmxpc3NmdWwgQXJyb3cgQ2hhbmNoYWxhJzogJzI0OEEnLCAvLyBjcm9zcyBtYXJrZXIgZHJvcHBpbmdcclxuICAgICdMYWtzaG1pIEJsaXNzZnVsIFNwZWFyJzogJzI0OTQnLCAvLyBmbG93ZXIgY2lyY2xlIGRyb3BwaW5nXHJcbiAgICAnTGFrc2htaSBCbGlzc2Z1bCBTcGVhciBDaGFuY2hhbGEnOiAnMjQ5NScsIC8vIGZsb3dlciBjaXJjbGUgZHJvcHBpbmdcclxuICAgICdMYWtzaG1pIFRoZSBQYXRoIG9mIExpZ2h0JzogJzI0QTEnLCAvLyBPVCBjbGVhdmVcclxuICB9LFxyXG4gIHNvbG9XYXJuOiB7XHJcbiAgICAnTGFrc2htaSBUaGUgUGFsbCBvZiBMaWdodCc6ICcyNDkxJywgLy8gc3RhY2tcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTGFrc2htaSBEaXZpbmUgRGVuaWFsIEtub2NrZWQgT2ZmJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnMjQ4NScsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgZGVhdGhSZWFzb246IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ0tub2NrZWQgb2ZmJyxcclxuICAgICAgICAgICAgZGU6ICdSdW50ZXJnZWZhbGxlbicsXHJcbiAgICAgICAgICAgIGZyOiAnUmVudmVyc8OpKGUpJyxcclxuICAgICAgICAgICAgamE6ICfjg47jg4Pjgq/jg5Djg4Pjgq8nLFxyXG4gICAgICAgICAgICBjbjogJ+WHu+mAgOWdoOiQvScsXHJcbiAgICAgICAgICAgIGtvOiAn64SJ67CxJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcbmltcG9ydCB7IHBsYXllckRhbWFnZUZpZWxkcyB9IGZyb20gJy4uLy4uLy4uL29vcHN5X2NvbW1vbic7XHJcblxyXG4vLyBOb3RlOiBmbG93ZXIgY2lyY2xlIGluIGV4dHJlbWUgaXMgY2FsbGVkIEJsaXNzZnVsIEhhbW1lciwgd2hlcmVhcyBpbiBub3JtYWxcclxuLy8gYm90aCB0aGUgY3Jvc3MgZnJvbSB0aGUgQmxpc3NmdWwgQXJyb3cgYW5kIHRoZSBmbG93ZXIgY2lyY2xlIGFyZSBib3RoIGNhbGxlZFxyXG4vLyBCbGlzc2Z1bCBTcGVhci5cclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBMYWtzaG1pIEV4dHJlbWVcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkVtYW5hdGlvbkV4dHJlbWUsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0xha3NobWlFeCBCbGlzc2Z1bCBTcGVhciBDcm9zcyc6ICcyMTUxJywgLy8gYmxpc3NmdWwgYXJyb3cncyBjcm9zcyBsaW5lcyAoY2FsbGVkIEJsaXNzZnVsIFNwZWFyKVxyXG4gICAgJ0xha3NobWlFeCBCbGlzc2Z1bCBTcGVhciBDcm9zcyBDaGFuY2hhbGEnOiAnMjE1MicsIC8vIGJsaXNzZnVsIGFycm93J3MgY3Jvc3MgbGluZXMgKGNhbGxlZCBCbGlzc2Z1bCBTcGVhcilcclxuICB9LFxyXG4gIGdhaW5zRWZmZWN0V2Fybjoge1xyXG4gICAgJ0xha3NobWlFeCBCbGVlZGluZyc6ICcxNDAnLCAvLyBzdGFuZGluZyBpbiBleHBhbmRpbmcgYmx1ZSBmbG93ZXIgY2lyY2xlXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdEZhaWw6IHtcclxuICAgICdMYWtzaG1pRXggRHJlYW1pbmcgS3NoYXRyaXlhIFRlcnJvcic6ICc0MicsIC8vIGZhaWxpbmcgSW5uZXIgRGVtb25zIGZyb20gaW5pdGlhbCBhZGRcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0xha3NobWlFeCBEcmVhbWluZyBLc2hhdHJpeWEgVGFpbCBTbGFwJzogJzI1OEMnLCAvLyB1bnRlbGVncmFwaGVkIG5vIGNhc3QgYmFyIGNsZWF2ZVxyXG4gICAgJ0xha3NobWlFeCBCbGlzc2Z1bCBBcnJvdyc6ICcyMTRGJywgLy8gY3Jvc3MgbWFya2VyIGRyb3BwaW5nXHJcbiAgICAnTGFrc2htaUV4IEJsaXNzZnVsIEFycm93IENoYW5jaGFsYSc6ICcyMTUwJywgLy8gY3Jvc3MgbWFya2VyIGRyb3BwaW5nXHJcbiAgICAnTGFrc2htaUV4IEJsaXNzZnVsIEhhbW1lcic6ICcyMURDJywgLy8gZmxvd2VyIGNpcmNsZSBkcm9wcGluZ1xyXG4gICAgJ0xha3NobWlFeCBCbGlzc2Z1bCBIYW1tZXIgQ2hhbmNoYWxhJzogJzIxREQnLCAvLyBmbG93ZXIgY2lyY2xlIGRyb3BpbmdcclxuICAgICdMYWtzaG1pRXggVGhlIFBhdGggb2YgTGlnaHQnOiAnMjE1QScsIC8vIE9UIGNsZWF2ZVxyXG4gICAgJ0xha3NobWlFeCBUaGUgUGF0aCBvZiBMaWdodCBDaGFuY2hhbGEnOiAnMjE1QicsIC8vIE9UIGNsZWF2ZVxyXG4gIH0sXHJcbiAgc29sb1dhcm46IHtcclxuICAgICdMYWtzaG1pRXggVGhlIFBhbGwgb2YgTGlnaHQnOiAnMjE1QycsIC8vIHN0YWNrXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ0xha3NobWlFeCBEaXZpbmUgRGVuaWFsIEtub2NrZWQgT2ZmJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnMjE0OScsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgZGVhdGhSZWFzb246IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ0tub2NrZWQgb2ZmJyxcclxuICAgICAgICAgICAgZGU6ICdSdW50ZXJnZWZhbGxlbicsXHJcbiAgICAgICAgICAgIGZyOiAnUmVudmVyc8OpKGUpJyxcclxuICAgICAgICAgICAgamE6ICfjg47jg4Pjgq/jg5Djg4Pjgq8nLFxyXG4gICAgICAgICAgICBjbjogJ+WHu+mAgOWdoOiQvScsXHJcbiAgICAgICAgICAgIGtvOiAn64SJ67CxJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuLy8gVE9ETzogaWdub3JpbmcgRmlyZSBCcmVhdGggKDJDQkQpIHNoYXJlIHdhcm5pbmcgYmVjYXVzZSBpdCBhbHNvIGhpdHMgYWRkcyAod2hpY2ggaXMgZmluZSkuXHJcbi8vIFdlIGNvdWxkIGZpbHRlciBvdXQgaGl0dGluZyBtdWx0aXBsZSBwbGF5ZXJzLCBidXQgdGhhdCdzIGEgbG90IG9mIGVmZm9ydCBmb3IgbG93IGRhbWFnZS5cclxuXHJcbi8vIEp1c3QgZm9yIHJlZmVyZW5jZSwgdGhpcyBmaWdodCBoYXMgXCJkb3VibGVcIiBhYmlsaXRpZXMsIHdoZXJlIHRoZSBmaXJzdCBoaXRcclxuLy8gZG9lcyBubyBkYW1hZ2UuICBTb21ldGltZXMgdGhlIHNldCBvZiBwZW9wbGUgaGl0IGJ5IHRoZSBmaXJzdCBhbmQgbm90IGJ5XHJcbi8vIHRoZSBzZWNvbmQgYXJlIG5vdCB0aGUgc2FtZSwgYnV0IHVzdWFsbHkgdGhleSBhcmUuICBTb21lIG9mIHRoZXNlIGhhdmVcclxuLy8gc3RhcnRzIHVzaW5nIGxpbmVzIChidXQgdGFyZ2V0ZWQgb24gYSBwbGF5ZXIgb3IgdW5rbm93bikuXHJcbi8vICogTWFuZ2xlICgyODZBKSwgcGFpcmVkIHdpdGggKDJDQjkpXHJcbi8vICogTWFuZ2xlICgyODdBKSwgcGFpcmVkIHdpdGggKDJDQzIpXHJcbi8vICogRmxhbWluZyBSZWNvaWwgKDI4NzApLCBwYWlyZWQgd2l0aCAoMkNCRSlcclxuLy8gKiBUYWlsIFN3aW5nICgyODZDKSwgcGFpcmVkIHdpdGggKDJDQkIpXHJcbi8vICogRmlyZSBCcmVhdGggKDI4NkUpLCBwYWlyZWQgd2l0aCAoMkNCRClcclxuLy8gKiBSdXNoICgyODZEKSwgcGFpcmVkIHdpdGggKDJDQkMpXHJcbi8vICogUnVzaCAoMjg3OCksIHBhaXJlZCB3aXRoICgyQ0MwKVxyXG4vLyAqIFN3ZWVwaW5nIEZsYW1lcyAoMjg3OSksIHBhaXJlZCB3aXRoICgyQ0MxKVxyXG4vLyAqIEZpcmViYWxsICgyODc2KSwgcGFpcmVkIHdpdGggKDJDQkEpXHJcblxyXG4vLyBOb3RlOiBSYXRoYWxvcyBFeHRyZW1lIGhhcyB0d28gcGFpcnMgb2YgRmxhbWluZyBSZWNvaWwsIGJ1dCBvbmx5IG9uZSBpbiBub3JtYWwgaGFzIGJlZW4gc2Vlbi5cclxuLy8gVGhlcmUgYXJlIDQgcGFpcnMgdG90YWw6IGh0dHBzOi8veGl2YXBpLmNvbS9zZWFyY2g/aW5kZXhlcz1hY3Rpb24mc3RyaW5nPWZsYW1pbmcrcmVjb2lsJmNvbHVtbnM9SUQmcHJldHR5PXRydWVcclxuLy8gMjg3MiAvIDJDQkYgYXBwZWFycyB0byBiZSBtaXNzaW5nLiAgQXNzdW1lIHRoYXQgaXQgZXhpc3RzLCBldmVuIGlmIGl0IGhhc24ndCBiZWVuIHNlZW4uXHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gUmF0aGFsb3MgTm9ybWFsXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVHcmVhdEh1bnQsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1JhdGhhbG9zIE1hbmdsZSAxJzogJzJDQjknLCAvLyBmaXJzdCBwaGFzZSBmcm9udGFsIGNvbmFsXHJcbiAgICAnUmF0aGFsb3MgTWFuZ2xlIDInOiAnMkNDMicsIC8vIHNlY29uZCBwaGFzZSBjb25hbCBzd2lwZVxyXG4gICAgJ1JhdGhhbG9zIFJ1c2ggMSc6ICcyQ0JDJywgLy8gZmlyc3QgcGhhc2UgY2hhcmdlIGF0dGFja1xyXG4gICAgJ1JhdGhhbG9zIFJ1c2ggMic6ICcyQ0MwJywgLy8gc2Vjb25kIHBoYXNlIGNoYXJnZSBhdHRhY2ssIGdpdmVzIHBvaXNvblxyXG4gICAgJ1JhdGhhbG9zIFRhaWwgU21hc2gnOiAnMjg2QicsIC8vIGZpcnN0IHBoYXNlIGxlZnQvcmVhciBjb25hbCwgcGFpcmVkIHdpdGggTWFuZ2xlICgyQ0I5KVxyXG4gICAgJ1JhdGhhbG9zIFRhaWwgU3dpbmcnOiAnMkNCQicsIC8vIGZpcnN0IHBoYXNlIHJpZ2h0IHNpZGUgYXR0YWNrXHJcbiAgICAnUmF0aGFsb3MgRmxhbWluZyBSZWNvaWwgMSc6ICcyQ0JFJywgLy8gZnJvbnRhbCBjb25hbCArIGtub2NrYmFja1xyXG4gICAgJ1JhdGhhbG9zIEZsYW1pbmcgUmVjb2lsIDInOiAnMkNCRicsIC8vIGZyb250YWwgY29uYWwgKyBrbm9ja2JhY2tcclxuICAgICdSYXRoYWxvcyBTdGVwcGUgU2hlZXAgTHVsbGFieSc6ICcyODdCJywgLy8gY2VudGVyZWQgY2lyY2xlXHJcbiAgICAnUmF0aGFsb3MgU3RlcHBlIFlhbWFhIEhlYWQgQnV0dCc6ICcyODdDJywgLy8gbGluZSBhb2VcclxuICAgICdSYXRoYWxvcyBTdGVwcGUgQ29ldXJsIFdpZGUgQmxhc3Rlcic6ICcyODdEJywgLy8gdmVyeSBsYXJnZSBjb25hbFxyXG4gICAgJ1JhdGhhbG9zIEdhcnVsYSBSdXNoJzogJzI4N0YnLCAvLyBsaW5lIGNoYXJnZSBpbnRvIHRoZSBhcmVuYVxyXG4gICAgJ1JhdGhhbG9zIFN3ZWVwaW5nIEZsYW1lcyc6ICcyQ0MxJywgLy8gc2Vjb25kIHBoYXNlIGZyb250YWwgY29uYWxcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ1JhdGhhbG9zIEdhcnVsYSBIZWF2ZSc6ICcyODdFJywgLy8gdW50ZWxlZ3JhcGhlZCBjb25hbCBjbGVhdmVcclxuICB9LFxyXG4gIHNvbG9XYXJuOiB7XHJcbiAgICAnUmF0aGFsb3MgRmlyZWJhbGwnOiAnMkNCQScsIC8vIHNlY29uZCBwaGFzZSBzdGFjayB0aGF0IGxlYXZlcyBhIGZpcmUgcHVkZGxlXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuLy8gVE9ETzogaWdub3JpbmcgRmlyZSBCcmVhdGggKDJBM0UpIHNoYXJlIHdhcm5pbmcgYmVjYXVzZSBpdCBhbHNvIGhpdHMgYWRkcyAod2hpY2ggaXMgZmluZSkuXHJcbi8vIFdlIGNvdWxkIGZpbHRlciBvdXQgaGl0dGluZyBtdWx0aXBsZSBwbGF5ZXJzLCBidXQgdGhhdCdzIGEgbG90IG9mIGVmZm9ydCBmb3IgbG93IGRhbWFnZS5cclxuXHJcbi8vIEp1c3QgZm9yIHJlZmVyZW5jZSwgdGhpcyBmaWdodCBoYXMgXCJkb3VibGVcIiBhYmlsaXRpZXMsIHdoZXJlIHRoZSBmaXJzdCBoaXRcclxuLy8gZG9lcyBubyBkYW1hZ2UuICBTb21ldGltZXMgdGhlIHNldCBvZiBwZW9wbGUgaGl0IGJ5IHRoZSBmaXJzdCBhbmQgbm90IGJ5XHJcbi8vIHRoZSBzZWNvbmQgYXJlIG5vdCB0aGUgc2FtZSwgYnV0IHVzdWFsbHkgdGhleSBhcmUuICBTb21lIG9mIHRoZXNlIGhhdmVcclxuLy8gc3RhcnRzIHVzaW5nIGxpbmVzIChidXQgdGFyZ2V0ZWQgb24gYSBwbGF5ZXIgb3IgdW5rbm93bikuXHJcbi8vICogTWFuZ2xlICgyODUzKSwgcGFpcmVkIHdpdGggKDI4NUMpXHJcbi8vICogTWFuZ2xlICgyODYzKSwgcGFpcmVkIHdpdGggKDJDQjcpXHJcbi8vICogRmxhbWluZyBSZWNvaWwgKDI4NTkpLCBwYWlyZWQgd2l0aCAoMkNCMylcclxuLy8gKiBGbGFtaW5nIFJlY29pbCAoMjg1QiksIHBhaXJlZCB3aXRoICgyQ0I0KVxyXG4vLyAqIFRhaWwgU3dpbmcgKDI4NTUpLCBwYWlyZWQgd2l0aCAoMkEzQylcclxuLy8gKiBGaXJlIEJyZWF0aCAoMjg1NyksIHBhaXJlZCB3aXRoICgyQTNFKVxyXG4vLyAqIFJ1c2ggKDI4NTYpLCBwYWlyZWQgd2l0aCAoMkEzRClcclxuLy8gKiBSdXNoICgyODYxKSwgcGFpcmVkIHdpdGggKDJDQjUpXHJcbi8vICogU3dlZXBpbmcgRmxhbWVzICgyODYyKSwgcGFpcmVkIHdpdGggKDJDQjYpXHJcbi8vICogRmlyZWJhbGwgMSAoMjg1RiksIHBhaXJlZCB3aXRoICgyODYwKVxyXG4vLyAqIEZpcmViYWxsIDIvMyAoMkQwQSksIHBhaXJlZCB3aXRoICgyRDBCKVxyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFJhdGhhbG9zIEV4dHJlbWVcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZUdyZWF0SHVudEV4dHJlbWUsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1JhdGhhbG9zRXggTWFuZ2xlIDEnOiAnMjg1QycsIC8vIGZpcnN0IHBoYXNlIGZyb250YWwgOTAgZGVncmVlIGNvbmFsXHJcbiAgICAnUmF0aGFsb3NFeCBNYW5nbGUgMic6ICcyQ0I3JywgLy8gc2Vjb25kIHBoYXNlIGNvbmFsIHN3aXBlXHJcbiAgICAnUmF0aGFsb3NFeCBSdXNoIDEnOiAnMkEzRCcsIC8vIGZpcnN0IHBoYXNlIGNoYXJnZSBhdHRhY2tcclxuICAgICdSYXRoYWxvc0V4IFJ1c2ggMic6ICcyQ0I1JywgLy8gc2Vjb25kIHBoYXNlIGNoYXJnZSBhdHRhY2ssIGdpdmVzIHBvaXNvblxyXG4gICAgJ1JhdGhhbG9zRXggVGFpbCBTbWFzaCc6ICcyODU0JywgLy8gZmlyc3QgcGhhc2UgbGVmdC9yZWFyIGNvbmFsLCBwYWlyZWQgd2l0aCBNYW5nbGUgKDI4NUMpXHJcbiAgICAnUmF0aGFsb3NFeCBUYWlsIFN3aW5nJzogJzJBM0MnLCAvLyBmaXJzdCBwaGFzZSByaWdodCBzaWRlIGF0dGFja1xyXG4gICAgJ1JhdGhhbG9zRXggRmxhbWluZyBSZWNvaWwgMSc6ICcyQ0IzJywgLy8gZnJvbnRhbCBjb25hbCArIGtub2NrYmFja1xyXG4gICAgJ1JhdGhhbG9zRXggRmxhbWluZyBSZWNvaWwgMic6ICcyQ0I0JywgLy8gZnJvbnRhbCBjb25hbCArIGtub2NrYmFja1xyXG4gICAgJ1JhdGhhbG9zRXggU3RlcHBlIFNoZWVwIEx1bGxhYnknOiAnMjg2NCcsIC8vIGNlbnRlcmVkIGNpcmNsZVxyXG4gICAgJ1JhdGhhbG9zRXggU3RlcHBlIFlhbWFhIEhlYWQgQnV0dCc6ICcyODY1JywgLy8gbGluZSBhb2VcclxuICAgICdSYXRoYWxvc0V4IFN0ZXBwZSBDb2V1cmwgV2lkZSBCbGFzdGVyJzogJzI4NjYnLCAvLyB2ZXJ5IGxhcmdlIGNvbmFsXHJcbiAgICAnUmF0aGFsb3NFeCBHYXJ1bGEgUnVzaCc6ICcyODY4JywgLy8gbGluZSBjaGFyZ2UgaW50byB0aGUgYXJlbmFcclxuICAgICdSYXRoYWxvc0V4IFN3ZWVwaW5nIEZsYW1lcyc6ICcyQ0I2JywgLy8gc2Vjb25kIHBoYXNlIGZyb250YWwgY29uYWxcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ1JhdGhhbG9zRXggR2FydWxhIEhlYXZlJzogJzI4NjcnLCAvLyB1bnRlbGVncmFwaGVkIGNvbmFsIGNsZWF2ZVxyXG4gIH0sXHJcbiAgc29sb1dhcm46IHtcclxuICAgICdSYXRoYWxvc0V4IEZpcmViYWxsIDEnOiAnMjg2MCcsIC8vIHNlY29uZCBwaGFzZSBzdGFjayB0cmlwbGUgZmlyZWJhbGwgaW5pdGlhbFxyXG4gICAgJ1JhdGhhbG9zRXggRmlyZWJhbGwgMic6ICcyRDBCJywgLy8gc2Vjb25kIHBoYXNlIHN0YWNrIHRyaXBsZSBmaXJlYmFsbCBzZWNvbmQgYW5kIHRoaXJkXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFNlaXJ5dSBOb3JtYWxcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZVdyZWF0aE9mU25ha2VzLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdTZWlyeXUgT25teW8gU2lnaWwnOiAnM0EwNycsIC8vIGNlbnRlcmVkIFwiZ2V0IG91dFwiIGNpcmNsZVxyXG4gICAgJ1NlaXJ5dSBTZXJwZW50LUV5ZSBTaWdpbCc6ICczQTA4JywgLy8gZG9udXRcclxuICAgICdTZWlyeXUgRm9ydHVuZS1CbGFkZSBTaWdpbCc6ICczODA2JywgLy8gS3VqaS1LaXJpICgzN0UxKSBsaW5lc1xyXG4gICAgJ1NlaXJ5dSBJd2EtTm8tU2hpa2kgMTAwLVRvbnplIFN3aW5nJzogJzNDMUUnLCAvLyBjZW50ZXJlZCBjaXJjbGVzICh0YW5rIHRldGhlcnMgaW4gZXh0cmVtZSlcclxuICAgICdTZWlyeXUgVGVuLU5vLVNoaWtpIFlhbWEtS2FndXJhJzogJzM4MTMnLCAvLyBibHVlIGxpbmVzIGR1cmluZyBtaWRwaGFzZSAvIGZpbmFsIHBoYXNlIGFkZHNcclxuICAgICdTZWlyeXUgSXdhLU5vLVNoaWtpIEthbmFibyc6ICczQzIwJywgLy8gdW5wYXNzYWJsZSB0ZXRoZXIgd2hpY2ggdGFyZ2V0cyBhIGxhcmdlIGNvbmFsIGNsZWF2ZVxyXG4gICAgJ1NlaXJ5dSBHcmVhdCBUeXBob29uIDEnOiAnMzgxMCcsIC8vIG91dHNpZGUgcmluZyBvZiB3YXRlciBkdXJpbmcgQ291cnNpbmcgUml2ZXJcclxuICAgICdTZWlyeXUgR3JlYXQgVHlwaG9vbiAyJzogJzM4MTEnLCAvLyBvdXRzaWRlIHJpbmcgb2Ygd2F0ZXIgZHVyaW5nIENvdXJzaW5nIFJpdmVyXHJcbiAgICAnU2Vpcnl1IEdyZWF0IFR5cGhvb24gMyc6ICczODEyJywgLy8gb3V0c2lkZSByaW5nIG9mIHdhdGVyIGR1cmluZyBDb3Vyc2luZyBSaXZlclxyXG4gICAgJ1NlaXJ5dSBZYW1hLU5vLVNoaWtpIEhhbmRwcmludCAxJzogJzM3MDcnLCAvLyBoYWxmIGFyZW5hIGNsZWF2ZVxyXG4gICAgJ1NlaXJ5dSBZYW1hLU5vLVNoaWtpIEhhbmRwcmludCAyJzogJzM3MDgnLCAvLyBoYWxmIGFyZW5hIGNsZWF2ZVxyXG4gICAgJ1NlaXJ5dSBGb3JjZSBPZiBOYXR1cmUnOiAnMzgwOScsIC8vIHN0YW5kaW5nIGluIHRoZSBtaWRkbGUgY2lyY2xlIGR1cmluZyBrbm9ja2JhY2sgKDM4MEEpXHJcbiAgICAnU2Vpcnl1IFNlcnBlbnRcXCdzIEphd3MnOiAnM0E4RCcsIC8vIGZhaWxpbmcgdG93ZXJzXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdTZWlyeXUgU2VycGVudCBEZXNjZW5kaW5nJzogJzM4MDQnLCAvLyBzcHJlYWQgbWFya2Vyc1xyXG4gICAgJ1NlaXJ5dSBBa2EtTm8tU2hpa2kgUmVkIFJ1c2gnOiAnM0MxRCcsIC8vIHRldGhlciBjaGFyZ2VcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ1NlaXJ5dSBJbmZpcm0gU291bCc6ICczN0ZEJywgLy8gdGFuayBidXN0ZXIgY2lyY3VsYXIgY2xlYXZlXHJcbiAgfSxcclxuICBzb2xvV2Fybjoge1xyXG4gICAgJ1NlaXJ5dSBBby1Oby1TaGlraSBCbHVlIEJvbHQnOiAnM0MxQycsIC8vIHRldGhlciBzaGFyZVxyXG4gICAgJ1NlaXJ5dSBGb3JiaWRkZW4gQXJ0cyAxJzogJzNDODInLCAvLyBsaW5lIHN0YWNrIHNoYXJlIGhpdCAxXHJcbiAgICAnU2Vpcnl1IEZvcmJpZGRlbiBBcnRzIDInOiAnM0M3MicsIC8vIGxpbmUgc3RhY2sgc2hhcmUgaGl0IDJcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG4vLyBUT0RPOiBJbmZpcm0gU291bCAoMzdENCkgaGl0dGluZyBDdXJzZWtlZXBlciAoMzdEMikgdGFyZ2V0P1xyXG4vLyBUT0RPOiB0YWtpbmcgRm9yYmlkZGVuIEFydHMgIzIgKDM3QzgpIHdpdGggdnVsbiBzdGFjayBmcm9tICMxP1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFNlaXJ5dSBFeHRyZW1lXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVXcmVhdGhPZlNuYWtlc0V4dHJlbWUsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1NlaXJ5dUV4IE9ubXlvIFNpZ2lsIDEnOiAnM0EwMScsIC8vIGNlbnRlcmVkIFwiZ2V0IG91dFwiIGNpcmNsZSAocGhhc2UgMSlcclxuICAgICdTZWlyeXVFeCBPbm15byBTaWdpbCAyJzogJzNBMDMnLCAvLyBjZW50ZXJlZCBcImdldCBvdXRcIiBjaXJjbGUgKHBoYXNlIDIgZmlyc3QpXHJcbiAgICAnU2Vpcnl1RXggT25teW8gU2lnaWwgMyc6ICczQTA2JywgLy8gY2VudGVyZWQgXCJnZXQgb3V0XCIgY2lyY2xlIChwaGFzZSAyIHNlY29uZClcclxuICAgICdTZWlyeXVFeCBTZXJwZW50LUV5ZSBTaWdpbCAxJzogJzNBMDUnLCAvLyBkb251dCAocGhhc2UgMiBmaXJzdClcclxuICAgICdTZWlyeXVFeCBTZXJwZW50LUV5ZSBTaWdpbCAyJzogJzNBMDQnLCAvLyBkb251dCAocGhhc2UgMiBzZWNvbmQpXHJcbiAgICAnU2Vpcnl1RXggRm9ydHVuZS1CbGFkZSBTaWdpbCc6ICczN0UyJywgLy8gS3VqaS1LaXJpICgzN0UxKSBsaW5lc1xyXG4gICAgJ1NlaXJ5dUV4IENhbGFtaXR5LUJsYWRlIFNpZ2lsJzogJzM3RTMnLCAvLyBLdWppLUtpcmkgKDM3RTEpIGZvbGxvdy11cCBsaW5lc1xyXG4gICAgJ1NlaXJ5dUV4IEl3YS1Oby1TaGlraSAxMDAtVG9uemUgU3dpbmcnOiAnMzdFRCcsIC8vIGNlbnRlcmVkIGNpcmNsZXNcclxuICAgICdTZWlyeXVFeCBUZW4tTm8tU2hpa2kgWWFtYS1LYWd1cmEnOiAnM0MyMScsIC8vIGJsdWUgbGluZXMgZHVyaW5nIG1pZHBoYXNlIC8gZmluYWwgcGhhc2UgYWRkc1xyXG4gICAgJ1NlaXJ5dUV4IE51bWEtTm8tU2hpa2kgU3RvbmVza2luJzogJzM3RjQnLCAvLyBmYWlsaW5nIHRvIHNpbGVuY2UgYWRkXHJcbiAgICAnU2Vpcnl1RXggR3JlYXQgVHlwaG9vbiAxJzogJzM3RjgnLCAvLyBvdXRzaWRlIHJpbmcgb2Ygd2F0ZXIgZHVyaW5nIENvdXJzaW5nIFJpdmVyXHJcbiAgICAnU2Vpcnl1RXggR3JlYXQgVHlwaG9vbiAyJzogJzM3RjknLCAvLyBvdXRzaWRlIHJpbmcgb2Ygd2F0ZXIgZHVyaW5nIENvdXJzaW5nIFJpdmVyXHJcbiAgICAnU2Vpcnl1RXggR3JlYXQgVHlwaG9vbiAzJzogJzM3RkEnLCAvLyBvdXRzaWRlIHJpbmcgb2Ygd2F0ZXIgZHVyaW5nIENvdXJzaW5nIFJpdmVyXHJcbiAgICAnU2Vpcnl1RXggR3JlYXQgVHlwaG9vbiA0JzogJzM3RkInLCAvLyBvdXRzaWRlIHJpbmcgb2Ygd2F0ZXIgZHVyaW5nIENvdXJzaW5nIFJpdmVyXHJcbiAgICAnU2Vpcnl1RXggWWFtYS1Oby1TaGlraSBIYW5kcHJpbnQgMSc6ICczNzA3JywgLy8gaGFsZiBhcmVuYSBjbGVhdmVcclxuICAgICdTZWlyeXVFeCBZYW1hLU5vLVNoaWtpIEhhbmRwcmludCAyJzogJzM3MDgnLCAvLyBoYWxmIGFyZW5hIGNsZWF2ZVxyXG4gICAgJ1NlaXJ5dUV4IEZvcmNlIE9mIE5hdHVyZSc6ICczN0VBJywgLy8gc3RhbmRpbmcgaW4gdGhlIG1pZGRsZSBjaXJjbGUgZHVyaW5nIGtub2NrYmFjayAoMzgwQSlcclxuICAgICdTZWlyeXVFeCBTZXJwZW50IERlc2NlbmRpbmcgQ2lyY2xlJzogJzM3REUnLCAvLyBiYWl0ZWQgY2lyY2xlcyB3aXRoIHRvd2Vyc1xyXG4gICAgJ1NlaXJ5dUV4IFNlcnBlbnRcXCdzIEphd3MnOiAnMzdFMCcsIC8vIGZhaWxpbmcgdG93ZXJzXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdTZWlyeXVFeCBTZXJwZW50IERlc2NlbmRpbmcgU3ByZWFkJzogJzM3REQnLCAvLyBzcHJlYWQgbWFya2Vyc1xyXG4gICAgJ1NlaXJ5dUV4IEFrYS1Oby1TaGlraSBSZWQgUnVzaCc6ICczN0YxJywgLy8gdGV0aGVyIGNoYXJnZVxyXG4gICAgJ1NlaXJ5dUV4IEl3YS1Oby1TaGlraSBLYW5hYm8nOiAnMzdFRScsIC8vIHRldGhlciB3aGljaCB0YXJnZXRzIGEgbGFyZ2UgY29uYWwgY2xlYXZlXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdTZWlyeXVFeCBJbmZpcm0gU291bCc6ICczN0Q0JywgLy8gdGFuayBidXN0ZXIgY2lyY3VsYXIgY2xlYXZlXHJcbiAgfSxcclxuICBzb2xvV2Fybjoge1xyXG4gICAgJ1NlaXJ5dUV4IEFvLU5vLVNoaWtpIEJsdWUgQm9sdCc6ICczN0YwJywgLy8gdGV0aGVyIHNoYXJlXHJcbiAgICAnU2Vpcnl1RXggRm9yYmlkZGVuIEFydHMgMSc6ICczN0M3JywgLy8gbGluZSBzdGFjayBzaGFyZSBoaXQgMVxyXG4gICAgJ1NlaXJ5dUV4IEZvcmJpZGRlbiBBcnRzIDInOiAnMzdDOCcsIC8vIGxpbmUgc3RhY2sgc2hhcmUgaGl0IDJcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBTaGlucnl1IE5vcm1hbFxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlUm95YWxNZW5hZ2VyaWUsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1NoaW5yeXUgQWtoIFJoYWknOiAnMUZBNicsIC8vIFNreSBsYXNlcnMgYWxvbmdzaWRlIEFraCBNb3JuLlxyXG4gICAgJ1NoaW5yeXUgQmxhemluZyBUcmFpbCc6ICcyMjFBJywgLy8gUmVjdGFuZ2xlIEFvRXMsIGludGVybWlzc2lvbiBhZGRzLlxyXG4gICAgJ1NoaW5yeXUgQ29sbGFwc2UnOiAnMjIxOCcsIC8vIENpcmNsZSBBb0VzLCBpbnRlcm1pc3Npb24gYWRkc1xyXG4gICAgJ1NoaW5yeXUgRHJhZ29uZmlzdCc6ICcyNEYwJywgLy8gR2lhbnQgcHVuY2h5IGNpcmNsZSBpbiB0aGUgY2VudGVyLlxyXG4gICAgJ1NoaW5yeXUgRWFydGggQnJlYXRoJzogJzFGOUQnLCAvLyBDb25hbCBhdHRhY2tzIHRoYXQgYXJlbid0IGFjdHVhbGx5IEVhcnRoIFNoYWtlcnMuXHJcbiAgICAnU2hpbnJ5dSBHeXJlIENoYXJnZSc6ICcxRkE4JywgLy8gR3JlZW4gZGl2ZSBib21iIGF0dGFjay5cclxuICAgICdTaGlucnl1IFNwaWtlc2ljbGUnOiAnMUZBYCcsIC8vIEJsdWUtZ3JlZW4gbGluZSBhdHRhY2tzIGZyb20gYmVoaW5kLlxyXG4gICAgJ1NoaW5yeXUgVGFpbCBTbGFwJzogJzFGOTMnLCAvLyBSZWQgc3F1YXJlcyBpbmRpY2F0aW5nIHRoZSB0YWlsJ3MgbGFuZGluZyBzcG90cy5cclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1NoaW5yeXUgTGV2aW5ib2x0JzogJzFGOUMnLFxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgLy8gSWN5IGZsb29yIGF0dGFjay5cclxuICAgICAgaWQ6ICdTaGlucnl1IERpYW1vbmQgRHVzdCcsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIC8vIFRoaW4gSWNlXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICczOEYnIH0pLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnU2xpZCBvZmYhJyxcclxuICAgICAgICAgICAgZGU6ICdSdW50ZXIgZ2VydXRzY2h0IScsXHJcbiAgICAgICAgICAgIGZyOiAnQSBnbGlzc8OpKGUpICEnLFxyXG4gICAgICAgICAgICBqYTogJ+a7keOBo+OBnycsXHJcbiAgICAgICAgICAgIGNuOiAn5ruR6JC9JyxcclxuICAgICAgICAgICAga286ICfrr7jrgYTrn6zsp5AnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdTaGlucnl1IFRpZGFsIFdhdmUnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICcxRjhCJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnUHVzaGVkIG9mZiEnLFxyXG4gICAgICAgICAgICBkZTogJ1J1bnRlciBnZXNjaHVic3QhJyxcclxuICAgICAgICAgICAgZnI6ICdSZXBvdXNzw6koZSkgIScsXHJcbiAgICAgICAgICAgIGphOiAn6JC944Gh44GfJyxcclxuICAgICAgICAgICAgY246ICflh7vpgIDlnaDokL0nLFxyXG4gICAgICAgICAgICBrbzogJ+uEieuwseuQqCcsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyBLbm9ja2JhY2sgZnJvbSBjZW50ZXIuXHJcbiAgICAgIGlkOiAnU2hpbnJ5dSBBZXJpYWwgQmxhc3QnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICcxRjkwJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnUHVzaGVkIG9mZiEnLFxyXG4gICAgICAgICAgICBkZTogJ1J1bnRlciBnZXNjaHVic3QhJyxcclxuICAgICAgICAgICAgZnI6ICdSZXBvdXNzw6koZSkgIScsXHJcbiAgICAgICAgICAgIGphOiAn6JC944Gh44GfJyxcclxuICAgICAgICAgICAgY246ICflh7vpgIDlnaDokL0nLFxyXG4gICAgICAgICAgICBrbzogJ+uEieuwseuQqCcsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuLy8gVE9ETzogSGVsbGZpcmUgKDI1REIpIHdpdGhvdXQgRmlyZSBSZXNpc3RhbmNlIFVwICgyMDgpLlxyXG4vLyBUT0RPOiBMZXZpbmJvbHQgKDI1RUIpIHdoaWxlIGhhdmluZyBMaWdodG5pbmcgUmVzaXN0YW5jZSBEb3duIElJICg0RUMpLlxyXG4vLyBUT0RPOiBIeXBlcm5vdmEgKDI1RTkpIHdoaWxlIG5vdCBoYXZpbmcgRGVlcCBGcmVlemUgKDRFNikgb3IgRmlyZSBSZXNpc3RhbmNlIFVwICgyMDgpLlxyXG4vLyBUT0RPOiBEb29tIChEMikgZXhwaXJpbmcuXHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gU2hpbnJ5dSBFeHRyZW1lXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVNaW5zdHJlbHNCYWxsYWRTaGlucnl1c0RvbWFpbixcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnU2hpbnJ5dUV4IEJ1cm5pbmcgQ2hhaW5zJzogJzI2MDInLCAvLyBub3QgYnJlYWtpbmcgY2hhaW5zIGZhc3QgZW5vdWdoXHJcbiAgICAnU2hpbnJ5dUV4IEljaWNsZSBJY2ljbGUgSW1wYWN0JzogJzI1RUYnLCAvLyBpY2ljbGVzIGxhbmRpbmdcclxuICAgICdTaGlucnl1RXggSWNpY2xlIFNwaWtlc2ljbGUnOiAnMjVGMCcsIC8vIGljaWNsZSBkYXNoXHJcbiAgICAnU2hpbnJ5dUV4IFRhaWwgU2xhcCc6ICcyNUUyJywgLy8gdGFpbCBhZGQgYXBwZWFyaW5nXHJcbiAgICAnU2hpbnJ5dUV4IERyYWdvbmZpc3QnOiAnMjYxMScsIC8vIGdpYW50IHB1bmNoeSBjaXJjbGUgaW4gdGhlIGNlbnRlci5cclxuICAgICdTaGlucnl1RXggR3lyZSBDaGFyZ2UnOiAnMjYwMycsIC8vIHBoYXNlIDEgbGFyZ2UgZGl2ZSBhdHRhY2tcclxuICAgICdTaGlucnl1RXggR2lucnl1IEZpcmViYWxsJzogJzI2MEInLCAvLyB0YXJnZXRlZCBjaXJjbGUgZHVyaW5nIGFkZCBwaGFzZVxyXG4gICAgJ1NoaW5yeXVFeCBIYWtraW5yeXUgQmxhemluZyBUcmFpbCc6ICcyNjA5JywgLy8gd2lkZSBsaW5lIGR1cmluZyBhZGQgcGhhc2VcclxuICAgICdTaGlucnl1RXggVGFpbCBTcGl0JzogJzFERDEnLCAvLyBibHVlIHB1Y2sgZHVyaW5nIGtub2NrYmFja1xyXG4gICAgJ1NoaW5yeXVFeCBBZXRoZXJpYWwgUmF5JzogJzI2MTgnLCAvLyBsYXNlcnMgd2hpbGUgcnVubmluZyBhbG9uZyB0aGUgdGFpbFxyXG4gICAgJ1NoaW5yeXVFeCBMZXZpbmJvbHQnOiAnMjcyNScsIC8vIGJhaXRlZCBsaWdodG5pbmcgZHVyaW5nIGZpbmFsIHBoYXNlXHJcbiAgICAnU2hpbnJ5dUV4IFdvcm13YWlsJzogJzI2NDgnLCAvLyBkb251dCBhdHRhY2tcclxuICAgICdTaGlucnl1RXggQmVuaWdodGluZyBCcmVhdGgnOiAnMjY0QScsIC8vIDkwIGRlZ3JlZSBjb25hbCBhdHRhY2tcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1NoaW5yeXVFeCBMZXZpbmJvbHQnOiAnMjVFQScsIC8vIHVudGVsZWdyYXBoZWQgbGlnaHRuaW5nIHNwcmVhZFxyXG4gICAgJ1NoaW5yeXVFeCBFYXJ0aCBCcmVhdGgnOiAnMjVFRCcsIC8vIGVhcnRoc2hha2VyLWVzcXVlIGNvbmFsIGF0dGFja3NcclxuICB9LFxyXG4gIHNvbG9XYXJuOiB7XHJcbiAgICAnU2hpbnJ5dUV4IEh5cGVybm92YSc6ICcyNUU5JywgLy8gc3RhY2sgaW4gcHVkZGxlIGRhbWFnZVxyXG4gICAgJ1NoaW5yeXVFeCBBdG9taWMgUmF5JzogJzI2NEQnLCAvLyBwYWlyIHN0YWNrIG1hcmtlcnMgaW4gZmluYWwgcGhhc2VcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIC8vIEljeSBmbG9vciBhdHRhY2suXHJcbiAgICAgIGlkOiAnU2hpbnJ5dUV4IERpYW1vbmQgRHVzdCcsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIC8vIFRoaW4gSWNlXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICczOEYnIH0pLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnU2xpZCBvZmYhJyxcclxuICAgICAgICAgICAgZGU6ICdSdW50ZXIgZ2VydXRzY2h0IScsXHJcbiAgICAgICAgICAgIGZyOiAnQSBnbGlzc8OpKGUpICEnLFxyXG4gICAgICAgICAgICBqYTogJ+a7keOBo+OBnycsXHJcbiAgICAgICAgICAgIGNuOiAn5ruR6JC9JyxcclxuICAgICAgICAgICAga286ICfrr7jrgYTrn6zsp5AnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdTaGlucnl1RXggVGlkYWwgV2F2ZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzI1REEnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdQdXNoZWQgb2ZmIScsXHJcbiAgICAgICAgICAgIGRlOiAnUnVudGVyIGdlc2NodWJzdCEnLFxyXG4gICAgICAgICAgICBmcjogJ1JlcG91c3PDqShlKSAhJyxcclxuICAgICAgICAgICAgamE6ICfokL3jgaHjgZ8nLFxyXG4gICAgICAgICAgICBjbjogJ+WHu+mAgOWdoOiQvScsXHJcbiAgICAgICAgICAgIGtvOiAn64SJ67Cx65CoJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIC8vIEtub2NrYmFjayBmcm9tIGNlbnRlci5cclxuICAgICAgaWQ6ICdTaGlucnl1IEFlcmlhbCBCbGFzdCcsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzI1REYnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdQdXNoZWQgb2ZmIScsXHJcbiAgICAgICAgICAgIGRlOiAnUnVudGVyIGdlc2NodWJzdCEnLFxyXG4gICAgICAgICAgICBmcjogJ1JlcG91c3PDqShlKSAhJyxcclxuICAgICAgICAgICAgamE6ICfokL3jgaHjgZ8nLFxyXG4gICAgICAgICAgICBjbjogJ+WHu+mAgOWdoOiQvScsXHJcbiAgICAgICAgICAgIGtvOiAn64SJ67Cx65CoJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFN1c2FubyBOb3JtYWxcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZVBvb2xPZlRyaWJ1dGUsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1N1c2FubyBSYXNlbiBLYWlreW8nOiAnMjAxRScsIC8vIGNpcmNsZXNcclxuICAgICdTdXNhbm8gU2Vhc3BsaXR0ZXIgMSc6ICcyMDI4JywgLy8ga25vY2tiYWNrICsgc2tpbm55IGxpbmUgc2FmZSB6b25lXHJcbiAgICAnU3VzYW5vIFNlYXNwbGl0dGVyIDInOiAnMjAyOScsIC8vIGtub2NrYmFjayArIHNraW5ueSBsaW5lIHNhZmUgem9uZVxyXG4gICAgJ1N1c2FubyBTZWFzcGxpdHRlciAzJzogJzIwMkEnLCAvLyBrbm9ja2JhY2sgKyBza2lubnkgbGluZSBzYWZlIHpvbmVcclxuICAgICdTdXNhbm8gU2Vhc3BsaXR0ZXIgNCc6ICcyMDJCJywgLy8ga25vY2tiYWNrICsgc2tpbm55IGxpbmUgc2FmZSB6b25lXHJcbiAgICAnU3VzYW5vIERhcmsgQ2xvdWQgVGhlIFBhcnRpbmcgQ2xvdWRzJzogJzI1OUYnLCAvLyBwdXJwbGUgbGluZSBhb2VzIGZyb20gY2xvdWRzXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnU3VzYW5vIEFtZS1Oby1NdXJha3Vtbyc6ICcyMThDJywgLy8gc3RhbmRpbmcgaW4gdGhlIHJlZCBsaW5lIGFmdGVyIG1pZHBoYXNlXHJcbiAgICAnU3VzYW5vIEFtYS1Oby1Jd2F0byBUaGUgU2VhbGVkIEdhdGUnOiAnMjAyNScsIC8vIG5vdCBraWxsaW5nIHRoZSByb2NrIGphaWxzIGluIHRpbWVcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1N1c2FubyBEYXJrIExldmluIFNob2NrJzogJzIwNDMnLCAvLyBvcmJzIGR1cmluZyBtaWRwaGFzZVxyXG4gICAgJ1N1c2FubyBTdG9ybXNwbGl0dGVyJzogJzIwMjMnLCAvLyB0YW5rIGJ1c3RlciBjbGVhdmVcclxuICB9LFxyXG4gIHNvbG9XYXJuOiB7XHJcbiAgICAnU3VzYW5vIEJyaWdodHN0b3JtJzogJzIwMjAnLCAvLyBzdGFjayBtYXJrZXJcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG4vLyBUT0RPOiBFbGVjdHJvY3V0aW9uICgyMDNEKSBjb21lcyBmcm9tIHRoZSBsZXZpbmJvbHQgbm90IG1vdmluZ1xyXG4vLyBXZSBjb3VsZCBibGFtZSB0aGUgcGVyc29uIHdpdGggMDA2RSBhbmQgYmxhbWUgdGhlIHBlcnNvbiBoaXQgd2l0aCAwMDZGICh0aGUgc3R1bik/XHJcbi8vIFRPRE86IGFkZCBkZWF0aCByZWFzb24gZm9yIFNpbmtpbmcgKDRGOSkgZWZmZWN0P1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFN1c2FubyBFeHRyZW1lXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVQb29sT2ZUcmlidXRlRXh0cmVtZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnU3VzYW5vRXggU2Vhc3BsaXR0ZXIgMSc6ICcyMDM4JywgLy8ga25vY2tiYWNrICsgc2tpbm55IGxpbmUgc2FmZSB6b25lXHJcbiAgICAnU3VzYW5vRXggU2Vhc3BsaXR0ZXIgMic6ICcyMDM5JywgLy8ga25vY2tiYWNrICsgc2tpbm55IGxpbmUgc2FmZSB6b25lXHJcbiAgICAnU3VzYW5vRXggU2Vhc3BsaXR0ZXIgMyc6ICcyMDNBJywgLy8ga25vY2tiYWNrICsgc2tpbm55IGxpbmUgc2FmZSB6b25lXHJcbiAgICAnU3VzYW5vRXggU2Vhc3BsaXR0ZXIgNCc6ICcyMDNCJywgLy8ga25vY2tiYWNrICsgc2tpbm55IGxpbmUgc2FmZSB6b25lXHJcbiAgICAnU3VzYW5vRXggUmFzZW4gS2Fpa3lvJzogJzIwMkUnLCAvLyBjaXJjbGVzXHJcbiAgICAnU3VzYW5vRXggQ2h1cm5pbmcnOiAnMjAzRicsIC8vIG5vdCBzdG9wcGluZ1xyXG4gICAgJ1N1c2Fub0V4IFRodW5kZXJoZWFkIFRoZSBQYXJ0aW5nIENsb3Vkcyc6ICcyMDQxJywgLy8gcHVycGxlIGxpZ2h0bmluZyBsaW5lXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnU3VzYW5vRXggQW1lLU5vLU11cmFrdW1vJzogJzIxOEMnLCAvLyBzdGFuZGluZyBpbiByZWQgbGluZSBhZnRlciBtaWRwaGFzZVxyXG4gICAgJ1N1c2Fub0V4IEFtYS1Oby1Jd2F0byBUaGUgU2VhbGVkIEdhdGUnOiAnMjAzNScsIC8vIG5vdCBraWxsaW5nIHRoZSByb2NrIGphaWxzIGluIHRpbWVcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1N1c2Fub0V4IERhcmsgTGV2aW4gU2hvY2snOiAnMjA0NCcsIC8vIG1pZHBoYXNlIG9yYlxyXG4gICAgJ1N1c2Fub0V4IFN0b3Jtc3BsaXR0ZXInOiAnMjAzMycsIC8vIHRhbmsgYnVzdGVyIGxjZWF2ZVxyXG4gIH0sXHJcbiAgc29sb1dhcm46IHtcclxuICAgICdTdXNhbm9FeCBCcmlnaHRzdG9ybSc6ICcyMDMwJywgLy8gc3RhY2sgbWFya2VyXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcbmltcG9ydCB7IHBsYXllckRhbWFnZUZpZWxkcyB9IGZyb20gJy4uLy4uLy4uL29vcHN5X2NvbW1vbic7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gU3V6YWt1IE5vcm1hbFxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuSGVsbHNLaWVyLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdTdXpha3UgTm9ybWFsIEFzaGVzIFRvIEFzaGVzJzogJzMyMUYnLCAvLyBTY2FybGV0IExhZHkgYWRkLCByYWlkd2lkZSBleHBsb3Npb24gaWYgbm90IGtpbGxlZCBpbiB0aW1lXHJcbiAgICAnU3V6YWt1IE5vcm1hbCBGbGVldGluZyBTdW1tZXInOiAnMzIyMycsIC8vIENvbmUgQW9FIChyYW5kb21seSB0YXJnZXRlZClcclxuICAgICdTdXpha3UgTm9ybWFsIFdpbmcgQW5kIEEgUHJheWVyJzogJzMyMjUnLCAvLyBDaXJjbGUgQW9FcyBmcm9tIHVua2lsbGVkIHBsdW1lc1xyXG4gICAgJ1N1emFrdSBOb3JtYWwgUGhhbnRvbSBIYWxmJzogJzMyMzMnLCAvLyBHaWFudCBoYWxmLWFyZW5hIEFvRSBmb2xsb3ctdXAgYWZ0ZXIgdGFuayBidXN0ZXJcclxuICAgICdTdXpha3UgTm9ybWFsIFdlbGwgT2YgRmxhbWUnOiAnMzIzNicsIC8vIExhcmdlIHJlY3RhbmdsZSBBb0UgKHJhbmRvbWx5IHRhcmdldGVkKVxyXG4gICAgJ1N1emFrdSBOb3JtYWwgSG90c3BvdCc6ICczMjM4JywgLy8gUGxhdGZvcm0gZmlyZSB3aGVuIHRoZSBydW5lcyBhcmUgYWN0aXZhdGVkXHJcbiAgICAnU3V6YWt1IE5vcm1hbCBTd29vcCc6ICczMjNCJywgLy8gU3RhciBjcm9zcyBsaW5lIEFvRXNcclxuICAgICdTdXpha3UgTm9ybWFsIEJ1cm4nOiAnMzIzRCcsIC8vIFRvd2VyIG1lY2hhbmljIGZhaWx1cmUgb24gSW5jYW5kZXNjZW50IEludGVybHVkZSAocGFydHkgZmFpbHVyZSwgbm90IHBlcnNvbmFsKVxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnU3V6YWt1IE5vcm1hbCBSZWtpbmRsZSc6ICczMjM1JywgLy8gUHVycGxlIHNwcmVhZCBjaXJjbGVzXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ1N1emFrdSBOb3JtYWwgUnV0aGxlc3MgUmVmcmFpbicsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzMyMzAnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdQdXNoZWQgb2ZmIScsXHJcbiAgICAgICAgICAgIGRlOiAnUnVudGVyIGdlc2NodWJzdCEnLFxyXG4gICAgICAgICAgICBmcjogJ1JlcG91c3PDqShlKSAhJyxcclxuICAgICAgICAgICAgamE6ICfokL3jgaHjgZ8nLFxyXG4gICAgICAgICAgICBjbjogJ+WHu+mAgOWdoOiQvScsXHJcbiAgICAgICAgICAgIGtvOiAn64KZ7IKsJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcbmltcG9ydCB7IHBsYXllckRhbWFnZUZpZWxkcyB9IGZyb20gJy4uLy4uLy4uL29vcHN5X2NvbW1vbic7XHJcblxyXG4vLyBUT0RPOiBSZWtpbmRsZSAoMzJFMCkgaGl0dGluZyBtdWx0aXBsZSBhZGRzLCBhbnkgb3RoZXIgcGxheWVycyxcclxuLy8gb3IgaGl0dGluZyBhZGRzIGJlZm9yZSB0aGV5J3ZlIGJlZW4ga2lsbGVkIG9uY2UgaXMgYSBtaXN0YWtlLlxyXG4vLyBIb3dldmVyLCB0aGVyZSBpcyBhIHBvaW50IHdoZXJlIGl0IHNob3VsZCBoaXQgb25lIGFkZCBpbiB0aGVcclxuLy8gYmVnaW5uaW5nLiBUaGlzIGFsc28gaGFwcGVucyBsYXRlciBpbiB0aGUgZmlnaHQgdG9vLCB3aGVyZSBpdFxyXG4vLyBzaG91bGQgbm90IGhpdCBhbnlib2R5IGVsc2UsIGJ1dCB1bmZvcnR1bmF0ZWx5IGFsc28gY291bnRzIGFzXHJcbi8vIGhpdHRpbmcgbXVsdGlwbGUgcGVvcGxlIHdoZW4gaXQgaGl0cyBTdXpha3UuICBTbywgdGhlcmUncyByZWFsbHlcclxuLy8gbm90IGFueSBnb29kIHdheSB0byB3cml0ZSBhIG1pc3Rha2UgdHJpZ2dlciBmb3IgdGhpcyBhYmlsaXR5LlxyXG5cclxuLy8gVE9ETzogd2hhdCBpcyBnZXR0aW5nIGhpdCBieSBhbiBvcmIgZHVyaW5nIENsb3NlLVF1YXJ0ZXIgQ3Jlc2NlbmRvP1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFN1emFrdSBFeHRyZW1lXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5IZWxsc0tpZXJFeHRyZW1lLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdTdXpha3VFeCBSb3V0JzogJzMyRjAnLCAvLyB1bnRhcmdldGFibGUgcGhhc2UgMSBjaGFyZ2UgYWNyb3NzIHRoZSBhcmVuYVxyXG4gICAgJ1N1emFrdUV4IEZsZWV0aW5nIFN1bW1lcic6ICczMkQzJywgLy8gdGFyZ2V0ZWQgY29uYWxcclxuICAgICdTdXpha3VFeCBTY2FybGV0IFRhaWwgRmVhdGhlciBXaW5nIEFuZCBBIFByYXllcic6ICczMkQ0JywgLy8gY2lyY2xlIGFvZSBmcm9tIHVua2lsbGVkIHBsdW1lXHJcbiAgICAnU3V6YWt1RXggU2NhcmxldCBQbHVtZSBXaW5nIEFuZCBBIFByYXllcic6ICczMjQ0JywgLy8gY2lyY2xlIGFvZSBmcm9tIHVua2lsbGVkIHBsdW1lXHJcbiAgICAnU3V6YWt1RXggQXNoZXMgVG8gQXNoZXMnOiAnMzJEMCcsIC8vIFNjYXJsZXQgTGFkeSBhZGQsIHJhaWR3aWRlIGV4cGxvc2lvbiBpZiBub3Qga2lsbGVkIGluIHRpbWVcclxuICAgICdTdXpha3VFeCBXZWxsIE9mIEZsYW1lJzogJzMyRTEnLCAvLyB0YXJnZXRlZCB3aWRlIGxpbmUgYW9lXHJcbiAgICAnU3V6YWt1RXggSG90c3BvdCc6ICczMkUyJywgLy8gcGxhdGZvcm0gZmlyZSB3aGVuIHRoZSBydW5lcyBhcmUgYWN0aXZhdGVkXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnU3V6YWt1RXggSW1tb2xhdGUnOiAnMzJFNicsIC8vIFRvd2VyIG1lY2hhbmljIGZhaWx1cmUgb24gSW5jYWRlc2NlbnQgSW50ZXJsdWRlIChwYXJ0eSBmYWlsdXJlLCBub3QgcGVyc29uYWwpXHJcbiAgICAnU3V6YWt1RXggUGhhbnRvbSBGbHVycnknOiAnMzJERScsIC8vIFwicGhhbnRvbSBoYWxmXCIgZmluYWwgaGl0IG9mIFBoYW50b20gRmx1cnJ5XHJcbiAgfSxcclxuICBzb2xvV2Fybjoge1xyXG4gICAgJ1N1emFrdUV4IFNjYXRoaW5nIE5ldCc6ICczMjQzJywgLy8gc3RhY2sgbWFya2VyXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ1N1emFrdUV4IFJ1dGhsZXNzIFJlZnJhaW4nLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICczMkRCJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnS25vY2tlZCBvZmYnLFxyXG4gICAgICAgICAgICBkZTogJ1J1bnRlcmdlZmFsbGVuJyxcclxuICAgICAgICAgICAgZnI6ICdSZW52ZXJzw6koZSknLFxyXG4gICAgICAgICAgICBqYTogJ+ODjuODg+OCr+ODkOODg+OCrycsXHJcbiAgICAgICAgICAgIGNuOiAn5Ye76YCA5Z2g6JC9JyxcclxuICAgICAgICAgICAga286ICfrhInrsLEnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdTdXpha3VFeCBNZXNtZXJpemluZyBNZWxvZHknLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICczMkRBJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnS25vY2tlZCBvZmYnLFxyXG4gICAgICAgICAgICBkZTogJ1J1bnRlcmdlZmFsbGVuJyxcclxuICAgICAgICAgICAgZnI6ICdSZW52ZXJzw6koZSknLFxyXG4gICAgICAgICAgICBqYTogJ+ODjuODg+OCr+ODkOODg+OCrycsXHJcbiAgICAgICAgICAgIGNuOiAn5Ye76YCA5Z2g6JC9JyxcclxuICAgICAgICAgICAga286ICfrhInrsLEnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBUc3VrdXlvbWkgTm9ybWFsXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5DYXN0cnVtRmx1bWluaXMsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1RzdWt1eW9taSBTdGVlbCBPZiBUaGUgVW5kZXJ3b3JsZCc6ICcyQkU3JywgLy8gbGFyZ2UgdGFyZ2V0ZWQgdGVsZWdyYXBoIGNsZWF2ZSBkdXJpbmcgZmFuc1xyXG4gICAgJ1RzdWt1eW9taSBNaWRuaWdodCBIYXplIFRvIEFzaGVzJzogJzJCRUEnLCAvLyBub3Qga2lsbGluZyBjbG91ZHMgaW4gdGltZVxyXG4gICAgJ1RzdWt1eW9taSBEYW5jaW5nIEZhbiBUc3VraS1Oby1NYWlvZ2knOiAnMkJFRCcsIC8vIGZhbiBjaXJjbGUgYW9lXHJcbiAgICAnVHN1a3V5b21pIE1vb25saWdodCBMdW5hciBIYWxvJzogJzJCRTQnLCAvLyBkb251dCBmcm9tIG9yYnMgZHVyaW5nIHNlbGVub21hbmN5XHJcbiAgICAnVHN1a3V5b21pIERhcmsgQmxhZGUnOiAnMkJGOScsIC8vIHJpZ2h0LXNpZGUgY2xlYXZlXHJcbiAgICAnVHN1a3V5b21pIEJyaWdodCBCbGFkZSc6ICcyQkZBJywgLy8gbGVmdCBzaWRlIGNsZWF2ZVxyXG4gIH0sXHJcbiAgc2hhcmVGYWlsOiB7XHJcbiAgICAnVHN1a3V5b21pIFRvcm1lbnQgVW50byBEZWF0aCc6ICcyQkUzJywgLy8gdGFuayBidXN0ZXIgY29uYWwgY2xlYXZlXHJcbiAgfSxcclxuICBzb2xvV2Fybjoge1xyXG4gICAgJ1RzdWt1eW9taSBMZWFkIE9mIFRoZSBVbmRlcndvcmxkJzogJzJCRTYnLCAvLyBsaW5lIHN0YWNrIG1hcmtlclxyXG4gICAgJ1RzdWt1eW9taSBMdW5hY3kgMSc6ICcyQkZCJywgLy8gMy00eCBzdGFjayBtYXJrZXJcclxuICAgICdUc3VrdXlvbWkgTHVuYWN5IDInOiAnMkJGQycsIC8vIDMtNHggc3RhY2sgbWFya2VyXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ1RzdWt1eW9taSBNb29ubGl0JyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgLy8gRml2ZSBzdGFja3Mgb2YgTW9vbmxpdCBvciBNb29uc2hhZG93ZWQgaXMgaW5zdGFudCBkZWF0aC5cclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzYwMicsIGNvdW50OiAnMDUnIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ2ZhaWwnLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIHRleHQ6IG1hdGNoZXMuZWZmZWN0LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ1RzdWt1eW9taSBNb29uc2hhZG93ZWQnLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICAvLyBGaXZlIHN0YWNrcyBvZiBNb29ubGl0IG9yIE1vb25zaGFkb3dlZCBpcyBpbnN0YW50IGRlYXRoLlxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnNjAzJywgY291bnQ6ICcwNScgfSksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICB0eXBlOiAnZmFpbCcsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgdGV4dDogbWF0Y2hlcy5lZmZlY3QsXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG4vLyBUT0RPOiBUYWtpbmcgbXVsdGlwbGUgcm9sZS1iYXNlZCBTdGVlbCBvZiB0aGUgVW5kZXJ3b3JsZCAoMkJCRikgaGl0cy5cclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBUc3VrdXlvbWkgRXh0cmVtZVxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlTWluc3RyZWxzQmFsbGFkVHN1a3V5b21pc1BhaW4sXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1RzdWt1eW9taUV4IE1vb25saWdodCBMdW5hciBIYWxvJzogJzJCRDYnLCAvLyBkb251dCBmcm9tIG9yYnMgaW4gZmluYWwgcGhhc2VcclxuICAgICdUc3VrdXlvbWlFeCBNb29uZmFsbCc6ICcyQkQxJywgLy8gbWV0ZW9yIGRyb3AgYmlnIGNpcmNsZXNcclxuICAgICdUc3VrdXlvbWlFeCBNb29uZHVzdCBDcmF0ZXInOiAnMkNENycsIC8vIG1ldGVvciBleHBsb3Npb25zIGxhdGVyXHJcbiAgICAnVHN1a3V5b21pRXggRGFuY2luZyBGYW4gVHN1a3VpLU5vLU1haW9naSc6ICcyQkM2JywgLy8gZmFuIGNpcmNsZSBhb2VcclxuICAgICdUc3VrdXlvbWlFeCBXYXhpbmcgR3J1ZGdlJzogJzJCREUnLCAvLyBtZWxlZSByYW5nZSBjaXJjbGUgZnJvbSBGdWxsIE1vb24gYnVmZlxyXG4gICAgJ1RzdWt1eW9taUV4IFdhbmluZyBHcnVkZ2UnOiAnMkJERicsIC8vIGRvbnV0IGZyb20gTmV3IE1vb24gQnVmZlxyXG4gICAgJ1RzdWt1eW9taUV4IERhcmsgQmxhZGUnOiAnMkJEQScsIC8vIHJpZ2h0LXNpZGUgY2xlYXZlXHJcbiAgICAnVHN1a3V5b21pRXggQnJpZ2h0IEJsYWRlJzogJzJCREInLCAvLyBsZWZ0IHNpZGUgY2xlYXZlXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdUc3VrdXlvbWlFeCBUb3JtZW50IFVudG8gRGVhdGgnOiAnMkJCQicsIC8vIHRhbmsgYnVzdGVyIGNvbmFsIGNsZWF2ZVxyXG4gIH0sXHJcbiAgc29sb1dhcm46IHtcclxuICAgICdUc3VrdXlvbWlFeCBMZWFkIE9mIFRoZSBVbmRlcndvcmxkJzogJzJCQkUnLCAvLyBcIkJlZyBmb3IgTWVyY3khXCIgc3RhY2tcclxuICAgICdUc3VrdXlvbWlFeCBMdW5hY3knOiAnMkJERCcsIC8vIDR4IHN0YWNrIG1hcmtlclxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6ICdUc3VrdXlvbWlFeCBNb29ubGl0JyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgLy8gRml2ZSBzdGFja3Mgb2YgTW9vbmxpdCBvciBNb29uc2hhZG93ZWQgaXMgaW5zdGFudCBkZWF0aC5cclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzYwMicsIGNvdW50OiAnMDUnIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ2ZhaWwnLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIHRleHQ6IG1hdGNoZXMuZWZmZWN0LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ1RzdWt1eW9taUV4IE1vb25zaGFkb3dlZCcsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIC8vIEZpdmUgc3RhY2tzIG9mIE1vb25saXQgb3IgTW9vbnNoYWRvd2VkIGlzIGluc3RhbnQgZGVhdGguXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICc2MDMnLCBjb3VudDogJzA1JyB9KSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHR5cGU6ICdmYWlsJyxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICB0ZXh0OiBtYXRjaGVzLmVmZmVjdCxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG4vLyBUT0RPOiBHZWtrbyAoMzg4MykgaXMgdGhlIG9yYiBcInNwcmVhZFwiIG1hcmtlciB0aGF0IHR1cm5zIGludG8gZG9udXQgS2FzaGEgKDM4MzQpXHJcbi8vIGhvd2V2ZXIsIGl0IGNhbiBtYWtlIHNvbWUgc2Vuc2UgdG8gc3RhY2sgMi0zIHVwIHRvIGNyZWF0ZSBzcGFjZS5cclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuS3VnYW5lT2hhc2hpLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdZb2ppbWJvIEZyYWdpbGl0eSc6ICczODJBJywgLy8gY2lyY2xlIGFvZXMgZnJvbSBidXR0ZXJmbGllcyBhZnRlciBJbm9zaGlrYWNob1xyXG4gICAgJ1lvamltYm8gWXVraWthemUnOiAnMzgzMicsIC8vIGljeS1sb29raW5nIHdhZmZsZSBsaW5lc1xyXG4gICAgJ1lvamltYm8gS2FzaGEnOiAnMzgzNCcsIC8vIGRvbnV0IHRoYXQgZm9sbG93cyBHZWtrbyBvcmIgbWFya2Vyc1xyXG4gICAgJ1lvamltYm8gVGlueSBTb25nJzogJzM4MzUnLCAvLyBkb3JpdG8gc3RhY2tcclxuICAgICdZb2ppbWJvIEVsZWN0cm9nZW5ldGljIEZvcmNlJzogJzM4NDAnLCAvLyBwdXJwbGUgb3JiIGV4cGxvc2lvbnNcclxuICAgICdZb2ppbWJvIE1hc2FtdW5lJzogJzM4NDMnLCAvLyB2ZXJ5IGxvbmcgdGFyZ2V0ZWQgbGluZVxyXG4gICAgJ1lvamltYm8gRXBpYyBTdG9ybXNwbGl0dGVyJzogJzM4NDUnLCAvLyBzaW5nbGUgbGluZSBkb3duIHRoZSBtaWRkbGVcclxuICAgICdZb2ppbWJvIFNlYXNwbGl0dGVyIDEnOiAnMzg0NicsIC8vIGZvbGxvdy11cCBcImdldCBtaWRkbGVcIiB0byBFcGljIFN0b3Jtc3BsaXR0ZXJcclxuICAgICdZb2ppbWJvIFNlYXNwbGl0dGVyIDInOiAnMzg0NycsIC8vIGZvbGxvdy11cCBcImdldCBtaWRkbGVcIiB0byBFcGljIFN0b3Jtc3BsaXR0ZXJcclxuICAgICdZb2ppbWJvIFNlYXNwbGl0dGVyIDMnOiAnMzg0OCcsIC8vIGZvbGxvdy11cCBcImdldCBtaWRkbGVcIiB0byBFcGljIFN0b3Jtc3BsaXR0ZXJcclxuICAgICdZb2ppbWJvIFNlYXNwbGl0dGVyIDQnOiAnMzg0OScsIC8vIGZvbGxvdy11cCBcImdldCBtaWRkbGVcIiB0byBFcGljIFN0b3Jtc3BsaXR0ZXJcclxuICAgICdZb2ppbWJvIERyYWdvblxcJ3MgSGVhZCBNaWdodHkgQmxvdyc6ICczODM5JywgLy8gcnVubmluZyBpbnRvIERyYWdvbidzIEhlYWQgdW50YXJnZXRhYmxlIGFkZFxyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ1lvamltYm8gSGVsbFxcJ3MgR2F0ZSc6ICczODQyJywgLy8gZmFpbGluZyB0byBicmVhayBJcm9uIENoYWluc1xyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnWW9qaW1ibyBUaGUgQml0dGVyIEVuZCc6ICczMURFJywgLy8gZnJvbnRhbCB0YW5rIGNsZWF2ZSwgbm8gY2FzdCBiYXJcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBVbHRpbWEgV2VhcG9uIFVsdGltYXRlXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVXZWFwb25zUmVmcmFpblVsdGltYXRlLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdVV1UgRXllIG9mIHRoZSBTdG9ybSc6ICcyQjUyJywgLy8gZG9udXQgb24gdGhlIGZpbmFsXHJcbiAgICAnVVdVIFNlYXJpbmcgV2luZCc6ICcyQjVDJywgLy8gaGVhbGVyIGV4cGxvc2lvbnNcclxuICAgICdVV1UgRXJ1cHRpb24nOiAnMkI1QScsIC8vIHJlZCBiYWl0ZWQgaWZyaXQgY2lyY2xlc1xyXG4gICAgJ1VXVSBDcmltc29uIEN5Y2xvbmUgMSc6ICcyQjVGJywgLy8gaWZyaXQgY2hhcmdlXHJcbiAgICAnVVdVIENyaW1zb24gQ3ljbG9uZSAyJzogJzJCNjAnLCAvLyBpZnJpdCBjaGFyZ2VcclxuICAgICdVV1UgUmFkaWFudCBQbHVtZSc6ICcyQjYxJywgLy8gaWZyaXQgcGx1bWVzXHJcbiAgICAnVVdVIFdlaWdodCBvZiB0aGUgTGFuZCc6ICcyQjY1JywgLy8gdGl0YW4gcHVkZGxlc1xyXG4gICAgJ1VXVSBCb21iIEJvdWxkZXIgQnVyeSc6ICcyQjY5JywgLy8gdGl0YW4gYm9tYnMgZHJvcHBpbmdcclxuICAgICdVV1UgQm9tYiBCb3VsZGVyIEZyZWVmaXJlJzogJzJCNkUnLCAvLyB0aXRhbiBib21icyBhd2FrZW5pbmdcclxuICAgICdVV1UgQm9tYiBCb3VsZGVyIEJ1cnN0JzogJzJCNkEnLCAvLyB0aXRhbiBib21icyBleHBsb2RpbmdcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdVV1UgR3JlYXQgV2hpcmx3aW5kJzogJzJCNDEnLCAvLyBsYXJnZSBjaXJjbGUgZnJvbSBibG9ja2luZyBtaXN0cmFsIHNvbmdcclxuICAgICdVV1UgU2xpcHN0cmVhbSc6ICcyQjUzJywgLy8gdW50ZWxlZ3JhcGhlZCBkb2RnZWFibGUgZnJvbnRhbCBjb25hbFxyXG4gICAgJ1VXVSBXaWNrZWQgV2hlZWwnOiAnMkI0RScsIC8vIHdpY2tlZCB3aGVlbCBjZW50ZXJlZCBjaXJjbGVcclxuICAgICdVV1UgV2lja2VkIFRvcm5hZG8nOiAnMkI0RicsIC8vIGF3b2tlbiB3aWNrZWQgd2hlZWwgZG9udXRcclxuICAgICdVV1UgTGFuZHNsaWRlIDEnOiAnMkI3MCcsIC8vIGxhbmRzbGlkZVxyXG4gICAgJ1VXVSBMYW5kc2xpZGUgMic6ICcyQjZGJywgLy8gbGFuZHNsaWRlXHJcbiAgICAnVVdVIExhbmRzbGlkZSAzJzogJzJCNzEnLCAvLyBsYW5kc2xpZGVcclxuICAgICdVV1UgTGFuZHNsaWRlIDQnOiAnMkMyMicsIC8vIGxhbmRzbGlkZVxyXG4gICAgJ1VXVSBMYW5kc2xpZGUgNSc6ICcyQjdGJywgLy8gbGFuZHNsaWRlIGZyb20gdWx0aW1hXHJcbiAgICAnVVdVIEFldGhlcm9jaGVtaWNhbCBMYXNlciAxJzogJzJCODQnLCAvLyBzdXBwcmVzc2lvbiB5ZWxsb3cgbGluZSBsYXNlciBmcm9tIHVsdGltYVxyXG4gICAgJ1VXVSBBZXRoZXJvY2hlbWljYWwgTGFzZXIgMic6ICcyQjg1JywgLy8gc3VwcHJlc3Npb24geWVsbG93IGxpbmUgbGFzZXIgZnJvbSB1bHRpbWFcclxuICAgICdVV1UgQWV0aGVyb2NoZW1pY2FsIExhc2VyIDMnOiAnMkI4NicsIC8vIHN1cHByZXNzaW9uIHllbGxvdyBsaW5lIGxhc2VyIGZyb20gdWx0aW1hXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdVV1UgTWVzb2hpZ2gnOiAnMkI0OScsIC8vIHRldGhlciB0byBnYXJ1ZGEgc2lzdGVyXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdVV1UgRG93bmJ1cnN0JzogJzJCNTAnLCAvLyB1bmF3b2tlbiBnYXJ1ZGEgdGFua2J1c3RlclxyXG4gICAgJ1VXVSBJbmNpbmVyYXRlJzogJzJCNTYnLCAvLyBpZnJpdCB0YW5rYnVzdGVyXHJcbiAgICAnVVdVIFJvY2sgQnVzdGVyJzogJzJCNjInLCAvLyB0aXRhbiB0YW5rYnVzdGVyIDFcclxuICAgICdVV1UgTW91bnRhaW4gQnVzdGVyJzogJzJCNjMnLCAvLyB0aXRhbiB0YW5rYnVzdGVyIDJcclxuICAgICdVV1UgVmlzY291cyBBZXRoZXJvcGxhc20nOiAnMkI3NicsIC8vIHRhbmsgZGVidWZmIHRhbmtidXN0ZXJcclxuICAgICdVV1UgSG9taW5nIExhc2VyJzogJzJCN0InLCAvLyBzZWNvbmQgaGF0ZSB0YW5rYnVzdGVyXHJcbiAgICAnVVdVIERpZmZyYWN0aXZlIExhc2VyJzogJzJCNzgnLCAvLyB0YW5rIGNsZWF2ZVxyXG4gIH0sXHJcbiAgc29sb1dhcm46IHtcclxuICAgICdVV1UgRmxhbWluZyBDcnVzaCc6ICcyNUJEJywgLy8gaWZyaXQgc3RhY2sgbWFya2VyXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ1VXVSBXaW5kYnVybicsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICdFQicgfSksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5lZmZlY3QgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIC8vIEZlYXRoZXJsYW5jZSBleHBsb3Npb24uICBJdCBzZWVtcyBsaWtlIHRoZSBwZXJzb24gd2hvIHBvcHMgaXQgaXMgdGhlXHJcbiAgICAgIC8vIGZpcnN0IHBlcnNvbiBsaXN0ZWQgZGFtYWdlLXdpc2UsIHNvIHRoZXkgYXJlIGxpa2VseSB0aGUgY3VscHJpdC5cclxuICAgICAgaWQ6ICdVV1UgRmVhdGhlcmxhbmNlJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnMkI0MycsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgc3VwcHJlc3NTZWNvbmRzOiA1LFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuc291cmNlIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBrRmxhZ0luc3RhbnREZWF0aCwgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSBleHRlbmRzIE9vcHN5RGF0YSB7XHJcbiAgaGFzRG9vbT86IHsgW25hbWU6IHN0cmluZ106IGJvb2xlYW4gfTtcclxufVxyXG5cclxuLy8gVUNVIC0gVGhlIFVuZW5kaW5nIENvaWwgT2YgQmFoYW11dCAoVWx0aW1hdGUpXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVVbmVuZGluZ0NvaWxPZkJhaGFtdXRVbHRpbWF0ZSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnVUNVIEx1bmFyIER5bmFtbyc6ICcyNkJDJyxcclxuICAgICdVQ1UgSXJvbiBDaGFyaW90JzogJzI2QkInLFxyXG4gICAgJ1VDVSBFeGFmbGFyZSc6ICcyNkVGJyxcclxuICAgICdVQ1UgV2luZ3MgT2YgU2FsdmF0aW9uJzogJzI2Q0EnLFxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6ICdVQ1UgVHdpc3RlciBEZWF0aCcsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgLy8gSW5zdGFudCBkZWF0aCBoYXMgYSBzcGVjaWFsIGZsYWcgdmFsdWUsIGRpZmZlcmVudGlhdGluZ1xyXG4gICAgICAvLyBmcm9tIHRoZSBleHBsb3Npb24gZGFtYWdlIHlvdSB0YWtlIHdoZW4gc29tZWJvZHkgZWxzZVxyXG4gICAgICAvLyBwb3BzIG9uZS5cclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzI2QUInLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMsIGZsYWdzOiBrRmxhZ0luc3RhbnREZWF0aCB9KSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHR5cGU6ICdmYWlsJyxcclxuICAgICAgICAgIGJsYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ1R3aXN0ZXIgUG9wJyxcclxuICAgICAgICAgICAgZGU6ICdXaXJiZWxzdHVybSBiZXLDvGhydCcsXHJcbiAgICAgICAgICAgIGZyOiAnQXBwYXJpdGlvbiBkZXMgdG9ybmFkZXMnLFxyXG4gICAgICAgICAgICBqYTogJ+ODhOOCpOOCueOCv+ODvCcsXHJcbiAgICAgICAgICAgIGNuOiAn5peL6aOOJyxcclxuICAgICAgICAgICAga286ICftmozsmKTrpqwg67Cf7J2MJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnVUNVIFRoZXJtaW9uaWMgQnVyc3QnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICcyNkI5JywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ2ZhaWwnLFxyXG4gICAgICAgICAgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnUGl6emEgU2xpY2UnLFxyXG4gICAgICAgICAgICBkZTogJ1Bpenphc3TDvGNrJyxcclxuICAgICAgICAgICAgZnI6ICdQYXJ0IGRlIHBpenphJyxcclxuICAgICAgICAgICAgamE6ICfjgrXjg7zjg5/jgqrjg4vjg4Pjgq/jg5Djg7zjgrnjg4gnLFxyXG4gICAgICAgICAgICBjbjogJ+WkqeW0qeWcsOijgicsXHJcbiAgICAgICAgICAgIGtvOiAn7J6l7YyQ7JeQIOunnuydjCcsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ1VDVSBDaGFpbiBMaWdodG5pbmcnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICcyNkM4JywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICAvLyBJdCdzIGhhcmQgdG8gYXNzaWduIGJsYW1lIGZvciBsaWdodG5pbmcuICBUaGUgZGVidWZmc1xyXG4gICAgICAgIC8vIGdvIG91dCBhbmQgdGhlbiBleHBsb2RlIGluIG9yZGVyLCBidXQgdGhlIGF0dGFja2VyIGlzXHJcbiAgICAgICAgLy8gdGhlIGRyYWdvbiBhbmQgbm90IHRoZSBwbGF5ZXIuXHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHR5cGU6ICd3YXJuJyxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ2hpdCBieSBsaWdodG5pbmcnLFxyXG4gICAgICAgICAgICBkZTogJ3ZvbSBCbGl0eiBnZXRyb2ZmZW4nLFxyXG4gICAgICAgICAgICBmcjogJ2ZyYXBww6koZSkgcGFyIGxhIGZvdWRyZScsXHJcbiAgICAgICAgICAgIGphOiAn44OB44Kn44Kk44Oz44Op44Kk44OI44OL44Oz44KwJyxcclxuICAgICAgICAgICAgY246ICfpm7flhYnpk74nLFxyXG4gICAgICAgICAgICBrbzogJ+uyiOqwnCDrp57snYwnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdVQ1UgQnVybnMnLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnRkEnIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgdGV4dDogbWF0Y2hlcy5lZmZlY3QgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnVUNVIFNsdWRnZScsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICcxMUYnIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgdGV4dDogbWF0Y2hlcy5lZmZlY3QgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnVUNVIERvb20gR2FpbicsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICdEMicgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLmhhc0Rvb20gPz89IHt9O1xyXG4gICAgICAgIGRhdGEuaGFzRG9vbVttYXRjaGVzLnRhcmdldF0gPSB0cnVlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdVQ1UgRG9vbSBMb3NlJyxcclxuICAgICAgdHlwZTogJ0xvc2VzRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMubG9zZXNFZmZlY3QoeyBlZmZlY3RJZDogJ0QyJyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuaGFzRG9vbSA/Pz0ge307XHJcbiAgICAgICAgZGF0YS5oYXNEb29tW21hdGNoZXMudGFyZ2V0XSA9IGZhbHNlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgLy8gVGhlcmUgaXMgbm8gY2FsbG91dCBmb3IgXCJ5b3UgZm9yZ290IHRvIGNsZWFyIGRvb21cIi4gIFRoZSBsb2dzIGxvb2tcclxuICAgICAgLy8gc29tZXRoaW5nIGxpa2UgdGhpczpcclxuICAgICAgLy8gICBbMjA6MDI6MzAuNTY0XSAxQTpPa29ub21pIFlha2kgZ2FpbnMgdGhlIGVmZmVjdCBvZiBEb29tIGZyb20gIGZvciA2LjAwIFNlY29uZHMuXHJcbiAgICAgIC8vICAgWzIwOjAyOjM2LjQ0M10gMUU6T2tvbm9taSBZYWtpIGxvc2VzIHRoZSBlZmZlY3Qgb2YgUHJvdGVjdCBmcm9tIFRha28gWWFraS5cclxuICAgICAgLy8gICBbMjA6MDI6MzYuNDQzXSAxRTpPa29ub21pIFlha2kgbG9zZXMgdGhlIGVmZmVjdCBvZiBEb29tIGZyb20gLlxyXG4gICAgICAvLyAgIFsyMDowMjozOC41MjVdIDE5Ok9rb25vbWkgWWFraSB3YXMgZGVmZWF0ZWQgYnkgRmlyZWhvcm4uXHJcbiAgICAgIC8vIEluIG90aGVyIHdvcmRzLCBkb29tIGVmZmVjdCBpcyByZW1vdmVkICsvLSBuZXR3b3JrIGxhdGVuY3ksIGJ1dCBjYW4ndFxyXG4gICAgICAvLyB0ZWxsIHVudGlsIGxhdGVyIHRoYXQgaXQgd2FzIGEgZGVhdGguICBBcmd1YWJseSwgdGhpcyBjb3VsZCBoYXZlIGJlZW4gYVxyXG4gICAgICAvLyBjbG9zZS1idXQtc3VjY2Vzc2Z1bCBjbGVhcmluZyBvZiBkb29tIGFzIHdlbGwuICBJdCBsb29rcyB0aGUgc2FtZS5cclxuICAgICAgLy8gU3RyYXRlZ3k6IGlmIHlvdSBoYXZlbid0IGNsZWFyZWQgZG9vbSB3aXRoIDEgc2Vjb25kIHRvIGdvIHRoZW4geW91IHByb2JhYmx5XHJcbiAgICAgIC8vIGRpZWQgdG8gZG9vbS4gIFlvdSBjYW4gZ2V0IG5vbi1mYXRhbGx5IGljZWJhbGxlZCBvciBhdXRvJ2QgaW4gYmV0d2VlbixcclxuICAgICAgLy8gYnV0IHdoYXQgY2FuIHlvdSBkby5cclxuICAgICAgaWQ6ICdVQ1UgRG9vbSBEZWF0aCcsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICdEMicgfSksXHJcbiAgICAgIGRlbGF5U2Vjb25kczogKF9kYXRhLCBtYXRjaGVzKSA9PiBwYXJzZUZsb2F0KG1hdGNoZXMuZHVyYXRpb24pIC0gMSxcclxuICAgICAgZGVhdGhSZWFzb246IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgaWYgKCFkYXRhLmhhc0Rvb20gfHwgIWRhdGEuaGFzRG9vbVttYXRjaGVzLnRhcmdldF0pXHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgbGV0IHRleHQ7XHJcbiAgICAgICAgY29uc3QgZHVyYXRpb24gPSBwYXJzZUZsb2F0KG1hdGNoZXMuZHVyYXRpb24pO1xyXG4gICAgICAgIGlmIChkdXJhdGlvbiA8IDkpXHJcbiAgICAgICAgICB0ZXh0ID0gbWF0Y2hlcy5lZmZlY3QgKyAnICMxJztcclxuICAgICAgICBlbHNlIGlmIChkdXJhdGlvbiA8IDE0KVxyXG4gICAgICAgICAgdGV4dCA9IG1hdGNoZXMuZWZmZWN0ICsgJyAjMic7XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgICAgdGV4dCA9IG1hdGNoZXMuZWZmZWN0ICsgJyAjMyc7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB0ZXh0LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBUaGUgQ29waWVkIEZhY3RvcnlcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZUNvcGllZEZhY3RvcnksXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0NvcGllZCBTZXJpYWwgRW5lcmd5IEJvbWInOiAnNDhCNCcsXHJcbiAgICAvLyBNYWtlIHN1cmUgZW5lbWllcyBhcmUgaWdub3JlZCBvbiB0aGVzZVxyXG4gICAgJ0NvcGllZCBTZXJpYWwgRW5lcmd5IEJvbWJhcmRtZW50JzogJzQ4QjgnLFxyXG4gICAgJ0NvcGllZCBTZXJpYWwgRW5lcmd5IEFzc2F1bHQnOiAnNDhCNicsXHJcbiAgICAnQ29waWVkIFNlcmlhbCBIaWdoLVBvd2VyZWQgTGFzZXInOiAnNDhDNScsXHJcbiAgICAnQ29waWVkIFNlcmlhbCBTaWRlc3RyaWtpbmcgU3BpbiBTcGluIDEnOiAnNDhDQicsXHJcbiAgICAnQ29waWVkIFNlcmlhbCBTaWRlc3RyaWtpbmcgU3BpbiAyJzogJzQ4Q0MnLFxyXG4gICAgJ0NvcGllZCBTZXJpYWwgQ2VudHJpZnVnYWwgU3Bpbic6ICc0OEM5JyxcclxuICAgICdDb3BpZWQgU2VyaWFsIEFpci1Uby1TdXJmYWNlIEVuZXJneSc6ICc0OEJBJyxcclxuICAgICdDb3BpZWQgU2VyaWFsIEhpZ2gtQ2FsaWJlciBMYXNlcic6ICc0OEZBJyxcclxuICAgICdDb3BpZWQgU2VyaWFsIEVuZXJneSBSaW5nIDEnOiAnNDhCQycsXHJcbiAgICAnQ29waWVkIFNlcmlhbCBFbmVyZ3kgUmluZyAyJzogJzQ4QkQnLFxyXG4gICAgJ0NvcGllZCBTZXJpYWwgRW5lcmd5IFJpbmcgMyc6ICc0OEJFJyxcclxuICAgICdDb3BpZWQgU2VyaWFsIEVuZXJneSBSaW5nIDQnOiAnNDhDMCcsXHJcbiAgICAnQ29waWVkIFNlcmlhbCBFbmVyZ3kgUmluZyA1JzogJzQ4QzEnLFxyXG4gICAgJ0NvcGllZCBTZXJpYWwgRW5lcmd5IFJpbmcgNic6ICc0OEMyJyxcclxuXHJcbiAgICAnQ29waWVkIFRyYXNoIEVuZXJneSBCb21iJzogJzQ5MUQnLFxyXG4gICAgJ0NvcGllZCBUcmFzaCBGcm9udGFsIFNvbWVyc2F1bHQnOiAnNDkxQicsXHJcbiAgICAnQ29waWVkIFRyYXNoIEhpZ2gtRnJlcXVlbmN5IExhc2VyJzogJzQ5MUUnLFxyXG5cclxuICAgICdDb3BpZWQgSG9iYmVzIFNob2NraW5nIERpc2NoYXJnZSc6ICc0ODBCJyxcclxuICAgICdDb3BpZWQgSG9iYmVzIFZhcmlhYmxlIENvbWJhdCBUZXN0IDEnOiAnNDlDNScsXHJcbiAgICAnQ29waWVkIEhvYmJlcyBWYXJpYWJsZSBDb21iYXQgVGVzdCAyJzogJzQ5QzYnLFxyXG4gICAgJ0NvcGllZCBIb2JiZXMgVmFyaWFibGUgQ29tYmF0IFRlc3QgMyc6ICc0OUM3JyxcclxuICAgICdDb3BpZWQgSG9iYmVzIFZhcmlhYmxlIENvbWJhdCBUZXN0IDQnOiAnNDgwRicsXHJcbiAgICAnQ29waWVkIEhvYmJlcyBWYXJpYWJsZSBDb21iYXQgVGVzdCA1JzogJzQ4MTAnLFxyXG4gICAgJ0NvcGllZCBIb2JiZXMgVmFyaWFibGUgQ29tYmF0IFRlc3QgNic6ICc0ODExJyxcclxuXHJcbiAgICAnQ29waWVkIEhvYmJlcyBSaW5nIExhc2VyIDEnOiAnNDgwMicsXHJcbiAgICAnQ29waWVkIEhvYmJlcyBSaW5nIExhc2VyIDInOiAnNDgwMycsXHJcbiAgICAnQ29waWVkIEhvYmJlcyBSaW5nIExhc2VyIDMnOiAnNDgwNCcsXHJcblxyXG4gICAgJ0NvcGllZCBIb2JiZXMgVG93ZXJmYWxsJzogJzQ4MTMnLFxyXG5cclxuICAgICdDb3BpZWQgSG9iYmVzIEZpcmUtUmVpc3RhbmNlIFRlc3QgMSc6ICc0ODE2JyxcclxuICAgICdDb3BpZWQgSG9iYmVzIEZpcmUtUmVpc3RhbmNlIFRlc3QgMic6ICc0ODE3JyxcclxuICAgICdDb3BpZWQgSG9iYmVzIEZpcmUtUmVpc3RhbmNlIFRlc3QgMyc6ICc0ODE4JyxcclxuXHJcbiAgICAnQ29waWVkIEhvYmJlcyBPaWwgV2VsbCc6ICc0ODFCJyxcclxuICAgICdDb3BpZWQgSG9iYmVzIEVsZWN0cm9tYWduZXRpYyBQdWxzZSc6ICc0ODE5JyxcclxuICAgIC8vIFRPRE86IHdoYXQncyB0aGUgZWxlY3RyaWZpZWQgZmxvb3Igd2l0aCBjb252ZXlvciBiZWx0cz9cclxuXHJcbiAgICAnQ29waWVkIEdvbGlhdGggRW5lcmd5IFJpbmcgMSc6ICc0OTM3JyxcclxuICAgICdDb3BpZWQgR29saWF0aCBFbmVyZ3kgUmluZyAyJzogJzQ5MzgnLFxyXG4gICAgJ0NvcGllZCBHb2xpYXRoIEVuZXJneSBSaW5nIDMnOiAnNDkzOScsXHJcbiAgICAnQ29waWVkIEdvbGlhdGggRW5lcmd5IFJpbmcgNCc6ICc0OTNBJyxcclxuICAgICdDb3BpZWQgR29saWF0aCBFbmVyZ3kgUmluZyA1JzogJzQ5MzcnLFxyXG4gICAgJ0NvcGllZCBHb2xpYXRoIExhc2VyIFR1cnJldCc6ICc0OEU2JyxcclxuXHJcbiAgICAnQ29waWVkIEZsaWdodCBVbml0IEFyZWEgQm9tYmluZyc6ICc0OTQzJyxcclxuICAgICdDb3BpZWQgRmxpZ2h0IFVuaXQgTGlnaHRmYXN0IEJsYWRlJzogJzQ5NDAnLFxyXG5cclxuICAgICdDb3BpZWQgRW5nZWxzIE1hcnggU21hc2ggMSc6ICc0NzI5JyxcclxuICAgICdDb3BpZWQgRW5nZWxzIE1hcnggU21hc2ggMic6ICc0NzI4JyxcclxuICAgICdDb3BpZWQgRW5nZWxzIE1hcnggU21hc2ggMyc6ICc0NzJGJyxcclxuICAgICdDb3BpZWQgRW5nZWxzIE1hcnggU21hc2ggNCc6ICc0NzMxJyxcclxuICAgICdDb3BpZWQgRW5nZWxzIE1hcnggU21hc2ggNSc6ICc0NzJCJyxcclxuICAgICdDb3BpZWQgRW5nZWxzIE1hcnggU21hc2ggNic6ICc0NzJEJyxcclxuICAgICdDb3BpZWQgRW5nZWxzIE1hcnggU21hc2ggNyc6ICc0NzMyJyxcclxuXHJcbiAgICAnQ29waWVkIEVuZ2VscyBJbmNlbmRpYXJ5IEJvbWJpbmcnOiAnNDczOScsXHJcbiAgICAnQ29waWVkIEVuZ2VscyBHdWlkZWQgTWlzc2lsZSc6ICc0NzM2JyxcclxuICAgICdDb3BpZWQgRW5nZWxzIFN1cmZhY2UgTWlzc2lsZSc6ICc0NzM0JyxcclxuICAgICdDb3BpZWQgRW5nZWxzIExhc2VyIFNpZ2h0JzogJzQ3M0InLFxyXG4gICAgJ0NvcGllZCBFbmdlbHMgRnJhY2snOiAnNDc0RCcsXHJcblxyXG4gICAgJ0NvcGllZCBFbmdlbHMgTWFyeCBDcnVzaCc6ICc0OEZDJyxcclxuICAgICdDb3BpZWQgRW5nZWxzIENydXNoaW5nIFdoZWVsJzogJzQ3NEInLFxyXG4gICAgJ0NvcGllZCBFbmdlbHMgTWFyeCBUaHJ1c3QnOiAnNDhGQycsXHJcblxyXG4gICAgJ0NvcGllZCA5UyBMYXNlciBTdXBwcmVzc2lvbic6ICc0OEUwJywgLy8gQ2Fubm9uc1xyXG4gICAgJ0NvcGllZCA5UyBCYWxsaXN0aWMgSW1wYWN0IDEnOiAnNDk3NCcsXHJcbiAgICAnQ29waWVkIDlTIEJhbGxpc3RpYyBJbXBhY3QgMic6ICc0OERDJyxcclxuICAgICdDb3BpZWQgOVMgQmFsbGlzdGljIEltcGFjdCAzJzogJzQ4RTQnLFxyXG4gICAgJ0NvcGllZCA5UyBCYWxsaXN0aWMgSW1wYWN0IDQnOiAnNDhFMCcsXHJcblxyXG4gICAgJ0NvcGllZCA5UyBNYXJ4IEltcGFjdCc6ICc0OEQ0JyxcclxuXHJcbiAgICAnQ29waWVkIDlTIFRhbmsgRGVzdHJ1Y3Rpb24gMSc6ICc0OEU4JyxcclxuICAgICdDb3BpZWQgOVMgVGFuayBEZXN0cnVjdGlvbiAyJzogJzQ4RTknLFxyXG5cclxuICAgICdDb3BpZWQgOVMgU2VyaWFsIFNwaW4gMSc6ICc0OEE1JyxcclxuICAgICdDb3BpZWQgOVMgU2VyaWFsIFNwaW4gMic6ICc0OEE3JyxcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0NvcGllZCBIb2JiZXMgU2hvcnQtUmFuZ2UgTWlzc2lsZSc6ICc0ODE1JyxcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gVE9ETzogNTA5MyB0YWtpbmcgSGlnaC1Qb3dlcmVkIExhc2VyIHdpdGggYSB2dWxuIChiZWNhdXNlIG9mIHRha2luZyB0d28pXHJcbi8vIFRPRE86IDRGQjUgdGFraW5nIEhpZ2gtUG93ZXJlZCBMYXNlciB3aXRoIGEgdnVsbiAoYmVjYXVzZSBvZiB0YWtpbmcgdHdvKVxyXG4vLyBUT0RPOiA1MEQzIEFlcmlhbCBTdXBwb3J0OiBCb21iYXJkbWVudCBnb2luZyBvZmYgZnJvbSBhZGRcclxuLy8gVE9ETzogNTIxMSBNYW5ldXZlcjogVm9sdCBBcnJheSBub3QgZ2V0dGluZyBpbnRlcnJ1cHRlZFxyXG4vLyBUT0RPOiA0RkY0LzRGRjUgT25lIG9mIHRoZXNlIGlzIGZhaWxpbmcgY2hlbWljYWwgY29uZmxhZ3JhdGlvblxyXG4vLyBUT0RPOiBzdGFuZGluZyBpbiB3cm9uZyB0ZWxlcG9ydGVyPz8gbWF5YmUgNTM2Mz9cclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVQdXBwZXRzQnVua2VyLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdQdXBwZXQgQWVnaXMgQmVhbSBDYW5ub25zIDEnOiAnNTA3NCcsIC8vIHJvdGF0aW5nIHNlcGFyYXRpbmcgd2hpdGUgZ3JvdW5kIGFvZVxyXG4gICAgJ1B1cHBldCBBZWdpcyBCZWFtIENhbm5vbnMgMic6ICc1MDc1JywgLy8gcm90YXRpbmcgc2VwYXJhdGluZyB3aGl0ZSBncm91bmQgYW9lXHJcbiAgICAnUHVwcGV0IEFlZ2lzIEJlYW0gQ2Fubm9ucyAzJzogJzUwNzYnLCAvLyByb3RhdGluZyBzZXBhcmF0aW5nIHdoaXRlIGdyb3VuZCBhb2VcclxuICAgICdQdXBwZXQgQWVnaXMgQ29sbGlkZXIgQ2Fubm9ucyc6ICc1MDdFJywgLy8gcm90YXRpbmcgcmVkIGdyb3VuZCBhb2UgcGlud2hlZWxcclxuICAgICdQdXBwZXQgQWVnaXMgU3VyZmFjZSBMYXNlciAxJzogJzUwOTEnLCAvLyBjaGFzaW5nIGxhc2VyIGluaXRpYWxcclxuICAgICdQdXBwZXQgQWVnaXMgU3VyZmFjZSBMYXNlciAyJzogJzUwOTInLCAvLyBjaGFzaW5nIGxhc2VyIGNoYXNpbmdcclxuICAgICdQdXBwZXQgQWVnaXMgRmxpZ2h0IFBhdGgnOiAnNTA4QycsIC8vIGJsdWUgbGluZSBhb2UgZnJvbSBmbHlpbmcgdW50YXJnZXRhYmxlIGFkZHNcclxuICAgICdQdXBwZXQgQWVnaXMgUmVmcmFjdGlvbiBDYW5ub25zIDEnOiAnNTA4MScsIC8vIHJlZnJhY3Rpb24gY2Fubm9ucyBiZXR3ZWVuIHdpbmdzXHJcbiAgICAnUHVwcGV0IEFlZ2lzIExpZmVcXCdzIExhc3QgU29uZyc6ICc1M0IzJywgLy8gcmluZyBhb2Ugd2l0aCBnYXBcclxuICAgICdQdXBwZXQgTGlnaHQgTG9uZy1CYXJyZWxlZCBMYXNlcic6ICc1MjEyJywgLy8gbGluZSBhb2UgZnJvbSBhZGRcclxuICAgICdQdXBwZXQgTGlnaHQgU3VyZmFjZSBNaXNzaWxlIEltcGFjdCc6ICc1MjBGJywgLy8gdW50YXJnZXRlZCBncm91bmQgYW9lIGZyb20gTm8gUmVzdHJpY3Rpb25zXHJcbiAgICAnUHVwcGV0IFN1cGVyaW9yIEluY2VuZGlhcnkgQm9tYmluZyc6ICc0RkI5JywgLy8gZmlyZSBwdWRkbGUgaW5pdGlhbFxyXG4gICAgJ1B1cHBldCBTdXBlcmlvciBTaGFycCBUdXJuJzogJzUwNkQnLCAvLyBzaGFycCB0dXJuIGRhc2hcclxuICAgICdQdXBwZXQgU3VwZXJpb3IgU3RhbmRhcmQgU3VyZmFjZSBNaXNzaWxlIDEnOiAnNEZCMScsIC8vIExldGhhbCBSZXZvbHV0aW9uIGNpcmNsZXNcclxuICAgICdQdXBwZXQgU3VwZXJpb3IgU3RhbmRhcmQgU3VyZmFjZSBNaXNzaWxlIDInOiAnNEZCMicsIC8vIExldGhhbCBSZXZvbHV0aW9uIGNpcmNsZXNcclxuICAgICdQdXBwZXQgU3VwZXJpb3IgU3RhbmRhcmQgU3VyZmFjZSBNaXNzaWxlIDMnOiAnNEZCMycsIC8vIExldGhhbCBSZXZvbHV0aW9uIGNpcmNsZXNcclxuICAgICdQdXBwZXQgU3VwZXJpb3IgU2xpZGluZyBTd2lwZSAxJzogJzUwNkYnLCAvLyByaWdodC1oYW5kZWQgc2xpZGluZyBzd2lwZVxyXG4gICAgJ1B1cHBldCBTdXBlcmlvciBTbGlkaW5nIFN3aXBlIDInOiAnNTA3MCcsIC8vIGxlZnQtaGFuZGVkIHNsaWRpbmcgc3dpcGVcclxuICAgICdQdXBwZXQgU3VwZXJpb3IgR3VpZGVkIE1pc3NpbGUnOiAnNEZCOCcsIC8vIGdyb3VuZCBhb2UgZHVyaW5nIEFyZWEgQm9tYmFyZG1lbnRcclxuICAgICdQdXBwZXQgU3VwZXJpb3IgSGlnaC1PcmRlciBFeHBsb3NpdmUgQmxhc3QgMSc6ICc0RkMwJywgLy8gc3RhciBhb2VcclxuICAgICdQdXBwZXQgU3VwZXJpb3IgSGlnaC1PcmRlciBFeHBsb3NpdmUgQmxhc3QgMic6ICc0RkMxJywgLy8gc3RhciBhb2VcclxuICAgICdQdXBwZXQgSGVhdnkgRW5lcmd5IEJvbWJhcmRtZW50JzogJzRGRkMnLCAvLyBjb2xvcmVkIG1hZ2ljIGhhbW1lci15IGdyb3VuZCBhb2VcclxuICAgICdQdXBwZXQgSGVhdnkgUmV2b2x2aW5nIExhc2VyJzogJzUwMDAnLCAvLyBnZXQgdW5kZXIgbGFzZXJcclxuICAgICdQdXBwZXQgSGVhdnkgRW5lcmd5IEJvbWInOiAnNEZGQScsIC8vIGdldHRpbmcgaGl0IGJ5IGJhbGwgZHVyaW5nIEFjdGl2ZSBTdXBwcmVzc2l2ZSBVbml0XHJcbiAgICAnUHVwcGV0IEhlYXZ5IFIwMTAgTGFzZXInOiAnNEZGMCcsIC8vIGxhc2VyIHBvZFxyXG4gICAgJ1B1cHBldCBIZWF2eSBSMDMwIEhhbW1lcic6ICc0RkYxJywgLy8gY2lyY2xlIGFvZSBwb2RcclxuICAgICdQdXBwZXQgSGFsbHdheSBIaWdoLVBvd2VyZWQgTGFzZXInOiAnNTBCMScsIC8vIGxvbmcgYW9lIGluIHRoZSBoYWxsd2F5IHNlY3Rpb25cclxuICAgICdQdXBwZXQgSGFsbHdheSBFbmVyZ3kgQm9tYic6ICc1MEIyJywgLy8gcnVubmluZyBpbnRvIGEgZmxvYXRpbmcgb3JiXHJcbiAgICAnUHVwcGV0IENvbXBvdW5kIE1lY2hhbmljYWwgRGlzc2VjdGlvbic6ICc1MUIzJywgLy8gc3Bpbm5pbmcgdmVydGljYWwgbGFzZXJcclxuICAgICdQdXBwZXQgQ29tcG91bmQgTWVjaGFuaWNhbCBEZWNhcGl0YXRpb24nOiAnNTFCNCcsIC8vIGdldCB1bmRlciBsYXNlclxyXG4gICAgJ1B1cHBldCBDb21wb3VuZCBNZWNobmljYWwgQ29udHVzaW9uIFVudGFyZ2V0ZWQnOiAnNTFCNycsIC8vIHVudGFyZ2V0ZWQgZ3JvdW5kIGFvZVxyXG4gICAgJ1B1cHBldCBDb21wb3VuZCAyUCBSZWxlbnRsZXNzIFNwaXJhbCAxJzogJzUxQUEnLCAvLyB0cmlwbGUgdW50YXJnZXRlZCBncm91bmQgYW9lc1xyXG4gICAgJ1B1cHBldCBDb21wb3VuZCAyUCBSZWxlbnRsZXNzIFNwaXJhbCAyJzogJzUxQ0InLCAvLyB0cmlwbGUgdW50YXJnZXRlZCBncm91bmQgYW9lc1xyXG4gICAgJ1B1cHBldCBDb21wb3VuZCAyUCBQcmltZSBCbGFkZSBPdXQgMSc6ICc1NDFGJywgLy8gMlAgcHJpbWUgYmxhZGUgZ2V0IG91dFxyXG4gICAgJ1B1cHBldCBDb21wb3VuZCAyUCBQcmltZSBCbGFkZSBPdXQgMic6ICc1MTk4JywgLy8gMlAvcHVwcGV0IHRlbGVwb3J0aW5nL3JlcHJvZHVjZSBwcmltZSBibGFkZSBnZXQgb3V0XHJcbiAgICAnUHVwcGV0IENvbXBvdW5kIDJQIFByaW1lIEJsYWRlIEJlaGluZCAxJzogJzU0MjAnLCAvLyAyUCBwcmltZSBibGFkZSBnZXQgYmVoaW5kXHJcbiAgICAnUHVwcGV0IENvbXBvdW5kIDJQIFByaW1lIEJsYWRlIEJlaGluZCAyJzogJzUxOTknLCAvLyAyUCB0ZWxlcG9ydGluZyBwcmltZSBibGFkZSBnZXQgYmVoaW5kXHJcbiAgICAnUHVwcGV0IENvbXBvdW5kIDJQIFByaW1lIEJsYWRlIEluIDEnOiAnNTQyMScsIC8vIDJQIHByaW1lIGJsYWRlIGdldCBpblxyXG4gICAgJ1B1cHBldCBDb21wb3VuZCAyUCBQcmltZSBCbGFkZSBJbiAyJzogJzUxOUEnLCAvLyAyUC9wdXBwZXQgdGVsZXBvcnRpbmcvcmVwcm9kdWNlIHByaW1lIGJsYWRlIGdldCBpblxyXG4gICAgJ1B1cHBldCBDb21wb3VuZCAyUCBSMDEyIExhc2VyIEdyb3VuZCc6ICc1MUFFJywgLy8gdW50YXJnZXRlZCBncm91bmQgY2lyY2xlXHJcbiAgICAvLyBUaGlzIGlzLi4uIHRvbyBub2lzeS5cclxuICAgIC8vICdQdXBwZXQgQ29tcG91bmQgMlAgRm91ciBQYXJ0cyBSZXNvbHZlIDEnOiAnNTFBMCcsIC8vIGZvdXIgcGFydHMgcmVzb2x2ZSBqdW1wXHJcbiAgICAvLyAnUHVwcGV0IENvbXBvdW5kIDJQIEZvdXIgUGFydHMgUmVzb2x2ZSAyJzogJzUxOUYnLCAvLyBmb3VyIHBhcnRzIHJlc29sdmUgY2xlYXZlXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnUHVwcGV0IEhlYXZ5IFVwcGVyIExhc2VyIDEnOiAnNTA4NycsIC8vIHVwcGVyIGxhc2VyIGluaXRpYWxcclxuICAgICdQdXBwZXQgSGVhdnkgVXBwZXIgTGFzZXIgMic6ICc0RkY3JywgLy8gdXBwZXIgbGFzZXIgY29udGludW91c1xyXG4gICAgJ1B1cHBldCBIZWF2eSBMb3dlciBMYXNlciAxJzogJzUwODYnLCAvLyBsb3dlciBsYXNlciBmaXJzdCBzZWN0aW9uIGluaXRpYWxcclxuICAgICdQdXBwZXQgSGVhdnkgTG93ZXIgTGFzZXIgMic6ICc0RkY2JywgLy8gbG93ZXIgbGFzZXIgZmlyc3Qgc2VjdGlvbiBjb250aW51b3VzXHJcbiAgICAnUHVwcGV0IEhlYXZ5IExvd2VyIExhc2VyIDMnOiAnNTA4OCcsIC8vIGxvd2VyIGxhc2VyIHNlY29uZCBzZWN0aW9uIGluaXRpYWxcclxuICAgICdQdXBwZXQgSGVhdnkgTG93ZXIgTGFzZXIgNCc6ICc0RkY4JywgLy8gbG93ZXIgbGFzZXIgc2Vjb25kIHNlY3Rpb24gY29udGludW91c1xyXG4gICAgJ1B1cHBldCBIZWF2eSBMb3dlciBMYXNlciA1JzogJzUwODknLCAvLyBsb3dlciBsYXNlciB0aGlyZCBzZWN0aW9uIGluaXRpYWxcclxuICAgICdQdXBwZXQgSGVhdnkgTG93ZXIgTGFzZXIgNic6ICc0RkY5JywgLy8gbG93ZXIgbGFzZXIgdGhpcmQgc2VjdGlvbiBjb250aW51b3VzXHJcbiAgICAnUHVwcGV0IENvbXBvdW5kIEluY29uZ3J1b3VzIFNwaW4nOiAnNTFCMicsIC8vIGZpbmQgdGhlIHNhZmUgc3BvdCBkb3VibGUgZGFzaFxyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RXYXJuOiB7XHJcbiAgICAnUHVwcGV0IEJ1cm5zJzogJzEwQicsIC8vIHN0YW5kaW5nIGluIG1hbnkgdmFyaW91cyBmaXJlIGFvZXNcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgLy8gVGhpcyBpcyBwcmV0dHkgbGFyZ2UgYW5kIGdldHRpbmcgaGl0IGJ5IGluaXRpYWwgd2l0aG91dCBidXJucyBzZWVtcyBmaW5lLlxyXG4gICAgLy8gJ1B1cHBldCBMaWdodCBIb21pbmcgTWlzc2lsZSBJbXBhY3QnOiAnNTIxMCcsIC8vIHRhcmdldGVkIGZpcmUgYW9lIGZyb20gTm8gUmVzdHJpY3Rpb25zXHJcbiAgICAnUHVwcGV0IEhlYXZ5IFVuY29udmVudGlvbmFsIFZvbHRhZ2UnOiAnNTAwNCcsXHJcbiAgICAvLyBQcmV0dHkgbm9pc3kuXHJcbiAgICAnUHVwcGV0IE1hbmV1dmVyIEhpZ2gtUG93ZXJlZCBMYXNlcic6ICc1MDAyJywgLy8gdGFuayBsYXNlclxyXG4gICAgJ1B1cHBldCBDb21wb3VuZCBNZWNobmljYWwgQ29udHVzaW9uIFRhcmdldGVkJzogJzUxQjYnLCAvLyB0YXJnZXRlZCBzcHJlYWQgbWFya2VyXHJcbiAgICAnUHVwcGV0IENvbXBvdW5kIDJQIFIwMTIgTGFzZXIgVGFuayc6ICc1MUFFJywgLy8gdGFyZ2V0ZWQgc3ByZWFkIHBvZCBsYXNlciBvbiBub24tdGFua1xyXG4gIH0sXHJcbiAgc2hhcmVGYWlsOiB7XHJcbiAgICAnUHVwcGV0IEFlZ2lzIEFudGktUGVyc29ubmVsIExhc2VyJzogJzUwOTAnLCAvLyB0YW5rIGJ1c3RlciBtYXJrZXJcclxuICAgICdQdXBwZXQgU3VwZXJpb3IgUHJlY2lzaW9uLUd1aWRlZCBNaXNzaWxlJzogJzRGQzUnLFxyXG4gICAgJ1B1cHBldCBDb21wb3VuZCAyUCBSMDEyIExhc2VyIFRhbmsnOiAnNTFBRCcsIC8vIHRhcmdldGVkIHBvZCBsYXNlciBvbiB0YW5rXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gVE9ETzogbWlzc2luZyBTaG9jayBCbGFjayAyP1xyXG4vLyBUT0RPOiBXaGl0ZS9CbGFjayBEaXNzb25hbmNlIGRhbWFnZSBpcyBtYXliZSB3aGVuIGZsYWdzIGVuZCBpbiAwMz9cclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVUb3dlckF0UGFyYWRpZ21zQnJlYWNoLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdUb3dlciBLbmF2ZSBDb2xvc3NhbCBJbXBhY3QgQ2VudGVyIDEnOiAnNUVBNycsIC8vIENlbnRlciBhb2UgZnJvbSBLbmF2ZSBhbmQgY2xvbmVzXHJcbiAgICAnVG93ZXIgS25hdmUgQ29sb3NzYWwgSW1wYWN0IENlbnRlciAyJzogJzYwQzgnLCAvLyBDZW50ZXIgYW9lIGZyb20gS25hdmUgZHVyaW5nIGx1bmdlXHJcbiAgICAnVG93ZXIgS25hdmUgQ29sb3NzYWwgSW1wYWN0IFNpZGUgMSc6ICc1RUE1JywgLy8gU2lkZSBhb2VzIGZyb20gS25hdmUgYW5kIGNsb25lc1xyXG4gICAgJ1Rvd2VyIEtuYXZlIENvbG9zc2FsIEltcGFjdCBTaWRlIDInOiAnNUVBNicsIC8vIFNpZGUgYW9lcyBmcm9tIEtuYXZlIGFuZCBjbG9uZXNcclxuICAgICdUb3dlciBLbmF2ZSBDb2xvc3NhbCBJbXBhY3QgU2lkZSAzJzogJzYwQzYnLCAvLyBTaWRlIGFvZXMgZnJvbSBLbmF2ZSBkdXJpbmcgbHVuZ2VcclxuICAgICdUb3dlciBLbmF2ZSBDb2xvc3NhbCBJbXBhY3QgU2lkZSA0JzogJzYwQzcnLCAvLyBTaWRlIGFvZXMgZnJvbSBLbmF2ZSBkdXJpbmcgbHVuZ2VcclxuICAgICdUb3dlciBLbmF2ZSBCdXJzdCc6ICc1RUQ0JywgLy8gU3BoZXJvaWQgS25hdmlzaCBCdWxsZXRzIGNvbGxpc2lvblxyXG4gICAgJ1Rvd2VyIEtuYXZlIE1hZ2ljIEJhcnJhZ2UnOiAnNUVBQycsIC8vIFNwaGVyb2lkIGxpbmUgYW9lc1xyXG4gICAgJ1Rvd2VyIEhhbnNlbCBSZXBheSc6ICc1QzcwJywgLy8gU2hpZWxkIGRhbWFnZVxyXG4gICAgJ1Rvd2VyIEhhbnNlbCBFeHBsb3Npb24nOiAnNUM2NycsIC8vIEJlaW5nIGhpdCBieSBNYWdpYyBCdWxsZXQgZHVyaW5nIFBhc3NpbmcgTGFuY2VcclxuICAgICdUb3dlciBIYW5zZWwgSW1wYWN0JzogJzVDNUMnLCAvLyBCZWluZyBoaXQgYnkgTWFnaWNhbCBDb25mbHVlbmNlIGR1cmluZyBXYW5kZXJpbmcgVHJhaWxcclxuICAgICdUb3dlciBIYW5zZWwgQmxvb2R5IFN3ZWVwIDEnOiAnNUM2QycsIC8vIER1YWwgY2xlYXZlcyB3aXRob3V0IHRldGhlclxyXG4gICAgJ1Rvd2VyIEhhbnNlbCBCbG9vZHkgU3dlZXAgMic6ICc1QzZEJywgLy8gRHVhbCBjbGVhdmVzIHdpdGhvdXQgdGV0aGVyXHJcbiAgICAnVG93ZXIgSGFuc2VsIEJsb29keSBTd2VlcCAzJzogJzVDNkUnLCAvLyBEdWFsIGNsZWF2ZXMgd2l0aCB0ZXRoZXJcclxuICAgICdUb3dlciBIYW5zZWwgQmxvb2R5IFN3ZWVwIDQnOiAnNUM2RicsIC8vIER1YWwgY2xlYXZlcyB3aXRoIHRldGhlclxyXG4gICAgJ1Rvd2VyIEhhbnNlbCBQYXNzaW5nIExhbmNlJzogJzVDNjYnLCAvLyBUaGUgUGFzc2luZyBMYW5jZSBjaGFyZ2UgaXRzZWxmXHJcbiAgICAnVG93ZXIgSGFuc2VsIEJyZWF0aHRocm91Z2ggMSc6ICc1NUIzJywgLy8gaGFsZiByb29tIGNsZWF2ZSBkdXJpbmcgV2FuZGVyaW5nIFRyYWlsXHJcbiAgICAnVG93ZXIgSGFuc2VsIEJyZWF0aHRocm91Z2ggMic6ICc1QzVEJywgLy8gaGFsZiByb29tIGNsZWF2ZSBkdXJpbmcgV2FuZGVyaW5nIFRyYWlsXHJcbiAgICAnVG93ZXIgSGFuc2VsIEJyZWF0aHRocm91Z2ggMyc6ICc1QzVFJywgLy8gaGFsZiByb29tIGNsZWF2ZSBkdXJpbmcgV2FuZGVyaW5nIFRyYWlsXHJcbiAgICAnVG93ZXIgSGFuc2VsIEh1bmdyeSBMYW5jZSAxJzogJzVDNzEnLCAvLyAyeGxhcmdlIGNvbmFsIGNsZWF2ZSBkdXJpbmcgV2FuZGVyaW5nIFRyYWlsXHJcbiAgICAnVG93ZXIgSGFuc2VsIEh1bmdyeSBMYW5jZSAyJzogJzVDNzInLCAvLyAyeGxhcmdlIGNvbmFsIGNsZWF2ZSBkdXJpbmcgV2FuZGVyaW5nIFRyYWlsXHJcbiAgICAnVG93ZXIgRmxpZ2h0IFVuaXQgTGlnaHRmYXN0IEJsYWRlJzogJzVCRkUnLCAvLyBsYXJnZSByb29tIGNsZWF2ZVxyXG4gICAgJ1Rvd2VyIEZsaWdodCBVbml0IFN0YW5kYXJkIExhc2VyJzogJzVCRkYnLCAvLyB0cmFja2luZyBsYXNlclxyXG4gICAgJ1Rvd2VyIDJQIFdoaXJsaW5nIEFzc2F1bHQnOiAnNUJGQicsIC8vIGxpbmUgYW9lIGZyb20gMlAgY2xvbmVzXHJcbiAgICAnVG93ZXIgMlAgQmFsYW5jZWQgRWRnZSc6ICc1QkZBJywgLy8gY2lyY3VsYXIgYW9lIG9uIDJQIGNsb25lc1xyXG4gICAgJ1Rvd2VyIFJlZCBHaXJsIEdlbmVyYXRlIEJhcnJpZXIgMSc6ICc2MDA2JywgLy8gYmVpbmcgaGl0IGJ5IGJhcnJpZXJzIGFwcGVhcmluZ1xyXG4gICAgJ1Rvd2VyIFJlZCBHaXJsIEdlbmVyYXRlIEJhcnJpZXIgMic6ICc2MDA3JywgLy8gYmVpbmcgaGl0IGJ5IGJhcnJpZXJzIGFwcGVhcmluZ1xyXG4gICAgJ1Rvd2VyIFJlZCBHaXJsIEdlbmVyYXRlIEJhcnJpZXIgMyc6ICc2MDA4JywgLy8gYmVpbmcgaGl0IGJ5IGJhcnJpZXJzIGFwcGVhcmluZ1xyXG4gICAgJ1Rvd2VyIFJlZCBHaXJsIEdlbmVyYXRlIEJhcnJpZXIgNCc6ICc2MDA5JywgLy8gYmVpbmcgaGl0IGJ5IGJhcnJpZXJzIGFwcGVhcmluZ1xyXG4gICAgJ1Rvd2VyIFJlZCBHaXJsIEdlbmVyYXRlIEJhcnJpZXIgNSc6ICc2MzEwJywgLy8gYmVpbmcgaGl0IGJ5IGJhcnJpZXJzIGFwcGVhcmluZ1xyXG4gICAgJ1Rvd2VyIFJlZCBHaXJsIEdlbmVyYXRlIEJhcnJpZXIgNic6ICc2MzExJywgLy8gYmVpbmcgaGl0IGJ5IGJhcnJpZXJzIGFwcGVhcmluZ1xyXG4gICAgJ1Rvd2VyIFJlZCBHaXJsIEdlbmVyYXRlIEJhcnJpZXIgNyc6ICc2MzEyJywgLy8gYmVpbmcgaGl0IGJ5IGJhcnJpZXJzIGFwcGVhcmluZ1xyXG4gICAgJ1Rvd2VyIFJlZCBHaXJsIEdlbmVyYXRlIEJhcnJpZXIgOCc6ICc2MzEzJywgLy8gYmVpbmcgaGl0IGJ5IGJhcnJpZXJzIGFwcGVhcmluZ1xyXG4gICAgJ1Rvd2VyIFJlZCBHaXJsIFNob2NrIFdoaXRlIDEnOiAnNjAwRicsIC8vIHdoaXRlIHNob2Nrd2F2ZSBjaXJjbGUgbm90IGRyb3BwZWQgb24gYmxhY2tcclxuICAgICdUb3dlciBSZWQgR2lybCBTaG9jayBXaGl0ZSAyJzogJzYwMTAnLCAvLyB3aGl0ZSBzaG9ja3dhdmUgY2lyY2xlIG5vdCBkcm9wcGVkIG9uIGJsYWNrXHJcbiAgICAnVG93ZXIgUmVkIEdpcmwgU2hvY2sgQmxhY2sgMSc6ICc2MDExJywgLy8gYmxhY2sgc2hvY2t3YXZlIGNpcmNsZSBub3QgZHJvcHBlZCBvbiB3aGl0ZVxyXG4gICAgJ1Rvd2VyIFJlZCBHaXJsIFBvaW50IFdoaXRlIDEnOiAnNjAxRicsIC8vIGJlaW5nIGhpdCBieSBhIHdoaXRlIGxhc2VyXHJcbiAgICAnVG93ZXIgUmVkIEdpcmwgUG9pbnQgV2hpdGUgMic6ICc2MDIxJywgLy8gYmVpbmcgaGl0IGJ5IGEgd2hpdGUgbGFzZXJcclxuICAgICdUb3dlciBSZWQgR2lybCBQb2ludCBCbGFjayAxJzogJzYwMjAnLCAvLyBiZWluZyBoaXQgYnkgYSBibGFjayBsYXNlclxyXG4gICAgJ1Rvd2VyIFJlZCBHaXJsIFBvaW50IEJsYWNrIDInOiAnNjAyMicsIC8vIGJlaW5nIGhpdCBieSBhIGJsYWNrIGxhc2VyXHJcbiAgICAnVG93ZXIgUmVkIEdpcmwgV2lwZSBXaGl0ZSc6ICc2MDBDJywgLy8gbm90IGxpbmUgb2Ygc2lnaHRpbmcgdGhlIHdoaXRlIG1ldGVvclxyXG4gICAgJ1Rvd2VyIFJlZCBHaXJsIFdpcGUgQmxhY2snOiAnNjAwRCcsIC8vIG5vdCBsaW5lIG9mIHNpZ2h0aW5nIHRoZSBibGFjayBtZXRlb3JcclxuICAgICdUb3dlciBSZWQgR2lybCBEaWZmdXNlIEVuZXJneSc6ICc2MDU2JywgLy8gcm90YXRpbmcgY2xvbmUgYnViYmxlIGNsZWF2ZXNcclxuICAgICdUb3dlciBSZWQgR2lybCBQeWxvbiBCaWcgRXhwbG9zaW9uJzogJzYwMjcnLCAvLyBub3Qga2lsbGluZyBhIHB5bG9uIGR1cmluZyBoYWNraW5nIHBoYXNlXHJcbiAgICAnVG93ZXIgUmVkIEdpcmwgUHlsb24gRXhwbG9zaW9uJzogJzYwMjYnLCAvLyBweWxvbiBkdXJpbmcgQ2hpbGQncyBwbGF5XHJcbiAgICAnVG93ZXIgUGhpbG9zb3BoZXIgRGVwbG95IEFybWFtZW50cyBNaWRkbGUnOiAnNUMwMicsIC8vIG1pZGRsZSBsYXNlclxyXG4gICAgJ1Rvd2VyIFBoaWxvc29waGVyIERlcGxveSBBcm1hbWVudHMgU2lkZXMnOiAnNUMwNScsIC8vIHNpZGVzIGxhc2VyXHJcbiAgICAnVG93ZXIgUGhpbG9zb3BoZXIgRGVwbG95IEFybWFtZW50cyAzJzogJzYwNzgnLCAvLyBnb2VzIHdpdGggNUMwMVxyXG4gICAgJ1Rvd2VyIFBoaWxvc29waGVyIERlcGxveSBBcm1hbWVudHMgNCc6ICc2MDc5JywgLy8gZ29lcyB3aXRoIDVDMDRcclxuICAgICdUb3dlciBQaGlsb3NvcGhlciBFbmVyZ3kgQm9tYic6ICc1QzA1JywgLy8gcGluayBidWJibGVcclxuICAgICdUb3dlciBGYWxzZSBJZG9sIE1hZGUgTWFnaWMgUmlnaHQnOiAnNUJENycsIC8vIHJvdGF0aW5nIHdoZWVsIGdvaW5nIHJpZ2h0XHJcbiAgICAnVG93ZXIgRmFsc2UgSWRvbCBNYWRlIE1hZ2ljIExlZnQnOiAnNUJENicsIC8vIHJvdGF0aW5nIHdoZWVsIGdvaW5nIGxlZnRcclxuICAgICdUb3dlciBGYWxzZSBJZG9sIExpZ2h0ZXIgTm90ZSc6ICc1QkRBJywgLy8gbGlnaHRlciBub3RlIG1vdmluZyBhb2VzXHJcbiAgICAnVG93ZXIgRmFsc2UgSWRvbCBNYWdpY2FsIEludGVyZmVyZW5jZSc6ICc1QkQ1JywgLy8gbGFzZXJzIGR1cmluZyBSaHl0aG0gUmluZ3NcclxuICAgICdUb3dlciBGYWxzZSBJZG9sIFNjYXR0ZXJlZCBNYWdpYyc6ICc1QkRGJywgLy8gY2lyY2xlIGFvZXMgZnJvbSBTZWVkIE9mIE1hZ2ljXHJcbiAgICAnVG93ZXIgSGVyIEluZmxvcmVzY2VuY2UgVW5ldmVuIEZvdHRpbmcnOiAnNUJFMicsIC8vIGJ1aWxkaW5nIGZyb20gUmVjcmVhdGUgU3RydWN0dXJlXHJcbiAgICAnVG93ZXIgSGVyIEluZmxvcmVzY2VuY2UgQ3Jhc2gnOiAnNUJFNScsIC8vIHRyYWlucyBmcm9tIE1peGVkIFNpZ25hbHNcclxuICAgICdUb3dlciBIZXIgSW5mbG9yZXNjZW5jZSBIZWF2eSBBcm1zIDEnOiAnNUJFRCcsIC8vIGhlYXZ5IGFybXMgZnJvbnQvYmFjayBhdHRhY2tcclxuICAgICdUb3dlciBIZXIgSW5mbG9yZXNjZW5jZSBIZWF2eSBBcm1zIDInOiAnNUJFRicsIC8vIGhlYXZ5IGFybXMgc2lkZXMgYXR0YWNrXHJcbiAgICAnVG93ZXIgSGVyIEluZmxvcmVzY2VuY2UgRW5lcmd5IFNjYXR0ZXJlZCBNYWdpYyc6ICc1QkU4JywgLy8gb3JicyBmcm9tIFJlZCBHaXJsIGJ5IHRyYWluXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnVG93ZXIgSGVyIEluZmxvcmVzY2VuY2UgUGxhY2UgT2YgUG93ZXInOiAnNUMwRCcsIC8vIGluc3RhZGVhdGggbWlkZGxlIGNpcmNsZSBiZWZvcmUgYmxhY2svd2hpdGUgcmluZ3NcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1Rvd2VyIEtuYXZlIE1hZ2ljIEFydGlsbGVyeSBBbHBoYSc6ICc1RUFCJywgLy8gU3ByZWFkXHJcbiAgICAnVG93ZXIgSGFuc2VsIFNlZWQgT2YgTWFnaWMgQWxwaGEnOiAnNUM2MScsIC8vIFNwcmVhZFxyXG4gIH0sXHJcbiAgc2hhcmVGYWlsOiB7XHJcbiAgICAnVG93ZXIgS25hdmUgTWFnaWMgQXJ0aWxsZXJ5IEJldGEnOiAnNUVCMycsIC8vIFRhbmtidXN0ZXJcclxuICAgICdUb3dlciBSZWQgR2lybCBNYW5pcHVsYXRlIEVuZXJneSc6ICc2MDFBJywgLy8gVGFua2J1c3RlclxyXG4gICAgJ1Rvd2VyIEZhbHNlIElkb2wgRGFya2VyIE5vdGUnOiAnNUJEQycsIC8vIFRhbmtidXN0ZXJcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnVG93ZXIgS25vY2tlZCBPZmYnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIC8vIDVFQjEgPSBLbmF2ZSBMdW5nZVxyXG4gICAgICAvLyA1QkYyID0gSGVyIEluZmxvcmVzZW5jZSBTaG9ja3dhdmVcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiBbJzVFQjEnLCAnNUJGMiddIH0pLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnS25vY2tlZCBvZmYnLFxyXG4gICAgICAgICAgICBkZTogJ1J1bnRlcmdlZmFsbGVuJyxcclxuICAgICAgICAgICAgZnI6ICdSZW52ZXJzw6koZSknLFxyXG4gICAgICAgICAgICBqYTogJ+ODjuODg+OCr+ODkOODg+OCrycsXHJcbiAgICAgICAgICAgIGNuOiAn5Ye76YCA5Z2g6JC9JyxcclxuICAgICAgICAgICAga286ICfrhInrsLEnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkFrYWRhZW1pYUFueWRlcixcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnQW55ZGVyIEFjcmlkIFN0cmVhbSc6ICc0MzA0JyxcclxuICAgICdBbnlkZXIgV2F0ZXJzcG91dCc6ICc0MzA2JyxcclxuICAgICdBbnlkZXIgUmFnaW5nIFdhdGVycyc6ICc0MzAyJyxcclxuICAgICdBbnlkZXIgVmlvbGVudCBCcmVhY2gnOiAnNDMwNScsXHJcbiAgICAnQW55ZGVyIFRpZGFsIEd1aWxsb3RpbmUgMSc6ICczRTA4JyxcclxuICAgICdBbnlkZXIgVGlkYWwgR3VpbGxvdGluZSAyJzogJzNFMEEnLFxyXG4gICAgJ0FueWRlciBQZWxhZ2ljIENsZWF2ZXIgMSc6ICczRTA5JyxcclxuICAgICdBbnlkZXIgUGVsYWdpYyBDbGVhdmVyIDInOiAnM0UwQicsXHJcbiAgICAnQW55ZGVyIEFxdWF0aWMgTGFuY2UnOiAnM0UwNScsXHJcbiAgICAnQW55ZGVyIFN5cnVwIFNwb3V0JzogJzQzMDgnLFxyXG4gICAgJ0FueWRlciBOZWVkbGUgU3Rvcm0nOiAnNDMwOScsXHJcbiAgICAnQW55ZGVyIEV4dGVuc2libGUgVGVuZHJpbHMgMSc6ICczRTEwJyxcclxuICAgICdBbnlkZXIgRXh0ZW5zaWJsZSBUZW5kcmlscyAyJzogJzNFMTEnLFxyXG4gICAgJ0FueWRlciBQdXRyaWQgQnJlYXRoJzogJzNFMTInLFxyXG4gICAgJ0FueWRlciBEZXRvbmF0b3InOiAnNDMwRicsXHJcbiAgICAnQW55ZGVyIERvbWluaW9uIFNsYXNoJzogJzQzMEQnLFxyXG4gICAgJ0FueWRlciBRdWFzYXInOiAnNDMwQicsXHJcbiAgICAnQW55ZGVyIERhcmsgQXJyaXZpc21lJzogJzQzMEUnLFxyXG4gICAgJ0FueWRlciBUaHVuZGVyc3Rvcm0nOiAnM0UxQycsXHJcbiAgICAnQW55ZGVyIFdpbmRpbmcgQ3VycmVudCc6ICczRTFGJyxcclxuICAgIC8vIDNFMjAgaXMgYmVpbmcgaGl0IGJ5IHRoZSBncm93aW5nIG9yYnMsIG1heWJlP1xyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuQW1hdXJvdCxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnQW1hdXJvdCBCdXJuaW5nIFNreSc6ICczNTRBJyxcclxuICAgICdBbWF1cm90IFdoYWNrJzogJzM1M0MnLFxyXG4gICAgJ0FtYXVyb3QgQWV0aGVyc3Bpa2UnOiAnMzUzQicsXHJcbiAgICAnQW1hdXJvdCBWZW5lbW91cyBCcmVhdGgnOiAnM0NDRScsXHJcbiAgICAnQW1hdXJvdCBDb3NtaWMgU2hyYXBuZWwnOiAnNEQyNicsXHJcbiAgICAnQW1hdXJvdCBFYXJ0aHF1YWtlJzogJzNDQ0QnLFxyXG4gICAgJ0FtYXVyb3QgTWV0ZW9yIFJhaW4nOiAnM0NDNicsXHJcbiAgICAnQW1hdXJvdCBGaW5hbCBTa3knOiAnM0NDQicsXHJcbiAgICAnQW1hdXJvdCBNYWxldm9sZW5jZSc6ICczNTQxJyxcclxuICAgICdBbWF1cm90IFR1cm5hYm91dCc6ICczNTQyJyxcclxuICAgICdBbWF1cm90IFNpY2tseSBJbmZlcm5vJzogJzNERTMnLFxyXG4gICAgJ0FtYXVyb3QgRGlzcXVpZXRpbmcgR2xlYW0nOiAnMzU0NicsXHJcbiAgICAnQW1hdXJvdCBCbGFjayBEZWF0aCc6ICczNTQzJyxcclxuICAgICdBbWF1cm90IEZvcmNlIG9mIExvYXRoaW5nJzogJzM1NDQnLFxyXG4gICAgJ0FtYXVyb3QgRGFtbmluZyBSYXkgMSc6ICczRTAwJyxcclxuICAgICdBbWF1cm90IERhbW5pbmcgUmF5IDInOiAnM0UwMScsXHJcbiAgICAnQW1hdXJvdCBEZWFkbHkgVGVudGFjbGVzJzogJzM1NDcnLFxyXG4gICAgJ0FtYXVyb3QgTWlzZm9ydHVuZSc6ICczQ0UyJyxcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdBbWF1cm90IEFwb2thbHlwc2lzJzogJzNDRDcnLFxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuQW5hbW5lc2lzQW55ZGVyLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdBbmFtbmVzaXMgVHJlbmNoIFBodWFibyBTcGluZSBMYXNoJzogJzREMUEnLCAvLyBmcm9udGFsIGNvbmFsXHJcbiAgICAnQW5hbW5lc2lzIFRyZW5jaCBBbmVtb25lIEZhbGxpbmcgUm9jayc6ICc0RTM3JywgLy8gZ3JvdW5kIGNpcmNsZSBhb2UgZnJvbSBUcmVuY2ggQW5lbW9uZSBzaG93aW5nIHVwXHJcbiAgICAnQW5hbW5lc2lzIFRyZW5jaCBEYWdvbml0ZSBTZXdlciBXYXRlcic6ICc0RDFDJywgLy8gZnJvbnRhbCBjb25hbCBmcm9tIFRyZW5jaCBBbmVtb25lICg/ISlcclxuICAgICdBbmFtbmVzaXMgVHJlbmNoIFlvdnJhIFJvY2sgSGFyZCc6ICc0RDIxJywgLy8gdGFyZ2V0ZWQgY2lyY2xlIGFvZVxyXG4gICAgJ0FuYW1uZXNpcyBUcmVuY2ggWW92cmEgVG9ycmVudGlhbCBUb3JtZW50JzogJzREMjEnLCAvLyBmcm9udGFsIGNvbmFsXHJcbiAgICAnQW5hbW5lc2lzIFVua25vd24gTHVtaW5vdXMgUmF5JzogJzRFMjcnLCAvLyBVbmtub3duIGxpbmUgYW9lXHJcbiAgICAnQW5hbW5lc2lzIFVua25vd24gU2luc3RlciBCdWJibGUgRXhwbG9zaW9uJzogJzRCNkUnLCAvLyBVbmtub3duIGV4cGxvc2lvbnMgZHVyaW5nIFNjcnV0aW55XHJcbiAgICAnQW5hbW5lc2lzIFVua25vd24gUmVmbGVjdGlvbic6ICc0QjZGJywgLy8gVW5rbm93biBjb25hbCBhdHRhY2sgZHVyaW5nIFNjcnV0aW55XHJcbiAgICAnQW5hbW5lc2lzIFVua25vd24gQ2xlYXJvdXQgMSc6ICc0Qjc0JywgLy8gVW5rbm93biBmcm9udGFsIGNvbmVcclxuICAgICdBbmFtbmVzaXMgVW5rbm93biBDbGVhcm91dCAyJzogJzRCNkInLCAvLyBVbmtub3duIGZyb250YWwgY29uZVxyXG4gICAgJ0FuYW1uZXNpcyBVbmtub3duIFNldGJhY2sgMSc6ICc0Qjc1JywgLy8gVW5rbm93biByZWFyIGNvbmVcclxuICAgICdBbmFtbmVzaXMgVW5rbm93biBTZXRiYWNrIDInOiAnNUI2QycsIC8vIFVua25vd24gcmVhciBjb25lXHJcbiAgICAnQW5hbW5lc2lzIEFueWRlciBDbGlvbmlkIEFjcmlkIFN0cmVhbSc6ICc0RDI0JywgLy8gdGFyZ2V0ZWQgY2lyY2xlIGFvZVxyXG4gICAgJ0FuYW1uZXNpcyBBbnlkZXIgRGl2aW5lciBEcmVhZHN0b3JtJzogJzREMjgnLCAvLyBncm91bmQgY2lyY2xlIGFvZVxyXG4gICAgJ0FuYW1uZXNpcyBLeWtsb3BzIDIwMDAtTWluYSBTd2luZyc6ICc0QjU1JywgLy8gS3lrbG9wcyBnZXQgb3V0IG1lY2hhbmljXHJcbiAgICAnQW5hbW5lc2lzIEt5a2xvcHMgVGVycmlibGUgSGFtbWVyJzogJzRCNUQnLCAvLyBLeWtsb3BzIEhhbW1lci9CbGFkZSBhbHRlcm5hdGluZyBzcXVhcmVzXHJcbiAgICAnQW5hbW5lc2lzIEt5a2xvcHMgVGVycmlibGUgQmxhZGUnOiAnNEI1RScsIC8vIEt5a2xvcHMgSGFtbWVyL0JsYWRlIGFsdGVybmF0aW5nIHNxdWFyZXNcclxuICAgICdBbmFtbmVzaXMgS3lrbG9wcyBSYWdpbmcgR2xvd2VyJzogJzRCNTYnLCAvLyBLeWtsb3BzIGxpbmUgYW9lXHJcbiAgICAnQW5hbW5lc2lzIEt5a2xvcHMgRXllIE9mIFRoZSBDeWNsb25lJzogJzRCNTcnLCAvLyBLeWtsb3BzIGRvbnV0XHJcbiAgICAnQW5hbW5lc2lzIEFueWRlciBIYXJwb29uZXIgSHlkcm9iYWxsJzogJzREMjYnLCAvLyBmcm9udGFsIGNvbmFsXHJcbiAgICAnQW5hbW5lc2lzIFJ1a3NocyBTd2lmdCBTaGlmdCc6ICc0QjgzJywgLy8gUnVrc2hzIERlZW0gdGVsZXBvcnQgTi9TXHJcbiAgICAnQW5hbW5lc2lzIFJ1a3NocyBEZXB0aCBHcmlwIFdhdmVicmVha2VyJzogJzMzRDQnLCAvLyBSdWtzaHMgRGVlbSBoYW5kIGF0dGFja3NcclxuICAgICdBbmFtbmVzaXMgUnVrc2hzIFJpc2luZyBUaWRlJzogJzRCOEInLCAvLyBSdWtzaHMgRGVlbSBjcm9zcyBhb2VcclxuICAgICdBbmFtbmVzaXMgUnVrc2hzIENvbW1hbmQgQ3VycmVudCc6ICc0QjgyJywgLy8gUnVrc2hzIERlZW0gcHJvdGVhbi1pc2ggZ3JvdW5kIGFvZXNcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0FuYW1uZXNpcyBUcmVuY2ggWHpvbWl0IE1hbnRsZSBEcmlsbCc6ICc0RDE5JywgLy8gY2hhcmdlIGF0dGFja1xyXG4gICAgJ0FuYW1uZXNpcyBJbyBPdXNpYSBCYXJyZWxpbmcgU21hc2gnOiAnNEUyNCcsIC8vIGNoYXJnZSBhdHRhY2tcclxuICAgICdBbmFtbmVzaXMgS3lrbG9wcyBXYW5kZXJlclxcJ3MgUHlyZSc6ICc0QjVGJywgLy8gS3lrbG9wcyBzcHJlYWQgYXR0YWNrXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gVE9ETzogTWlzc2luZyBHcm93aW5nIHRldGhlcnMgb24gYm9zcyAyLlxyXG4vLyAoTWF5YmUgZ2F0aGVyIHBhcnR5IG1lbWJlciBuYW1lcyBvbiB0aGUgcHJldmlvdXMgVElJSUlNQkVFRUVFRVIgY2FzdCBmb3IgY29tcGFyaXNvbj8pXHJcbi8vIFRPRE86IEZhaWxpbmcgdG8gaW50ZXJydXB0IERvaG5mYXVzdCBGdWF0aCBvbiBXYXRlcmluZyBXaGVlbCBjYXN0cz9cclxuLy8gKDE1Oi4uLi4uLi4uOkRvaG5mYXN0IEZ1YXRoOjNEQUE6V2F0ZXJpbmcgV2hlZWw6Li4uLi4uLi46KFxceXtOYW1lfSk6KVxyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkRvaG5NaGVnLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdEb2huIE1oZWcgR2V5c2VyJzogJzIyNjAnLCAvLyBXYXRlciBlcnVwdGlvbnMsIGJvc3MgMVxyXG4gICAgJ0RvaG4gTWhlZyBIeWRyb2ZhbGwnOiAnMjJCRCcsIC8vIEdyb3VuZCBBb0UgbWFya2VyLCBib3NzIDFcclxuICAgICdEb2huIE1oZWcgTGF1Z2hpbmcgTGVhcCc6ICcyMjk0JywgLy8gR3JvdW5kIEFvRSBtYXJrZXIsIGJvc3MgMVxyXG4gICAgJ0RvaG4gTWhlZyBTd2luZ2UnOiAnMjJDQScsIC8vIEZyb250YWwgY29uZSwgYm9zcyAyXHJcbiAgICAnRG9obiBNaGVnIENhbm9weSc6ICczREIwJywgLy8gRnJvbnRhbCBjb25lLCBEb2huZmF1c3QgUm93YW5zIHRocm91Z2hvdXQgaW5zdGFuY2VcclxuICAgICdEb2huIE1oZWcgUGluZWNvbmUgQm9tYic6ICczREIxJywgLy8gQ2lyY3VsYXIgZ3JvdW5kIEFvRSBtYXJrZXIsIERvaG5mYXVzdCBSb3dhbnMgdGhyb3VnaG91dCBpbnN0YW5jZVxyXG4gICAgJ0RvaG4gTWhlZyBCaWxlIEJvbWJhcmRtZW50JzogJzM0RUUnLCAvLyBHcm91bmQgQW9FIG1hcmtlciwgYm9zcyAzXHJcbiAgICAnRG9obiBNaGVnIENvcnJvc2l2ZSBCaWxlJzogJzM0RUMnLCAvLyBGcm9udGFsIGNvbmUsIGJvc3MgM1xyXG4gICAgJ0RvaG4gTWhlZyBGbGFpbGluZyBUZW50YWNsZXMnOiAnMzY4MScsXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ0RvaG4gTWhlZyBJbXAgQ2hvaXInLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnNDZFJyB9KSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmVmZmVjdCB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdEb2huIE1oZWcgVG9hZCBDaG9pcicsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICcxQjcnIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuZWZmZWN0IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0RvaG4gTWhlZyBGb29sXFwncyBUdW1ibGUnLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnMTgzJyB9KSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmVmZmVjdCB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBUT0RPOiBCZXJzZXJrZXIgMm5kLzNyZCB3aWxkIGFuZ3Vpc2ggc2hvdWxkIGJlIHNoYXJlZCB3aXRoIGp1c3QgYSByb2NrXHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlSGVyb2VzR2F1bnRsZXQsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1RIRyBCbGFkZVxcJ3MgQmVuaXNvbic6ICc1MjI4JywgLy8gcGxkIGNvbmFsXHJcbiAgICAnVEhHIEFic29sdXRlIEhvbHknOiAnNTI0QicsIC8vIHdobSB2ZXJ5IGxhcmdlIGFvZVxyXG4gICAgJ1RIRyBIaXNzYXRzdTogR29rYSc6ICc1MjNEJywgLy8gc2FtIGxpbmUgYW9lXHJcbiAgICAnVEhHIFdob2xlIFNlbGYnOiAnNTIyRCcsIC8vIG1uayB3aWRlIGxpbmUgYW9lXHJcbiAgICAnVEhHIFJhbmRncml0aCc6ICc1MjMyJywgLy8gZHJnIHZlcnkgYmlnIGxpbmUgYW9lXHJcbiAgICAnVEhHIFZhY3V1bSBCbGFkZSAxJzogJzUwNjEnLCAvLyBTcGVjdHJhbCBUaGllZiBjaXJjdWxhciBncm91bmQgYW9lIGZyb20gbWFya2VyXHJcbiAgICAnVEhHIFZhY3V1bSBCbGFkZSAyJzogJzUwNjInLCAvLyBTcGVjdHJhbCBUaGllZiBjaXJjdWxhciBncm91bmQgYW9lIGZyb20gbWFya2VyXHJcbiAgICAnVEhHIENvd2FyZFxcJ3MgQ3VubmluZyc6ICc0RkQ3JywgLy8gU3BlY3RyYWwgVGhpZWYgQ2hpY2tlbiBLbmlmZSBsYXNlclxyXG4gICAgJ1RIRyBQYXBlcmN1dHRlciAxJzogJzRGRDEnLCAvLyBTcGVjdHJhbCBUaGllZiBsaW5lIGFvZSBmcm9tIG1hcmtlclxyXG4gICAgJ1RIRyBQYXBlcmN1dHRlciAyJzogJzRGRDInLCAvLyBTcGVjdHJhbCBUaGllZiBsaW5lIGFvZSBmcm9tIG1hcmtlclxyXG4gICAgJ1RIRyBSaW5nIG9mIERlYXRoJzogJzUyMzYnLCAvLyBkcmcgY2lyY3VsYXIgYW9lXHJcbiAgICAnVEhHIEx1bmFyIEVjbGlwc2UnOiAnNTIyNycsIC8vIHBsZCBjaXJjdWxhciBhb2VcclxuICAgICdUSEcgQWJzb2x1dGUgR3Jhdml0eSc6ICc1MjQ4JywgLy8gaW5rIG1hZ2UgY2lyY3VsYXJcclxuICAgICdUSEcgUmFpbiBvZiBMaWdodCc6ICc1MjQyJywgLy8gYmFyZCBsYXJnZSBjaXJjdWxlIGFvZVxyXG4gICAgJ1RIRyBEb29taW5nIEZvcmNlJzogJzUyMzknLCAvLyBkcmcgbGluZSBhb2VcclxuICAgICdUSEcgQWJzb2x1dGUgRGFyayBJSSc6ICc0RjYxJywgLy8gTmVjcm9tYW5jZXIgMTIwIGRlZ3JlZSBjb25hbFxyXG4gICAgJ1RIRyBCdXJzdCc6ICc1M0I3JywgLy8gTmVjcm9tYW5jZXIgbmVjcm9idXJzdCBzbWFsbCB6b21iaWUgZXhwbG9zaW9uXHJcbiAgICAnVEhHIFBhaW4gTWlyZSc6ICc0RkE0JywgLy8gTmVjcm9tYW5jZXIgdmVyeSBsYXJnZSBncmVlbiBibGVlZCBwdWRkbGVcclxuICAgICdUSEcgRGFyayBEZWx1Z2UnOiAnNEY1RCcsIC8vIE5lY3JvbWFuY2VyIGdyb3VuZCBhb2VcclxuICAgICdUSEcgVGVra2EgR29qaW4nOiAnNTIzRScsIC8vIHNhbSA5MCBkZWdyZWUgY29uYWxcclxuICAgICdUSEcgUmFnaW5nIFNsaWNlIDEnOiAnNTIwQScsIC8vIEJlcnNlcmtlciBsaW5lIGNsZWF2ZVxyXG4gICAgJ1RIRyBSYWdpbmcgU2xpY2UgMic6ICc1MjBCJywgLy8gQmVyc2Vya2VyIGxpbmUgY2xlYXZlXHJcbiAgICAnVEhHIFdpbGQgUmFnZSc6ICc1MjAzJywgLy8gQmVyc2Vya2VyIGJsdWUga25vY2tiYWNrIHB1Y2tcclxuICB9LFxyXG4gIGdhaW5zRWZmZWN0V2Fybjoge1xyXG4gICAgJ1RIRyBCbGVlZGluZyc6ICc4MjgnLCAvLyBTdGFuZGluZyBpbiB0aGUgTmVjcm9tYW5jZXIgcHVkZGxlIG9yIG91dHNpZGUgdGhlIEJlcnNlcmtlciBhcmVuYVxyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RGYWlsOiB7XHJcbiAgICAnVEhHIFRydWx5IEJlcnNlcmsnOiAnOTA2JywgLy8gU3RhbmRpbmcgaW4gdGhlIGNyYXRlciB0b28gbG9uZ1xyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnVEhHIEFic29sdXRlIFRodW5kZXIgSVYnOiAnNTI0NScsIC8vIGhlYWRtYXJrZXIgYW9lIGZyb20gYmxtXHJcbiAgICAnVEhHIE1vb25kaXZlcic6ICc1MjMzJywgLy8gaGVhZG1hcmtlciBhb2UgZnJvbSBkcmdcclxuICAgICdUSEcgU3BlY3RyYWwgR3VzdCc6ICc1M0NGJywgLy8gU3BlY3RyYWwgVGhpZWYgaGVhZG1hcmtlciBhb2VcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ1RIRyBGYWxsaW5nIFJvY2snOiAnNTIwNScsIC8vIEJlcnNlcmtlciBoZWFkbWFya2VyIGFvZSB0aGF0IGNyZWF0ZXMgcnViYmxlXHJcbiAgfSxcclxuICBzb2xvV2Fybjoge1xyXG4gICAgLy8gVGhpcyBzaG91bGQgYWx3YXlzIGJlIHNoYXJlZC4gIE9uIGFsbCB0aW1lcyBidXQgdGhlIDJuZCBhbmQgM3JkLCBpdCdzIGEgcGFydHkgc2hhcmUuXHJcbiAgICAvLyBUT0RPOiBvbiB0aGUgMm5kIGFuZCAzcmQgdGltZSB0aGlzIHNob3VsZCBvbmx5IGJlIHNoYXJlZCB3aXRoIGEgcm9jay5cclxuICAgIC8vIFRPRE86IGFsdGVybmF0aXZlbHkgd2FybiBvbiB0YWtpbmcgb25lIG9mIHRoZXNlIHdpdGggYSA0NzIgTWFnaWMgVnVsbmVyYWJpbGl0eSBVcCBlZmZlY3RcclxuICAgICdUSEcgV2lsZCBBbmd1aXNoJzogJzUyMDknLFxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6ICdUSEcgV2lsZCBSYW1wYWdlJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnNTIwNycsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgLy8gVGhpcyBpcyB6ZXJvIGRhbWFnZSBpZiB5b3UgYXJlIGluIHRoZSBjcmF0ZXIuXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEuRGFtYWdlRnJvbU1hdGNoZXMobWF0Y2hlcykgPiAwLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkhvbG1pbnN0ZXJTd2l0Y2gsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0hvbG1pbnN0ZXIgVGh1bWJzY3Jldyc6ICczREM2JyxcclxuICAgICdIb2xtaW5zdGVyIFdvb2RlbiBob3JzZSc6ICczREM3JyxcclxuICAgICdIb2xtaW5zdGVyIExpZ2h0IFNob3QnOiAnM0RDOCcsXHJcbiAgICAnSG9sbWluc3RlciBIZXJldGljXFwncyBGb3JrJzogJzNEQ0UnLFxyXG4gICAgJ0hvbG1pbnN0ZXIgSG9seSBXYXRlcic6ICczREQ0JyxcclxuICAgICdIb2xtaW5zdGVyIEZpZXJjZSBCZWF0aW5nIDEnOiAnM0RERCcsXHJcbiAgICAnSG9sbWluc3RlciBGaWVyY2UgQmVhdGluZyAyJzogJzNEREUnLFxyXG4gICAgJ0hvbG1pbnN0ZXIgRmllcmNlIEJlYXRpbmcgMyc6ICczRERGJyxcclxuICAgICdIb2xtaW5zdGVyIENhdCBPXFwnIE5pbmUgVGFpbHMnOiAnM0RFMScsXHJcbiAgICAnSG9sbWluc3RlciBSaWdodCBLbm91dCc6ICczREU2JyxcclxuICAgICdIb2xtaW5zdGVyIExlZnQgS25vdXQnOiAnM0RFNycsXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnSG9sbWluc3RlciBBZXRoZXJzdXAnOiAnM0RFOScsXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdIb2xtaW5zdGVyIEZsYWdlbGxhdGlvbic6ICczREQ2JyxcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ0hvbG1pbnN0ZXIgVGFwaGVwaG9iaWEnOiAnNDE4MScsXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5NYWxpa2Foc1dlbGwsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ01hbGlrYWggRmFsbGluZyBSb2NrJzogJzNDRUEnLFxyXG4gICAgJ01hbGlrYWggV2VsbGJvcmUnOiAnM0NFRCcsXHJcbiAgICAnTWFsaWthaCBHZXlzZXIgRXJ1cHRpb24nOiAnM0NFRScsXHJcbiAgICAnTWFsaWthaCBTd2lmdCBTcGlsbCc6ICczQ0YwJyxcclxuICAgICdNYWxpa2FoIEJyZWFraW5nIFdoZWVsIDEnOiAnM0NGNScsXHJcbiAgICAnTWFsaWthaCBDcnlzdGFsIE5haWwnOiAnM0NGNycsXHJcbiAgICAnTWFsaWthaCBIZXJldGljXFwncyBGb3JrIDEnOiAnM0NGOScsXHJcbiAgICAnTWFsaWthaCBCcmVha2luZyBXaGVlbCAyJzogJzNDRkEnLFxyXG4gICAgJ01hbGlrYWggSGVyZXRpY1xcJ3MgRm9yayAyJzogJzNFMEUnLFxyXG4gICAgJ01hbGlrYWggRWFydGhzaGFrZSc6ICczRTM5JyxcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gVE9ETzogY291bGQgaW5jbHVkZSA1NDg0IE11ZG1hbiBSb2NreSBSb2xsIGFzIGEgc2hhcmVXYXJuLCBidXQgaXQncyBsb3cgZGFtYWdlIGFuZCBjb21tb24uXHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuTWF0b3lhc1JlbGljdCxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnTWF0b3lhIFJlbGljdCBXZXJld29vZCBPdmF0aW9uJzogJzU1MTgnLCAvLyBsaW5lIGFvZVxyXG4gICAgJ01hdG95YSBDYXZlIFRhcmFudHVsYSBIYXdrIEFwaXRveGluJzogJzU1MTknLCAvLyBiaWcgY2lyY2xlIGFvZVxyXG4gICAgJ01hdG95YSBTcHJpZ2dhbiBTdG9uZWJlYXJlciBSb21wJzogJzU1MUEnLCAvLyBjb25hbCBhb2VcclxuICAgICdNYXRveWEgU29ubnkgT2YgWmlnZ3kgSml0dGVyaW5nIEdsYXJlJzogJzU1MUMnLCAvLyBsb25nIG5hcnJvdyBjb25hbCBhb2VcclxuICAgICdNYXRveWEgTXVkbWFuIFF1YWdtaXJlJzogJzU0ODEnLCAvLyBNdWRtYW4gYW9lIHB1ZGRsZXNcclxuICAgICdNYXRveWEgTXVkbWFuIEJyaXR0bGUgQnJlY2NpYSAxJzogJzU0OEUnLCAvLyBleHBhbmRpbmcgY2lyY2xlIGFvZVxyXG4gICAgJ01hdG95YSBNdWRtYW4gQnJpdHRsZSBCcmVjY2lhIDInOiAnNTQ4RicsIC8vIGV4cGFuZGluZyBjaXJjbGUgYW9lXHJcbiAgICAnTWF0b3lhIE11ZG1hbiBCcml0dGxlIEJyZWNjaWEgMyc6ICc1NDkwJywgLy8gZXhwYW5kaW5nIGNpcmNsZSBhb2VcclxuICAgICdNYXRveWEgTXVkbWFuIE11ZCBCdWJibGUnOiAnNTQ4NycsIC8vIHN0YW5kaW5nIGluIG11ZCBwdWRkbGU/XHJcbiAgICAnTWF0b3lhIENhdmUgUHVnaWwgU2NyZXdkcml2ZXInOiAnNTUxRScsIC8vIGNvbmFsIGFvZVxyXG4gICAgJ01hdG95YSBOaXhpZSBHdXJnbGUnOiAnNTk5MicsIC8vIE5peGllIHdhbGwgZmx1c2hcclxuICAgICdNYXRveWEgUmVsaWN0IE1vbHRlbiBQaG9lYmFkIFB5cm9jbGFzdGljIFNob3QnOiAnNTdFQicsIC8vIHRoZSBsaW5lIGFvZXMgYXMgeW91IHJ1biB0byB0cmFzaFxyXG4gICAgJ01hdG95YSBSZWxpY3QgRmxhbiBGbG9vZCc6ICc1NTIzJywgLy8gYmlnIGNpcmNsZSBhb2VcclxuICAgICdNYXRveWEgUHlyb2R1Y3QgRWxkdGh1cnMgTWFzaCc6ICc1NTI3JywgLy8gbGluZSBhb2VcclxuICAgICdNYXR5b2EgUHlyb2R1Y3QgRWxkdGh1cnMgU3Bpbic6ICc1NTI4JywgLy8gdmVyeSBsYXJnZSBjaXJjbGUgYW9lXHJcbiAgICAnTWF0b3lhIFJlbGljdCBCYXZhcm9pcyBUaHVuZGVyIElJSSc6ICc1NTI1JywgLy8gY2lyY2xlIGFvZVxyXG4gICAgJ01hdG95YSBSZWxpY3QgTWFyc2htYWxsb3cgQW5jaWVudCBBZXJvJzogJzU1MjQnLCAvLyB2ZXJ5IGxhcmdlIGxpbmUgZ3JvYW9lXHJcbiAgICAnTWF0b3lhIFJlbGljdCBQdWRkaW5nIEZpcmUgSUknOiAnNTUyMicsIC8vIGNpcmNsZSBhb2VcclxuICAgICdNYXRveWEgUmVsaWN0IE1vbHRlbiBQaG9lYmFkIEhvdCBMYXZhJzogJzU3RTknLCAvLyBjb25hbCBhb2VcclxuICAgICdNYXRveWEgUmVsaWN0IE1vbHRlbiBQaG9lYmFkIFZvbGNhbmljIERyb3AnOiAnNTdFOCcsIC8vIGNpcmNsZSBhb2VcclxuICAgICdNYXRveWEgTW90aGVyIFBvcnhpZSBNZWRpdW0gUmVhcic6ICc1OTFEJywgLy8ga25vY2tiYWNrIGludG8gc2FmZSBjaXJjbGUgYW9lXHJcbiAgICAnTWF0b3lhIE1vdGhlciBQb3J4aWUgQmFyYmVxdWUgTGluZSc6ICc1OTE3JywgLy8gbGluZSBhb2UgZHVyaW5nIGJicVxyXG4gICAgJ01hdG95YSBNb3RoZXIgUG9yeGllIEJhcmJlcXVlIENpcmNsZSc6ICc1OTE4JywgLy8gY2lyY2xlIGFvZSBkdXJpbmcgYmJxXHJcbiAgICAnTWF0b3lhIE1vdGhlciBQb3J4aWUgVG8gQSBDcmlzcCc6ICc1OTI1JywgLy8gZ2V0dGluZyB0byBjbG9zZSB0byBib3NzIGR1cmluZyBiYnFcclxuICAgICdNYXRveWEgTW90aGVyIFByb3hpZSBCdWZmZXQnOiAnNTkyNicsIC8vIEFlb2xpYW4gQ2F2ZSBTcHJpdGUgbGluZSBhb2UgKGlzIHRoaXMgYSBwdW4/KVxyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ01hdG95YSBOaXhpZSBTZWEgU2hhbnR5JzogJzU5OEMnLCAvLyBOb3QgdGFraW5nIHRoZSBwdWRkbGUgdXAgdG8gdGhlIHRvcD8gRmFpbGluZyBhZGQgZW5yYWdlP1xyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnTWF0b3lhIE5peGllIENyYWNrJzogJzU5OTAnLCAvLyBOaXhpZSBDcmFzaC1TbWFzaCB0YW5rIHRldGhlcnNcclxuICAgICdNYXRveWEgTml4aWUgU3B1dHRlcic6ICc1OTkzJywgLy8gTml4aWUgc3ByZWFkIG1hcmtlclxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuTXRHdWxnLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdHdWxnIEltbW9sYXRpb24nOiAnNDFBQScsXHJcbiAgICAnR3VsZyBUYWlsIFNtYXNoJzogJzQxQUInLFxyXG4gICAgJ0d1bGcgSGVhdmVuc2xhc2gnOiAnNDFBOScsXHJcbiAgICAnR3VsZyBUeXBob29uIFdpbmcgMSc6ICczRDAwJyxcclxuICAgICdHdWxnIFR5cGhvb24gV2luZyAyJzogJzNEMDEnLFxyXG4gICAgJ0d1bGcgSHVycmljYW5lIFdpbmcnOiAnM0QwMycsXHJcbiAgICAnR3VsZyBFYXJ0aCBTaGFrZXInOiAnMzdGNScsXHJcbiAgICAnR3VsZyBTYW5jdGlmaWNhdGlvbic6ICc0MUFFJyxcclxuICAgICdHdWxnIEV4ZWdlc2lzJzogJzNEMDcnLFxyXG4gICAgJ0d1bGcgUGVyZmVjdCBDb250cml0aW9uJzogJzNEMEUnLFxyXG4gICAgJ0d1bGcgU2FuY3RpZmllZCBBZXJvJzogJzQxQUQnLFxyXG4gICAgJ0d1bGcgRGl2aW5lIERpbWludWVuZG8gMSc6ICczRDE2JyxcclxuICAgICdHdWxnIERpdmluZSBEaW1pbnVlbmRvIDInOiAnM0QxOCcsXHJcbiAgICAnR3VsZyBEaXZpbmUgRGltaW51ZW5kbyAzJzogJzQ2NjknLFxyXG4gICAgJ0d1bGcgRGl2aW5lIERpbWludWVuZG8gNCc6ICczRDE5JyxcclxuICAgICdHdWxnIERpdmluZSBEaW1pbnVlbmRvIDUnOiAnM0QyMScsXHJcbiAgICAnR3VsZyBDb252aWN0aW9uIE1hcmNhdG8gMSc6ICczRDFBJyxcclxuICAgICdHdWxnIENvbnZpY3Rpb24gTWFyY2F0byAyJzogJzNEMUInLFxyXG4gICAgJ0d1bGcgQ29udmljdGlvbiBNYXJjYXRvIDMnOiAnM0QyMCcsXHJcbiAgICAnR3VsZyBWZW5hIEFtb3Jpcyc6ICczRDI3JyxcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdHdWxnIEx1bWVuIEluZmluaXR1bSc6ICc0MUIyJyxcclxuICAgICdHdWxnIFJpZ2h0IFBhbG0nOiAnMzdGOCcsXHJcbiAgICAnR3VsZyBMZWZ0IFBhbG0nOiAnMzdGQScsXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFRPRE86IFdoYXQgdG8gZG8gYWJvdXQgS2FobiBSYWkgNUI1MD9cclxuLy8gSXQgc2VlbXMgaW1wb3NzaWJsZSBmb3IgdGhlIG1hcmtlZCBwZXJzb24gdG8gYXZvaWQgZW50aXJlbHkuXHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuUGFnbHRoYW4sXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1BhZ2x0aGFuIFRlbG92b3VpdnJlIFBsYWd1ZSBTd2lwZSc6ICc2MEZDJywgLy8gZnJvbnRhbCBjb25hbCBjbGVhdmVcclxuICAgICdQYWdsdGhhbiBMZXNzZXIgVGVsb2RyYWdvbiBFbmd1bGZpbmcgRmxhbWVzJzogJzYwRjUnLCAvLyBmcm9udGFsIGNvbmFsIGNsZWF2ZVxyXG4gICAgJ1BhZ2x0aGFuIEFtaHVsdWsgTGlnaHRuaW5nIEJvbHQnOiAnNUM0QycsIC8vIGNpcmN1bGFyIGxpZ2h0bmluZyBhb2UgKG9uIHNlbGYgb3IgcG9zdClcclxuICAgICdQYWdsdGhhbiBBbWh1bHVrIEJhbGwgT2YgTGV2aW4gU2hvY2snOiAnNUM1MicsIC8vIHB1bHNpbmcgc21hbGwgY2lyY3VsYXIgYW9lc1xyXG4gICAgJ1BhZ2x0aGFuIEFtaHVsdWsgU3VwZXJjaGFyZ2VkIEJhbGwgT2YgTGV2aW4gU2hvY2snOiAnNUM1MycsIC8vIHB1bHNpbmcgbGFyZ2UgY2lyY3VsYXIgYW9lXHJcbiAgICAnUGFnbHRoYW4gQW1odWx1ayBXaWRlIEJsYXN0ZXInOiAnNjBDNScsIC8vIHJlYXIgY29uYWwgY2xlYXZlXHJcbiAgICAnUGFnbHRoYW4gVGVsb2Jyb2JpbnlhayBGYWxsIE9mIE1hbic6ICc2MTQ4JywgLy8gY2lyY3VsYXIgYW9lXHJcbiAgICAnUGFnbHRoYW4gVGVsb3RlayBSZWFwZXIgTWFnaXRlayBDYW5ub24nOiAnNjEyMScsIC8vIGNpcmN1bGFyIGFvZVxyXG4gICAgJ1BhZ2x0aGFuIFRlbG9kcmFnb24gU2hlZXQgb2YgSWNlJzogJzYwRjgnLCAvLyBjaXJjdWxhciBhb2VcclxuICAgICdQYWdsdGhhbiBUZWxvZHJhZ29uIEZyb3N0IEJyZWF0aCc6ICc2MEY3JywgLy8gdmVyeSBsYXJnZSBjb25hbCBjbGVhdmVcclxuICAgICdQYWdsdGhhbiBNYWdpdGVrIENvcmUgU3RhYmxlIENhbm5vbic6ICc1Qzk0JywgLy8gbGFyZ2UgbGluZSBhb2VzXHJcbiAgICAnUGFnbHRoYW4gTWFnaXRlayBDb3JlIDItVG9uemUgTWFnaXRlayBNaXNzaWxlJzogJzVDOTUnLCAvLyBsYXJnZSBjaXJjdWxhciBhb2VcclxuICAgICdQYWdsdGhhbiBUZWxvdGVrIFNreSBBcm1vciBBZXRoZXJzaG90JzogJzVDOUMnLCAvLyBjaXJjdWxhciBhb2VcclxuICAgICdQYWdsdGhhbiBNYXJrIElJIFRlbG90ZWsgQ29sb3NzdXMgRXhoYXVzdCc6ICc1Qzk5JywgLy8gbGFyZ2UgbGluZSBhb2VcclxuICAgICdQYWdsdGhhbiBNYWdpdGVrIE1pc3NpbGUgRXhwbG9zaXZlIEZvcmNlJzogJzVDOTgnLCAvLyBzbG93IG1vdmluZyBob3Jpem9udGFsIG1pc3NpbGVzXHJcbiAgICAnUGFnbHRoYW4gVGlhbWF0IEZsYW1pc3BoZXJlJzogJzYxMEYnLCAvLyB2ZXJ5IGxvbmcgbGluZSBhb2VcclxuICAgICdQYWdsdGhhbiBBcm1vcmVkIFRlbG9kcmFnb24gVG9ydG9pc2UgU3RvbXAnOiAnNjE0QicsIC8vIGxhcmdlIGNpcmN1bGFyIGFvZSBmcm9tIHR1cnRsZVxyXG4gICAgJ1BhZ2x0aGFuIFRlbG9kcmFnb24gVGh1bmRlcm91cyBCcmVhdGgnOiAnNjE0OScsIC8vIGxhcmdlIGNvbmFsIGNsZWF2ZVxyXG4gICAgJ1BhZ2x0aGFuIEx1bmFyIEJhaGFtdXQgTHVuYXIgTmFpbCBVcGJ1cnN0JzogJzYwNUInLCAvLyBzbWFsbCBhb2VzIGJlZm9yZSBCaWcgQnVyc3RcclxuICAgICdQYWdsdGhhbiBMdW5hciBCYWhhbXV0IEx1bmFyIE5haWwgQmlnIEJ1cnN0JzogJzVCNDgnLCAvLyBsYXJnZSBjaXJjdWxhciBhb2VzIGZyb20gbmFpbHNcclxuICAgICdQYWdsdGhhbiBMdW5hciBCYWhhbXV0IFBlcmlnZWFuIEJyZWF0aCc6ICc1QjU5JywgLy8gbGFyZ2UgY29uYWwgY2xlYXZlXHJcbiAgICAnUGFnbHRoYW4gTHVuYXIgQmFoYW11dCBNZWdhZmxhcmUnOiAnNUI0RScsIC8vIG1lZ2FmbGFyZSBwZXBwZXJvbmlcclxuICAgICdQYWdsdGhhbiBMdW5hciBCYWhhbXV0IE1lZ2FmbGFyZSBEaXZlJzogJzVCNTInLCAvLyBtZWdhZmxhcmUgbGluZSBhb2UgYWNyb3NzIHRoZSBhcmVuYVxyXG4gICAgJ1BhZ2x0aGFuIEx1bmFyIEJhaGFtdXQgTHVuYXIgRmxhcmUnOiAnNUI0QScsIC8vIGxhcmdlIHB1cnBsZSBzaHJpbmtpbmcgY2lyY2xlc1xyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnUGFnbHRoYW4gTHVuYXIgQmFoYW11dCBNZWdhZmxhcmUnOiAnNUI0RCcsIC8vIG1lZ2FmbGFyZSBzcHJlYWQgbWFya2Vyc1xyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlUWl0YW5hUmF2ZWwsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1FpdGFuYSBTdW4gVG9zcyc6ICczQzhBJywgLy8gR3JvdW5kIEFvRSwgYm9zcyBvbmVcclxuICAgICdRaXRhbmEgUm9ua2FuIExpZ2h0IDEnOiAnM0M4QycsIC8vIFN0YXR1ZSBhdHRhY2ssIGJvc3Mgb25lXHJcbiAgICAnUWl0YW5hIExvemF0bFxcJ3MgRnVyeSAxJzogJzNDOEYnLCAvLyBTZW1pY2lyY2xlIGNsZWF2ZSwgYm9zcyBvbmVcclxuICAgICdRaXRhbmEgTG96YXRsXFwncyBGdXJ5IDInOiAnM0M5MCcsIC8vIFNlbWljaXJjbGUgY2xlYXZlLCBib3NzIG9uZVxyXG4gICAgJ1FpdGFuYSBGYWxsaW5nIFJvY2snOiAnM0M5NicsIC8vIFNtYWxsIGdyb3VuZCBBb0UsIGJvc3MgdHdvXHJcbiAgICAnUWl0YW5hIEZhbGxpbmcgQm91bGRlcic6ICczQzk3JywgLy8gTGFyZ2UgZ3JvdW5kIEFvRSwgYm9zcyB0d29cclxuICAgICdRaXRhbmEgVG93ZXJmYWxsJzogJzNDOTgnLCAvLyBQaWxsYXIgY29sbGFwc2UsIGJvc3MgdHdvXHJcbiAgICAnUWl0YW5hIFZpcGVyIFBvaXNvbiAyJzogJzNDOUUnLCAvLyBTdGF0aW9uYXJ5IHBvaXNvbiBwdWRkbGVzLCBib3NzIHRocmVlXHJcbiAgICAnUWl0YW5hIENvbmZlc3Npb24gb2YgRmFpdGggMSc6ICczQ0EyJywgLy8gRGFuZ2Vyb3VzIG1pZGRsZSBkdXJpbmcgc3ByZWFkIGNpcmNsZXMsIGJvc3MgdGhyZWVcclxuICAgICdRaXRhbmEgQ29uZmVzc2lvbiBvZiBGYWl0aCAzJzogJzNDQTYnLCAvLyBEYW5nZXJvdXMgc2lkZXMgZHVyaW5nIHN0YWNrIG1hcmtlciwgYm9zcyB0aHJlZVxyXG4gICAgJ1FpdGFuYSBDb25mZXNzaW9uIG9mIEZhaXRoIDQnOiAnM0NBNycsIC8vIERhbmdlcm91cyBzaWRlcyBkdXJpbmcgc3RhY2sgbWFya2VyLCBib3NzIHRocmVlXHJcbiAgICAnUWl0YW5hIFJvbmthbiBMaWdodCAyJzogJzNENkQnLCAvLyBTdGF0dWUgYXR0YWNrLCBib3NzIG9uZVxyXG4gICAgJ1FpdGFuYSBXcmF0aCBvZiB0aGUgUm9ua2EnOiAnM0UyQycsIC8vIFN0YXR1ZSBsaW5lIGF0dGFjayBmcm9tIG1pbmktYm9zc2VzIGJlZm9yZSBmaXJzdCBib3NzXHJcbiAgICAnUWl0YW5hIFNpbnNwaXR0ZXInOiAnM0UzNicsIC8vIEdvcmlsbGEgYm91bGRlciB0b3NzIEFvRSBiZWZvcmUgdGhpcmQgYm9zc1xyXG4gICAgJ1FpdGFuYSBIb3VuZCBvdXQgb2YgSGVhdmVuJzogJzQyQjgnLCAvLyBUZXRoZXIgZXh0ZW5zaW9uIGZhaWx1cmUsIGJvc3MgdGhyZWU7IDQyQjcgaXMgY29ycmVjdCBleGVjdXRpb25cclxuICAgICdRaXRhbmEgUm9ua2FuIEFieXNzJzogJzQzRUInLCAvLyBHcm91bmQgQW9FIGZyb20gbWluaS1ib3NzZXMgYmVmb3JlIGZpcnN0IGJvc3NcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1FpdGFuYSBWaXBlciBQb2lzb24gMSc6ICczQzlEJywgLy8gQW9FIGZyb20gdGhlIDAwQUIgcG9pc29uIGhlYWQgbWFya2VyLCBib3NzIHRocmVlXHJcbiAgICAnUWl0YW5hIENvbmZlc3Npb24gb2YgRmFpdGggMic6ICczQ0EzJywgLy8gT3ZlcmxhcHBlZCBjaXJjbGVzIGZhaWx1cmUgb24gdGhlIHNwcmVhZCBjaXJjbGVzIHZlcnNpb24gb2YgdGhlIG1lY2hhbmljXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFRoZSBHcmFuZCBDb3Ntb3NcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZUdyYW5kQ29zbW9zLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdDb3Ntb3MgSXJvbiBKdXN0aWNlJzogJzQ5MUYnLFxyXG4gICAgJ0Nvc21vcyBTbWl0ZSBPZiBSYWdlJzogJzQ5MjEnLFxyXG5cclxuICAgICdDb3Ntb3MgVHJpYnVsYXRpb24nOiAnNDlBNCcsXHJcbiAgICAnQ29zbW9zIERhcmsgU2hvY2snOiAnNDc2RicsXHJcbiAgICAnQ29zbW9zIFN3ZWVwJzogJzQ3NzAnLFxyXG4gICAgJ0Nvc21vcyBEZWVwIENsZWFuJzogJzQ3NzEnLFxyXG5cclxuICAgICdDb3Ntb3MgU2hhZG93IEJ1cnN0JzogJzQ5MjQnLFxyXG4gICAgJ0Nvc21vcyBCbG9vZHkgQ2FyZXNzJzogJzQ5MjcnLFxyXG4gICAgJ0Nvc21vcyBOZXBlbnRoaWMgUGx1bmdlJzogJzQ5MjgnLFxyXG4gICAgJ0Nvc21vcyBCcmV3aW5nIFN0b3JtJzogJzQ5MjknLFxyXG5cclxuICAgICdDb3Ntb3MgT2RlIFRvIEZhbGxlbiBQZXRhbHMnOiAnNDk1MCcsXHJcbiAgICAnQ29zbW9zIEZhciBXaW5kIEdyb3VuZCc6ICc0MjczJyxcclxuXHJcbiAgICAnQ29zbW9zIEZpcmUgQnJlYXRoJzogJzQ5MkInLFxyXG4gICAgJ0Nvc21vcyBSb25rYW4gRnJlZXplJzogJzQ5MkUnLFxyXG4gICAgJ0Nvc21vcyBPdmVycG93ZXInOiAnNDkyRCcsXHJcblxyXG4gICAgJ0Nvc21vcyBTY29yY2hpbmcgTGVmdCc6ICc0NzYzJyxcclxuICAgICdDb3Ntb3MgU2NvcmNoaW5nIFJpZ2h0JzogJzQ3NjInLFxyXG4gICAgJ0Nvc21vcyBPdGhlcndvcmRseSBIZWF0JzogJzQ3NUMnLFxyXG4gICAgJ0Nvc21vcyBGaXJlXFwncyBJcmUnOiAnNDc2MScsXHJcbiAgICAnQ29zbW9zIFBsdW1tZXQnOiAnNDc2NycsXHJcblxyXG4gICAgJ0Nvc21vcyBGaXJlXFwncyBEb21haW4gVGV0aGVyJzogJzQ3NUYnLFxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnQ29zbW9zIERhcmsgV2VsbCc6ICc0NzZEJyxcclxuICAgICdDb3Ntb3MgRmFyIFdpbmQgU3ByZWFkJzogJzQ3MjQnLFxyXG4gICAgJ0Nvc21vcyBCbGFjayBGbGFtZSc6ICc0NzVEJyxcclxuICAgICdDb3Ntb3MgRmlyZVxcJ3MgRG9tYWluJzogJzQ3NjAnLFxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlVHdpbm5pbmcsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1R3aW5uaW5nIEF1dG8gQ2Fubm9ucyc6ICc0M0E5JyxcclxuICAgICdUd2lubmluZyBIZWF2ZSc6ICczREI5JyxcclxuICAgICdUd2lubmluZyAzMiBUb256ZSBTd2lwZSc6ICczREJCJyxcclxuICAgICdUd2lubmluZyBTaWRlc3dpcGUnOiAnM0RCRicsXHJcbiAgICAnVHdpbm5pbmcgV2luZCBTcG91dCc6ICczREJFJyxcclxuICAgICdUd2lubmluZyBTaG9jayc6ICczREYxJyxcclxuICAgICdUd2lubmluZyBMYXNlcmJsYWRlJzogJzNERUMnLFxyXG4gICAgJ1R3aW5uaW5nIFZvcnBhbCBCbGFkZSc6ICczREMyJyxcclxuICAgICdUd2lubmluZyBUaHJvd24gRmxhbWVzJzogJzNEQzMnLFxyXG4gICAgJ1R3aW5uaW5nIE1hZ2l0ZWsgUmF5JzogJzNERjMnLFxyXG4gICAgJ1R3aW5uaW5nIEhpZ2ggR3Jhdml0eSc6ICczREZBJyxcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdUd2lubmluZyAxMjggVG9uemUgU3dpcGUnOiAnM0RCQScsXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcbmltcG9ydCB7IHBsYXllckRhbWFnZUZpZWxkcyB9IGZyb20gJy4uLy4uLy4uL29vcHN5X2NvbW1vbic7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gVE9ETzogRGVhZCBJcm9uIDVBQjAgKGVhcnRoc2hha2VycywgYnV0IG9ubHkgaWYgeW91IHRha2UgdHdvPylcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5EZWx1YnJ1bVJlZ2luYWUsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0RlbHVicnVtIFNlZWtlciBNZXJjeSBGb3VyZm9sZCc6ICc1QjM0JywgLy8gRm91ciBnbG93aW5nIHN3b3JkIGhhbGYgcm9vbSBjbGVhdmVzXHJcbiAgICAnRGVsdWJydW0gU2Vla2VyIEJhbGVmdWwgU3dhdGhlJzogJzVBQjQnLCAvLyBHcm91bmQgYW9lIHRvIGVpdGhlciBzaWRlIG9mIGJvc3NcclxuICAgICdEZWx1YnJ1bSBTZWVrZXIgQmFsZWZ1bCBCbGFkZSc6ICc1QjI4JywgLy8gSGlkZSBiZWhpbmQgcGlsbGFycyBhdHRhY2tcclxuICAgICdEZWx1YnJ1bSBTZWVrZXIgSXJvbiBTcGxpdHRlciBCbHVlIDEnOiAnNUFBNCcsIC8vIEJsdWUgcmluZyBleHBsb3Npb25cclxuICAgICdEZWx1YnJ1bSBTZWVrZXIgSXJvbiBTcGxpdHRlciBCbHVlIDInOiAnNUFBNScsIC8vIEJsdWUgcmluZyBleHBsb3Npb25cclxuICAgICdEZWx1YnJ1bSBTZWVrZXIgSXJvbiBTcGxpdHRlciBCbHVlIDMnOiAnNUFBNicsIC8vIEJsdWUgcmluZyBleHBsb3Npb25cclxuICAgICdEZWx1YnJ1bSBTZWVrZXIgSXJvbiBTcGxpdHRlciBXaGl0ZSAxJzogJzVBQTcnLCAvLyBXaGl0ZSByaW5nIGV4cGxvc2lvblxyXG4gICAgJ0RlbHVicnVtIFNlZWtlciBJcm9uIFNwbGl0dGVyIFdoaXRlIDInOiAnNUFBOCcsIC8vIFdoaXRlIHJpbmcgZXhwbG9zaW9uXHJcbiAgICAnRGVsdWJydW0gU2Vla2VyIElyb24gU3BsaXR0ZXIgV2hpdGUgMyc6ICc1QUE5JywgLy8gV2hpdGUgcmluZyBleHBsb3Npb25cclxuICAgICdEZWx1YnJ1bSBTZWVrZXIgU2NvcmNoaW5nIFNoYWNrbGUnOiAnNUFBRScsIC8vIENoYWluIGRhbWFnZVxyXG4gICAgJ0RlbHVicnVtIFNlZWtlciBNZXJjaWZ1bCBCcmVlemUnOiAnNUFBQicsIC8vIFdhZmZsZSBjcmlzcy1jcm9zcyBmbG9vciBtYXJrZXJzXHJcbiAgICAnRGVsdWJydW0gU2Vla2VyIE1lcmNpZnVsIEJsb29tcyc6ICc1QUFEJywgLy8gUHVycGxlIGdyb3dpbmcgY2lyY2xlXHJcbiAgICAnRGVsdWJydW0gRGFodSBSaWdodC1TaWRlZCBTaG9ja3dhdmUnOiAnNTc2MScsIC8vIFJpZ2h0IGNpcmN1bGFyIGNsZWF2ZVxyXG4gICAgJ0RlbHVicnVtIERhaHUgTGVmdC1TaWRlZCBTaG9ja3dhdmUnOiAnNTc2MicsIC8vIExlZnQgY2lyY3VsYXIgY2xlYXZlXHJcbiAgICAnRGVsdWJydW0gRGFodSBGaXJlYnJlYXRoZSc6ICc1NzY1JywgLy8gQ29uYWwgYnJlYXRoXHJcbiAgICAnRGVsdWJydW0gRGFodSBGaXJlYnJlYXRoZSBSb3RhdGluZyc6ICc1NzVBJywgLy8gQ29uYWwgYnJlYXRoLCByb3RhdGluZ1xyXG4gICAgJ0RlbHVicnVtIERhaHUgSGVhZCBEb3duJzogJzU3NTYnLCAvLyBsaW5lIGFvZSBjaGFyZ2UgZnJvbSBNYXJjaG9zaWFzIGFkZFxyXG4gICAgJ0RlbHVicnVtIERhaHUgSHVudGVyXFwncyBDbGF3JzogJzU3NTcnLCAvLyBjaXJjdWxhciBncm91bmQgYW9lIGNlbnRlcmVkIG9uIE1hcmNob3NpYXMgYWRkXHJcbiAgICAnRGVsdWJydW0gRGFodSBGYWxsaW5nIFJvY2snOiAnNTc1QycsIC8vIGdyb3VuZCBhb2UgZnJvbSBSZXZlcmJlcmF0aW5nIFJvYXJcclxuICAgICdEZWx1YnJ1bSBEYWh1IEhvdCBDaGFyZ2UnOiAnNTc2NCcsIC8vIGRvdWJsZSBjaGFyZ2VcclxuICAgICdEZWx1YnJ1bSBEYWh1IFJpcHBlciBDbGF3JzogJzU3NUQnLCAvLyBmcm9udGFsIGNsZWF2ZVxyXG4gICAgJ0RlbHVicnVtIERhaHUgVGFpbCBTd2luZyc6ICc1NzVGJywgLy8gdGFpbCBzd2luZyA7KVxyXG4gICAgJ0RlbHVicnVtIEd1YXJkIFBhd24gT2ZmJzogJzU4MDYnLCAvLyBRdWVlbidzIFNvbGRpZXIgU2VjcmV0cyBSZXZlYWxlZCB0ZXRoZXJlZCBjbG9uZSBhb2VcclxuICAgICdEZWx1YnJ1bSBHdWFyZCBUdXJyZXRcXCdzIFRvdXIgMSc6ICc1ODBEJywgLy8gUXVlZW4ncyBHdW5uZXIgcmVmbGVjdGl2ZSB0dXJyZXQgc2hvdFxyXG4gICAgJ0RlbHVicnVtIEd1YXJkIFR1cnJldFxcJ3MgVG91ciAyJzogJzU4MEUnLCAvLyBRdWVlbidzIEd1bm5lciByZWZsZWN0aXZlIHR1cnJldCBzaG90XHJcbiAgICAnRGVsdWJydW0gR3VhcmQgVHVycmV0XFwncyBUb3VyIDMnOiAnNTgwRicsIC8vIFF1ZWVuJ3MgR3VubmVyIHJlZmxlY3RpdmUgdHVycmV0IHNob3RcclxuICAgICdEZWx1YnJ1bSBHdWFyZCBPcHRpbWFsIFBsYXkgU2hpZWxkJzogJzU3RjMnLCAvLyBRdWVlbidzIEtuaWdodCBzaGllbGQgZ2V0IHVuZGVyXHJcbiAgICAnRGVsdWJydW0gR3VhcmQgT3B0aW1hbCBQbGF5IFN3b3JkJzogJzU3RjInLCAvLyBRdWVlbidzIEtuaWdodCBzd29yZCBnZXQgb3V0XHJcbiAgICAnRGVsdWJydW0gR3VhcmQgQ291bnRlcnBsYXknOiAnNTdGNicsIC8vIEhpdHRpbmcgYWV0aGVyaWFsIHdhcmQgZGlyZWN0aW9uYWwgYmFycmllclxyXG4gICAgJ0RlbHVicnVtIFBoYW50b20gU3dpcmxpbmcgTWlhc21hIDEnOiAnNTdBOScsIC8vIEluaXRpYWwgcGhhbnRvbSBkb251dCBhb2UgZnJvbSBjaXJjbGVcclxuICAgICdEZWx1YnJ1bSBQaGFudG9tIFN3aXJsaW5nIE1pYXNtYSAyJzogJzU3QUEnLCAvLyBNb3ZpbmcgcGhhbnRvbSBkb251dCBhb2VzIGZyb20gY2lyY2xlXHJcbiAgICAnRGVsdWJydW0gUGhhbnRvbSBDcmVlcGluZyBNaWFzbWEnOiAnNTdBNScsIC8vIHBoYW50b20gbGluZSBhb2UgZnJvbSBzcXVhcmVcclxuICAgICdEZWx1YnJ1bSBQaGFudG9tIFZpbGUgV2F2ZSc6ICc1N0IxJywgLy8gcGhhbnRvbSBjb25hbCBhb2VcclxuICAgICdEZWx1YnJ1bSBBdm93ZWQgRnVyeSBPZiBCb3pqYSc6ICc1OTczJywgLy8gVHJpbml0eSBBdm93ZWQgQWxsZWdpYW50IEFyc2VuYWwgXCJvdXRcIlxyXG4gICAgJ0RlbHVicnVtIEF2b3dlZCBGbGFzaHZhbmUnOiAnNTk3MicsIC8vIFRyaW5pdHkgQXZvd2VkIEFsbGVnaWFudCBBcnNlbmFsIFwiZ2V0IGJlaGluZFwiXHJcbiAgICAnRGVsdWJydW0gQXZvd2VkIEluZmVybmFsIFNsYXNoJzogJzU5NzEnLCAvLyBUcmluaXR5IEF2b3dlZCBBbGxlZ2lhbnQgQXJzZW5hbCBcImdldCBmcm9udFwiXHJcbiAgICAnRGVsdWJydW0gQXZvd2VkIEZsYW1lcyBPZiBCb3pqYSc6ICc1OTY4JywgLy8gODAlIGZsb29yIGFvZSBiZWZvcmUgc2hpbW1lcmluZyBzaG90IHN3b3Jkc1xyXG4gICAgJ0RlbHVicnVtIEF2b3dlZCBHbGVhbWluZyBBcnJvdyc6ICc1OTc0JywgLy8gVHJpbml0eSBBdmF0YXIgbGluZSBhb2VzIGZyb20gb3V0c2lkZVxyXG4gICAgJ0RlbHVicnVtIFF1ZWVuIFRoZSBNZWFucyAxJzogJzU5QkInLCAvLyBUaGUgUXVlZW4ncyBCZWNrIGFuZCBDYWxsIGNyb3NzIGFvZSBmcm9tIGFkZHNcclxuICAgICdEZWx1YnJ1bSBRdWVlbiBUaGUgTWVhbnMgMic6ICc1OUJEJywgLy8gVGhlIFF1ZWVuJ3MgQmVjayBhbmQgQ2FsbCBjcm9zcyBhb2UgZnJvbSBhZGRzXHJcbiAgICAnRGVsdWJydW0gUXVlZW4gVGhlIEVuZCAxJzogJzU5QkEnLCAvLyBBbHNvIFRoZSBRdWVlbidzIEJlY2sgYW5kIENhbGwgY3Jvc3MgYW9lIGZyb20gYWRkc1xyXG4gICAgJ0RlbHVicnVtIFF1ZWVuIFRoZSBFbmQgMic6ICc1OUJDJywgLy8gQWxzbyBUaGUgUXVlZW4ncyBCZWNrIGFuZCBDYWxsIGNyb3NzIGFvZSBmcm9tIGFkZHNcclxuICAgICdEZWx1YnJ1bSBRdWVlbiBOb3J0aHN3YWluXFwncyBHbG93JzogJzU5QzQnLCAvLyBleHBhbmRpbmcgbGluZXMgd2l0aCBleHBsb3Npb24gaW50ZXJzZWN0aW9uc1xyXG4gICAgJ0RlbHVicnVtIFF1ZWVuIEp1ZGdtZW50IEJsYWRlIExlZnQnOiAnNUI4MycsIC8vIGRhc2ggYWNyb3NzIHJvb20gd2l0aCBsZWZ0IGNsZWF2ZVxyXG4gICAgJ0RlbHVicnVtIFF1ZWVuIEp1ZGdtZW50IEJsYWRlIFJpZ2h0JzogJzVCODMnLCAvLyBkYXNoIGFjcm9zcyByb29tIHdpdGggcmlnaHQgY2xlYXZlXHJcbiAgICAnRGVsdWJydW0gUXVlZW4gUXVlZW5cXCdzIEp1c3RpY2UnOiAnNTlCRicsIC8vIGZhaWxpbmcgdG8gd2FsayB0aGUgcmlnaHQgbnVtYmVyIG9mIHNxdWFyZXNcclxuICAgICdEZWx1YnJ1bSBRdWVlbiBUdXJyZXRcXCdzIFRvdXIgMSc6ICc1OUUwJywgLy8gcmVmbGVjdGl2ZSB0dXJyZXQgc2hvdCBkdXJpbmcgUXVlZW5cclxuICAgICdEZWx1YnJ1bSBRdWVlbiBUdXJyZXRcXCdzIFRvdXIgMic6ICc1OUUxJywgLy8gcmVmbGVjdGl2ZSB0dXJyZXQgc2hvdCBkdXJpbmcgUXVlZW5cclxuICAgICdEZWx1YnJ1bSBRdWVlbiBUdXJyZXRcXCdzIFRvdXIgMyc6ICc1OUUyJywgLy8gcmVmbGVjdGl2ZSB0dXJyZXQgc2hvdCBkdXJpbmcgUXVlZW5cclxuICAgICdEZWx1YnJ1bSBRdWVlbiBQYXduIE9mZic6ICc1OURBJywgLy8gU2VjcmV0cyBSZXZlYWxlZCB0ZXRoZXJlZCBjbG9uZSBhb2UgZHVyaW5nIFF1ZWVuXHJcbiAgICAnRGVsdWJydW0gUXVlZW4gT3B0aW1hbCBQbGF5IFNoaWVsZCc6ICc1OUNFJywgLy8gUXVlZW4ncyBLbmlnaHQgc2hpZWxkIGdldCB1bmRlciBkdXJpbmcgUXVlZW5cclxuICAgICdEZWx1YnJ1bSBRdWVlbiBPcHRpbWFsIFBsYXkgU3dvcmQnOiAnNTlDQycsIC8vIFF1ZWVuJ3MgS25pZ2h0IHN3b3JkIGdldCBvdXQgZHVyaW5nIFF1ZWVuXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnRGVsdWJydW0gSGlkZGVuIFRyYXAgTWFzc2l2ZSBFeHBsb3Npb24nOiAnNUE2RScsIC8vIGV4cGxvc2lvbiB0cmFwXHJcbiAgICAnRGVsdWJydW0gSGlkZGVuIFRyYXAgUG9pc29uIFRyYXAnOiAnNUE2RicsIC8vIHBvaXNvbiB0cmFwXHJcbiAgICAnRGVsdWJydW0gQXZvd2VkIEhlYXQgU2hvY2snOiAnNTk1RScsIC8vIHRvbyBtdWNoIGhlYXQgb3IgZmFpbGluZyB0byByZWd1bGF0ZSB0ZW1wZXJhdHVyZVxyXG4gICAgJ0RlbHVicnVtIEF2b3dlZCBDb2xkIFNob2NrJzogJzU5NUYnLCAvLyB0b28gbXVjaCBjb2xkIG9yIGZhaWxpbmcgdG8gcmVndWxhdGUgdGVtcGVyYXR1cmVcclxuICB9LFxyXG4gIGdhaW5zRWZmZWN0V2Fybjoge1xyXG4gICAgJ0RlbHVicnVtIFNlZWtlciBNZXJjaWZ1bCBNb29uJzogJzI2MicsIC8vIFwiUGV0cmlmaWNhdGlvblwiIGZyb20gQWV0aGVyaWFsIE9yYiBsb29rYXdheVxyXG4gIH0sXHJcbiAgc2hhcmVGYWlsOiB7XHJcbiAgICAnRGVsdWJydW0gRGFodSBIZWF0IEJyZWF0aCc6ICc1NzY2JywgLy8gdGFuayBjbGVhdmVcclxuICAgICdEZWx1YnJ1bSBBdm93ZWQgV3JhdGggT2YgQm96amEnOiAnNTk3NScsIC8vIHRhbmsgY2xlYXZlXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICAvLyBBdCBsZWFzdCBkdXJpbmcgVGhlIFF1ZWVuLCB0aGVzZSBhYmlsaXR5IGlkcyBjYW4gYmUgb3JkZXJlZCBkaWZmZXJlbnRseSxcclxuICAgICAgLy8gYW5kIHRoZSBmaXJzdCBleHBsb3Npb24gXCJoaXRzXCIgZXZlcnlvbmUsIGFsdGhvdWdoIHdpdGggXCIxQlwiIGZsYWdzLlxyXG4gICAgICBpZDogJ0RlbHVicnVtIExvdHMgQ2FzdCcsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogWyc1NjVBJywgJzU2NUInLCAnNTdGRCcsICc1N0ZFJywgJzVCODYnLCAnNUI4NycsICc1OUQyJywgJzVEOTMnXSwgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBjb25kaXRpb246IChfZGF0YSwgbWF0Y2hlcykgPT4gbWF0Y2hlcy5mbGFncy5zbGljZSgtMikgPT09ICcwMycsXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFRPRE86IERhaHUgNTc3NiBTcGl0IEZsYW1lIHNob3VsZCBhbHdheXMgaGl0IGEgTWFyY2hvc2lhc1xyXG4vLyBUT0RPOiBoaXR0aW5nIHBoYW50b20gd2l0aCBpY2Ugc3Bpa2VzIHdpdGggYW55dGhpbmcgYnV0IGRpc3BlbD9cclxuLy8gVE9ETzogZmFpbGluZyBpY3kvZmllcnkgcG9ydGVudCAoZ3VhcmQgYW5kIHF1ZWVuKVxyXG4vLyAgICAgICBgMTg6UHlyZXRpYyBEb1QgVGljayBvbiAke25hbWV9IGZvciAke2RhbWFnZX0gZGFtYWdlLmBcclxuLy8gVE9ETzogV2luZHMgT2YgRmF0ZSAvIFdlaWdodCBPZiBGb3J0dW5lP1xyXG4vLyBUT0RPOiBUdXJyZXQncyBUb3VyP1xyXG4vLyBnZW5lcmFsIHRyYXBzOiBleHBsb3Npb246IDVBNzEsIHBvaXNvbiB0cmFwOiA1QTcyLCBtaW5pOiA1QTczXHJcbi8vIGR1ZWwgdHJhcHM6IG1pbmk6IDU3QTEsIGljZTogNTc5RiwgdG9hZDogNTdBMFxyXG4vLyBUT0RPOiB0YWtpbmcgbWFuYSBmbGFtZSB3aXRob3V0IHJlZmxlY3RcclxuLy8gVE9ETzogdGFraW5nIE1hZWxzdHJvbSdzIEJvbHQgd2l0aG91dCBsaWdodG5pbmcgYnVmZlxyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkRlbHVicnVtUmVnaW5hZVNhdmFnZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnRGVsdWJydW1TYXYgU2Vla2VyIFNsaW1lcyBIZWxsaXNoIFNsYXNoJzogJzU3RUEnLCAvLyBCb3pqYW4gU29sZGllciBjbGVhdmVcclxuICAgICdEZWx1YnJ1bVNhdiBTZWVrZXIgU2xpbWVzIFZpc2NvdXMgUnVwdHVyZSc6ICc1MDE2JywgLy8gRnVsbHkgbWVyZ2VkIHZpc2NvdXMgc2xpbWUgYW9lXHJcblxyXG4gICAgJ0RlbHVicnVtU2F2IFNlZWtlciBHb2xlbXMgRGVtb2xpc2gnOiAnNTg4MCcsIC8vIGludGVycnVwdGlibGUgUnVpbnMgR29sZW0gY2FzdFxyXG5cclxuICAgICdEZWx1YnJ1bVNhdiBTZWVrZXIgQmFsZWZ1bCBTd2F0aGUnOiAnNUFEMScsIC8vIEdyb3VuZCBhb2UgdG8gZWl0aGVyIHNpZGUgb2YgYm9zc1xyXG4gICAgJ0RlbHVicnVtU2F2IFNlZWtlciBCYWxlZnVsIEJsYWRlJzogJzVCMkEnLCAvLyBIaWRlIGJlaGluZCBwaWxsYXJzIGF0dGFja1xyXG4gICAgJ0RlbHVicnVtU2F2IFNlZWtlciBTY29yY2hpbmcgU2hhY2tsZSc6ICc1QUNCJywgLy8gQ2hhaW5zXHJcbiAgICAnRGVsdWJydW1TYXYgU2Vla2VyIE1lcmN5IEZvdXJmb2xkIDEnOiAnNUI5NCcsIC8vIEZvdXIgZ2xvd2luZyBzd29yZCBoYWxmIHJvb20gY2xlYXZlc1xyXG4gICAgJ0RlbHVicnVtU2F2IFNlZWtlciBNZXJjeSBGb3VyZm9sZCAyJzogJzVBQjknLCAvLyBGb3VyIGdsb3dpbmcgc3dvcmQgaGFsZiByb29tIGNsZWF2ZXNcclxuICAgICdEZWx1YnJ1bVNhdiBTZWVrZXIgTWVyY3kgRm91cmZvbGQgMyc6ICc1QUJBJywgLy8gRm91ciBnbG93aW5nIHN3b3JkIGhhbGYgcm9vbSBjbGVhdmVzXHJcbiAgICAnRGVsdWJydW1TYXYgU2Vla2VyIE1lcmN5IEZvdXJmb2xkIDQnOiAnNUFCQicsIC8vIEZvdXIgZ2xvd2luZyBzd29yZCBoYWxmIHJvb20gY2xlYXZlc1xyXG4gICAgJ0RlbHVicnVtU2F2IFNlZWtlciBNZXJjeSBGb3VyZm9sZCA1JzogJzVBQkMnLCAvLyBGb3VyIGdsb3dpbmcgc3dvcmQgaGFsZiByb29tIGNsZWF2ZXNcclxuICAgICdEZWx1YnJ1bVNhdiBTZWVrZXIgTWVyY2lmdWwgQnJlZXplJzogJzVBQzgnLCAvLyBXYWZmbGUgY3Jpc3MtY3Jvc3MgZmxvb3IgbWFya2Vyc1xyXG4gICAgJ0RlbHVicnVtU2F2IFNlZWtlciBCYWxlZnVsIENvbWV0JzogJzVBRDcnLCAvLyBDbG9uZSBtZXRlb3IgZHJvcHBpbmcgYmVmb3JlIGNoYXJnZXNcclxuICAgICdEZWx1YnJ1bVNhdiBTZWVrZXIgQmFsZWZ1bCBGaXJlc3Rvcm0nOiAnNUFEOCcsIC8vIENsb25lIGNoYXJnZSBhZnRlciBCYWxlZnVsIENvbWV0XHJcbiAgICAnRGVsdWJydW1TYXYgU2Vla2VyIElyb24gUm9zZSc6ICc1QUQ5JywgLy8gQ2xvbmUgbGluZSBhb2VzXHJcbiAgICAnRGVsdWJydW1TYXYgU2Vla2VyIElyb24gU3BsaXR0ZXIgQmx1ZSAxJzogJzVBQzEnLCAvLyBCbHVlIHJpbiBnIGV4cGxvc2lvblxyXG4gICAgJ0RlbHVicnVtU2F2IFNlZWtlciBJcm9uIFNwbGl0dGVyIEJsdWUgMic6ICc1QUMyJywgLy8gQmx1ZSByaW5nIGV4cGxvc2lvblxyXG4gICAgJ0RlbHVicnVtU2F2IFNlZWtlciBJcm9uIFNwbGl0dGVyIEJsdWUgMyc6ICc1QUMzJywgLy8gQmx1ZSByaW5nIGV4cGxvc2lvblxyXG4gICAgJ0RlbHVicnVtU2F2IFNlZWtlciBJcm9uIFNwbGl0dGVyIFdoaXRlIDEnOiAnNUFDNCcsIC8vIFdoaXRlIHJpbmcgZXhwbG9zaW9uXHJcbiAgICAnRGVsdWJydW1TYXYgU2Vla2VyIElyb24gU3BsaXR0ZXIgV2hpdGUgMic6ICc1QUM1JywgLy8gV2hpdGUgcmluZyBleHBsb3Npb25cclxuICAgICdEZWx1YnJ1bVNhdiBTZWVrZXIgSXJvbiBTcGxpdHRlciBXaGl0ZSAzJzogJzVBQzYnLCAvLyBXaGl0ZSByaW5nIGV4cGxvc2lvblxyXG4gICAgJ0RlbHVicnVtU2F2IFNlZWtlciBBY3QgT2YgTWVyY3knOiAnNUFDRicsIC8vIGNyb3NzLXNoYXBlZCBsaW5lIGFvZXNcclxuXHJcbiAgICAnRGVsdWJydW1TYXYgRGFodSBSaWdodC1TaWRlZCBTaG9ja3dhdmUgMSc6ICc1NzcwJywgLy8gUmlnaHQgY2lyY3VsYXIgY2xlYXZlXHJcbiAgICAnRGVsdWJydW1TYXYgRGFodSBSaWdodC1TaWRlZCBTaG9ja3dhdmUgMic6ICc1NzcyJywgLy8gUmlnaHQgY2lyY3VsYXIgY2xlYXZlXHJcbiAgICAnRGVsdWJydW1TYXYgRGFodSBMZWZ0LVNpZGVkIFNob2Nrd2F2ZSAxJzogJzU3NkYnLCAvLyBMZWZ0IGNpcmN1bGFyIGNsZWF2ZVxyXG4gICAgJ0RlbHVicnVtU2F2IERhaHUgTGVmdC1TaWRlZCBTaG9ja3dhdmUgMic6ICc1NzcxJywgLy8gTGVmdCBjaXJjdWxhciBjbGVhdmVcclxuICAgICdEZWx1YnJ1bVNhdiBEYWh1IEZpcmVicmVhdGhlJzogJzU3NzQnLCAvLyBDb25hbCBicmVhdGhcclxuICAgICdEZWx1YnJ1bVNhdiBEYWh1IEZpcmVicmVhdGhlIFJvdGF0aW5nJzogJzU3NkMnLCAvLyBDb25hbCBicmVhdGgsIHJvdGF0aW5nXHJcbiAgICAnRGVsdWJydW1TYXYgRGFodSBIZWFkIERvd24nOiAnNTc2OCcsIC8vIGxpbmUgYW9lIGNoYXJnZSBmcm9tIE1hcmNob3NpYXMgYWRkXHJcbiAgICAnRGVsdWJydW1TYXYgRGFodSBIdW50ZXJcXCdzIENsYXcnOiAnNTc2OScsIC8vIGNpcmN1bGFyIGdyb3VuZCBhb2UgY2VudGVyZWQgb24gTWFyY2hvc2lhcyBhZGRcclxuICAgICdEZWx1YnJ1bVNhdiBEYWh1IEZhbGxpbmcgUm9jayc6ICc1NzZFJywgLy8gZ3JvdW5kIGFvZSBmcm9tIFJldmVyYmVyYXRpbmcgUm9hclxyXG4gICAgJ0RlbHVicnVtU2F2IERhaHUgSG90IENoYXJnZSc6ICc1NzczJywgLy8gZG91YmxlIGNoYXJnZVxyXG5cclxuICAgICdEZWx1YnJ1bVNhdiBEdWVsIE1hc3NpdmUgRXhwbG9zaW9uJzogJzU3OUUnLCAvLyBib21icyBiZWluZyBjbGVhcmVkXHJcbiAgICAnRGVsdWJydW1TYXYgRHVlbCBWaWNpb3VzIFN3aXBlJzogJzU3OTcnLCAvLyBjaXJjdWxhciBhb2UgYXJvdW5kIGJvc3NcclxuICAgICdEZWx1YnJ1bVNhdiBEdWVsIEZvY3VzZWQgVHJlbW9yIDEnOiAnNTc4RicsIC8vIHNxdWFyZSBmbG9vciBhb2VzXHJcbiAgICAnRGVsdWJydW1TYXYgRHVlbCBGb2N1c2VkIFRyZW1vciAyJzogJzU3OTEnLCAvLyBzcXVhcmUgZmxvb3IgYW9lc1xyXG4gICAgJ0RlbHVicnVtU2F2IER1ZWwgRGV2b3VyJzogJzU3ODknLCAvLyBjb25hbCBhb2UgYWZ0ZXIgd2l0aGVyaW5nIGN1cnNlXHJcbiAgICAnRGVsdWJydW1TYXYgRHVlbCBGbGFpbGluZyBTdHJpa2UgMSc6ICc1NzhDJywgLy8gaW5pdGlhbCByb3RhdGluZyBjbGVhdmVcclxuICAgICdEZWx1YnJ1bVNhdiBEdWVsIEZsYWlsaW5nIFN0cmlrZSAyJzogJzU3OEQnLCAvLyByb3RhdGluZyBjbGVhdmVzXHJcblxyXG4gICAgJ0RlbHVicnVtU2F2IEd1YXJkIE9wdGltYWwgT2ZmZW5zaXZlIFN3b3JkJzogJzU4MTknLCAvLyBtaWRkbGUgZXhwbG9zaW9uXHJcbiAgICAnRGVsdWJydW1TYXYgR3VhcmQgT3B0aW1hbCBPZmZlbnNpdmUgU2hpZWxkJzogJzU4MUEnLCAvLyBtaWRkbGUgZXhwbG9zaW9uXHJcbiAgICAnRGVsdWJydW1TYXYgR3VhcmQgT3B0aW1hbCBQbGF5IFN3b3JkJzogJzU4MTYnLCAvLyBPcHRpbWFsIFBsYXkgU3dvcmQgXCJnZXQgb3V0XCJcclxuICAgICdEZWx1YnJ1bVNhdiBHdWFyZCBPcHRpbWFsIFBsYXkgU2hpZWxkJzogJzU4MTcnLCAvLyBPcHRpbWFsIHBsYXkgc2hpZWxkIFwiZ2V0IGluXCJcclxuICAgICdEZWx1YnJ1bVNhdiBHdWFyZCBPcHRpbWFsIFBsYXkgQ2xlYXZlJzogJzU4MTgnLCAvLyBPcHRpbWFsIFBsYXkgY2xlYXZlcyBmb3Igc3dvcmQvc2hpZWxkXHJcbiAgICAnRGVsdWJydW1TYXYgR3VhcmQgVW5sdWNreSBMb3QnOiAnNTgxRCcsIC8vIFF1ZWVuJ3MgS25pZ2h0IG9yYiBleHBsb3Npb25cclxuICAgICdEZWx1YnJ1bVNhdiBHdWFyZCBCdXJuIDEnOiAnNTgzRCcsIC8vIHNtYWxsIGZpcmUgYWRkc1xyXG4gICAgJ0RlbHVicnVtU2F2IEd1YXJkIEJ1cm4gMic6ICc1ODNFJywgLy8gbGFyZ2UgZmlyZSBhZGRzXHJcbiAgICAnRGVsdWJydW1TYXYgR3VhcmQgUGF3biBPZmYnOiAnNTgzQScsIC8vIFF1ZWVuJ3MgU29sZGllciBTZWNyZXRzIFJldmVhbGVkIHRldGhlcmVkIGNsb25lIGFvZVxyXG4gICAgJ0RlbHVicnVtU2F2IEd1YXJkIFR1cnJldFxcJ3MgVG91ciBOb3JtYWwgMSc6ICc1ODQ3JywgLy8gXCJub3JtYWwgbW9kZVwiIHR1cnJldHMsIGluaXRpYWwgbGluZXMgMVxyXG4gICAgJ0RlbHVicnVtU2F2IEd1YXJkIFR1cnJldFxcJ3MgVG91ciBOb3JtYWwgMic6ICc1ODQ4JywgLy8gXCJub3JtYWwgbW9kZVwiIHR1cnJldHMsIGluaXRpYWwgbGluZXMgMlxyXG4gICAgJ0RlbHVicnVtU2F2IEd1YXJkIFR1cnJldFxcJ3MgVG91ciBOb3JtYWwgMyc6ICc1ODQ5JywgLy8gXCJub3JtYWwgbW9kZVwiIHR1cnJldHMsIHNlY29uZCBsaW5lc1xyXG4gICAgJ0RlbHVicnVtU2F2IEd1YXJkIENvdW50ZXJwbGF5JzogJzU4RjUnLCAvLyBIaXR0aW5nIGFldGhlcmlhbCB3YXJkIGRpcmVjdGlvbmFsIGJhcnJpZXJcclxuXHJcbiAgICAnRGVsdWJydW1TYXYgUGhhbnRvbSBTd2lybGluZyBNaWFzbWEgMSc6ICc1N0I4JywgLy8gSW5pdGlhbCBwaGFudG9tIGRvbnV0IGFvZVxyXG4gICAgJ0RlbHVicnVtU2F2IFBoYW50b20gU3dpcmxpbmcgTWlhc21hIDInOiAnNTdCOScsIC8vIE1vdmluZyBwaGFudG9tIGRvbnV0IGFvZXNcclxuICAgICdEZWx1YnJ1bVNhdiBQaGFudG9tIENyZWVwaW5nIE1pYXNtYSAxJzogJzU3QjQnLCAvLyBJbml0aWFsIHBoYW50b20gbGluZSBhb2VcclxuICAgICdEZWx1YnJ1bVNhdiBQaGFudG9tIENyZWVwaW5nIE1pYXNtYSAyJzogJzU3QjUnLCAvLyBMYXRlciBwaGFudG9tIGxpbmUgYW9lXHJcbiAgICAnRGVsdWJydW1TYXYgUGhhbnRvbSBMaW5nZXJpbmcgTWlhc21hIDEnOiAnNTdCNicsIC8vIEluaXRpYWwgcGhhbnRvbSBjaXJjbGUgYW9lXHJcbiAgICAnRGVsdWJydW1TYXYgUGhhbnRvbSBMaW5nZXJpbmcgTWlhc21hIDInOiAnNTdCNycsIC8vIE1vdmluZyBwaGFudG9tIGNpcmNsZSBhb2VcclxuICAgICdEZWx1YnJ1bVNhdiBQaGFudG9tIFZpbGUgV2F2ZSc6ICc1N0JGJywgLy8gcGhhbnRvbSBjb25hbCBhb2VcclxuXHJcbiAgICAnRGVsdWJydW1TYXYgQXZvd2VkIEZ1cnkgT2YgQm96amEnOiAnNTk0QycsIC8vIFRyaW5pdHkgQXZvd2VkIEFsbGVnaWFudCBBcnNlbmFsIFwib3V0XCJcclxuICAgICdEZWx1YnJ1bVNhdiBBdm93ZWQgRmxhc2h2YW5lJzogJzU5NEInLCAvLyBUcmluaXR5IEF2b3dlZCBBbGxlZ2lhbnQgQXJzZW5hbCBcImdldCBiZWhpbmRcIlxyXG4gICAgJ0RlbHVicnVtU2F2IEF2b3dlZCBJbmZlcm5hbCBTbGFzaCc6ICc1OTRBJywgLy8gVHJpbml0eSBBdm93ZWQgQWxsZWdpYW50IEFyc2VuYWwgXCJnZXQgZnJvbnRcIlxyXG4gICAgJ0RlbHVicnVtU2F2IEF2b3dlZCBGbGFtZXMgT2YgQm96amEnOiAnNTkzOScsIC8vIDgwJSBmbG9vciBhb2UgYmVmb3JlIHNoaW1tZXJpbmcgc2hvdCBzd29yZHNcclxuICAgICdEZWx1YnJ1bVNhdiBBdm93ZWQgR2xlYW1pbmcgQXJyb3cnOiAnNTk0RCcsIC8vIFRyaW5pdHkgQXZhdGFyIGxpbmUgYW9lcyBmcm9tIG91dHNpZGVcclxuXHJcbiAgICAnRGVsdWJydW1TYXYgTG9yZCBXaGFjayc6ICc1N0QwJywgLy8gY2xlYXZlXHJcbiAgICAnRGVsdWJydW1TYXYgTG9yZCBEZXZhc3RhdGluZyBCb2x0IDEnOiAnNTdDNScsIC8vIGxpZ2h0bmluZyByaW5nc1xyXG4gICAgJ0RlbHVicnVtU2F2IExvcmQgRGV2YXN0YXRpbmcgQm9sdCAyJzogJzU3QzYnLCAvLyBsaWdodG5pbmcgcmluZ3NcclxuICAgICdEZWx1YnJ1bVNhdiBMb3JkIEVsZWN0cm9jdXRpb24nOiAnNTdDQycsIC8vIHJhbmRvbSBjaXJjbGUgYW9lc1xyXG4gICAgJ0RlbHVicnVtU2F2IExvcmQgUmFwaWQgQm9sdHMnOiAnNTdDMycsIC8vIGRyb3BwZWQgbGlnaHRuaW5nIGFvZXNcclxuICAgICdEZWx1YnJ1bVNhdiBMb3JkIDExMTEtVG9uemUgU3dpbmcnOiAnNTdEOCcsIC8vIHZlcnkgbGFyZ2UgXCJnZXQgb3V0XCIgc3dpbmdcclxuICAgICdEZWx1YnJ1bVNhdiBMb3JkIE1vbmsgQXR0YWNrJzogJzU1QTYnLCAvLyBNb25rIGFkZCBhdXRvLWF0dGFja1xyXG5cclxuICAgICdEZWx1YnJ1bVNhdiBRdWVlbiBOb3J0aHN3YWluXFwncyBHbG93JzogJzU5RjQnLCAvLyBleHBhbmRpbmcgbGluZXMgd2l0aCBleHBsb3Npb24gaW50ZXJzZWN0aW9uc1xyXG4gICAgJ0RlbHVicnVtU2F2IFF1ZWVuIFRoZSBNZWFucyAxJzogJzU5RTcnLCAvLyBUaGUgUXVlZW4ncyBCZWNrIGFuZCBDYWxsIGNyb3NzIGFvZSBmcm9tIGFkZHNcclxuICAgICdEZWx1YnJ1bVNhdiBRdWVlbiBUaGUgTWVhbnMgMic6ICc1OUVBJywgLy8gVGhlIFF1ZWVuJ3MgQmVjayBhbmQgQ2FsbCBjcm9zcyBhb2UgZnJvbSBhZGRzXHJcbiAgICAnRGVsdWJydW1TYXYgUXVlZW4gVGhlIEVuZCAxJzogJzU5RTgnLCAvLyBBbHNvIFRoZSBRdWVlbidzIEJlY2sgYW5kIENhbGwgY3Jvc3MgYW9lIGZyb20gYWRkc1xyXG4gICAgJ0RlbHVicnVtU2F2IFF1ZWVuIFRoZSBFbmQgMic6ICc1OUU5JywgLy8gQWxzbyBUaGUgUXVlZW4ncyBCZWNrIGFuZCBDYWxsIGNyb3NzIGFvZSBmcm9tIGFkZHNcclxuICAgICdEZWx1YnJ1bVNhdiBRdWVlbiBPcHRpbWFsIE9mZmVuc2l2ZSBTd29yZCc6ICc1QTAyJywgLy8gbWlkZGxlIGV4cGxvc2lvblxyXG4gICAgJ0RlbHVicnVtU2F2IFF1ZWVuIE9wdGltYWwgT2ZmZW5zaXZlIFNoaWVsZCc6ICc1QTAzJywgLy8gbWlkZGxlIGV4cGxvc2lvblxyXG4gICAgJ0RlbHVicnVtU2F2IFF1ZWVuIEp1ZGdtZW50IEJsYWRlIExlZnQgMSc6ICc1OUYyJywgLy8gZGFzaCBhY3Jvc3Mgcm9vbSB3aXRoIGxlZnQgY2xlYXZlXHJcbiAgICAnRGVsdWJydW1TYXYgUXVlZW4gSnVkZ21lbnQgQmxhZGUgTGVmdCAyJzogJzVCODUnLCAvLyBkYXNoIGFjcm9zcyByb29tIHdpdGggbGVmdCBjbGVhdmVcclxuICAgICdEZWx1YnJ1bVNhdiBRdWVlbiBKdWRnbWVudCBCbGFkZSBSaWdodCAxJzogJzU5RjEnLCAvLyBkYXNoIGFjcm9zcyByb29tIHdpdGggcmlnaHQgY2xlYXZlXHJcbiAgICAnRGVsdWJydW1TYXYgUXVlZW4gSnVkZ21lbnQgQmxhZGUgUmlnaHQgMic6ICc1Qjg0JywgLy8gZGFzaCBhY3Jvc3Mgcm9vbSB3aXRoIHJpZ2h0IGNsZWF2ZVxyXG4gICAgJ0RlbHVicnVtU2F2IFF1ZWVuIFBhd24gT2ZmJzogJzVBMUQnLCAvLyBRdWVlbidzIFNvbGRpZXIgU2VjcmV0cyBSZXZlYWxlZCB0ZXRoZXJlZCBjbG9uZSBhb2VcclxuICAgICdEZWx1YnJ1bVNhdiBRdWVlbiBPcHRpbWFsIFBsYXkgU3dvcmQnOiAnNTlGRicsIC8vIE9wdGltYWwgUGxheSBTd29yZCBcImdldCBvdXRcIlxyXG4gICAgJ0RlbHVicnVtU2F2IFF1ZWVuIE9wdGltYWwgUGxheSBTaGllbGQnOiAnNUEwMCcsIC8vIE9wdGltYWwgcGxheSBzaGllbGQgXCJnZXQgaW5cIlxyXG4gICAgJ0RlbHVicnVtU2F2IFF1ZWVuIE9wdGltYWwgUGxheSBDbGVhdmUnOiAnNUEwMScsIC8vIE9wdGltYWwgUGxheSBjbGVhdmVzIGZvciBzd29yZC9zaGllbGRcclxuICAgICdEZWx1YnJ1bVNhdiBRdWVlbiBUdXJyZXRcXCdzIFRvdXIgTm9ybWFsIDEnOiAnNUEyOCcsIC8vIFwibm9ybWFsIG1vZGVcIiB0dXJyZXRzLCBpbml0aWFsIGxpbmVzIDFcclxuICAgICdEZWx1YnJ1bVNhdiBRdWVlbiBUdXJyZXRcXCdzIFRvdXIgTm9ybWFsIDInOiAnNUEyQScsIC8vIFwibm9ybWFsIG1vZGVcIiB0dXJyZXRzLCBpbml0aWFsIGxpbmVzIDJcclxuICAgICdEZWx1YnJ1bVNhdiBRdWVlbiBUdXJyZXRcXCdzIFRvdXIgTm9ybWFsIDMnOiAnNUEyOScsIC8vIFwibm9ybWFsIG1vZGVcIiB0dXJyZXRzLCBzZWNvbmQgbGluZXNcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdEZWx1YnJ1bVNhdiBBdm93ZWQgSGVhdCBTaG9jayc6ICc1OTI3JywgLy8gdG9vIG11Y2ggaGVhdCBvciBmYWlsaW5nIHRvIHJlZ3VsYXRlIHRlbXBlcmF0dXJlXHJcbiAgICAnRGVsdWJydW1TYXYgQXZvd2VkIENvbGQgU2hvY2snOiAnNTkyOCcsIC8vIHRvbyBtdWNoIGNvbGQgb3IgZmFpbGluZyB0byByZWd1bGF0ZSB0ZW1wZXJhdHVyZVxyXG4gICAgJ0RlbHVicnVtU2F2IFF1ZWVuIFF1ZWVuXFwncyBKdXN0aWNlJzogJzU5RUInLCAvLyBmYWlsaW5nIHRvIHdhbGsgdGhlIHJpZ2h0IG51bWJlciBvZiBzcXVhcmVzXHJcbiAgICAnRGVsdWJydW1TYXYgUXVlZW4gR3VubmhpbGRyXFwncyBCbGFkZXMnOiAnNUIyMicsIC8vIG5vdCBiZWluZyBpbiB0aGUgY2hlc3MgYmx1ZSBzYWZlIHNxdWFyZVxyXG4gICAgJ0RlbHVicnVtU2F2IFF1ZWVuIFVubHVja3kgTG90JzogJzU1QjYnLCAvLyBsaWdodG5pbmcgb3JiIGF0dGFja1xyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RXYXJuOiB7XHJcbiAgICAnRGVsdWJydW1TYXYgU2Vla2VyIE1lcmNpZnVsIE1vb24nOiAnMjYyJywgLy8gXCJQZXRyaWZpY2F0aW9uXCIgZnJvbSBBZXRoZXJpYWwgT3JiIGxvb2thd2F5XHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdEZWx1YnJ1bVNhdiBTZWVrZXIgUGhhbnRvbSBCYWxlZnVsIE9uc2xhdWdodCc6ICc1QUQ2JywgLy8gc29sbyB0YW5rIGNsZWF2ZVxyXG4gICAgJ0RlbHVicnVtU2F2IExvcmQgRm9lIFNwbGl0dGVyJzogJzU3RDcnLCAvLyB0YW5rIGNsZWF2ZVxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgLy8gVGhlc2UgYWJpbGl0eSBpZHMgY2FuIGJlIG9yZGVyZWQgZGlmZmVyZW50bHkgYW5kIFwiaGl0XCIgcGVvcGxlIHdoZW4gbGV2aXRhdGluZy5cclxuICAgICAgaWQ6ICdEZWx1YnJ1bVNhdiBHdWFyZCBMb3RzIENhc3QnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6IFsnNTgyNycsICc1ODI4JywgJzVCNkMnLCAnNUI2RCcsICc1QkI2JywgJzVCQjcnLCAnNUI4OCcsICc1Qjg5J10sIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoX2RhdGEsIG1hdGNoZXMpID0+IG1hdGNoZXMuZmxhZ3Muc2xpY2UoLTIpID09PSAnMDMnLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0RlbHVicnVtU2F2IEdvbGVtIENvbXBhY3Rpb24nLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzU3NDYnIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIHRleHQ6IGAke21hdGNoZXMuc291cmNlfTogJHttYXRjaGVzLmFiaWxpdHl9YCB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdEZWx1YnJ1bVNhdiBTbGltZSBTYW5ndWluZSBGdXNpb24nLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzU1NEQnIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIHRleHQ6IGAke21hdGNoZXMuc291cmNlfTogJHttYXRjaGVzLmFiaWxpdHl9YCB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkVkZW5zUHJvbWlzZUxpdGFueSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnRTEwTiBGb3J3YXJkIEltcGxvc2lvbic6ICc1NkI0JywgLy8gaG93bCBib3NzIGltcGxvc2lvblxyXG4gICAgJ0UxME4gRm9yd2FyZCBTaGFkb3cgSW1wbG9zaW9uJzogJzU2QjUnLCAvLyBob3dsIHNoYWRvdyBpbXBsb3Npb25cclxuICAgICdFMTBOIEJhY2t3YXJkIEltcGxvc2lvbic6ICc1NkI3JywgLy8gdGFpbCBib3NzIGltcGxvc2lvblxyXG4gICAgJ0UxME4gQmFja3dhcmQgU2hhZG93IEltcGxvc2lvbic6ICc1NkI4JywgLy8gdGFpbCBzaGFkb3cgaW1wbG9zaW9uXHJcbiAgICAnRTEwTiBCYXJicyBPZiBBZ29ueSAxJzogJzU2RDknLCAvLyBTaGFkb3cgV2FycmlvciAzIGRvZyByb29tIGNsZWF2ZVxyXG4gICAgJ0UxME4gQmFyYnMgT2YgQWdvbnkgMic6ICc1QjI2JywgLy8gU2hhZG93IFdhcnJpb3IgMyBkb2cgcm9vbSBjbGVhdmVcclxuICAgICdFMTBOIENsb2FrIE9mIFNoYWRvd3MnOiAnNUIxMScsIC8vIG5vbi1zcXVpZ2dseSBsaW5lIGV4cGxvc2lvbnNcclxuICAgICdFMTBOIFRocm9uZSBPZiBTaGFkb3cnOiAnNTZDNycsIC8vIHN0YW5kaW5nIHVwIGdldCBvdXRcclxuICAgICdFMTBOIFJpZ2h0IEdpZ2EgU2xhc2gnOiAnNTZBRScsIC8vIGJvc3MgcmlnaHQgZ2lnYSBzbGFzaFxyXG4gICAgJ0UxME4gUmlnaHQgU2hhZG93IFNsYXNoJzogJzU2QUYnLCAvLyBnaWdhIHNsYXNoIGZyb20gc2hhZG93XHJcbiAgICAnRTEwTiBMZWZ0IEdpZ2EgU2xhc2gnOiAnNTZCMScsIC8vIGJvc3MgbGVmdCBnaWdhIHNsYXNoXHJcbiAgICAnRTEwTiBMZWZ0IFNoYWRvdyBTbGFzaCc6ICc1NkJEJywgLy8gZ2lnYSBzbGFzaCBmcm9tIHNoYWRvd1xyXG4gICAgJ0UxME4gU2hhZG93eSBFcnVwdGlvbic6ICc1NkUxJywgLy8gYmFpdGVkIGdyb3VuZCBhb2UgbWFya2VycyBwYWlyZWQgd2l0aCBiYXJic1xyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnRTEwTiBTaGFkb3dcXCdzIEVkZ2UnOiAnNTZEQicsIC8vIFRhbmtidXN0ZXIgc2luZ2xlIHRhcmdldCBmb2xsb3d1cFxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFRPRE86IGhpdHRpbmcgc2hhZG93IG9mIHRoZSBoZXJvIHdpdGggYWJpbGl0aWVzIGNhbiBjYXVzZSB5b3UgdG8gdGFrZSBkYW1hZ2UsIGxpc3QgdGhvc2U/XHJcbi8vICAgICAgIGUuZy4gcGlja2luZyB1cCB5b3VyIGZpcnN0IHBpdGNoIGJvZyBwdWRkbGUgd2lsbCBjYXVzZSB5b3UgdG8gZGllIHRvIHRoZSBkYW1hZ2VcclxuLy8gICAgICAgeW91ciBzaGFkb3cgdGFrZXMgZnJvbSBEZWVwc2hhZG93IE5vdmEgb3IgRGlzdGFudCBTY3JlYW0uXHJcbi8vIFRPRE86IDU3M0IgQmxpZ2h0aW5nIEJsaXR6IGlzc3VlcyBkdXJpbmcgbGltaXQgY3V0IG51bWJlcnNcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5FZGVuc1Byb21pc2VMaXRhbnlTYXZhZ2UsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0UxMFMgSW1wbG9zaW9uIFNpbmdsZSAxJzogJzU2RjInLCAvLyBzaW5nbGUgdGFpbCB1cCBzaGFkb3cgaW1wbG9zaW9uXHJcbiAgICAnRTEwUyBJbXBsb3Npb24gU2luZ2xlIDInOiAnNTZFRicsIC8vIHNpbmdsZSBob3dsIHNoYWRvdyBpbXBsb3Npb25cclxuICAgICdFMTBTIEltcGxvc2lvbiBRdWFkcnVwbGUgMSc6ICc1NkVGJywgLy8gcXVhZHJ1cGxlIHNldCBvZiBzaGFkb3cgaW1wbG9zaW9uc1xyXG4gICAgJ0UxMFMgSW1wbG9zaW9uIFF1YWRydXBsZSAyJzogJzU2RjInLCAvLyBxdWFkcnVwbGUgc2V0IG9mIHNoYWRvdyBpbXBsb3Npb25zXHJcbiAgICAnRTEwUyBHaWdhIFNsYXNoIFNpbmdsZSAxJzogJzU2RUMnLCAvLyBHaWdhIHNsYXNoIHNpbmdsZSBmcm9tIHNoYWRvd1xyXG4gICAgJ0UxMFMgR2lnYSBTbGFzaCBTaW5nbGUgMic6ICc1NkVEJywgLy8gR2lnYSBzbGFzaCBzaW5nbGUgZnJvbSBzaGFkb3dcclxuICAgICdFMTBTIEdpZ2EgU2xhc2ggQm94IDEnOiAnNTcwOScsIC8vIEdpZ2Egc2xhc2ggYm94IGZyb20gZm91ciBncm91bmQgc2hhZG93c1xyXG4gICAgJ0UxMFMgR2lnYSBTbGFzaCBCb3ggMic6ICc1NzBEJywgLy8gR2lnYSBzbGFzaCBib3ggZnJvbSBmb3VyIGdyb3VuZCBzaGFkb3dzXHJcbiAgICAnRTEwUyBHaWdhIFNsYXNoIFF1YWRydXBsZSAxJzogJzU2RUMnLCAvLyBxdWFkcnVwbGUgc2V0IG9mIGdpZ2Egc2xhc2ggY2xlYXZlc1xyXG4gICAgJ0UxMFMgR2lnYSBTbGFzaCBRdWFkcnVwbGUgMic6ICc1NkU5JywgLy8gcXVhZHJ1cGxlIHNldCBvZiBnaWdhIHNsYXNoIGNsZWF2ZXNcclxuICAgICdFMTBTIENsb2FrIE9mIFNoYWRvd3MgMSc6ICc1QjEzJywgLy8gaW5pdGlhbCBub24tc3F1aWdnbHkgbGluZSBleHBsb3Npb25zXHJcbiAgICAnRTEwUyBDbG9hayBPZiBTaGFkb3dzIDInOiAnNUIxNCcsIC8vIHNlY29uZCBzcXVpZ2dseSBsaW5lIGV4cGxvc2lvbnNcclxuICAgICdFMTBTIFRocm9uZSBPZiBTaGFkb3cnOiAnNTcxNycsIC8vIHN0YW5kaW5nIHVwIGdldCBvdXRcclxuICAgICdFMTBTIFNoYWRvd3kgRXJ1cHRpb24nOiAnNTczOCcsIC8vIGJhaXRlZCBncm91bmQgYW9lIGR1cmluZyBhbXBsaWZpZXJcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdFMTBTIFN3YXRoIE9mIFNpbGVuY2UgMSc6ICc1NzFBJywgLy8gU2hhZG93IGNsb25lIGNsZWF2ZSAodG9vIGNsb3NlKVxyXG4gICAgJ0UxMFMgU3dhdGggT2YgU2lsZW5jZSAyJzogJzVCQkYnLCAvLyBTaGFkb3cgY2xvbmUgY2xlYXZlICh0aW1lZClcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0UxMFMgU2hhZGVmaXJlJzogJzU3MzInLCAvLyBwdXJwbGUgdGFuayB1bWJyYWwgb3Jic1xyXG4gICAgJ0UxMFMgUGl0Y2ggQm9nJzogJzU3MjInLCAvLyBtYXJrZXIgc3ByZWFkIHRoYXQgZHJvcHMgYSBzaGFkb3cgcHVkZGxlXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdFMTBTIFNoYWRvd1xcJ3MgRWRnZSc6ICc1NzI1JywgLy8gVGFua2J1c3RlciBzaW5nbGUgdGFyZ2V0IGZvbGxvd3VwXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ0UxMFMgRGFtYWdlIERvd24gT3JicycsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgc291cmNlOiAnRmxhbWVzaGFkb3cnLCBlZmZlY3RJZDogJzgyQycgfSksXHJcbiAgICAgIG5ldFJlZ2V4RGU6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBzb3VyY2U6ICdTY2hhdHRlbmZsYW1tZScsIGVmZmVjdElkOiAnODJDJyB9KSxcclxuICAgICAgbmV0UmVnZXhGcjogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IHNvdXJjZTogJ0ZsYW1tZSBvbWJyYWxlJywgZWZmZWN0SWQ6ICc4MkMnIH0pLFxyXG4gICAgICBuZXRSZWdleEphOiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgc291cmNlOiAn44K344Oj44OJ44Km44OV44Os44Kk44OgJywgZWZmZWN0SWQ6ICc4MkMnIH0pLFxyXG4gICAgICBuZXRSZWdleENuOiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgc291cmNlOiAn5b2x54OI54GrJywgZWZmZWN0SWQ6ICc4MkMnIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZGFtYWdlJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogYCR7bWF0Y2hlcy5lZmZlY3R9IChwYXJ0aWFsIHN0YWNrKWAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRTEwUyBEYW1hZ2UgRG93biBCb3NzJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgLy8gU2hhY2tsZXMgYmVpbmcgbWVzc2VkIHVwIGFwcGVhciB0byBqdXN0IGdpdmUgdGhlIERhbWFnZSBEb3duLCB3aXRoIG5vdGhpbmcgZWxzZS5cclxuICAgICAgLy8gTWVzc2luZyB1cCB0b3dlcnMgaXMgdGhlIFRocmljZS1Db21lIFJ1aW4gZWZmZWN0ICg5RTIpLCBidXQgYWxzbyBEYW1hZ2UgRG93bi5cclxuICAgICAgLy8gVE9ETzogc29tZSBvZiB0aGVzZSB3aWxsIGJlIGR1cGxpY2F0ZWQgd2l0aCBvdGhlcnMsIGxpa2UgYEUxMFMgVGhyb25lIE9mIFNoYWRvd2AuXHJcbiAgICAgIC8vIE1heWJlIGl0J2QgYmUgbmljZSB0byBmaWd1cmUgb3V0IGhvdyB0byBwdXQgdGhlIGRhbWFnZSBtYXJrZXIgb24gdGhhdD9cclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBzb3VyY2U6ICdTaGFkb3drZWVwZXInLCBlZmZlY3RJZDogJzgyQycgfSksXHJcbiAgICAgIG5ldFJlZ2V4RGU6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBzb3VyY2U6ICdTY2hhdHRlbmvDtm5pZycsIGVmZmVjdElkOiAnODJDJyB9KSxcclxuICAgICAgbmV0UmVnZXhGcjogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IHNvdXJjZTogJ1JvaSBEZSBMXFwnT21icmUnLCBlZmZlY3RJZDogJzgyQycgfSksXHJcbiAgICAgIG5ldFJlZ2V4SmE6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBzb3VyY2U6ICflvbHjga7njosnLCBlZmZlY3RJZDogJzgyQycgfSksXHJcbiAgICAgIG5ldFJlZ2V4Q246IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBzb3VyY2U6ICflvbHkuYvnjosnLCBlZmZlY3RJZDogJzgyQycgfSksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICdkYW1hZ2UnLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBgJHttYXRjaGVzLmVmZmVjdH1gIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyBTaGFkb3cgV2FycmlvciA0IGRvZyByb29tIGNsZWF2ZVxyXG4gICAgICAvLyBUaGlzIGNhbiBiZSBtaXRpZ2F0ZWQgYnkgdGhlIHdob2xlIGdyb3VwLCBzbyBhZGQgYSBkYW1hZ2UgY29uZGl0aW9uLlxyXG4gICAgICBpZDogJ0UxMFMgQmFyYnMgT2YgQWdvbnknLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6IFsnNTcyQScsICc1QjI3J10sIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gZGF0YS5EYW1hZ2VGcm9tTWF0Y2hlcyhtYXRjaGVzKSA+IDAsXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5FZGVuc1Byb21pc2VBbmFtb3JwaG9zaXMsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0UxMU4gQnVybnQgU3RyaWtlIExpZ2h0bmluZyc6ICc1NjJFJywgLy8gTGluZSBjbGVhdmVcclxuICAgICdFMTFOIEJ1cm50IFN0cmlrZSBGaXJlJzogJzU2MkMnLCAvLyBMaW5lIGNsZWF2ZVxyXG4gICAgJ0UxMU4gQnVybnQgU3RyaWtlIEhvbHknOiAnNTYzMCcsIC8vIExpbmUgY2xlYXZlXHJcbiAgICAnRTExTiBCdXJub3V0JzogJzU2MkYnLCAvLyBCdXJudCBTdHJpa2UgbGlnaHRuaW5nIGV4cGFuc2lvblxyXG4gICAgJ0UxMU4gU2hpbmluZyBCbGFkZSc6ICc1NjMxJywgLy8gQmFpdGVkIGV4cGxvc2lvblxyXG4gICAgJ0UxMU4gSGFsbyBPZiBGbGFtZSBCcmlnaHRmaXJlJzogJzU2M0InLCAvLyBSZWQgY2lyY2xlIGludGVybWlzc2lvbiBleHBsb3Npb25cclxuICAgICdFMTFOIEhhbG8gT2YgTGV2aW4gQnJpZ2h0ZmlyZSc6ICc1NjNDJywgLy8gQmx1ZSBjaXJjbGUgaW50ZXJtaXNzaW9uIGV4cGxvc2lvblxyXG4gICAgJ0UxMU4gUmVzb3VuZGluZyBDcmFjayc6ICc1NjREJywgLy8gRGVtaS1HdWt1bWF0eiAyNzAgZGVncmVlIGZyb250YWwgY2xlYXZlXHJcbiAgICAnRTExTiBJbWFnZSBCdXJudCBTdHJpa2UgTGlnaHRuaW5nJzogJzU2NDUnLCAvLyBGYXRlIEJyZWFrZXIncyBJbWFnZSBsaW5lIGNsZWF2ZVxyXG4gICAgJ0UxMU4gSW1hZ2UgQnVybnQgU3RyaWtlIEZpcmUnOiAnNTY0MycsIC8vIEZhdGUgQnJlYWtlcidzIEltYWdlIGxpbmUgY2xlYXZlXHJcbiAgICAnRTExTiBJbWFnZSBCdXJub3V0JzogJzU2NDYnLCAvLyBGYXRlIEJyZWFrZXIncyBJbWFnZSBsaWdodG5pbmcgZXhwYW5zaW9uXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnRTExTiBCbGFzdGluZyBab25lJzogJzU2M0UnLCAvLyBQcmlzbWF0aWMgRGVjZXB0aW9uIGNoYXJnZXNcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0UxMU4gQnVybiBNYXJrJzogJzU2NEYnLCAvLyBQb3dkZXIgTWFyayBkZWJ1ZmYgZXhwbG9zaW9uXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ0UxMU4gQmxhc3RidXJuIEtub2NrZWQgT2ZmJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICAvLyA1NjJEID0gQnVybnQgU3RyaWtlIGZpcmUgZm9sbG93dXAgZHVyaW5nIG1vc3Qgb2YgdGhlIGZpZ2h0XHJcbiAgICAgIC8vIDU2NDQgPSBzYW1lIHRoaW5nLCBidXQgZnJvbSBGYXRlYnJlYWtlcidzIEltYWdlXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogWyc1NjJEJywgJzU2NDQnXSB9KSxcclxuICAgICAgZGVhdGhSZWFzb246IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ0tub2NrZWQgb2ZmJyxcclxuICAgICAgICAgICAgZGU6ICdSdW50ZXJnZWZhbGxlbicsXHJcbiAgICAgICAgICAgIGZyOiAnUmVudmVyc8OpKGUpJyxcclxuICAgICAgICAgICAgamE6ICfjg47jg4Pjgq/jg5Djg4Pjgq8nLFxyXG4gICAgICAgICAgICBjbjogJ+WHu+mAgOWdoOiQvScsXHJcbiAgICAgICAgICAgIGtvOiAn64SJ67CxJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gNTY1QS81NjhEIFNpbnNtb2tlIEJvdW5kIE9mIEZhaXRoIHNoYXJlXHJcbi8vIDU2NUUvNTY5OSBCb3dzaG9jayBoaXRzIHRhcmdldCBvZiA1NjVEICh0d2ljZSkgYW5kIHR3byBvdGhlcnNcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5FZGVuc1Byb21pc2VBbmFtb3JwaG9zaXNTYXZhZ2UsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0UxMVMgQnVybnQgU3RyaWtlIEZpcmUnOiAnNTY1MicsIC8vIExpbmUgY2xlYXZlXHJcbiAgICAnRTExUyBCdXJudCBTdHJpa2UgTGlnaHRuaW5nJzogJzU2NTQnLCAvLyBMaW5lIGNsZWF2ZVxyXG4gICAgJ0UxMVMgQnVybnQgU3RyaWtlIEhvbHknOiAnNTY1NicsIC8vIExpbmUgY2xlYXZlXHJcbiAgICAnRTExUyBTaGluaW5nIEJsYWRlJzogJzU2NTcnLCAvLyBCYWl0ZWQgZXhwbG9zaW9uXHJcbiAgICAnRTExUyBCdXJudCBTdHJpa2UgQ3ljbGUgRmlyZSc6ICc1NjhFJywgLy8gTGluZSBjbGVhdmUgZHVyaW5nIEN5Y2xlXHJcbiAgICAnRTExUyBCdXJudCBTdHJpa2UgQ3ljbGUgTGlnaHRuaW5nJzogJzU2OTUnLCAvLyBMaW5lIGNsZWF2ZSBkdXJpbmcgQ3ljbGVcclxuICAgICdFMTFTIEJ1cm50IFN0cmlrZSBDeWNsZSBIb2x5JzogJzU2OUQnLCAvLyBMaW5lIGNsZWF2ZSBkdXJpbmcgQ3ljbGVcclxuICAgICdFMTFTIFNoaW5pbmcgQmxhZGUgQ3ljbGUnOiAnNTY5RScsIC8vIEJhaXRlZCBleHBsb3Npb24gZHVyaW5nIEN5Y2xlXHJcbiAgICAnRTExUyBIYWxvIE9mIEZsYW1lIEJyaWdodGZpcmUnOiAnNTY2RCcsIC8vIFJlZCBjaXJjbGUgaW50ZXJtaXNzaW9uIGV4cGxvc2lvblxyXG4gICAgJ0UxMVMgSGFsbyBPZiBMZXZpbiBCcmlnaHRmaXJlJzogJzU2NkMnLCAvLyBCbHVlIGNpcmNsZSBpbnRlcm1pc3Npb24gZXhwbG9zaW9uXHJcbiAgICAnRTExUyBQb3J0YWwgT2YgRmxhbWUgQnJpZ2h0IFB1bHNlJzogJzU2NzEnLCAvLyBSZWQgY2FyZCBpbnRlcm1pc3Npb24gZXhwbG9zaW9uXHJcbiAgICAnRTExUyBQb3J0YWwgT2YgTGV2aW4gQnJpZ2h0IFB1bHNlJzogJzU2NzAnLCAvLyBCbHVlIGNhcmQgaW50ZXJtaXNzaW9uIGV4cGxvc2lvblxyXG4gICAgJ0UxMVMgUmVzb25hbnQgV2luZHMnOiAnNTY4OScsIC8vIERlbWktR3VrdW1hdHogXCJnZXQgaW5cIlxyXG4gICAgJ0UxMVMgUmVzb3VuZGluZyBDcmFjayc6ICc1Njg4JywgLy8gRGVtaS1HdWt1bWF0eiAyNzAgZGVncmVlIGZyb250YWwgY2xlYXZlXHJcbiAgICAnRTExUyBJbWFnZSBCdXJudCBTdHJpa2UgTGlnaHRuaW5nJzogJzU2N0InLCAvLyBGYXRlIEJyZWFrZXIncyBJbWFnZSBsaW5lIGNsZWF2ZVxyXG4gICAgJ0UxMU4gSW1hZ2UgQnVybm91dCc6ICc1NjdDJywgLy8gRmF0ZSBCcmVha2VyJ3MgSW1hZ2UgbGlnaHRuaW5nIGV4cGFuc2lvblxyXG4gICAgJ0UxMU4gSW1hZ2UgQnVybnQgU3RyaWtlIEZpcmUnOiAnNTY3OScsIC8vIEZhdGUgQnJlYWtlcidzIEltYWdlIGxpbmUgY2xlYXZlXHJcbiAgICAnRTExTiBJbWFnZSBCdXJudCBTdHJpa2UgSG9seSc6ICc1NjdCJywgLy8gRmF0ZSBCcmVha2VyJ3MgSW1hZ2UgbGluZSBjbGVhdmVcclxuICAgICdFMTFOIEltYWdlIFNoaW5pbmcgQmxhZGUnOiAnNTY3RScsIC8vIEZhdGUgQnJlYWtlcidzIEltYWdlIGJhaXRlZCBleHBsb3Npb25cclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdFMTFTIEJ1cm5vdXQnOiAnNTY1NScsIC8vIEJ1cm50IFN0cmlrZSBsaWdodG5pbmcgZXhwYW5zaW9uXHJcbiAgICAnRTExUyBCdXJub3V0IEN5Y2xlJzogJzU2OTYnLCAvLyBCdXJudCBTdHJpa2UgbGlnaHRuaW5nIGV4cGFuc2lvblxyXG4gICAgJ0UxMVMgQmxhc3RpbmcgWm9uZSc6ICc1Njc0JywgLy8gUHJpc21hdGljIERlY2VwdGlvbiBjaGFyZ2VzXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdFMTFTIEVsZW1lbnRhbCBCcmVhayc6ICc1NjY0JywgLy8gRWxlbWVudGFsIEJyZWFrIHByb3RlYW5cclxuICAgICdFMTFTIEVsZW1lbnRhbCBCcmVhayBDeWNsZSc6ICc1NjhDJywgLy8gRWxlbWVudGFsIEJyZWFrIHByb3RlYW4gZHVyaW5nIEN5Y2xlXHJcbiAgICAnRTExUyBTaW5zbWl0ZSc6ICc1NjY3JywgLy8gTGlnaHRuaW5nIEVsZW1lbnRhbCBCcmVhayBzcHJlYWRcclxuICAgICdFMTFTIFNpbnNtaXRlIEN5Y2xlJzogJzU2OTQnLCAvLyBMaWdodG5pbmcgRWxlbWVudGFsIEJyZWFrIHNwcmVhZCBkdXJpbmcgQ3ljbGVcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ0UxMVMgQnVybiBNYXJrJzogJzU2QTMnLCAvLyBQb3dkZXIgTWFyayBkZWJ1ZmYgZXhwbG9zaW9uXHJcbiAgICAnRTExUyBTaW5zaWdodCAxJzogJzU2NjEnLCAvLyBIb2x5IEJvdW5kIE9mIEZhaXRoIHRldGhlclxyXG4gICAgJ0UxMVMgU2luc2lnaHQgMic6ICc1QkM3JywgLy8gSG9seSBCb3VuZCBPZiBGYWl0aCB0ZXRoZXIgZnJvbSBGYXRlYnJlYWtlcidzIEltYWdlXHJcbiAgICAnRTExUyBTaW5zaWdodCAzJzogJzU2QTAnLCAvLyBIb2x5IEJvdW5kIE9mIEZhaXRoIHRldGhlciBkdXJpbmcgQ3ljbGVcclxuICB9LFxyXG4gIHNvbG9GYWlsOiB7XHJcbiAgICAnRTExUyBIb2x5IFNpbnNpZ2h0IEdyb3VwIFNoYXJlJzogJzU2NjknLFxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6ICdFMTFTIEJsYXN0YnVybiBLbm9ja2VkIE9mZicsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgLy8gNTY1MyA9IEJ1cm50IFN0cmlrZSBmaXJlIGZvbGxvd3VwIGR1cmluZyBtb3N0IG9mIHRoZSBmaWdodFxyXG4gICAgICAvLyA1NjdBID0gc2FtZSB0aGluZywgYnV0IGZyb20gRmF0ZWJyZWFrZXIncyBJbWFnZVxyXG4gICAgICAvLyA1NjhGID0gc2FtZSB0aGluZywgYnV0IGR1cmluZyBDeWNsZSBvZiBGYWl0aFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6IFsnNTY1MycsICc1NjdBJywgJzU2OEYnXSB9KSxcclxuICAgICAgZGVhdGhSZWFzb246IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ0tub2NrZWQgb2ZmJyxcclxuICAgICAgICAgICAgZGU6ICdSdW50ZXJnZWZhbGxlbicsXHJcbiAgICAgICAgICAgIGZyOiAnUmVudmVyc8OpKGUpJyxcclxuICAgICAgICAgICAgamE6ICfjg47jg4Pjgq/jg5Djg4Pjgq8nLFxyXG4gICAgICAgICAgICBjbjogJ+WHu+mAgOWdoOiQvScsXHJcbiAgICAgICAgICAgIGtvOiAn64SJ67CxJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5FZGVuc1Byb21pc2VFdGVybml0eSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnRTEyTiBKdWRnbWVudCBKb2x0IFNpbmdsZSc6ICc1ODVGJywgLy8gUmFtdWggZ2V0IG91dCBjYXN0XHJcbiAgICAnRTEyTiBKdWRnbWVudCBKb2x0JzogJzRFMzAnLCAvLyBSYW11aCBnZXQgb3V0IGNhc3RcclxuICAgICdFMTJOIFRlbXBvcmFyeSBDdXJyZW50IFNpbmdsZSc6ICc1ODVDJywgLy8gTGV2aSBnZXQgdW5kZXIgY2FzdFxyXG4gICAgJ0UxMk4gVGVtcG9yYXJ5IEN1cnJlbnQnOiAnNEUyRCcsIC8vIExldmkgZ2V0IHVuZGVyIGNhc3RcclxuICAgICdFMTJOIENvbmZsYWcgU3RyaWtlIFNpbmdsZSc6ICc1ODVEJywgLy8gSWZyaXQgZ2V0IHNpZGVzIGNhc3RcclxuICAgICdFMTJOIENvbmZsYWcgU3RyaWtlJzogJzRFMkUnLCAvLyBJZnJpdCBnZXQgc2lkZXMgY2FzdFxyXG4gICAgJ0UxMk4gRmVyb3N0b3JtIFNpbmdsZSc6ICc1ODVFJywgLy8gR2FydWRhIGdldCBpbnRlcmNhcmRpbmFscyBjYXN0XHJcbiAgICAnRTEyTiBGZXJvc3Rvcm0nOiAnNEUyRicsIC8vIEdhcnVkYSBnZXQgaW50ZXJjYXJkaW5hbHMgY2FzdFxyXG4gICAgJ0UxMk4gUmFwdHVyb3VzIFJlYWNoIDEnOiAnNTg3OCcsIC8vIEhhaXJjdXRcclxuICAgICdFMTJOIFJhcHR1cm91cyBSZWFjaCAyJzogJzU4NzcnLCAvLyBIYWlyY3V0XHJcbiAgICAnRTEyTiBCb21iIEV4cGxvc2lvbic6ICc1ODZEJywgLy8gU21hbGwgYm9tYiBleHBsb3Npb25cclxuICAgICdFMTJOIFRpdGFuaWMgQm9tYiBFeHBsb3Npb24nOiAnNTg2RicsIC8vIExhcmdlIGJvbWIgZXhwbG9zaW9uXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdFMTJOIEVhcnRoc2hha2VyJzogJzU4ODUnLCAvLyBFYXJ0aHNoYWtlciBvbiBmaXJzdCBwbGF0Zm9ybVxyXG4gICAgJ0UxMk4gUHJvbWlzZSBGcmlnaWQgU3RvbmUgMSc6ICc1ODY3JywgLy8gU2hpdmEgc3ByZWFkIHdpdGggc2xpZGluZ1xyXG4gICAgJ0UxMk4gUHJvbWlzZSBGcmlnaWQgU3RvbmUgMic6ICc1ODY5JywgLy8gU2hpdmEgc3ByZWFkIHdpdGggUmFwdHVyb3VzIFJlYWNoXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCB7IExhbmcgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbGFuZ3VhZ2VzJztcclxuaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgeyBVbnJlYWNoYWJsZUNvZGUgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbm90X3JlYWNoZWQnO1xyXG5pbXBvcnQgT3V0cHV0cyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvb3V0cHV0cyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgTmV0TWF0Y2hlcyB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL25ldF9tYXRjaGVzJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBMb2NhbGVUZXh0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvdHJpZ2dlcic7XHJcbmltcG9ydCB7IHBsYXllckRhbWFnZUZpZWxkcyB9IGZyb20gJy4uLy4uLy4uL29vcHN5X2NvbW1vbic7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIERhdGEgZXh0ZW5kcyBPb3BzeURhdGEge1xyXG4gIGRlY09mZnNldD86IG51bWJlcjtcclxuICBsYXNlck5hbWVUb051bT86IHsgW25hbWU6IHN0cmluZ106IG51bWJlciB9O1xyXG4gIHNjdWxwdHVyZVRldGhlck5hbWVUb0lkPzogeyBbbmFtZTogc3RyaW5nXTogc3RyaW5nIH07XHJcbiAgc2N1bHB0dXJlWVBvc2l0aW9ucz86IHsgW3NjdWxwdHVyZUlkOiBzdHJpbmddOiBudW1iZXIgfTtcclxuICBibGFkZU9mRmxhbWVDb3VudD86IG51bWJlcjtcclxuICBwaWxsYXJJZFRvT3duZXI/OiB7IFtwaWxsYXJJZDogc3RyaW5nXTogc3RyaW5nIH07XHJcbiAgc21hbGxMaW9uSWRUb093bmVyPzogeyBbcGlsbGFySWQ6IHN0cmluZ106IHN0cmluZyB9O1xyXG4gIHNtYWxsTGlvbk93bmVycz86IHN0cmluZ1tdO1xyXG4gIG5vcnRoQmlnTGlvbj86IHN0cmluZztcclxuICBmaXJlPzogeyBbbmFtZTogc3RyaW5nXTogYm9vbGVhbiB9O1xyXG59XHJcblxyXG4vLyBUT0RPOiBhZGQgc2VwYXJhdGUgZGFtYWdlV2Fybi1lc3F1ZSBpY29uIGZvciBkYW1hZ2UgZG93bnM/XHJcbi8vIFRPRE86IDU4QTYgVW5kZXIgVGhlIFdlaWdodCAvIDU4QjIgQ2xhc3NpY2FsIFNjdWxwdHVyZSBtaXNzaW5nIHNvbWVib2R5IGluIHBhcnR5IHdhcm5pbmc/XHJcbi8vIFRPRE86IDU4Q0EgRGFyayBXYXRlciBJSUkgLyA1OEM1IFNoZWxsIENydXNoZXIgc2hvdWxkIGhpdCBldmVyeW9uZSBpbiBwYXJ0eVxyXG4vLyBUT0RPOiBEYXJrIEFlcm8gSUlJIDU4RDQgc2hvdWxkIG5vdCBiZSBhIHNoYXJlIGV4Y2VwdCBvbiBhZHZhbmNlZCByZWxhdGl2aXR5IGZvciBkb3VibGUgYWVyby5cclxuLy8gKGZvciBnYWlucyBlZmZlY3QsIHNpbmdsZSBhZXJvID0gfjIzIHNlY29uZHMsIGRvdWJsZSBhZXJvID0gfjMxIHNlY29uZHMgZHVyYXRpb24pXHJcblxyXG4vLyBEdWUgdG8gY2hhbmdlcyBpbnRyb2R1Y2VkIGluIHBhdGNoIDUuMiwgb3ZlcmhlYWQgbWFya2VycyBub3cgaGF2ZSBhIHJhbmRvbSBvZmZzZXRcclxuLy8gYWRkZWQgdG8gdGhlaXIgSUQuIFRoaXMgb2Zmc2V0IGN1cnJlbnRseSBhcHBlYXJzIHRvIGJlIHNldCBwZXIgaW5zdGFuY2UsIHNvXHJcbi8vIHdlIGNhbiBkZXRlcm1pbmUgd2hhdCBpdCBpcyBmcm9tIHRoZSBmaXJzdCBvdmVyaGVhZCBtYXJrZXIgd2Ugc2VlLlxyXG4vLyBUaGUgZmlyc3QgMUIgbWFya2VyIGluIHRoZSBlbmNvdW50ZXIgaXMgdGhlIGZvcm1sZXNzIHRhbmtidXN0ZXIsIElEIDAwNEYuXHJcbmNvbnN0IGZpcnN0SGVhZG1hcmtlciA9IHBhcnNlSW50KCcwMERBJywgMTYpO1xyXG5jb25zdCBnZXRIZWFkbWFya2VySWQgPSAoZGF0YTogRGF0YSwgbWF0Y2hlczogTmV0TWF0Y2hlc1snSGVhZE1hcmtlciddKSA9PiB7XHJcbiAgLy8gSWYgd2UgbmFpdmVseSBqdXN0IGNoZWNrICFkYXRhLmRlY09mZnNldCBhbmQgbGVhdmUgaXQsIGl0IGJyZWFrcyBpZiB0aGUgZmlyc3QgbWFya2VyIGlzIDAwREEuXHJcbiAgLy8gKFRoaXMgbWFrZXMgdGhlIG9mZnNldCAwLCBhbmQgITAgaXMgdHJ1ZS4pXHJcbiAgaWYgKHR5cGVvZiBkYXRhLmRlY09mZnNldCA9PT0gJ3VuZGVmaW5lZCcpXHJcbiAgICBkYXRhLmRlY09mZnNldCA9IHBhcnNlSW50KG1hdGNoZXMuaWQsIDE2KSAtIGZpcnN0SGVhZG1hcmtlcjtcclxuICAvLyBUaGUgbGVhZGluZyB6ZXJvZXMgYXJlIHN0cmlwcGVkIHdoZW4gY29udmVydGluZyBiYWNrIHRvIHN0cmluZywgc28gd2UgcmUtYWRkIHRoZW0gaGVyZS5cclxuICAvLyBGb3J0dW5hdGVseSwgd2UgZG9uJ3QgaGF2ZSB0byB3b3JyeSBhYm91dCB3aGV0aGVyIG9yIG5vdCB0aGlzIGlzIHJvYnVzdCxcclxuICAvLyBzaW5jZSB3ZSBrbm93IGFsbCB0aGUgSURzIHRoYXQgd2lsbCBiZSBwcmVzZW50IGluIHRoZSBlbmNvdW50ZXIuXHJcbiAgcmV0dXJuIChwYXJzZUludChtYXRjaGVzLmlkLCAxNikgLSBkYXRhLmRlY09mZnNldCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKCkucGFkU3RhcnQoNCwgJzAnKTtcclxufTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5FZGVuc1Byb21pc2VFdGVybml0eVNhdmFnZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnRTEyUyBQcm9taXNlIFJhcHR1cm91cyBSZWFjaCBMZWZ0JzogJzU4QUQnLCAvLyBIYWlyY3V0IHdpdGggbGVmdCBzYWZlIHNpZGVcclxuICAgICdFMTJTIFByb21pc2UgUmFwdHVyb3VzIFJlYWNoIFJpZ2h0JzogJzU4QUUnLCAvLyBIYWlyY3V0IHdpdGggcmlnaHQgc2FmZSBzaWRlXHJcbiAgICAnRTEyUyBQcm9taXNlIFRlbXBvcmFyeSBDdXJyZW50JzogJzRFNDQnLCAvLyBMZXZpIGdldCB1bmRlciBjYXN0IChkYW1hZ2UgZG93bilcclxuICAgICdFMTJTIFByb21pc2UgQ29uZmxhZyBTdHJpa2UnOiAnNEU0NScsIC8vIElmcml0IGdldCBzaWRlcyBjYXN0IChkYW1hZ2UgZG93bilcclxuICAgICdFMTJTIFByb21pc2UgRmVyb3N0b3JtJzogJzRFNDYnLCAvLyBHYXJ1ZGEgZ2V0IGludGVyY2FyZGluYWxzIGNhc3QgKGRhbWFnZSBkb3duKVxyXG4gICAgJ0UxMlMgUHJvbWlzZSBKdWRnbWVudCBKb2x0JzogJzRFNDcnLCAvLyBSYW11aCBnZXQgb3V0IGNhc3QgKGRhbWFnZSBkb3duKVxyXG4gICAgJ0UxMlMgUHJvbWlzZSBTaGF0dGVyJzogJzU4OUMnLCAvLyBJY2UgUGlsbGFyIGV4cGxvc2lvbiBpZiB0ZXRoZXIgbm90IGdvdHRlblxyXG4gICAgJ0UxMlMgUHJvbWlzZSBJbXBhY3QnOiAnNThBMScsIC8vIFRpdGFuIGJvbWIgZHJvcFxyXG4gICAgJ0UxMlMgT3JhY2xlIERhcmsgQmxpenphcmQgSUlJJzogJzU4RDMnLCAvLyBSZWxhdGl2aXR5IGRvbnV0IG1lY2hhbmljXHJcbiAgICAnRTEyUyBPcmFjbGUgQXBvY2FseXBzZSc6ICc1OEU2JywgLy8gTGlnaHQgdXAgY2lyY2xlIGV4cGxvc2lvbnMgKGRhbWFnZSBkb3duKVxyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ0UxMlMgT3JhY2xlIE1hZWxzdHJvbSc6ICc1OERBJywgLy8gQWR2YW5jZWQgUmVsYXRpdml0eSB0cmFmZmljIGxpZ2h0IGFvZVxyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RGYWlsOiB7XHJcbiAgICAnRTEyUyBPcmFjbGUgRG9vbSc6ICc5RDQnLCAvLyBSZWxhdGl2aXR5IHB1bmlzaG1lbnQgZm9yIG11bHRpcGxlIG1pc3Rha2VzXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdFMTJTIFByb21pc2UgRnJpZ2lkIFN0b25lJzogJzU4OUUnLCAvLyBTaGl2YSBzcHJlYWRcclxuICAgICdFMTJTIE9yYWNsZSBEYXJrZXN0IERhbmNlJzogJzRFMzMnLCAvLyBGYXJ0aGVzdCB0YXJnZXQgYmFpdCArIGp1bXAgYmVmb3JlIGtub2NrYmFja1xyXG4gICAgJ0UxMlMgT3JhY2xlIERhcmsgQ3VycmVudCc6ICc1OEQ4JywgLy8gQmFpdGVkIHRyYWZmaWMgbGlnaHQgbGFzZXJzXHJcbiAgICAnRTEyUyBPcmFjbGUgU3Bpcml0IFRha2VyJzogJzU4QzYnLCAvLyBSYW5kb20ganVtcCBzcHJlYWQgbWVjaGFuaWMgYWZ0ZXIgU2hlbGwgQ3J1c2hlclxyXG4gICAgJ0UxMlMgT3JhY2xlIFNvbWJlciBEYW5jZSAxJzogJzU4QkYnLCAvLyBGYXJ0aGVzdCB0YXJnZXQgYmFpdCBmb3IgRHVhbCBBcG9jYWx5cHNlXHJcbiAgICAnRTEyUyBPcmFjbGUgU29tYmVyIERhbmNlIDInOiAnNThDMCcsIC8vIFNlY29uZCBzb21iZXIgZGFuY2UganVtcFxyXG4gIH0sXHJcbiAgc2hhcmVGYWlsOiB7XHJcbiAgICAnRTEyUyBQcm9taXNlIFdlaWdodCBPZiBUaGUgV29ybGQnOiAnNThBNScsIC8vIFRpdGFuIGJvbWIgYmx1ZSBtYXJrZXJcclxuICAgICdFMTJTIFByb21pc2UgUHVsc2UgT2YgVGhlIExhbmQnOiAnNThBMycsIC8vIFRpdGFuIGJvbWIgeWVsbG93IG1hcmtlclxyXG4gICAgJ0UxMlMgT3JhY2xlIERhcmsgRXJ1cHRpb24gMSc6ICc1OENFJywgLy8gSW5pdGlhbCB3YXJtdXAgc3ByZWFkIG1lY2hhbmljXHJcbiAgICAnRTEyUyBPcmFjbGUgRGFyayBFcnVwdGlvbiAyJzogJzU4Q0QnLCAvLyBSZWxhdGl2aXR5IHNwcmVhZCBtZWNoYW5pY1xyXG4gICAgJ0UxMlMgT3JhY2xlIEJsYWNrIEhhbG8nOiAnNThDNycsIC8vIFRhbmtidXN0ZXIgY2xlYXZlXHJcbiAgfSxcclxuICBzb2xvV2Fybjoge1xyXG4gICAgJ0UxMlMgUHJvbWlzZSBGb3JjZSBPZiBUaGUgTGFuZCc6ICc1OEE0JyxcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIC8vIEJpZyBjaXJjbGUgZ3JvdW5kIGFvZXMgZHVyaW5nIFNoaXZhIGp1bmN0aW9uLlxyXG4gICAgICAvLyBUaGlzIGNhbiBiZSBzaGllbGRlZCB0aHJvdWdoIGFzIGxvbmcgYXMgdGhhdCBwZXJzb24gZG9lc24ndCBzdGFjay5cclxuICAgICAgaWQ6ICdFMTJTIEljaWNsZSBJbXBhY3QnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICc0RTVBJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiBkYXRhLkRhbWFnZUZyb21NYXRjaGVzKG1hdGNoZXMpID4gMCxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmFiaWxpdHkgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRTEyUyBIZWFkbWFya2VyJyxcclxuICAgICAgdHlwZTogJ0hlYWRNYXJrZXInLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5oZWFkTWFya2VyKHt9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGNvbnN0IGlkID0gZ2V0SGVhZG1hcmtlcklkKGRhdGEsIG1hdGNoZXMpO1xyXG4gICAgICAgIGNvbnN0IGZpcnN0TGFzZXJNYXJrZXIgPSAnMDA5MSc7XHJcbiAgICAgICAgY29uc3QgbGFzdExhc2VyTWFya2VyID0gJzAwOTgnO1xyXG4gICAgICAgIGlmIChpZCA+PSBmaXJzdExhc2VyTWFya2VyICYmIGlkIDw9IGxhc3RMYXNlck1hcmtlcikge1xyXG4gICAgICAgICAgLy8gaWRzIGFyZSBzZXF1ZW50aWFsOiAjMSBzcXVhcmUsICMyIHNxdWFyZSwgIzMgc3F1YXJlLCAjNCBzcXVhcmUsICMxIHRyaWFuZ2xlIGV0Y1xyXG4gICAgICAgICAgY29uc3QgZGVjT2Zmc2V0ID0gcGFyc2VJbnQoaWQsIDE2KSAtIHBhcnNlSW50KGZpcnN0TGFzZXJNYXJrZXIsIDE2KTtcclxuXHJcbiAgICAgICAgICAvLyBkZWNPZmZzZXQgaXMgMC03LCBzbyBtYXAgMC0zIHRvIDEtNCBhbmQgNC03IHRvIDEtNC5cclxuICAgICAgICAgIGRhdGEubGFzZXJOYW1lVG9OdW0gPz89IHt9O1xyXG4gICAgICAgICAgZGF0YS5sYXNlck5hbWVUb051bVttYXRjaGVzLnRhcmdldF0gPSBkZWNPZmZzZXQgJSA0ICsgMTtcclxuICAgICAgICB9XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyBUaGVzZSBzY3VscHR1cmVzIGFyZSBhZGRlZCBhdCB0aGUgc3RhcnQgb2YgdGhlIGZpZ2h0LCBzbyB3ZSBuZWVkIHRvIGNoZWNrIHdoZXJlIHRoZXlcclxuICAgICAgLy8gdXNlIHRoZSBcIkNsYXNzaWNhbCBTY3VscHR1cmVcIiBhYmlsaXR5IGFuZCBlbmQgdXAgb24gdGhlIGFyZW5hIGZvciByZWFsLlxyXG4gICAgICBpZDogJ0UxMlMgUHJvbWlzZSBDaGlzZWxlZCBTY3VscHR1cmUgQ2xhc3NpY2FsIFNjdWxwdHVyZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBzb3VyY2U6ICdDaGlzZWxlZCBTY3VscHR1cmUnLCBpZDogJzU4QjInIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgLy8gVGhpcyB3aWxsIHJ1biBwZXIgcGVyc29uIHRoYXQgZ2V0cyBoaXQgYnkgdGhlIHNhbWUgc2N1bHB0dXJlLCBidXQgdGhhdCdzIGZpbmUuXHJcbiAgICAgICAgLy8gUmVjb3JkIHRoZSB5IHBvc2l0aW9uIG9mIGVhY2ggc2N1bHB0dXJlIHNvIHdlIGNhbiB1c2UgaXQgZm9yIGJldHRlciB0ZXh0IGxhdGVyLlxyXG4gICAgICAgIGRhdGEuc2N1bHB0dXJlWVBvc2l0aW9ucyA/Pz0ge307XHJcbiAgICAgICAgZGF0YS5zY3VscHR1cmVZUG9zaXRpb25zW21hdGNoZXMuc291cmNlSWQudG9VcHBlckNhc2UoKV0gPSBwYXJzZUZsb2F0KG1hdGNoZXMueSk7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyBUaGUgc291cmNlIG9mIHRoZSB0ZXRoZXIgaXMgdGhlIHBsYXllciwgdGhlIHRhcmdldCBpcyB0aGUgc2N1bHB0dXJlLlxyXG4gICAgICBpZDogJ0UxMlMgUHJvbWlzZSBDaGlzZWxlZCBTY3VscHR1cmUgVGV0aGVyJyxcclxuICAgICAgdHlwZTogJ1RldGhlcicsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLnRldGhlcih7IHRhcmdldDogJ0NoaXNlbGVkIFNjdWxwdHVyZScsIGlkOiAnMDAxMScgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLnNjdWxwdHVyZVRldGhlck5hbWVUb0lkID8/PSB7fTtcclxuICAgICAgICBkYXRhLnNjdWxwdHVyZVRldGhlck5hbWVUb0lkW21hdGNoZXMuc291cmNlXSA9IG1hdGNoZXMudGFyZ2V0SWQudG9VcHBlckNhc2UoKTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRTEyUyBQcm9taXNlIEJsYWRlIE9mIEZsYW1lIENvdW50ZXInLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBzb3VyY2U6ICdDaGlzZWxlZCBTY3VscHR1cmUnLCBpZDogJzU4QjMnIH0pLFxyXG4gICAgICBkZWxheVNlY29uZHM6IDEsXHJcbiAgICAgIHN1cHByZXNzU2Vjb25kczogMSxcclxuICAgICAgcnVuOiAoZGF0YSkgPT4ge1xyXG4gICAgICAgIGRhdGEuYmxhZGVPZkZsYW1lQ291bnQgPSBkYXRhLmJsYWRlT2ZGbGFtZUNvdW50IHx8IDA7XHJcbiAgICAgICAgZGF0YS5ibGFkZU9mRmxhbWVDb3VudCsrO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgLy8gVGhpcyBpcyB0aGUgQ2hpc2VsZWQgU2N1bHB0dXJlIGxhc2VyIHdpdGggdGhlIGxpbWl0IGN1dCBkb3RzLlxyXG4gICAgICBpZDogJ0UxMlMgUHJvbWlzZSBCbGFkZSBPZiBGbGFtZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IHR5cGU6ICcyMicsIHNvdXJjZTogJ0NoaXNlbGVkIFNjdWxwdHVyZScsIGlkOiAnNThCMycgfSksXHJcbiAgICAgIG1pc3Rha2U6IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgaWYgKCFkYXRhLmxhc2VyTmFtZVRvTnVtIHx8ICFkYXRhLnNjdWxwdHVyZVRldGhlck5hbWVUb0lkIHx8ICFkYXRhLnNjdWxwdHVyZVlQb3NpdGlvbnMpXHJcbiAgICAgICAgICByZXR1cm47XHJcblxyXG4gICAgICAgIC8vIEZpbmQgdGhlIHBlcnNvbiB3aG8gaGFzIHRoaXMgbGFzZXIgbnVtYmVyIGFuZCBpcyB0ZXRoZXJlZCB0byB0aGlzIHN0YXR1ZS5cclxuICAgICAgICBjb25zdCBudW1iZXIgPSAoZGF0YS5ibGFkZU9mRmxhbWVDb3VudCB8fCAwKSArIDE7XHJcbiAgICAgICAgY29uc3Qgc291cmNlSWQgPSBtYXRjaGVzLnNvdXJjZUlkLnRvVXBwZXJDYXNlKCk7XHJcbiAgICAgICAgY29uc3QgbmFtZXMgPSBPYmplY3Qua2V5cyhkYXRhLmxhc2VyTmFtZVRvTnVtKTtcclxuICAgICAgICBjb25zdCB3aXRoTnVtID0gbmFtZXMuZmlsdGVyKChuYW1lKSA9PiBkYXRhLmxhc2VyTmFtZVRvTnVtPy5bbmFtZV0gPT09IG51bWJlcik7XHJcbiAgICAgICAgY29uc3Qgb3duZXJzID0gd2l0aE51bS5maWx0ZXIoKG5hbWUpID0+IGRhdGEuc2N1bHB0dXJlVGV0aGVyTmFtZVRvSWQ/LltuYW1lXSA9PT0gc291cmNlSWQpO1xyXG5cclxuICAgICAgICAvLyBpZiBzb21lIGxvZ2ljIGVycm9yLCBqdXN0IGFib3J0LlxyXG4gICAgICAgIGlmIChvd25lcnMubGVuZ3RoICE9PSAxKVxyXG4gICAgICAgICAgcmV0dXJuO1xyXG5cclxuICAgICAgICAvLyBUaGUgb3duZXIgaGl0dGluZyB0aGVtc2VsdmVzIGlzbid0IGEgbWlzdGFrZS4uLnRlY2huaWNhbGx5LlxyXG4gICAgICAgIGlmIChvd25lcnNbMF0gPT09IG1hdGNoZXMudGFyZ2V0KVxyXG4gICAgICAgICAgcmV0dXJuO1xyXG5cclxuICAgICAgICAvLyBOb3cgdHJ5IHRvIGZpZ3VyZSBvdXQgd2hpY2ggc3RhdHVlIGlzIHdoaWNoLlxyXG4gICAgICAgIC8vIFBlb3BsZSBjYW4gcHV0IHRoZXNlIHdoZXJldmVyLiAgVGhleSBjb3VsZCBnbyBzaWRld2F5cywgb3IgZGlhZ29uYWwsIG9yIHdoYXRldmVyLlxyXG4gICAgICAgIC8vIEl0IHNlZW1zIG1vb29vb3N0IHBlb3BsZSBwdXQgdGhlc2Ugbm9ydGggLyBzb3V0aCAob24gdGhlIHNvdXRoIGVkZ2Ugb2YgdGhlIGFyZW5hKS5cclxuICAgICAgICAvLyBMZXQncyBzYXkgYSBtaW5pbXVtIG9mIDIgeWFsbXMgYXBhcnQgaW4gdGhlIHkgZGlyZWN0aW9uIHRvIGNvbnNpZGVyIHRoZW0gXCJub3J0aC9zb3V0aFwiLlxyXG4gICAgICAgIGNvbnN0IG1pbmltdW1ZYWxtc0ZvclN0YXR1ZXMgPSAyO1xyXG5cclxuICAgICAgICBsZXQgaXNTdGF0dWVQb3NpdGlvbktub3duID0gZmFsc2U7XHJcbiAgICAgICAgbGV0IGlzU3RhdHVlTm9ydGggPSBmYWxzZTtcclxuICAgICAgICBjb25zdCBzY3VscHR1cmVJZHMgPSBPYmplY3Qua2V5cyhkYXRhLnNjdWxwdHVyZVlQb3NpdGlvbnMpO1xyXG4gICAgICAgIGlmIChzY3VscHR1cmVJZHMubGVuZ3RoID09PSAyICYmIHNjdWxwdHVyZUlkcy5pbmNsdWRlcyhzb3VyY2VJZCkpIHtcclxuICAgICAgICAgIGNvbnN0IG90aGVySWQgPSBzY3VscHR1cmVJZHNbMF0gPT09IHNvdXJjZUlkID8gc2N1bHB0dXJlSWRzWzFdIDogc2N1bHB0dXJlSWRzWzBdO1xyXG4gICAgICAgICAgY29uc3Qgc291cmNlWSA9IGRhdGEuc2N1bHB0dXJlWVBvc2l0aW9uc1tzb3VyY2VJZF07XHJcbiAgICAgICAgICBjb25zdCBvdGhlclkgPSBkYXRhLnNjdWxwdHVyZVlQb3NpdGlvbnNbb3RoZXJJZCA/PyAnJ107XHJcbiAgICAgICAgICBpZiAoc291cmNlWSA9PT0gdW5kZWZpbmVkIHx8IG90aGVyWSA9PT0gdW5kZWZpbmVkIHx8IG90aGVySWQgPT09IHVuZGVmaW5lZClcclxuICAgICAgICAgICAgdGhyb3cgbmV3IFVucmVhY2hhYmxlQ29kZSgpO1xyXG4gICAgICAgICAgY29uc3QgeURpZmYgPSBNYXRoLmFicyhzb3VyY2VZIC0gb3RoZXJZKTtcclxuICAgICAgICAgIGlmICh5RGlmZiA+IG1pbmltdW1ZYWxtc0ZvclN0YXR1ZXMpIHtcclxuICAgICAgICAgICAgaXNTdGF0dWVQb3NpdGlvbktub3duID0gdHJ1ZTtcclxuICAgICAgICAgICAgaXNTdGF0dWVOb3J0aCA9IHNvdXJjZVkgPCBvdGhlclk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBvd25lciA9IG93bmVyc1swXTtcclxuICAgICAgICBjb25zdCBvd25lck5pY2sgPSBkYXRhLlNob3J0TmFtZShvd25lcik7XHJcbiAgICAgICAgbGV0IHRleHQgPSB7XHJcbiAgICAgICAgICBlbjogYCR7bWF0Y2hlcy5hYmlsaXR5fSAoZnJvbSAke293bmVyTmlja30sICMke251bWJlcn0pYCxcclxuICAgICAgICAgIGRlOiBgJHttYXRjaGVzLmFiaWxpdHl9ICh2b24gJHtvd25lck5pY2t9LCAjJHtudW1iZXJ9KWAsXHJcbiAgICAgICAgICBmcjogYCR7bWF0Y2hlcy5hYmlsaXR5fSAoZGUgJHtvd25lck5pY2t9LCAjJHtudW1iZXJ9KWAsXHJcbiAgICAgICAgICBqYTogYCR7bWF0Y2hlcy5hYmlsaXR5fSAoJHtvd25lck5pY2t944GL44KJ44CBIyR7bnVtYmVyfSlgLFxyXG4gICAgICAgICAgY246IGAke21hdGNoZXMuYWJpbGl0eX0gKOadpeiHqiR7b3duZXJOaWNrfe+8jCMke251bWJlcn0pYCxcclxuICAgICAgICAgIGtvOiBgJHttYXRjaGVzLmFiaWxpdHl9ICjrjIDsg4HsnpAgXCIke293bmVyTmlja31cIiwgJHtudW1iZXJ967KIKWAsXHJcbiAgICAgICAgfTtcclxuICAgICAgICBpZiAoaXNTdGF0dWVQb3NpdGlvbktub3duICYmIGlzU3RhdHVlTm9ydGgpIHtcclxuICAgICAgICAgIHRleHQgPSB7XHJcbiAgICAgICAgICAgIGVuOiBgJHttYXRjaGVzLmFiaWxpdHl9IChmcm9tICR7b3duZXJOaWNrfSwgIyR7bnVtYmVyfSBub3J0aClgLFxyXG4gICAgICAgICAgICBkZTogYCR7bWF0Y2hlcy5hYmlsaXR5fSAodm9uICR7b3duZXJOaWNrfSwgIyR7bnVtYmVyfSBub3JkZW4pYCxcclxuICAgICAgICAgICAgZnI6IGAke21hdGNoZXMuYWJpbGl0eX0gKGRlICR7b3duZXJOaWNrfSwgIyR7bnVtYmVyfSBub3JkKWAsXHJcbiAgICAgICAgICAgIGphOiBgJHttYXRjaGVzLmFiaWxpdHl9ICjljJfjga4ke293bmVyTmlja33jgYvjgonjgIEjJHtudW1iZXJ9KWAsXHJcbiAgICAgICAgICAgIGNuOiBgJHttYXRjaGVzLmFiaWxpdHl9ICjmnaXoh6rljJfmlrkke293bmVyTmlja33vvIwjJHtudW1iZXJ9KWAsXHJcbiAgICAgICAgICAgIGtvOiBgJHttYXRjaGVzLmFiaWxpdHl9ICjrjIDsg4HsnpAgXCIke293bmVyTmlja31cIiwgJHtudW1iZXJ967KIIOu2geyqvSlgLFxyXG4gICAgICAgICAgfTtcclxuICAgICAgICB9IGVsc2UgaWYgKGlzU3RhdHVlUG9zaXRpb25Lbm93biAmJiAhaXNTdGF0dWVOb3J0aCkge1xyXG4gICAgICAgICAgdGV4dCA9IHtcclxuICAgICAgICAgICAgZW46IGAke21hdGNoZXMuYWJpbGl0eX0gKGZyb20gJHtvd25lck5pY2t9LCAjJHtudW1iZXJ9IHNvdXRoKWAsXHJcbiAgICAgICAgICAgIGRlOiBgJHttYXRjaGVzLmFiaWxpdHl9ICh2b24gJHtvd25lck5pY2t9LCAjJHtudW1iZXJ9IFPDvGRlbilgLFxyXG4gICAgICAgICAgICBmcjogYCR7bWF0Y2hlcy5hYmlsaXR5fSAoZGUgJHtvd25lck5pY2t9LCAjJHtudW1iZXJ9IHN1ZClgLFxyXG4gICAgICAgICAgICBqYTogYCR7bWF0Y2hlcy5hYmlsaXR5fSAo5Y2X44GuJHtvd25lck5pY2t944GL44KJ44CBIyR7bnVtYmVyfSlgLFxyXG4gICAgICAgICAgICBjbjogYCR7bWF0Y2hlcy5hYmlsaXR5fSAo5p2l6Ieq5Y2X5pa5JHtvd25lck5pY2t977yMIyR7bnVtYmVyfSlgLFxyXG4gICAgICAgICAgICBrbzogYCR7bWF0Y2hlcy5hYmlsaXR5fSAo64yA7IOB7J6QIFwiJHtvd25lck5pY2t9XCIsICR7bnVtYmVyfeuyiCDrgqjsqr0pYCxcclxuICAgICAgICAgIH07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ2ZhaWwnLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICBibGFtZTogb3duZXIsXHJcbiAgICAgICAgICByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIHRleHQ6IHRleHQsXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRTEyUyBQcm9taXNlIEljZSBQaWxsYXIgVHJhY2tlcicsXHJcbiAgICAgIHR5cGU6ICdUZXRoZXInLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy50ZXRoZXIoeyBzb3VyY2U6ICdJY2UgUGlsbGFyJywgaWQ6IFsnMDAwMScsICcwMDM5J10gfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLnBpbGxhcklkVG9Pd25lciA/Pz0ge307XHJcbiAgICAgICAgZGF0YS5waWxsYXJJZFRvT3duZXJbbWF0Y2hlcy5zb3VyY2VJZF0gPSBtYXRjaGVzLnRhcmdldDtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRTEyUyBQcm9taXNlIEljZSBQaWxsYXIgTWlzdGFrZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IHNvdXJjZTogJ0ljZSBQaWxsYXInLCBpZDogJzU4OUInIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgaWYgKCFkYXRhLnBpbGxhcklkVG9Pd25lcilcclxuICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICByZXR1cm4gbWF0Y2hlcy50YXJnZXQgIT09IGRhdGEucGlsbGFySWRUb093bmVyW21hdGNoZXMuc291cmNlSWRdO1xyXG4gICAgICB9LFxyXG4gICAgICBtaXN0YWtlOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGNvbnN0IHBpbGxhck93bmVyID0gZGF0YS5TaG9ydE5hbWUoZGF0YS5waWxsYXJJZFRvT3duZXI/LlttYXRjaGVzLnNvdXJjZUlkXSk7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHR5cGU6ICdmYWlsJyxcclxuICAgICAgICAgIGJsYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogYCR7bWF0Y2hlcy5hYmlsaXR5fSAoZnJvbSAke3BpbGxhck93bmVyfSlgLFxyXG4gICAgICAgICAgICBkZTogYCR7bWF0Y2hlcy5hYmlsaXR5fSAodm9uICR7cGlsbGFyT3duZXJ9KWAsXHJcbiAgICAgICAgICAgIGZyOiBgJHttYXRjaGVzLmFiaWxpdHl9IChkZSAke3BpbGxhck93bmVyfSlgLFxyXG4gICAgICAgICAgICBqYTogYCR7bWF0Y2hlcy5hYmlsaXR5fSAoJHtwaWxsYXJPd25lcn3jgYvjgokpYCxcclxuICAgICAgICAgICAgY246IGAke21hdGNoZXMuYWJpbGl0eX0gKOadpeiHqiR7cGlsbGFyT3duZXJ9KWAsXHJcbiAgICAgICAgICAgIGtvOiBgJHttYXRjaGVzLmFiaWxpdHl9ICjrjIDsg4HsnpAgXCIke3BpbGxhck93bmVyfVwiKWAsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0UxMlMgUHJvbWlzZSBHYWluIEZpcmUgUmVzaXN0YW5jZSBEb3duIElJJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgLy8gVGhlIEJlYXN0bHkgU2N1bHB0dXJlIGdpdmVzIGEgMyBzZWNvbmQgZGVidWZmLCB0aGUgUmVnYWwgU2N1bHB0dXJlIGdpdmVzIGEgMTRzIG9uZS5cclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzgzMicgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLmZpcmUgPz89IHt9O1xyXG4gICAgICAgIGRhdGEuZmlyZVttYXRjaGVzLnRhcmdldF0gPSB0cnVlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFMTJTIFByb21pc2UgTG9zZSBGaXJlIFJlc2lzdGFuY2UgRG93biBJSScsXHJcbiAgICAgIHR5cGU6ICdMb3Nlc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmxvc2VzRWZmZWN0KHsgZWZmZWN0SWQ6ICc4MzInIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS5maXJlID8/PSB7fTtcclxuICAgICAgICBkYXRhLmZpcmVbbWF0Y2hlcy50YXJnZXRdID0gZmFsc2U7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0UxMlMgUHJvbWlzZSBTbWFsbCBMaW9uIFRldGhlcicsXHJcbiAgICAgIHR5cGU6ICdUZXRoZXInLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy50ZXRoZXIoeyBzb3VyY2U6ICdCZWFzdGx5IFNjdWxwdHVyZScsIGlkOiAnMDAxMScgfSksXHJcbiAgICAgIG5ldFJlZ2V4RGU6IE5ldFJlZ2V4ZXMudGV0aGVyKHsgc291cmNlOiAnQWJiaWxkIEVpbmVzIEzDtndlbicsIGlkOiAnMDAxMScgfSksXHJcbiAgICAgIG5ldFJlZ2V4RnI6IE5ldFJlZ2V4ZXMudGV0aGVyKHsgc291cmNlOiAnQ3LDqWF0aW9uIEzDqW9uaW5lJywgaWQ6ICcwMDExJyB9KSxcclxuICAgICAgbmV0UmVnZXhKYTogTmV0UmVnZXhlcy50ZXRoZXIoeyBzb3VyY2U6ICflibXjgonjgozjgZ/njYXlrZAnLCBpZDogJzAwMTEnIH0pLFxyXG4gICAgICBuZXRSZWdleENuOiBOZXRSZWdleGVzLnRldGhlcih7IHNvdXJjZTogJ+iiq+WIm+mAoOeahOeLruWtkCcsIGlkOiAnMDAxMScgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLnNtYWxsTGlvbklkVG9Pd25lciA/Pz0ge307XHJcbiAgICAgICAgZGF0YS5zbWFsbExpb25JZFRvT3duZXJbbWF0Y2hlcy5zb3VyY2VJZC50b1VwcGVyQ2FzZSgpXSA9IG1hdGNoZXMudGFyZ2V0O1xyXG4gICAgICAgIGRhdGEuc21hbGxMaW9uT3duZXJzID8/PSBbXTtcclxuICAgICAgICBkYXRhLnNtYWxsTGlvbk93bmVycy5wdXNoKG1hdGNoZXMudGFyZ2V0KTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRTEyUyBQcm9taXNlIFNtYWxsIExpb24gTGlvbnNibGF6ZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBzb3VyY2U6ICdCZWFzdGx5IFNjdWxwdHVyZScsIGlkOiAnNThCOScgfSksXHJcbiAgICAgIG5ldFJlZ2V4RGU6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBzb3VyY2U6ICdBYmJpbGQgRWluZXMgTMO2d2VuJywgaWQ6ICc1OEI5JyB9KSxcclxuICAgICAgbmV0UmVnZXhGcjogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IHNvdXJjZTogJ0Nyw6lhdGlvbiBMw6lvbmluZScsIGlkOiAnNThCOScgfSksXHJcbiAgICAgIG5ldFJlZ2V4SmE6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBzb3VyY2U6ICflibXjgonjgozjgZ/njYXlrZAnLCBpZDogJzU4QjknIH0pLFxyXG4gICAgICBuZXRSZWdleENuOiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgc291cmNlOiAn6KKr5Yib6YCg55qE54uu5a2QJywgaWQ6ICc1OEI5JyB9KSxcclxuICAgICAgbWlzdGFrZTogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICAvLyBGb2xrcyBiYWl0aW5nIHRoZSBiaWcgbGlvbiBzZWNvbmQgY2FuIHRha2UgdGhlIGZpcnN0IHNtYWxsIGxpb24gaGl0LFxyXG4gICAgICAgIC8vIHNvIGl0J3Mgbm90IHN1ZmZpY2llbnQgdG8gY2hlY2sgb25seSB0aGUgb3duZXIuXHJcbiAgICAgICAgaWYgKCFkYXRhLnNtYWxsTGlvbk93bmVycylcclxuICAgICAgICAgIHJldHVybjtcclxuICAgICAgICBjb25zdCBvd25lciA9IGRhdGEuc21hbGxMaW9uSWRUb093bmVyPy5bbWF0Y2hlcy5zb3VyY2VJZC50b1VwcGVyQ2FzZSgpXTtcclxuICAgICAgICBpZiAoIW93bmVyKVxyXG4gICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIGlmIChtYXRjaGVzLnRhcmdldCA9PT0gb3duZXIpXHJcbiAgICAgICAgICByZXR1cm47XHJcblxyXG4gICAgICAgIC8vIElmIHRoZSB0YXJnZXQgYWxzbyBoYXMgYSBzbWFsbCBsaW9uIHRldGhlciwgdGhhdCBpcyBhbHdheXMgYSBtaXN0YWtlLlxyXG4gICAgICAgIC8vIE90aGVyd2lzZSwgaXQncyBvbmx5IGEgbWlzdGFrZSBpZiB0aGUgdGFyZ2V0IGhhcyBhIGZpcmUgZGVidWZmLlxyXG4gICAgICAgIGNvbnN0IGhhc1NtYWxsTGlvbiA9IGRhdGEuc21hbGxMaW9uT3duZXJzLmluY2x1ZGVzKG1hdGNoZXMudGFyZ2V0KTtcclxuICAgICAgICBjb25zdCBoYXNGaXJlRGVidWZmID0gZGF0YS5maXJlICYmIGRhdGEuZmlyZVttYXRjaGVzLnRhcmdldF07XHJcblxyXG4gICAgICAgIGlmIChoYXNTbWFsbExpb24gfHwgaGFzRmlyZURlYnVmZikge1xyXG4gICAgICAgICAgY29uc3Qgb3duZXJOaWNrID0gZGF0YS5TaG9ydE5hbWUob3duZXIpO1xyXG5cclxuICAgICAgICAgIGNvbnN0IGNlbnRlclkgPSAtNzU7XHJcbiAgICAgICAgICBjb25zdCB4ID0gcGFyc2VGbG9hdChtYXRjaGVzLngpO1xyXG4gICAgICAgICAgY29uc3QgeSA9IHBhcnNlRmxvYXQobWF0Y2hlcy55KTtcclxuICAgICAgICAgIGxldCBkaXJPYmogPSBudWxsO1xyXG4gICAgICAgICAgaWYgKHkgPCBjZW50ZXJZKSB7XHJcbiAgICAgICAgICAgIGlmICh4ID4gMClcclxuICAgICAgICAgICAgICBkaXJPYmogPSBPdXRwdXRzLmRpck5FO1xyXG4gICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgZGlyT2JqID0gT3V0cHV0cy5kaXJOVztcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGlmICh4ID4gMClcclxuICAgICAgICAgICAgICBkaXJPYmogPSBPdXRwdXRzLmRpclNFO1xyXG4gICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgZGlyT2JqID0gT3V0cHV0cy5kaXJTVztcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICB0eXBlOiAnZmFpbCcsXHJcbiAgICAgICAgICAgIGJsYW1lOiBvd25lcixcclxuICAgICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICAgIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgICAgZW46IGAke21hdGNoZXMuYWJpbGl0eX0gKGZyb20gJHtvd25lck5pY2t9LCAke2Rpck9ialsnZW4nXX0pYCxcclxuICAgICAgICAgICAgICBkZTogYCR7bWF0Y2hlcy5hYmlsaXR5fSAodm9uICR7b3duZXJOaWNrfSwgJHtkaXJPYmpbJ2RlJ119KWAsXHJcbiAgICAgICAgICAgICAgZnI6IGAke21hdGNoZXMuYWJpbGl0eX0gKGRlICR7b3duZXJOaWNrfSwgJHtkaXJPYmpbJ2ZyJ119KWAsXHJcbiAgICAgICAgICAgICAgamE6IGAke21hdGNoZXMuYWJpbGl0eX0gKCR7b3duZXJOaWNrfeOBi+OCiSwgJHtkaXJPYmpbJ2phJ119KWAsXHJcbiAgICAgICAgICAgICAgY246IGAke21hdGNoZXMuYWJpbGl0eX0gKOadpeiHqiR7b3duZXJOaWNrfSwgJHtkaXJPYmpbJ2NuJ119YCxcclxuICAgICAgICAgICAgICBrbzogYCR7bWF0Y2hlcy5hYmlsaXR5fSAo64yA7IOB7J6QIFwiJHtvd25lck5pY2t9XCIsICR7ZGlyT2JqWydrbyddfSlgLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgfTtcclxuICAgICAgICB9XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0UxMlMgUHJvbWlzZSBOb3J0aCBCaWcgTGlvbicsXHJcbiAgICAgIHR5cGU6ICdBZGRlZENvbWJhdGFudCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFkZGVkQ29tYmF0YW50RnVsbCh7IG5hbWU6ICdSZWdhbCBTY3VscHR1cmUnIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgY29uc3QgeSA9IHBhcnNlRmxvYXQobWF0Y2hlcy55KTtcclxuICAgICAgICBjb25zdCBjZW50ZXJZID0gLTc1O1xyXG4gICAgICAgIGlmICh5IDwgY2VudGVyWSlcclxuICAgICAgICAgIGRhdGEubm9ydGhCaWdMaW9uID0gbWF0Y2hlcy5pZC50b1VwcGVyQ2FzZSgpO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFMTJTIFByb21pc2UgQmlnIExpb24gS2luZ3NibGF6ZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IHNvdXJjZTogJ1JlZ2FsIFNjdWxwdHVyZScsIGlkOiAnNEY5RScgfSksXHJcbiAgICAgIG5ldFJlZ2V4RGU6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IHNvdXJjZTogJ0FiYmlsZCBlaW5lcyBncm/Dn2VuIEzDtndlbicsIGlkOiAnNEY5RScgfSksXHJcbiAgICAgIG5ldFJlZ2V4RnI6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IHNvdXJjZTogJ2Nyw6lhdGlvbiBsw6lvbmluZSByb3lhbGUnLCBpZDogJzRGOUUnIH0pLFxyXG4gICAgICBuZXRSZWdleEphOiBOZXRSZWdleGVzLmFiaWxpdHkoeyBzb3VyY2U6ICflibXjgonjgozjgZ/njYXlrZDnjosnLCBpZDogJzRGOUUnIH0pLFxyXG4gICAgICBuZXRSZWdleENuOiBOZXRSZWdleGVzLmFiaWxpdHkoeyBzb3VyY2U6ICfooqvliJvpgKDnmoTni67lrZDnjosnLCBpZDogJzRGOUUnIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGNvbnN0IHNpbmdsZVRhcmdldCA9IG1hdGNoZXMudHlwZSA9PT0gJzIxJztcclxuICAgICAgICBjb25zdCBoYXNGaXJlRGVidWZmID0gZGF0YS5maXJlICYmIGRhdGEuZmlyZVttYXRjaGVzLnRhcmdldF07XHJcblxyXG4gICAgICAgIC8vIFN1Y2Nlc3MgaWYgb25seSBvbmUgcGVyc29uIHRha2VzIGl0IGFuZCB0aGV5IGhhdmUgbm8gZmlyZSBkZWJ1ZmYuXHJcbiAgICAgICAgaWYgKHNpbmdsZVRhcmdldCAmJiAhaGFzRmlyZURlYnVmZilcclxuICAgICAgICAgIHJldHVybjtcclxuXHJcbiAgICAgICAgY29uc3Qgbm9ydGhCaWdMaW9uOiBMb2NhbGVUZXh0ID0ge1xyXG4gICAgICAgICAgZW46ICdub3J0aCBiaWcgbGlvbicsXHJcbiAgICAgICAgICBkZTogJ05vcmRlbSwgZ3Jvw59lciBMw7Z3ZScsXHJcbiAgICAgICAgICBmcjogJ0dyYW5kIGxpb24gZHUgbm9yZCcsXHJcbiAgICAgICAgICBqYTogJ+Wkp+ODqeOCpOOCquODsyjljJcpJyxcclxuICAgICAgICAgIGNuOiAn5YyX5pa55aSn54uu5a2QJyxcclxuICAgICAgICAgIGtvOiAn67aB7Kq9IO2BsCDsgqzsnpAnLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgY29uc3Qgc291dGhCaWdMaW9uOiBMb2NhbGVUZXh0ID0ge1xyXG4gICAgICAgICAgZW46ICdzb3V0aCBiaWcgbGlvbicsXHJcbiAgICAgICAgICBkZTogJ1PDvGRlbiwgZ3Jvw59lciBMw7Z3ZScsXHJcbiAgICAgICAgICBmcjogJ0dyYW5kIGxpb24gZHUgc3VkJyxcclxuICAgICAgICAgIGphOiAn5aSn44Op44Kk44Kq44OzKOWNlyknLFxyXG4gICAgICAgICAgY246ICfljZfmlrnlpKfni67lrZAnLFxyXG4gICAgICAgICAga286ICfrgqjsqr0g7YGwIOyCrOyekCcsXHJcbiAgICAgICAgfTtcclxuICAgICAgICBjb25zdCBzaGFyZWQ6IExvY2FsZVRleHQgPSB7XHJcbiAgICAgICAgICBlbjogJ3NoYXJlZCcsXHJcbiAgICAgICAgICBkZTogJ2dldGVpbHQnLFxyXG4gICAgICAgICAgZnI6ICdQYXJ0YWfDqShlKScsXHJcbiAgICAgICAgICBqYTogJ+mHjeOBreOBnycsXHJcbiAgICAgICAgICBjbjogJ+mHjeWPoCcsXHJcbiAgICAgICAgICBrbzogJ+qwmeydtCDrp57snYwnLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgY29uc3QgZmlyZURlYnVmZjogTG9jYWxlVGV4dCA9IHtcclxuICAgICAgICAgIGVuOiAnaGFkIGZpcmUnLFxyXG4gICAgICAgICAgZGU6ICdoYXR0ZSBGZXVlcicsXHJcbiAgICAgICAgICBmcjogJ0EgZXUoZSkgbGUgZmV1JyxcclxuICAgICAgICAgIGphOiAn54KO5LuY44GNJyxcclxuICAgICAgICAgIGNuOiAn54GrRGVidWZmJyxcclxuICAgICAgICAgIGtvOiAn7ZmU7Je8IOuUlOuyhO2UhCDrsJvsnYwnLFxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIGNvbnN0IGxhYmVscyA9IFtdO1xyXG4gICAgICAgIGNvbnN0IGxhbmc6IExhbmcgPSBkYXRhLm9wdGlvbnMuUGFyc2VyTGFuZ3VhZ2U7XHJcblxyXG4gICAgICAgIGlmIChkYXRhLm5vcnRoQmlnTGlvbikge1xyXG4gICAgICAgICAgaWYgKGRhdGEubm9ydGhCaWdMaW9uID09PSBtYXRjaGVzLnNvdXJjZUlkKVxyXG4gICAgICAgICAgICBsYWJlbHMucHVzaChub3J0aEJpZ0xpb25bbGFuZ10gPz8gbm9ydGhCaWdMaW9uWydlbiddKTtcclxuICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgbGFiZWxzLnB1c2goc291dGhCaWdMaW9uW2xhbmddID8/IHNvdXRoQmlnTGlvblsnZW4nXSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghc2luZ2xlVGFyZ2V0KVxyXG4gICAgICAgICAgbGFiZWxzLnB1c2goc2hhcmVkW2xhbmddID8/IHNoYXJlZFsnZW4nXSk7XHJcbiAgICAgICAgaWYgKGhhc0ZpcmVEZWJ1ZmYpXHJcbiAgICAgICAgICBsYWJlbHMucHVzaChmaXJlRGVidWZmW2xhbmddID8/IGZpcmVEZWJ1ZmZbJ2VuJ10pO1xyXG5cclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ2ZhaWwnLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIHRleHQ6IGAke21hdGNoZXMuYWJpbGl0eX0gKCR7bGFiZWxzLmpvaW4oJywgJyl9KWAsXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRTEyUyBLbm9ja2VkIE9mZicsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgLy8gNTg5QSA9IEljZSBQaWxsYXIgKHByb21pc2Ugc2hpdmEgcGhhc2UpXHJcbiAgICAgIC8vIDU4QjYgPSBQYWxtIE9mIFRlbXBlcmFuY2UgKHByb21pc2Ugc3RhdHVlIGhhbmQpXHJcbiAgICAgIC8vIDU4QjcgPSBMYXNlciBFeWUgKHByb21pc2UgbGlvbiBwaGFzZSlcclxuICAgICAgLy8gNThDMSA9IERhcmtlc3QgRGFuY2UgKG9yYWNsZSB0YW5rIGp1bXAgKyBrbm9ja2JhY2sgaW4gYmVnaW5uaW5nIGFuZCB0cmlwbGUgYXBvYylcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiBbJzU4OUEnLCAnNThCNicsICc1OEI3JywgJzU4QzEnXSB9KSxcclxuICAgICAgZGVhdGhSZWFzb246IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ0tub2NrZWQgb2ZmJyxcclxuICAgICAgICAgICAgZGU6ICdSdW50ZXJnZWZhbGxlbicsXHJcbiAgICAgICAgICAgIGZyOiAnUmVudmVyc8OpKGUpJyxcclxuICAgICAgICAgICAgamE6ICfjg47jg4Pjgq/jg5Djg4Pjgq8nLFxyXG4gICAgICAgICAgICBjbjogJ+WHu+mAgOWdoOiQvScsXHJcbiAgICAgICAgICAgIGtvOiAn64SJ67CxJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRTEyUyBPcmFjbGUgU2hhZG93ZXllJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnNThEMicsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gZGF0YS5EYW1hZ2VGcm9tTWF0Y2hlcyhtYXRjaGVzKSA+IDAsXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICdmYWlsJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuRWRlbnNHYXRlUmVzdXJyZWN0aW9uLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdFMU4gRWRlblxcJ3MgVGh1bmRlciBJSUknOiAnNDRFRCcsXHJcbiAgICAnRTFOIEVkZW5cXCdzIEJsaXp6YXJkIElJSSc6ICc0NEVDJyxcclxuICAgICdFMU4gUHVyZSBCZWFtJzogJzNEOUUnLFxyXG4gICAgJ0UxTiBQYXJhZGlzZSBMb3N0JzogJzNEQTAnLFxyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ0UxTiBFZGVuXFwncyBGbGFyZSc6ICczRDk3JyxcclxuICAgICdFMU4gUHVyZSBMaWdodCc6ICczREEzJyxcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ0UxTiBGaXJlIElJSSc6ICc0NEVCJyxcclxuICAgICdFMU4gVmljZSBPZiBWYW5pdHknOiAnNDRFNycsIC8vIHRhbmsgbGFzZXJzXHJcbiAgICAnRTFOIFZpY2UgT2YgQXBhdGh5JzogJzQ0RTgnLCAvLyBkcHMgcHVkZGxlc1xyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBUT0RPOiBmYWlsaW5nIHRvIGludGVycnVwdCBNYW5hIEJvb3N0ICgzRDhEKVxyXG4vLyBUT0RPOiBmYWlsaW5nIHRvIHBhc3MgaGVhbGVyIGRlYnVmZj9cclxuLy8gVE9ETzogd2hhdCBoYXBwZW5zIGlmIHlvdSBkb24ndCBraWxsIGEgbWV0ZW9yIGR1cmluZyBmb3VyIG9yYnM/XHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5FZGVuc0dhdGVSZXN1cnJlY3Rpb25TYXZhZ2UsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0UxUyBFZGVuXFwncyBUaHVuZGVyIElJSSc6ICc0NEY3JyxcclxuICAgICdFMVMgRWRlblxcJ3MgQmxpenphcmQgSUlJJzogJzQ0RjYnLFxyXG4gICAgJ0UxUyBFZGVuXFwncyBSZWdhaW5lZCBCbGl6emFyZCBJSUknOiAnNDRGQScsXHJcbiAgICAnRTFTIFB1cmUgQmVhbSBUcmlkZW50IDEnOiAnM0Q4MycsXHJcbiAgICAnRTFTIFB1cmUgQmVhbSBUcmlkZW50IDInOiAnM0Q4NCcsXHJcbiAgICAnRTFTIFBhcmFkaXNlIExvc3QnOiAnM0Q4NycsXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnRTFTIEVkZW5cXCdzIEZsYXJlJzogJzNENzMnLFxyXG4gICAgJ0UxUyBQdXJlIExpZ2h0JzogJzNEOEEnLFxyXG4gIH0sXHJcbiAgc2hhcmVGYWlsOiB7XHJcbiAgICAnRTFTIEZpcmUvVGh1bmRlciBJSUknOiAnNDRGQicsXHJcbiAgICAnRTFTIFB1cmUgQmVhbSBTaW5nbGUnOiAnM0Q4MScsXHJcbiAgICAnRTFTIFZpY2UgT2YgVmFuaXR5JzogJzQ0RjEnLCAvLyB0YW5rIGxhc2Vyc1xyXG4gICAgJ0UxUyBWaWNlIG9mIEFwYXRoeSc6ICc0NEYyJywgLy8gZHBzIHB1ZGRsZXNcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBUT0RPOiBzaGFkb3dleWUgZmFpbHVyZSAodG9wIGxpbmUgZmFpbCwgYm90dG9tIGxpbmUgc3VjY2VzcywgZWZmZWN0IHRoZXJlIHRvbylcclxuLy8gWzE2OjE3OjM1Ljk2Nl0gMTY6NDAwMTEwRkU6Vm9pZHdhbGtlcjo0MEI3OlNoYWRvd2V5ZToxMDYxMjM0NTpUaW5pIFBvdXRpbmk6RjoxMDAwMDoxMDAxOTBGOlxyXG4vLyBbMTY6MTc6MzUuOTY2XSAxNjo0MDAxMTBGRTpWb2lkd2Fsa2VyOjQwQjc6U2hhZG93ZXllOjEwNjc4OTBBOlBvdGF0byBDaGlwcHk6MTowOjFDOjgwMDA6XHJcbi8vIGdhaW5zIHRoZSBlZmZlY3Qgb2YgUGV0cmlmaWNhdGlvbiBmcm9tIFZvaWR3YWxrZXIgZm9yIDEwLjAwIFNlY29uZHMuXHJcbi8vIFRPRE86IHB1ZGRsZSBmYWlsdXJlP1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkVkZW5zR2F0ZURlc2NlbnQsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0UyTiBEb29tdm9pZCBTbGljZXInOiAnM0UzQycsXHJcbiAgICAnRTJOIERvb212b2lkIEd1aWxsb3RpbmUnOiAnM0UzQicsXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ0UyTiBOeXgnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICczRTNEJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ3dhcm4nLFxyXG4gICAgICAgICAgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnQm9vcGVkJyxcclxuICAgICAgICAgICAgZGU6ICdOeXggYmVyw7xocnQnLFxyXG4gICAgICAgICAgICBmcjogJ01hbHVzIGRlIGTDqWfDonRzJyxcclxuICAgICAgICAgICAgamE6ICfpm5HprZrjgavlvZPjgZ/jgosnLFxyXG4gICAgICAgICAgICBjbjogJ+WQg+WktOS6hicsXHJcbiAgICAgICAgICAgIGtvOiAn64uJ7IqkJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcbmltcG9ydCB7IHBsYXllckRhbWFnZUZpZWxkcyB9IGZyb20gJy4uLy4uLy4uL29vcHN5X2NvbW1vbic7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gVE9ETzogc2hhZG93ZXllIGZhaWx1cmVcclxuLy8gVE9ETzogRW1wdHkgSGF0ZSAoM0U1OS8zRTVBKSBoaXRzIGV2ZXJ5Ym9keSwgc28gaGFyZCB0byB0ZWxsIGFib3V0IGtub2NrYmFja1xyXG4vLyBUT0RPOiBtYXliZSBtYXJrIGhlbGwgd2luZCBwZW9wbGUgd2hvIGdvdCBjbGlwcGVkIGJ5IHN0YWNrP1xyXG4vLyBUT0RPOiBtaXNzaW5nIHB1ZGRsZXM/XHJcbi8vIFRPRE86IG1pc3NpbmcgbGlnaHQvZGFyayBjaXJjbGUgc3RhY2tcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5FZGVuc0dhdGVEZXNjZW50U2F2YWdlLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdFMlMgRG9vbXZvaWQgU2xpY2VyJzogJzNFNTAnLFxyXG4gICAgJ0UzUyBFbXB0eSBSYWdlJzogJzNFNkMnLFxyXG4gICAgJ0UzUyBEb29tdm9pZCBHdWlsbG90aW5lJzogJzNFNEYnLFxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnRTJTIERvb212b2lkIENsZWF2ZXInOiAnM0U2NCcsXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ0UyUyBTaGFkb3dleWUnLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICAvLyBTdG9uZSBDdXJzZVxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnNTg5JyB9KSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ2ZhaWwnLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmVmZmVjdCB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFMlMgTnl4JyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnM0U1MScsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHR5cGU6ICd3YXJuJyxcclxuICAgICAgICAgIGJsYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ0Jvb3BlZCcsXHJcbiAgICAgICAgICAgIGRlOiAnTnl4IGJlcsO8aHJ0JyxcclxuICAgICAgICAgICAgZnI6ICdNYWx1cyBkZSBkw6lnw6J0cycsXHJcbiAgICAgICAgICAgIGphOiAn6ZuR6a2a44Gr5b2T44Gf44KLJyxcclxuICAgICAgICAgICAgY246ICflkIPlpLTkuoYnLFxyXG4gICAgICAgICAgICBrbzogJ+uLieyKpCcsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuRWRlbnNHYXRlSW51bmRhdGlvbixcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnRTNOIE1vbnN0ZXIgV2F2ZSAxJzogJzNGQ0EnLFxyXG4gICAgJ0UzTiBNb25zdGVyIFdhdmUgMic6ICczRkU5JyxcclxuICAgICdFM04gTWFlbHN0cm9tJzogJzNGRDknLFxyXG4gICAgJ0UzTiBTd2lybGluZyBUc3VuYW1pJzogJzNGRDUnLFxyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ0UzTiBUZW1wb3JhcnkgQ3VycmVudCAxJzogJzNGQ0UnLFxyXG4gICAgJ0UzTiBUZW1wb3JhcnkgQ3VycmVudCAyJzogJzNGQ0QnLFxyXG4gICAgJ0UzTiBTcGlubmluZyBEaXZlJzogJzNGREInLFxyXG4gIH0sXHJcbiAgc2hhcmVGYWlsOiB7XHJcbiAgICAnRTNOIFJpcCBDdXJyZW50JzogJzNGQzcnLFxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBUT0RPOiBTY291cmluZyBUc3VuYW1pICgzQ0UwKSBvbiBzb21lYm9keSBvdGhlciB0aGFuIHRhcmdldFxyXG4vLyBUT0RPOiBTd2VlcGluZyBUc3VuYW1pICgzRkY1KSBvbiBzb21lYm9keSBvdGhlciB0aGFuIHRhbmtzXHJcbi8vIFRPRE86IFJpcCBDdXJyZW50ICgzRkUwLCAzRkUxKSBvbiBzb21lYm9keSBvdGhlciB0aGFuIHRhcmdldC90YW5rc1xyXG4vLyBUT0RPOiBCb2lsZWQgQWxpdmUgKDQwMDYpIGlzIGZhaWxpbmcgcHVkZGxlcz8/P1xyXG4vLyBUT0RPOiBmYWlsaW5nIHRvIGNsZWFuc2UgU3BsYXNoaW5nIFdhdGVyc1xyXG4vLyBUT0RPOiBkb2VzIGdldHRpbmcgaGl0IGJ5IHVuZGVyc2VhIHF1YWtlIGNhdXNlIGFuIGFiaWxpdHk/XHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5FZGVuc0dhdGVJbnVuZGF0aW9uU2F2YWdlLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdFM1MgTW9uc3RlciBXYXZlIDEnOiAnM0ZFNScsXHJcbiAgICAnRTNTIE1vbnN0ZXIgV2F2ZSAyJzogJzNGRTknLFxyXG4gICAgJ0UzUyBNYWVsc3Ryb20nOiAnM0ZGQicsXHJcbiAgICAnRTNTIFN3aXJsaW5nIFRzdW5hbWknOiAnM0ZGNCcsXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnRTNTIFRlbXBvcmFyeSBDdXJyZW50IDEnOiAnM0ZFQScsXHJcbiAgICAnRTNTIFRlbXBvcmFyeSBDdXJyZW50IDInOiAnM0ZFQicsXHJcbiAgICAnRTNTIFRlbXBvcmFyeSBDdXJyZW50IDMnOiAnM0ZFQycsXHJcbiAgICAnRTNTIFRlbXBvcmFyeSBDdXJyZW50IDQnOiAnM0ZFRCcsXHJcbiAgICAnRTNTIFNwaW5uaW5nIERpdmUnOiAnM0ZGRCcsXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5FZGVuc0dhdGVTZXB1bHR1cmUsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0U0TiBXZWlnaHQgb2YgdGhlIExhbmQnOiAnNDBFQicsXHJcbiAgICAnRTROIEV2aWwgRWFydGgnOiAnNDBFRicsXHJcbiAgICAnRTROIEFmdGVyc2hvY2sgMSc6ICc0MUI0JyxcclxuICAgICdFNE4gQWZ0ZXJzaG9jayAyJzogJzQwRjAnLFxyXG4gICAgJ0U0TiBFeHBsb3Npb24gMSc6ICc0MEVEJyxcclxuICAgICdFNE4gRXhwbG9zaW9uIDInOiAnNDBGNScsXHJcbiAgICAnRTROIExhbmRzbGlkZSc6ICc0MTFCJyxcclxuICAgICdFNE4gUmlnaHR3YXJkIExhbmRzbGlkZSc6ICc0MTAwJyxcclxuICAgICdFNE4gTGVmdHdhcmQgTGFuZHNsaWRlJzogJzQwRkYnLFxyXG4gICAgJ0U0TiBNYXNzaXZlIExhbmRzbGlkZSc6ICc0MEZDJyxcclxuICAgICdFNE4gU2Vpc21pYyBXYXZlJzogJzQwRjMnLFxyXG4gICAgJ0U0TiBGYXVsdCBMaW5lJzogJzQxMDEnLFxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBEYXRhIGV4dGVuZHMgT29wc3lEYXRhIHtcclxuICBmYXVsdExpbmVUYXJnZXQ/OiBzdHJpbmc7XHJcbn1cclxuXHJcbi8vIFRPRE86IGNvdWxkIHRyYWNrIHBlb3BsZSBnZXQgaGl0dGluZyBieSBtYXJrZXJzIHRoZXkgc2hvdWxkbid0XHJcbi8vIFRPRE86IGNvdWxkIHRyYWNrIG5vbi10YW5rcyBnZXR0aW5nIGhpdCBieSB0YW5rYnVzdGVycywgbWVnYWxpdGhzXHJcbi8vIFRPRE86IGNvdWxkIHRyYWNrIG5vbi10YXJnZXQgZ2V0dGluZyBoaXQgYnkgdGFua2J1c3RlclxyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkVkZW5zR2F0ZVNlcHVsdHVyZVNhdmFnZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnRTRTIFdlaWdodCBvZiB0aGUgTGFuZCc6ICc0MTA4JyxcclxuICAgICdFNFMgRXZpbCBFYXJ0aCc6ICc0MTBDJyxcclxuICAgICdFNFMgQWZ0ZXJzaG9jayAxJzogJzQxQjUnLFxyXG4gICAgJ0U0UyBBZnRlcnNob2NrIDInOiAnNDEwRCcsXHJcbiAgICAnRTRTIEV4cGxvc2lvbic6ICc0MTBBJyxcclxuICAgICdFNFMgTGFuZHNsaWRlJzogJzQxMUInLFxyXG4gICAgJ0U0UyBSaWdodHdhcmQgTGFuZHNsaWRlJzogJzQxMUQnLFxyXG4gICAgJ0U0UyBMZWZ0d2FyZCBMYW5kc2xpZGUnOiAnNDExQycsXHJcbiAgICAnRTRTIE1hc3NpdmUgTGFuZHNsaWRlIDEnOiAnNDExOCcsXHJcbiAgICAnRTRTIE1hc3NpdmUgTGFuZHNsaWRlIDInOiAnNDExOScsXHJcbiAgICAnRTRTIFNlaXNtaWMgV2F2ZSc6ICc0MTEwJyxcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdFNFMgRHVhbCBFYXJ0aGVuIEZpc3RzIDEnOiAnNDEzNScsXHJcbiAgICAnRTRTIER1YWwgRWFydGhlbiBGaXN0cyAyJzogJzQ2ODcnLFxyXG4gICAgJ0U0UyBQbGF0ZSBGcmFjdHVyZSc6ICc0M0VBJyxcclxuICAgICdFNFMgRWFydGhlbiBGaXN0IDEnOiAnNDNDQScsXHJcbiAgICAnRTRTIEVhcnRoZW4gRmlzdCAyJzogJzQzQzknLFxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6ICdFNFMgRmF1bHQgTGluZSBDb2xsZWN0JyxcclxuICAgICAgdHlwZTogJ1N0YXJ0c1VzaW5nJyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuc3RhcnRzVXNpbmcoeyBpZDogJzQxMUUnLCBzb3VyY2U6ICdUaXRhbicgfSksXHJcbiAgICAgIG5ldFJlZ2V4RGU6IE5ldFJlZ2V4ZXMuc3RhcnRzVXNpbmcoeyBpZDogJzQxMUUnLCBzb3VyY2U6ICdUaXRhbicgfSksXHJcbiAgICAgIG5ldFJlZ2V4RnI6IE5ldFJlZ2V4ZXMuc3RhcnRzVXNpbmcoeyBpZDogJzQxMUUnLCBzb3VyY2U6ICdUaXRhbicgfSksXHJcbiAgICAgIG5ldFJlZ2V4SmE6IE5ldFJlZ2V4ZXMuc3RhcnRzVXNpbmcoeyBpZDogJzQxMUUnLCBzb3VyY2U6ICfjgr/jgqTjgr/jg7MnIH0pLFxyXG4gICAgICBuZXRSZWdleENuOiBOZXRSZWdleGVzLnN0YXJ0c1VzaW5nKHsgaWQ6ICc0MTFFJywgc291cmNlOiAn5rOw5Z2mJyB9KSxcclxuICAgICAgbmV0UmVnZXhLbzogTmV0UmVnZXhlcy5zdGFydHNVc2luZyh7IGlkOiAnNDExRScsIHNvdXJjZTogJ+2DgOydtO2DhCcgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLmZhdWx0TGluZVRhcmdldCA9IG1hdGNoZXMudGFyZ2V0O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFNFMgRmF1bHQgTGluZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzQxMUUnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEuZmF1bHRMaW5lVGFyZ2V0ICE9PSBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHR5cGU6ICdmYWlsJyxcclxuICAgICAgICAgIGJsYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ1J1biBPdmVyJyxcclxuICAgICAgICAgICAgZGU6ICdXdXJkZSDDvGJlcmZhaHJlbicsXHJcbiAgICAgICAgICAgIGZyOiAnw4ljcmFzw6koZSknLFxyXG4gICAgICAgICAgICBqYTogJ+eqgemAsuOBq+W9k+OBn+OCiycsXHJcbiAgICAgICAgICAgIGNuOiAn6KKr56K+5LqGJyxcclxuICAgICAgICAgICAga286ICfrj4zsp4Qg66ee7J2MJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcbmltcG9ydCB7IHBsYXllckRhbWFnZUZpZWxkcyB9IGZyb20gJy4uLy4uLy4uL29vcHN5X2NvbW1vbic7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIERhdGEgZXh0ZW5kcyBPb3BzeURhdGEge1xyXG4gIGhhc09yYj86IHsgW25hbWU6IHN0cmluZ106IGJvb2xlYW4gfTtcclxuICBjbG91ZE1hcmtlcnM/OiBzdHJpbmdbXTtcclxufVxyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkVkZW5zVmVyc2VGdWxtaW5hdGlvbixcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnRTVOIEltcGFjdCc6ICc0RTNBJywgLy8gU3RyYXRvc3BlYXIgbGFuZGluZyBBb0VcclxuICAgICdFNU4gTGlnaHRuaW5nIEJvbHQnOiAnNEI5QycsIC8vIFN0b3JtY2xvdWQgc3RhbmRhcmQgYXR0YWNrXHJcbiAgICAnRTVOIEdhbGxvcCc6ICc0Qjk3JywgLy8gU2lkZXdheXMgYWRkIGNoYXJnZVxyXG4gICAgJ0U1TiBTaG9jayBTdHJpa2UnOiAnNEJBMScsIC8vIFNtYWxsIEFvRSBjaXJjbGVzIGR1cmluZyBUaHVuZGVyc3Rvcm1cclxuICAgICdFNU4gVm9sdCBTdHJpa2UnOiAnNENGMicsIC8vIExhcmdlIEFvRSBjaXJjbGVzIGR1cmluZyBUaHVuZGVyc3Rvcm1cclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdFNU4gSnVkZ21lbnQgSm9sdCc6ICc0QjhGJywgLy8gU3RyYXRvc3BlYXIgZXhwbG9zaW9uc1xyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgLy8gVGhpcyBoYXBwZW5zIHdoZW4gYSBwbGF5ZXIgZ2V0cyA0KyBzdGFja3Mgb2Ygb3Jicy4gRG9uJ3QgYmUgZ3JlZWR5IVxyXG4gICAgICBpZDogJ0U1TiBTdGF0aWMgQ29uZGVuc2F0aW9uJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzhCNScgfSksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5lZmZlY3QgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIC8vIEhlbHBlciBmb3Igb3JiIHBpY2t1cCBmYWlsdXJlc1xyXG4gICAgICBpZDogJ0U1TiBPcmIgR2FpbicsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICc4QjQnIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS5oYXNPcmIgPz89IHt9O1xyXG4gICAgICAgIGRhdGEuaGFzT3JiW21hdGNoZXMudGFyZ2V0XSA9IHRydWU7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0U1TiBPcmIgTG9zZScsXHJcbiAgICAgIHR5cGU6ICdMb3Nlc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmxvc2VzRWZmZWN0KHsgZWZmZWN0SWQ6ICc4QjQnIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS5oYXNPcmIgPz89IHt9O1xyXG4gICAgICAgIGRhdGEuaGFzT3JiW21hdGNoZXMudGFyZ2V0XSA9IGZhbHNlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFNU4gRGl2aW5lIEp1ZGdlbWVudCBWb2x0cycsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzRCOUEnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+ICFkYXRhLmhhc09yYiB8fCAhZGF0YS5oYXNPcmJbbWF0Y2hlcy50YXJnZXRdLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ2ZhaWwnLFxyXG4gICAgICAgICAgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiBgJHttYXRjaGVzLmFiaWxpdHl9IChubyBvcmIpYCxcclxuICAgICAgICAgICAgZGU6IGAke21hdGNoZXMuYWJpbGl0eX0gKGtlaW4gT3JiKWAsXHJcbiAgICAgICAgICAgIGZyOiBgJHttYXRjaGVzLmFiaWxpdHl9IChwYXMgZCdvcmJlKWAsXHJcbiAgICAgICAgICAgIGphOiBgJHttYXRjaGVzLmFiaWxpdHl9ICjpm7fnjonnhKHjgZcpYCxcclxuICAgICAgICAgICAgY246IGAke21hdGNoZXMuYWJpbGl0eX0gKOayoeWQg+eQgylgLFxyXG4gICAgICAgICAgICBrbzogYCR7bWF0Y2hlcy5hYmlsaXR5fSAo6rWs7IqsIOyViOuoueydjClgLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFNU4gU3Rvcm1jbG91ZCBUYXJnZXQgVHJhY2tpbmcnLFxyXG4gICAgICB0eXBlOiAnSGVhZE1hcmtlcicsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmhlYWRNYXJrZXIoeyBpZDogJzAwNkUnIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS5jbG91ZE1hcmtlcnMgPz89IFtdO1xyXG4gICAgICAgIGRhdGEuY2xvdWRNYXJrZXJzLnB1c2gobWF0Y2hlcy50YXJnZXQpO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgLy8gVGhpcyBhYmlsaXR5IGlzIHNlZW4gb25seSBpZiBwbGF5ZXJzIHN0YWNrZWQgdGhlIGNsb3VkcyBpbnN0ZWFkIG9mIHNwcmVhZGluZyB0aGVtLlxyXG4gICAgICBpZDogJ0U1TiBUaGUgUGFydGluZyBDbG91ZHMnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICc0QjlEJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBzdXBwcmVzc1NlY29uZHM6IDMwLFxyXG4gICAgICBtaXN0YWtlOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGZvciAoY29uc3QgbmFtZSBvZiBkYXRhLmNsb3VkTWFya2VycyA/PyBbXSkge1xyXG4gICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgdHlwZTogJ2ZhaWwnLFxyXG4gICAgICAgICAgICBibGFtZTogbmFtZSxcclxuICAgICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICAgIGVuOiBgJHttYXRjaGVzLmFiaWxpdHl9IChjbG91ZHMgdG9vIGNsb3NlKWAsXHJcbiAgICAgICAgICAgICAgZGU6IGAke21hdGNoZXMuYWJpbGl0eX0gKFdvbGtlbiB6dSBuYWhlKWAsXHJcbiAgICAgICAgICAgICAgZnI6IGAke21hdGNoZXMuYWJpbGl0eX0gKG51YWdlcyB0cm9wIHByb2NoZXMpYCxcclxuICAgICAgICAgICAgICBqYTogYCR7bWF0Y2hlcy5hYmlsaXR5fSAo6Zuy6L+R44GZ44GOKWAsXHJcbiAgICAgICAgICAgICAgY246IGAke21hdGNoZXMuYWJpbGl0eX0gKOmbt+S6kemHjeWPoClgLFxyXG4gICAgICAgICAgICAgIGtvOiBgJHttYXRjaGVzLmFiaWxpdHl9ICjqtazrpoTsnbQg64SI66y0IOqwgOq5jOybgClgLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgfTtcclxuICAgICAgICB9XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0U1TiBTdG9ybWNsb3VkIGNsZWFudXAnLFxyXG4gICAgICB0eXBlOiAnSGVhZE1hcmtlcicsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmhlYWRNYXJrZXIoeyBpZDogJzAwNkUnIH0pLFxyXG4gICAgICBkZWxheVNlY29uZHM6IDMwLCAvLyBTdG9ybWNsb3VkcyByZXNvbHZlIHdlbGwgYmVmb3JlIHRoaXMuXHJcbiAgICAgIHJ1bjogKGRhdGEpID0+IHtcclxuICAgICAgICBkZWxldGUgZGF0YS5jbG91ZE1hcmtlcnM7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBEYXRhIGV4dGVuZHMgT29wc3lEYXRhIHtcclxuICBoYXNPcmI/OiB7IFtuYW1lOiBzdHJpbmddOiBib29sZWFuIH07XHJcbiAgaGF0ZWQ/OiB7IFtuYW1lOiBzdHJpbmddOiBib29sZWFuIH07XHJcbiAgY2xvdWRNYXJrZXJzPzogc3RyaW5nW107XHJcbn1cclxuXHJcbi8vIFRPRE86IGlzIHRoZXJlIGEgZGlmZmVyZW50IGFiaWxpdHkgaWYgdGhlIHNoaWVsZCBkdXR5IGFjdGlvbiBpc24ndCB1c2VkIHByb3Blcmx5P1xyXG4vLyBUT0RPOiBpcyB0aGVyZSBhbiBhYmlsaXR5IGZyb20gUmFpZGVuICh0aGUgYmlyZCkgaWYgeW91IGdldCBlYXRlbj9cclxuLy8gVE9ETzogbWF5YmUgY2hhaW4gbGlnaHRuaW5nIHdhcm5pbmcgaWYgeW91IGdldCBoaXQgd2hpbGUgeW91IGhhdmUgc3lzdGVtIHNob2NrICg4QjgpXHJcblxyXG5jb25zdCBub09yYiA9IChzdHI6IHN0cmluZykgPT4ge1xyXG4gIHJldHVybiB7XHJcbiAgICBlbjogc3RyICsgJyAobm8gb3JiKScsXHJcbiAgICBkZTogc3RyICsgJyAoa2VpbiBPcmIpJyxcclxuICAgIGZyOiBzdHIgKyAnIChwYXMgZFxcJ29yYmUpJyxcclxuICAgIGphOiBzdHIgKyAnICjpm7fnjonnhKHjgZcpJyxcclxuICAgIGNuOiBzdHIgKyAnICjmsqHlkIPnkIMpJyxcclxuICAgIGtvOiBzdHIgKyAnICjqtazsiqwg7JeG7J2MKScsXHJcbiAgfTtcclxufTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5FZGVuc1ZlcnNlRnVsbWluYXRpb25TYXZhZ2UsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0U1UyBJbXBhY3QnOiAnNEUzQicsIC8vIFN0cmF0b3NwZWFyIGxhbmRpbmcgQW9FXHJcbiAgICAnRTVTIEdhbGxvcCc6ICc0QkI0JywgLy8gU2lkZXdheXMgYWRkIGNoYXJnZVxyXG4gICAgJ0U1UyBTaG9jayBTdHJpa2UnOiAnNEJDMScsIC8vIFNtYWxsIEFvRSBjaXJjbGVzIGR1cmluZyBUaHVuZGVyc3Rvcm1cclxuICAgICdFNVMgU3RlcHBlZCBMZWFkZXIgVHdpc3Rlcic6ICc0QkM3JywgLy8gVHdpc3RlciBzdGVwcGVkIGxlYWRlclxyXG4gICAgJ0U1UyBTdGVwcGVkIExlYWRlciBEb251dCc6ICc0QkM4JywgLy8gRG9udXQgc3RlcHBlZCBsZWFkZXJcclxuICAgICdFNVMgU2hvY2snOiAnNEUzRCcsIC8vIEhhdGVkIG9mIExldmluIFN0b3JtY2xvdWQtY2xlYW5zYWJsZSBleHBsb2RpbmcgZGVidWZmXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnRTVTIEp1ZGdtZW50IEpvbHQnOiAnNEJBNycsIC8vIFN0cmF0b3NwZWFyIGV4cGxvc2lvbnNcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0U1UyBWb2x0IFN0cmlrZSBEb3VibGUnOiAnNEJDMycsIC8vIExhcmdlIEFvRSBjaXJjbGVzIGR1cmluZyBUaHVuZGVyc3Rvcm1cclxuICAgICdFNVMgQ3JpcHBsaW5nIEJsb3cnOiAnNEJDQScsXHJcbiAgICAnRTVTIENoYWluIExpZ2h0bmluZyBEb3VibGUnOiAnNEJDNScsXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICAvLyBIZWxwZXIgZm9yIG9yYiBwaWNrdXAgZmFpbHVyZXNcclxuICAgICAgaWQ6ICdFNVMgT3JiIEdhaW4nLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnOEI0JyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuaGFzT3JiID8/PSB7fTtcclxuICAgICAgICBkYXRhLmhhc09yYlttYXRjaGVzLnRhcmdldF0gPSB0cnVlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFNVMgT3JiIExvc2UnLFxyXG4gICAgICB0eXBlOiAnTG9zZXNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5sb3Nlc0VmZmVjdCh7IGVmZmVjdElkOiAnOEI0JyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuaGFzT3JiID8/PSB7fTtcclxuICAgICAgICBkYXRhLmhhc09yYlttYXRjaGVzLnRhcmdldF0gPSBmYWxzZTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRTVTIERpdmluZSBKdWRnZW1lbnQgVm9sdHMnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICc0QkI3JywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiAhZGF0YS5oYXNPcmIgfHwgIWRhdGEuaGFzT3JiW21hdGNoZXMudGFyZ2V0XSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ2ZhaWwnLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBub09yYihtYXRjaGVzLmFiaWxpdHkpIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0U1UyBWb2x0IFN0cmlrZSBPcmInLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICc0QkMzJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiAhZGF0YS5oYXNPcmIgfHwgIWRhdGEuaGFzT3JiW21hdGNoZXMudGFyZ2V0XSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ2ZhaWwnLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBub09yYihtYXRjaGVzLmFiaWxpdHkpIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0U1UyBEZWFkbHkgRGlzY2hhcmdlIEJpZyBLbm9ja2JhY2snLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICc0QkIyJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiAhZGF0YS5oYXNPcmIgfHwgIWRhdGEuaGFzT3JiW21hdGNoZXMudGFyZ2V0XSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ2ZhaWwnLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBub09yYihtYXRjaGVzLmFiaWxpdHkpIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0U1UyBMaWdodG5pbmcgQm9sdCcsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzRCQjknLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICAvLyBIYXZpbmcgYSBub24taWRlbXBvdGVudCBjb25kaXRpb24gZnVuY3Rpb24gaXMgYSBiaXQgPF88XHJcbiAgICAgICAgLy8gT25seSBjb25zaWRlciBsaWdodG5pbmcgYm9sdCBkYW1hZ2UgaWYgeW91IGhhdmUgYSBkZWJ1ZmYgdG8gY2xlYXIuXHJcbiAgICAgICAgaWYgKCFkYXRhLmhhdGVkIHx8ICFkYXRhLmhhdGVkW21hdGNoZXMudGFyZ2V0XSlcclxuICAgICAgICAgIHJldHVybiB0cnVlO1xyXG5cclxuICAgICAgICBkZWxldGUgZGF0YS5oYXRlZFttYXRjaGVzLnRhcmdldF07XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICB9LFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFNVMgSGF0ZWQgb2YgTGV2aW4nLFxyXG4gICAgICB0eXBlOiAnSGVhZE1hcmtlcicsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmhlYWRNYXJrZXIoeyBpZDogJzAwRDInIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS5oYXRlZCA/Pz0ge307XHJcbiAgICAgICAgZGF0YS5oYXRlZFttYXRjaGVzLnRhcmdldF0gPSB0cnVlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFNVMgU3Rvcm1jbG91ZCBUYXJnZXQgVHJhY2tpbmcnLFxyXG4gICAgICB0eXBlOiAnSGVhZE1hcmtlcicsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmhlYWRNYXJrZXIoeyBpZDogJzAwNkUnIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS5jbG91ZE1hcmtlcnMgPz89IFtdO1xyXG4gICAgICAgIGRhdGEuY2xvdWRNYXJrZXJzLnB1c2gobWF0Y2hlcy50YXJnZXQpO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgLy8gVGhpcyBhYmlsaXR5IGlzIHNlZW4gb25seSBpZiBwbGF5ZXJzIHN0YWNrZWQgdGhlIGNsb3VkcyBpbnN0ZWFkIG9mIHNwcmVhZGluZyB0aGVtLlxyXG4gICAgICBpZDogJ0U1UyBUaGUgUGFydGluZyBDbG91ZHMnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICc0QkJBJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBzdXBwcmVzc1NlY29uZHM6IDMwLFxyXG4gICAgICBtaXN0YWtlOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGZvciAoY29uc3QgbmFtZSBvZiBkYXRhLmNsb3VkTWFya2VycyA/PyBbXSkge1xyXG4gICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgdHlwZTogJ2ZhaWwnLFxyXG4gICAgICAgICAgICBibGFtZTogbmFtZSxcclxuICAgICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICAgIGVuOiBgJHttYXRjaGVzLmFiaWxpdHl9IChjbG91ZHMgdG9vIGNsb3NlKWAsXHJcbiAgICAgICAgICAgICAgZGU6IGAke21hdGNoZXMuYWJpbGl0eX0gKFdvbGtlbiB6dSBuYWhlKWAsXHJcbiAgICAgICAgICAgICAgZnI6IGAke21hdGNoZXMuYWJpbGl0eX0gKG51YWdlcyB0cm9wIHByb2NoZXMpYCxcclxuICAgICAgICAgICAgICBqYTogYCR7bWF0Y2hlcy5hYmlsaXR5fSAo6Zuy6L+R44GZ44GOKWAsXHJcbiAgICAgICAgICAgICAgY246IGAke21hdGNoZXMuYWJpbGl0eX0gKOmbt+S6kemHjeWPoClgLFxyXG4gICAgICAgICAgICAgIGtvOiBgJHttYXRjaGVzLmFiaWxpdHl9ICjqtazrpoTsnbQg64SI66y0IOqwgOq5jOybgClgLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgfTtcclxuICAgICAgICB9XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0U1UyBTdG9ybWNsb3VkIGNsZWFudXAnLFxyXG4gICAgICB0eXBlOiAnSGVhZE1hcmtlcicsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmhlYWRNYXJrZXIoeyBpZDogJzAwNkUnIH0pLFxyXG4gICAgICAvLyBTdG9ybWNsb3VkcyByZXNvbHZlIHdlbGwgYmVmb3JlIHRoaXMuXHJcbiAgICAgIGRlbGF5U2Vjb25kczogMzAsXHJcbiAgICAgIHJ1bjogKGRhdGEpID0+IHtcclxuICAgICAgICBkZWxldGUgZGF0YS5jbG91ZE1hcmtlcnM7XHJcbiAgICAgICAgZGVsZXRlIGRhdGEuaGF0ZWQ7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuRWRlbnNWZXJzZUZ1cm9yLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdFNk4gVGhvcm5zJzogJzRCREEnLCAvLyBBb0UgbWFya2VycyBhZnRlciBFbnVtZXJhdGlvblxyXG4gICAgJ0U2TiBGZXJvc3Rvcm0gMSc6ICc0QkREJyxcclxuICAgICdFNk4gRmVyb3N0b3JtIDInOiAnNEJFNScsXHJcbiAgICAnRTZOIFN0b3JtIE9mIEZ1cnkgMSc6ICc0QkUwJywgLy8gQ2lyY2xlIEFvRSBkdXJpbmcgdGV0aGVycy0tR2FydWRhXHJcbiAgICAnRTZOIFN0b3JtIE9mIEZ1cnkgMic6ICc0QkU2JywgLy8gQ2lyY2xlIEFvRSBkdXJpbmcgdGV0aGVycy0tUmFrdGFwYWtzYVxyXG4gICAgJ0U2TiBFeHBsb3Npb24nOiAnNEJFMicsIC8vIEFvRSBjaXJjbGVzLCBHYXJ1ZGEgb3Jic1xyXG4gICAgJ0U2TiBIZWF0IEJ1cnN0JzogJzRCRUMnLFxyXG4gICAgJ0U2TiBDb25mbGFnIFN0cmlrZSc6ICc0QkVFJywgLy8gMjcwLWRlZ3JlZSBmcm9udGFsIEFvRVxyXG4gICAgJ0U2TiBTcGlrZSBPZiBGbGFtZSc6ICc0QkYwJywgLy8gT3JiIGV4cGxvc2lvbnMgYWZ0ZXIgU3RyaWtlIFNwYXJrXHJcbiAgICAnRTZOIFJhZGlhbnQgUGx1bWUnOiAnNEJGMicsXHJcbiAgICAnRTZOIEVydXB0aW9uJzogJzRCRjQnLFxyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ0U2TiBWYWN1dW0gU2xpY2UnOiAnNEJENScsIC8vIERhcmsgbGluZSBBb0UgZnJvbSBHYXJ1ZGFcclxuICAgICdFNk4gRG93bmJ1cnN0JzogJzRCREInLCAvLyBCbHVlIGtub2NrYmFjayBjaXJjbGUuIEFjdHVhbCBrbm9ja2JhY2sgaXMgdW5rbm93biBhYmlsaXR5IDRDMjBcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgLy8gS2lsbHMgbm9uLXRhbmtzIHdobyBnZXQgaGl0IGJ5IGl0LlxyXG4gICAgJ0U2TiBJbnN0YW50IEluY2luZXJhdGlvbic6ICc0QkVEJyxcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IFNpbXBsZU9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbi8vIFRPRE86IGNoZWNrIHRldGhlcnMgYmVpbmcgY3V0ICh3aGVuIHRoZXkgc2hvdWxkbid0KVxyXG4vLyBUT0RPOiBjaGVjayBmb3IgY29uY3Vzc2VkIGRlYnVmZlxyXG4vLyBUT0RPOiBjaGVjayBmb3IgdGFraW5nIHRhbmtidXN0ZXIgd2l0aCBsaWdodGhlYWRlZFxyXG4vLyBUT0RPOiBjaGVjayBmb3Igb25lIHBlcnNvbiB0YWtpbmcgbXVsdGlwbGUgU3Rvcm0gT2YgRnVyeSBUZXRoZXJzICg0QzAxLzRDMDgpXHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBTaW1wbGVPb3BzeVRyaWdnZXJTZXQgPSB7XHJcbiAgem9uZUlkOiBab25lSWQuRWRlbnNWZXJzZUZ1cm9yU2F2YWdlLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgIC8vIEl0J3MgY29tbW9uIHRvIGp1c3QgaWdub3JlIGZ1dGJvbCBtZWNoYW5pY3MsIHNvIGRvbid0IHdhcm4gb24gU3RyaWtlIFNwYXJrLlxyXG4gICAgLy8gJ1NwaWtlIE9mIEZsYW1lJzogJzRDMTMnLCAvLyBPcmIgZXhwbG9zaW9ucyBhZnRlciBTdHJpa2UgU3BhcmtcclxuXHJcbiAgICAnRTZTIFRob3Jucyc6ICc0QkZBJywgLy8gQW9FIG1hcmtlcnMgYWZ0ZXIgRW51bWVyYXRpb25cclxuICAgICdFNlMgRmVyb3N0b3JtIDEnOiAnNEJGRCcsXHJcbiAgICAnRTZTIEZlcm9zdG9ybSAyJzogJzRDMDYnLFxyXG4gICAgJ0U2UyBTdG9ybSBPZiBGdXJ5IDEnOiAnNEMwMCcsIC8vIENpcmNsZSBBb0UgZHVyaW5nIHRldGhlcnMtLUdhcnVkYVxyXG4gICAgJ0U2UyBTdG9ybSBPZiBGdXJ5IDInOiAnNEMwNycsIC8vIENpcmNsZSBBb0UgZHVyaW5nIHRldGhlcnMtLVJha3RhcGFrc2FcclxuICAgICdFNlMgRXhwbG9zaW9uJzogJzRDMDMnLCAvLyBBb0UgY2lyY2xlcywgR2FydWRhIG9yYnNcclxuICAgICdFNlMgSGVhdCBCdXJzdCc6ICc0QzFGJyxcclxuICAgICdFNlMgQ29uZmxhZyBTdHJpa2UnOiAnNEMxMCcsIC8vIDI3MC1kZWdyZWUgZnJvbnRhbCBBb0VcclxuICAgICdFNlMgUmFkaWFudCBQbHVtZSc6ICc0QzE1JyxcclxuICAgICdFNlMgRXJ1cHRpb24nOiAnNEMxNycsXHJcbiAgICAnRTZTIFdpbmQgQ3V0dGVyJzogJzRDMDInLCAvLyBUZXRoZXItY3V0dGluZyBsaW5lIGFvZVxyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ0U2UyBWYWN1dW0gU2xpY2UnOiAnNEJGNScsIC8vIERhcmsgbGluZSBBb0UgZnJvbSBHYXJ1ZGFcclxuICAgICdFNlMgRG93bmJ1cnN0IDEnOiAnNEJGQicsIC8vIEJsdWUga25vY2tiYWNrIGNpcmNsZSAoR2FydWRhKS5cclxuICAgICdFNlMgRG93bmJ1cnN0IDInOiAnNEJGQycsIC8vIEJsdWUga25vY2tiYWNrIGNpcmNsZSAoUmFrdGFwYWtzYSkuXHJcbiAgICAnRTZTIE1ldGVvciBTdHJpa2UnOiAnNEMwRicsIC8vIEZyb250YWwgYXZvaWRhYmxlIHRhbmsgYnVzdGVyXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdFNlMgSGFuZHMgb2YgSGVsbCc6ICc0QzBbQkNdJywgLy8gVGV0aGVyIGNoYXJnZVxyXG4gICAgJ0U2UyBIYW5kcyBvZiBGbGFtZSc6ICc0QzBBJywgLy8gRmlyc3QgVGFua2J1c3RlclxyXG4gICAgJ0U2UyBJbnN0YW50IEluY2luZXJhdGlvbic6ICc0QzBFJywgLy8gU2Vjb25kIFRhbmtidXN0ZXJcclxuICAgICdFNlMgQmxhemUnOiAnNEMxQicsIC8vIEZsYW1lIFRvcm5hZG8gQ2xlYXZlXHJcbiAgfSxcclxuICBzb2xvRmFpbDoge1xyXG4gICAgJ0U2UyBBaXIgQnVtcCc6ICc0QkY5JyxcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSBleHRlbmRzIE9vcHN5RGF0YSB7XHJcbiAgaGFzQXN0cmFsPzogeyBbbmFtZTogc3RyaW5nXTogYm9vbGVhbiB9O1xyXG4gIGhhc1VtYnJhbD86IHsgW25hbWU6IHN0cmluZ106IGJvb2xlYW4gfTtcclxufVxyXG5cclxuY29uc3Qgd3JvbmdCdWZmID0gKHN0cjogc3RyaW5nKSA9PiB7XHJcbiAgcmV0dXJuIHtcclxuICAgIGVuOiBzdHIgKyAnICh3cm9uZyBidWZmKScsXHJcbiAgICBkZTogc3RyICsgJyAoZmFsc2NoZXIgQnVmZiknLFxyXG4gICAgZnI6IHN0ciArICcgKG1hdXZhaXMgYnVmZiknLFxyXG4gICAgamE6IHN0ciArICcgKOS4jemBqeWIh+OBquODkOODlSknLFxyXG4gICAgY246IHN0ciArICcgKEJ1ZmbplJnkuoYpJyxcclxuICAgIGtvOiBzdHIgKyAnICjrsoTtlIQg7YuA66a8KScsXHJcbiAgfTtcclxufTtcclxuXHJcbmNvbnN0IG5vQnVmZiA9IChzdHI6IHN0cmluZykgPT4ge1xyXG4gIHJldHVybiB7XHJcbiAgICBlbjogc3RyICsgJyAobm8gYnVmZiknLFxyXG4gICAgZGU6IHN0ciArICcgKGtlaW4gQnVmZiknLFxyXG4gICAgZnI6IHN0ciArICcgKHBhcyBkZSBidWZmKScsXHJcbiAgICBqYTogc3RyICsgJyAo44OQ44OV54Sh44GXKScsXHJcbiAgICBjbjogc3RyICsgJyAo5rKh5pyJQnVmZiknLFxyXG4gICAga286IHN0ciArICco67KE7ZSEIOyXhuydjCknLFxyXG4gIH07XHJcbn07XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuRWRlbnNWZXJzZUljb25vY2xhc20sXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0U3TiBTdHlnaWFuIFN3b3JkJzogJzRDNTUnLCAvLyBDaXJjbGUgZ3JvdW5kIEFvRXMgYWZ0ZXIgRmFsc2UgVHdpbGlnaHRcclxuICAgICdFN04gU3RyZW5ndGggSW4gTnVtYmVycyBEb251dCc6ICc0QzRDJywgLy8gTGFyZ2UgZG9udXQgZ3JvdW5kIEFvRXMsIGludGVybWlzc2lvblxyXG4gICAgJ0U3TiBTdHJlbmd0aCBJbiBOdW1iZXJzIDInOiAnNEM0RCcsIC8vIExhcmdlIGNpcmNsZSBncm91bmQgQW9FcywgaW50ZXJtaXNzaW9uXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdFN04gU3R5Z2lhbiBTdGFrZSc6ICc0QzMzJywgLy8gTGFzZXIgdGFuayBidXN0ZXIsIG91dHNpZGUgaW50ZXJtaXNzaW9uIHBoYXNlXHJcbiAgICAnRTVOIFNpbHZlciBTaG90JzogJzRFN0QnLCAvLyBTcHJlYWQgbWFya2VycywgaW50ZXJtaXNzaW9uXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ0U3TiBBc3RyYWwgRWZmZWN0IEdhaW4nLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnOEJFJyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuaGFzQXN0cmFsID8/PSB7fTtcclxuICAgICAgICBkYXRhLmhhc0FzdHJhbFttYXRjaGVzLnRhcmdldF0gPSB0cnVlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFN04gQXN0cmFsIEVmZmVjdCBMb3NlJyxcclxuICAgICAgdHlwZTogJ0xvc2VzRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMubG9zZXNFZmZlY3QoeyBlZmZlY3RJZDogJzhCRScgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLmhhc0FzdHJhbCA/Pz0ge307XHJcbiAgICAgICAgZGF0YS5oYXNBc3RyYWxbbWF0Y2hlcy50YXJnZXRdID0gZmFsc2U7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0U3TiBVbWJyYWwgRWZmZWN0IEdhaW4nLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnOEJGJyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuaGFzVW1icmFsID8/PSB7fTtcclxuICAgICAgICBkYXRhLmhhc1VtYnJhbFttYXRjaGVzLnRhcmdldF0gPSB0cnVlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFN04gVW1icmFsIEVmZmVjdCBMb3NlJyxcclxuICAgICAgdHlwZTogJ0xvc2VzRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMubG9zZXNFZmZlY3QoeyBlZmZlY3RJZDogJzhCRicgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLmhhc1VtYnJhbCA/Pz0ge307XHJcbiAgICAgICAgZGF0YS5oYXNVbWJyYWxbbWF0Y2hlcy50YXJnZXRdID0gZmFsc2U7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0U3TiBMaWdodFxcJ3MgQ291cnNlJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiBbJzRDM0UnLCAnNEM0MCcsICc0QzIyJywgJzRDM0MnLCAnNEU2MyddLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4gIWRhdGEuaGFzVW1icmFsIHx8ICFkYXRhLmhhc1VtYnJhbFttYXRjaGVzLnRhcmdldF07XHJcbiAgICAgIH0sXHJcbiAgICAgIG1pc3Rha2U6IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgaWYgKGRhdGEuaGFzQXN0cmFsICYmIGRhdGEuaGFzQXN0cmFsW21hdGNoZXMudGFyZ2V0XSlcclxuICAgICAgICAgIHJldHVybiB7IHR5cGU6ICdmYWlsJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogd3JvbmdCdWZmKG1hdGNoZXMuYWJpbGl0eSkgfTtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG5vQnVmZihtYXRjaGVzLmFiaWxpdHkpIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0U3TiBEYXJrc1xcJ3MgQ291cnNlJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiBbJzRDM0QnLCAnNEMyMycsICc0QzQxJywgJzRDNDMnXSwgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuICFkYXRhLmhhc0FzdHJhbCB8fCAhZGF0YS5oYXNBc3RyYWxbbWF0Y2hlcy50YXJnZXRdO1xyXG4gICAgICB9LFxyXG4gICAgICBtaXN0YWtlOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGlmIChkYXRhLmhhc1VtYnJhbCAmJiBkYXRhLmhhc1VtYnJhbFttYXRjaGVzLnRhcmdldF0pXHJcbiAgICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IHdyb25nQnVmZihtYXRjaGVzLmFiaWxpdHkpIH07XHJcbiAgICAgICAgLy8gVGhpcyBjYXNlIGlzIHByb2JhYmx5IGltcG9zc2libGUsIGFzIHRoZSBkZWJ1ZmYgdGlja3MgYWZ0ZXIgZGVhdGgsXHJcbiAgICAgICAgLy8gYnV0IGxlYXZpbmcgaXQgaGVyZSBpbiBjYXNlIHRoZXJlJ3Mgc29tZSByZXogb3IgZGlzY29ubmVjdCB0aW1pbmdcclxuICAgICAgICAvLyB0aGF0IGNvdWxkIGxlYWQgdG8gdGhpcy5cclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG5vQnVmZihtYXRjaGVzLmFiaWxpdHkpIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuLy8gVE9ETzogbWlzc2luZyBhbiBvcmIgZHVyaW5nIHRvcm5hZG8gcGhhc2VcclxuLy8gVE9ETzoganVtcGluZyBpbiB0aGUgdG9ybmFkbyBkYW1hZ2U/P1xyXG4vLyBUT0RPOiB0YWtpbmcgc3VuZ3JhY2UoNEM4MCkgb3IgbW9vbmdyYWNlKDRDODIpIHdpdGggd3JvbmcgZGVidWZmXHJcbi8vIFRPRE86IHN0eWdpYW4gc3BlYXIvc2lsdmVyIHNwZWFyIHdpdGggdGhlIHdyb25nIGRlYnVmZlxyXG4vLyBUT0RPOiB0YWtpbmcgZXhwbG9zaW9uIGZyb20gdGhlIHdyb25nIENoaWFyby9TY3VybyBvcmJcclxuLy8gVE9ETzogaGFuZGxlIDRDODkgU2lsdmVyIFN0YWtlIHRhbmtidXN0ZXIgMm5kIGhpdCwgYXMgaXQncyBvayB0byBoYXZlIHR3byBpbi5cclxuXHJcbmNvbnN0IHdyb25nQnVmZiA9IChzdHI6IHN0cmluZykgPT4ge1xyXG4gIHJldHVybiB7XHJcbiAgICBlbjogc3RyICsgJyAod3JvbmcgYnVmZiknLFxyXG4gICAgZGU6IHN0ciArICcgKGZhbHNjaGVyIEJ1ZmYpJyxcclxuICAgIGZyOiBzdHIgKyAnIChtYXV2YWlzIGJ1ZmYpJyxcclxuICAgIGphOiBzdHIgKyAnICjkuI3pganliIfjgarjg5Djg5UpJyxcclxuICAgIGNuOiBzdHIgKyAnIChCdWZm6ZSZ5LqGKScsXHJcbiAgICBrbzogc3RyICsgJyAo67KE7ZSEIO2LgOumvCknLFxyXG4gIH07XHJcbn07XHJcblxyXG5jb25zdCBub0J1ZmYgPSAoc3RyOiBzdHJpbmcpID0+IHtcclxuICByZXR1cm4ge1xyXG4gICAgZW46IHN0ciArICcgKG5vIGJ1ZmYpJyxcclxuICAgIGRlOiBzdHIgKyAnIChrZWluIEJ1ZmYpJyxcclxuICAgIGZyOiBzdHIgKyAnIChwYXMgZGUgYnVmZiknLFxyXG4gICAgamE6IHN0ciArICcgKOODkOODleeEoeOBlyknLFxyXG4gICAgY246IHN0ciArICcgKOayoeaciUJ1ZmYpJyxcclxuICAgIGtvOiBzdHIgKyAnICjrsoTtlIQg7JeG7J2MKScsXHJcbiAgfTtcclxufTtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSBleHRlbmRzIE9vcHN5RGF0YSB7XHJcbiAgaGFzQXN0cmFsPzogeyBbbmFtZTogc3RyaW5nXTogYm9vbGVhbiB9O1xyXG4gIGhhc1VtYnJhbD86IHsgW25hbWU6IHN0cmluZ106IGJvb2xlYW4gfTtcclxufVxyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkVkZW5zVmVyc2VJY29ub2NsYXNtU2F2YWdlLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdFN1MgU2lsdmVyIFN3b3JkJzogJzRDOEUnLCAvLyBncm91bmQgYW9lXHJcbiAgICAnRTdTIE92ZXJ3aGVsbWluZyBGb3JjZSc6ICc0QzczJywgLy8gYWRkIHBoYXNlIGdyb3VuZCBhb2VcclxuICAgICdFN1MgU3RyZW5ndGggaW4gTnVtYmVycyAxJzogJzRDNzAnLCAvLyBhZGQgZ2V0IHVuZGVyXHJcbiAgICAnRTdTIFN0cmVuZ3RoIGluIE51bWJlcnMgMic6ICc0QzcxJywgLy8gYWRkIGdldCBvdXRcclxuICAgICdFN1MgUGFwZXIgQ3V0JzogJzRDN0QnLCAvLyB0b3JuYWRvIGdyb3VuZCBhb2VzXHJcbiAgICAnRTdTIEJ1ZmZldCc6ICc0Qzc3JywgLy8gdG9ybmFkbyBncm91bmQgYW9lcyBhbHNvPz9cclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdFN1MgQmV0d2l4dCBXb3JsZHMnOiAnNEM2QicsIC8vIHB1cnBsZSBncm91bmQgbGluZSBhb2VzXHJcbiAgICAnRTdTIENydXNhZGUnOiAnNEM1OCcsIC8vIGJsdWUga25vY2tiYWNrIGNpcmNsZSAoc3RhbmRpbmcgaW4gaXQpXHJcbiAgICAnRTdTIEV4cGxvc2lvbic6ICc0QzZGJywgLy8gZGlkbid0IGtpbGwgYW4gYWRkXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdFN1MgU3R5Z2lhbiBTdGFrZSc6ICc0QzM0JywgLy8gTGFzZXIgdGFuayBidXN0ZXIgMVxyXG4gICAgJ0U3UyBTaWx2ZXIgU2hvdCc6ICc0QzkyJywgLy8gU3ByZWFkIG1hcmtlcnNcclxuICAgICdFN1MgU2lsdmVyIFNjb3VyZ2UnOiAnNEM5MycsIC8vIEljZSBtYXJrZXJzXHJcbiAgICAnRTdTIENoaWFybyBTY3VybyBFeHBsb3Npb24gMSc6ICc0RDE0JywgLy8gb3JiIGV4cGxvc2lvblxyXG4gICAgJ0U3UyBDaGlhcm8gU2N1cm8gRXhwbG9zaW9uIDInOiAnNEQxNScsIC8vIG9yYiBleHBsb3Npb25cclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIC8vIEludGVycnVwdFxyXG4gICAgICBpZDogJ0U3UyBBZHZlbnQgT2YgTGlnaHQnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzRDNkUnIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICAvLyBUT0RPOiBpcyB0aGlzIGJsYW1lIGNvcnJlY3Q/IGRvZXMgdGhpcyBoYXZlIGEgdGFyZ2V0P1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICdmYWlsJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCB0ZXh0OiBtYXRjaGVzLmFiaWxpdHkgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRTdTIEFzdHJhbCBFZmZlY3QgR2FpbicsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICc4QkUnIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS5oYXNBc3RyYWwgPSBkYXRhLmhhc0FzdHJhbCB8fCB7fTtcclxuICAgICAgICBkYXRhLmhhc0FzdHJhbFttYXRjaGVzLnRhcmdldF0gPSB0cnVlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFN1MgQXN0cmFsIEVmZmVjdCBMb3NlJyxcclxuICAgICAgdHlwZTogJ0xvc2VzRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMubG9zZXNFZmZlY3QoeyBlZmZlY3RJZDogJzhCRScgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLmhhc0FzdHJhbCA9IGRhdGEuaGFzQXN0cmFsIHx8IHt9O1xyXG4gICAgICAgIGRhdGEuaGFzQXN0cmFsW21hdGNoZXMudGFyZ2V0XSA9IGZhbHNlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFN1MgVW1icmFsIEVmZmVjdCBHYWluJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzhCRicgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLmhhc1VtYnJhbCA9IGRhdGEuaGFzVW1icmFsIHx8IHt9O1xyXG4gICAgICAgIGRhdGEuaGFzVW1icmFsW21hdGNoZXMudGFyZ2V0XSA9IHRydWU7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0U3UyBVbWJyYWwgRWZmZWN0IExvc2UnLFxyXG4gICAgICB0eXBlOiAnTG9zZXNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5sb3Nlc0VmZmVjdCh7IGVmZmVjdElkOiAnOEJGJyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuaGFzVW1icmFsID0gZGF0YS5oYXNVbWJyYWwgfHwge307XHJcbiAgICAgICAgZGF0YS5oYXNVbWJyYWxbbWF0Y2hlcy50YXJnZXRdID0gZmFsc2U7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0U3UyBMaWdodFxcJ3MgQ291cnNlJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiBbJzRDNjInLCAnNEM2MycsICc0QzY0JywgJzRDNUInLCAnNEM1RiddLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4gIWRhdGEuaGFzVW1icmFsIHx8ICFkYXRhLmhhc1VtYnJhbFttYXRjaGVzLnRhcmdldF07XHJcbiAgICAgIH0sXHJcbiAgICAgIG1pc3Rha2U6IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgaWYgKGRhdGEuaGFzQXN0cmFsICYmIGRhdGEuaGFzQXN0cmFsW21hdGNoZXMudGFyZ2V0XSlcclxuICAgICAgICAgIHJldHVybiB7IHR5cGU6ICdmYWlsJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogd3JvbmdCdWZmKG1hdGNoZXMuYWJpbGl0eSkgfTtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG5vQnVmZihtYXRjaGVzLmFiaWxpdHkpIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0U3UyBEYXJrc1xcJ3MgQ291cnNlJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiBbJzRDNjUnLCAnNEM2NicsICc0QzY3JywgJzRDNUEnLCAnNEM2MCddLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4gIWRhdGEuaGFzQXN0cmFsIHx8ICFkYXRhLmhhc0FzdHJhbFttYXRjaGVzLnRhcmdldF07XHJcbiAgICAgIH0sXHJcbiAgICAgIG1pc3Rha2U6IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgaWYgKGRhdGEuaGFzVW1icmFsICYmIGRhdGEuaGFzVW1icmFsW21hdGNoZXMudGFyZ2V0XSlcclxuICAgICAgICAgIHJldHVybiB7IHR5cGU6ICdmYWlsJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogd3JvbmdCdWZmKG1hdGNoZXMuYWJpbGl0eSkgfTtcclxuICAgICAgICAvLyBUaGlzIGNhc2UgaXMgcHJvYmFibHkgaW1wb3NzaWJsZSwgYXMgdGhlIGRlYnVmZiB0aWNrcyBhZnRlciBkZWF0aCxcclxuICAgICAgICAvLyBidXQgbGVhdmluZyBpdCBoZXJlIGluIGNhc2UgdGhlcmUncyBzb21lIHJleiBvciBkaXNjb25uZWN0IHRpbWluZ1xyXG4gICAgICAgIC8vIHRoYXQgY291bGQgbGVhZCB0byB0aGlzLlxyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbm9CdWZmKG1hdGNoZXMuYWJpbGl0eSkgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRTdTIENydXNhZGUgS25vY2tiYWNrJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICAvLyA0Qzc2IGlzIHRoZSBrbm9ja2JhY2sgZGFtYWdlLCA0QzU4IGlzIHRoZSBkYW1hZ2UgZm9yIHN0YW5kaW5nIG9uIHRoZSBwdWNrLlxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnNEM3NicsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgZGVhdGhSZWFzb246IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ0tub2NrZWQgb2ZmJyxcclxuICAgICAgICAgICAgZGU6ICdSdW50ZXJnZWZhbGxlbicsXHJcbiAgICAgICAgICAgIGZyOiAnUmVudmVyc8OpKGUpJyxcclxuICAgICAgICAgICAgamE6ICfjg47jg4Pjgq/jg5Djg4Pjgq8nLFxyXG4gICAgICAgICAgICBjbjogJ+WHu+mAgOWdoOiQvScsXHJcbiAgICAgICAgICAgIGtvOiAn64SJ67CxJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcbmltcG9ydCB7IHBsYXllckRhbWFnZUZpZWxkcyB9IGZyb20gJy4uLy4uLy4uL29vcHN5X2NvbW1vbic7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkVkZW5zVmVyc2VSZWZ1bGdlbmNlLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdFOE4gQml0aW5nIEZyb3N0JzogJzREREInLCAvLyAyNzAtZGVncmVlIGZyb250YWwgQW9FLCBTaGl2YVxyXG4gICAgJ0U4TiBEcml2aW5nIEZyb3N0JzogJzREREMnLCAvLyBSZWFyIGNvbmUgQW9FLCBTaGl2YVxyXG4gICAgJ0U4TiBGcmlnaWQgU3RvbmUnOiAnNEU2NicsIC8vIFNtYWxsIHNwcmVhZCBjaXJjbGVzLCBwaGFzZSAxXHJcbiAgICAnRThOIFJlZmxlY3RlZCBBeGUgS2ljayc6ICc0RTAwJywgLy8gTGFyZ2UgY2lyY2xlIEFvRSwgRnJvemVuIE1pcnJvclxyXG4gICAgJ0U4TiBSZWZsZWN0ZWQgU2N5dGhlIEtpY2snOiAnNEUwMScsIC8vIERvbnV0IEFvRSwgRnJvemVuIE1pcnJvclxyXG4gICAgJ0U4TiBGcmlnaWQgRXJ1cHRpb24nOiAnNEUwOScsIC8vIFNtYWxsIGNpcmNsZSBBb0UgcHVkZGxlcywgcGhhc2UgMVxyXG4gICAgJ0U4TiBJY2ljbGUgSW1wYWN0JzogJzRFMEEnLCAvLyBMYXJnZSBjaXJjbGUgQW9FIHB1ZGRsZXMsIHBoYXNlIDFcclxuICAgICdFOE4gQXhlIEtpY2snOiAnNERFMicsIC8vIExhcmdlIGNpcmNsZSBBb0UsIFNoaXZhXHJcbiAgICAnRThOIFNjeXRoZSBLaWNrJzogJzRERTMnLCAvLyBEb251dCBBb0UsIFNoaXZhXHJcbiAgICAnRThOIFJlZmxlY3RlZCBCaXRpbmcgRnJvc3QnOiAnNERGRScsIC8vIDI3MC1kZWdyZWUgZnJvbnRhbCBBb0UsIEZyb3plbiBNaXJyb3JcclxuICAgICdFOE4gUmVmbGVjdGVkIERyaXZpbmcgRnJvc3QnOiAnNERGRicsIC8vIENvbmUgQW9FLCBGcm96ZW4gTWlycm9yXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7fSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ0U4TiBTaGluaW5nIEFybW9yJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzk1JyB9KSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmVmZmVjdCB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFOE4gSGVhdmVubHkgU3RyaWtlJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnNEREOCcsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgZGVhdGhSZWFzb246IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ1B1c2hlZCBvZmYhJyxcclxuICAgICAgICAgICAgZGU6ICdSdW50ZXIgZ2VzdG/Dn2VuIScsXHJcbiAgICAgICAgICAgIGZyOiAnUmVwb3Vzc8OpKGUpICEnLFxyXG4gICAgICAgICAgICBqYTogJ+ODjuODg+OCr+ODkOODg+OCrycsXHJcbiAgICAgICAgICAgIGNuOiAn5Ye76YCA5Z2g6JC9JyxcclxuICAgICAgICAgICAga286ICfrhInrsLHrkKghJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRThOIEZyb3N0IEFybW9yJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgLy8gVGhpbiBJY2VcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzM4RicgfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdTbGlkIG9mZiEnLFxyXG4gICAgICAgICAgICBkZTogJ3J1bnRlcmdlcnV0c2NodCEnLFxyXG4gICAgICAgICAgICBmcjogJ0EgZ2xpc3PDqShlKSAhJyxcclxuICAgICAgICAgICAgamE6ICfmu5HjgaPjgZ8nLFxyXG4gICAgICAgICAgICBjbjogJ+a7keiQvScsXHJcbiAgICAgICAgICAgIGtvOiAn66+464GE65+s7KeQIScsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFRPRE86IHJ1c2ggaGl0dGluZyB0aGUgY3J5c3RhbFxyXG4vLyBUT0RPOiBhZGRzIG5vdCBiZWluZyBraWxsZWRcclxuLy8gVE9ETzogdGFraW5nIHRoZSBydXNoIHR3aWNlICh3aGVuIHlvdSBoYXZlIGRlYnVmZilcclxuLy8gVE9ETzogbm90IGhpdHRpbmcgdGhlIGRyYWdvbiBmb3VyIHRpbWVzIGR1cmluZyB3eXJtJ3MgbGFtZW50XHJcbi8vIFRPRE86IGRlYXRoIHJlYXNvbnMgZm9yIG5vdCBwaWNraW5nIHVwIHB1ZGRsZVxyXG4vLyBUT0RPOiBub3QgYmVpbmcgaW4gdGhlIHRvd2VyIHdoZW4geW91IHNob3VsZFxyXG4vLyBUT0RPOiBwaWNraW5nIHVwIHRvbyBtYW55IHN0YWNrc1xyXG5cclxuLy8gTm90ZTogQmFuaXNoIElJSSAoNERBOCkgYW5kIEJhbmlzaCBJaWkgRGl2aWRlZCAoNERBOSkgYm90aCBhcmUgdHlwZT0weDE2IGxpbmVzLlxyXG4vLyBUaGUgc2FtZSBpcyB0cnVlIGZvciBCYW5pc2ggKDREQTYpIGFuZCBCYW5pc2ggRGl2aWRlZCAoNERBNykuXHJcbi8vIEknbSBub3Qgc3VyZSB0aGlzIG1ha2VzIGFueSBzZW5zZT8gQnV0IGNhbid0IHRlbGwgaWYgdGhlIHNwcmVhZCB3YXMgYSBtaXN0YWtlIG9yIG5vdC5cclxuLy8gTWF5YmUgd2UgY291bGQgY2hlY2sgZm9yIFwiTWFnaWMgVnVsbmVyYWJpbGl0eSBVcFwiP1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkVkZW5zVmVyc2VSZWZ1bGdlbmNlU2F2YWdlLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdFOFMgQml0aW5nIEZyb3N0JzogJzRENjYnLCAvLyAyNzAtZGVncmVlIGZyb250YWwgQW9FLCBTaGl2YVxyXG4gICAgJ0U4UyBEcml2aW5nIEZyb3N0JzogJzRENjcnLCAvLyBSZWFyIGNvbmUgQW9FLCBTaGl2YVxyXG4gICAgJ0U4UyBBeGUgS2ljayc6ICc0RDZEJywgLy8gTGFyZ2UgY2lyY2xlIEFvRSwgU2hpdmFcclxuICAgICdFOFMgU2N5dGhlIEtpY2snOiAnNEQ2RScsIC8vIERvbnV0IEFvRSwgU2hpdmFcclxuICAgICdFOFMgUmVmbGVjdGVkIEF4ZSBLaWNrJzogJzREQjknLCAvLyBMYXJnZSBjaXJjbGUgQW9FLCBGcm96ZW4gTWlycm9yXHJcbiAgICAnRThTIFJlZmxlY3RlZCBTY3l0aGUgS2ljayc6ICc0REJBJywgLy8gRG9udXQgQW9FLCBGcm96ZW4gTWlycm9yXHJcbiAgICAnRThTIEZyaWdpZCBFcnVwdGlvbic6ICc0RDlGJywgLy8gU21hbGwgY2lyY2xlIEFvRSBwdWRkbGVzLCBwaGFzZSAxXHJcbiAgICAnRThTIEZyaWdpZCBOZWVkbGUnOiAnNEQ5RCcsIC8vIDgtd2F5IFwiZmxvd2VyXCIgZXhwbG9zaW9uXHJcbiAgICAnRThTIEljaWNsZSBJbXBhY3QnOiAnNERBMCcsIC8vIExhcmdlIGNpcmNsZSBBb0UgcHVkZGxlcywgcGhhc2UgMVxyXG4gICAgJ0U4UyBSZWZsZWN0ZWQgQml0aW5nIEZyb3N0IDEnOiAnNERCNycsIC8vIDI3MC1kZWdyZWUgZnJvbnRhbCBBb0UsIEZyb3plbiBNaXJyb3JcclxuICAgICdFOFMgUmVmbGVjdGVkIEJpdGluZyBGcm9zdCAyJzogJzREQzMnLCAvLyAyNzAtZGVncmVlIGZyb250YWwgQW9FLCBGcm96ZW4gTWlycm9yXHJcbiAgICAnRThTIFJlZmxlY3RlZCBEcml2aW5nIEZyb3N0IDEnOiAnNERCOCcsIC8vIENvbmUgQW9FLCBGcm96ZW4gTWlycm9yXHJcbiAgICAnRThTIFJlZmxlY3RlZCBEcml2aW5nIEZyb3N0IDInOiAnNERDNCcsIC8vIENvbmUgQW9FLCBGcm96ZW4gTWlycm9yXHJcblxyXG4gICAgJ0U4UyBIYWxsb3dlZCBXaW5ncyAxJzogJzRENzUnLCAvLyBMZWZ0IGNsZWF2ZVxyXG4gICAgJ0U4UyBIYWxsb3dlZCBXaW5ncyAyJzogJzRENzYnLCAvLyBSaWdodCBjbGVhdmVcclxuICAgICdFOFMgSGFsbG93ZWQgV2luZ3MgMyc6ICc0RDc3JywgLy8gS25vY2tiYWNrIGZyb250YWwgY2xlYXZlXHJcbiAgICAnRThTIFJlZmxlY3RlZCBIYWxsb3dlZCBXaW5ncyAxJzogJzREOTAnLCAvLyBSZWZsZWN0ZWQgbGVmdCAyXHJcbiAgICAnRThTIFJlZmxlY3RlZCBIYWxsb3dlZCBXaW5ncyAyJzogJzREQkInLCAvLyBSZWZsZWN0ZWQgbGVmdCAxXHJcbiAgICAnRThTIFJlZmxlY3RlZCBIYWxsb3dlZCBXaW5ncyAzJzogJzREQzcnLCAvLyBSZWZsZWN0ZWQgcmlnaHQgMlxyXG4gICAgJ0U4UyBSZWZsZWN0ZWQgSGFsbG93ZWQgV2luZ3MgNCc6ICc0RDkxJywgLy8gUmVmbGVjdGVkIHJpZ2h0IDFcclxuICAgICdFOFMgVHdpbiBTdGlsbG5lc3MgMSc6ICc0RDY4JyxcclxuICAgICdFOFMgVHdpbiBTdGlsbG5lc3MgMic6ICc0RDZCJyxcclxuICAgICdFOFMgVHdpbiBTaWxlbmNlIDEnOiAnNEQ2OScsXHJcbiAgICAnRThTIFR3aW4gU2lsZW5jZSAyJzogJzRENkEnLFxyXG4gICAgJ0U4UyBBa2ggUmhhaSc6ICc0RDk5JyxcclxuICAgICdFOFMgRW1iaXR0ZXJlZCBEYW5jZSAxJzogJzRENzAnLFxyXG4gICAgJ0U4UyBFbWJpdHRlcmVkIERhbmNlIDInOiAnNEQ3MScsXHJcbiAgICAnRThTIFNwaXRlZnVsIERhbmNlIDEnOiAnNEQ2RicsXHJcbiAgICAnRThTIFNwaXRlZnVsIERhbmNlIDInOiAnNEQ3MicsXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAvLyBCcm9rZW4gdGV0aGVyLlxyXG4gICAgJ0U4UyBSZWZ1bGdlbnQgRmF0ZSc6ICc0REE0JyxcclxuICAgIC8vIFNoYXJlZCBvcmIsIGNvcnJlY3QgaXMgQnJpZ2h0IFB1bHNlICg0RDk1KVxyXG4gICAgJ0U4UyBCbGluZGluZyBQdWxzZSc6ICc0RDk2JyxcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ0U4UyBQYXRoIG9mIExpZ2h0JzogJzREQTEnLCAvLyBQcm90ZWFuXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ0U4UyBTaGluaW5nIEFybW9yJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgLy8gU3R1blxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnOTUnIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuZWZmZWN0IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyBJbnRlcnJ1cHRcclxuICAgICAgaWQ6ICdFOFMgU3RvbmVza2luJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICc0RDg1JyB9KSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ2ZhaWwnLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkVkZW5zUHJvbWlzZVVtYnJhLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdFOU4gVGhlIEFydCBPZiBEYXJrbmVzcyAxJzogJzUyMjMnLCAvLyBsZWZ0LXJpZ2h0IGNsZWF2ZVxyXG4gICAgJ0U5TiBUaGUgQXJ0IE9mIERhcmtuZXNzIDInOiAnNTIyNCcsIC8vIGxlZnQtcmlnaHQgY2xlYXZlXHJcbiAgICAnRTlOIFdpZGUtQW5nbGUgUGFydGljbGUgQmVhbSc6ICc1QUZGJywgLy8gZnJvbnRhbCBjbGVhdmUgdHV0b3JpYWwgbWVjaGFuaWNcclxuICAgICdFOU4gV2lkZS1BbmdsZSBQaGFzZXInOiAnNTVFMScsIC8vIHdpZGUtYW5nbGUgXCJzaWRlc1wiXHJcbiAgICAnRTlOIEJhZCBWaWJyYXRpb25zJzogJzU1RTYnLCAvLyB0ZXRoZXJlZCBvdXRzaWRlIGdpYW50IHRyZWUgZ3JvdW5kIGFvZXNcclxuICAgICdFOU4gRWFydGgtU2hhdHRlcmluZyBQYXJ0aWNsZSBCZWFtJzogJzUyMjUnLCAvLyBtaXNzaW5nIHRvd2Vycz9cclxuICAgICdFOU4gQW50aS1BaXIgUGFydGljbGUgQmVhbSc6ICc1NURDJywgLy8gXCJnZXQgb3V0XCIgZHVyaW5nIHBhbmVsc1xyXG4gICAgJ0U5TiBaZXJvLUZvcm0gUGFydGljbGUgQmVhbSAyJzogJzU1REInLCAvLyBDbG9uZSBsaW5lIGFvZXMgdy8gQW50aS1BaXIgUGFydGljbGUgQmVhbVxyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ0U5TiBXaXRoZHJhdyc6ICc1NTM0JywgLy8gU2xvdyB0byBicmVhayBzZWVkIGNoYWluLCBnZXQgc3Vja2VkIGJhY2sgaW4geWlrZXNcclxuICAgICdFOU4gQWV0aGVyb3N5bnRoZXNpcyc6ICc1NTM1JywgLy8gU3RhbmRpbmcgb24gc2VlZHMgZHVyaW5nIGV4cGxvc2lvbiAocG9zc2libHkgdmlhIFdpdGhkcmF3KVxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnRTlOIFplcm8tRm9ybSBQYXJ0aWNsZSBCZWFtIDEnOiAnNTVFQicsIC8vIHRhbmsgbGFzZXIgd2l0aCBtYXJrZXJcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBUT0RPOiA1NjFEIEV2aWwgU2VlZCBoaXRzIGV2ZXJ5b25lLCBoYXJkIHRvIGtub3cgaWYgdGhlcmUncyBhIGRvdWJsZSB0YXBcclxuLy8gVE9ETzogZmFsbGluZyB0aHJvdWdoIHBhbmVsIGp1c3QgZG9lcyBkYW1hZ2Ugd2l0aCBubyBhYmlsaXR5IG5hbWUsIGxpa2UgYSBkZWF0aCB3YWxsXHJcbi8vIFRPRE86IHdoYXQgaGFwcGVucyBpZiB5b3UganVtcCBpbiBzZWVkIHRob3Jucz9cclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5FZGVuc1Byb21pc2VVbWJyYVNhdmFnZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnRTlTIEJhZCBWaWJyYXRpb25zJzogJzU2MUMnLCAvLyB0ZXRoZXJlZCBvdXRzaWRlIGdpYW50IHRyZWUgZ3JvdW5kIGFvZXNcclxuICAgICdFOVMgV2lkZS1BbmdsZSBQYXJ0aWNsZSBCZWFtJzogJzVCMDAnLCAvLyBhbnRpLWFpciBcInNpZGVzXCJcclxuICAgICdFOVMgV2lkZS1BbmdsZSBQaGFzZXIgVW5saW1pdGVkJzogJzU2MEUnLCAvLyB3aWRlLWFuZ2xlIFwic2lkZXNcIlxyXG4gICAgJ0U5UyBBbnRpLUFpciBQYXJ0aWNsZSBCZWFtJzogJzVCMDEnLCAvLyB3aWRlLWFuZ2xlIFwib3V0XCJcclxuICAgICdFOVMgVGhlIFNlY29uZCBBcnQgT2YgRGFya25lc3MgMSc6ICc1NjAxJywgLy8gbGVmdC1yaWdodCBjbGVhdmVcclxuICAgICdFOVMgVGhlIFNlY29uZCBBcnQgT2YgRGFya25lc3MgMic6ICc1NjAyJywgLy8gbGVmdC1yaWdodCBjbGVhdmVcclxuICAgICdFOVMgVGhlIEFydCBPZiBEYXJrbmVzcyAxJzogJzVBOTUnLCAvLyBib3NzIGxlZnQtcmlnaHQgc3VtbW9uL3BhbmVsIGNsZWF2ZVxyXG4gICAgJ0U5UyBUaGUgQXJ0IE9mIERhcmtuZXNzIDInOiAnNUE5NicsIC8vIGJvc3MgbGVmdC1yaWdodCBzdW1tb24vcGFuZWwgY2xlYXZlXHJcbiAgICAnRTlTIFRoZSBBcnQgT2YgRGFya25lc3MgQ2xvbmUgMSc6ICc1NjFFJywgLy8gY2xvbmUgbGVmdC1yaWdodCBzdW1tb24gY2xlYXZlXHJcbiAgICAnRTlTIFRoZSBBcnQgT2YgRGFya25lc3MgQ2xvbmUgMic6ICc1NjFGJywgLy8gY2xvbmUgbGVmdC1yaWdodCBzdW1tb24gY2xlYXZlXHJcbiAgICAnRTlTIFRoZSBUaGlyZCBBcnQgT2YgRGFya25lc3MgMSc6ICc1NjAzJywgLy8gdGhpcmQgYXJ0IGxlZnQtcmlnaHQgY2xlYXZlIGluaXRpYWxcclxuICAgICdFOVMgVGhlIFRoaXJkIEFydCBPZiBEYXJrbmVzcyAyJzogJzU2MDQnLCAvLyB0aGlyZCBhcnQgbGVmdC1yaWdodCBjbGVhdmUgaW5pdGlhbFxyXG4gICAgJ0U5UyBBcnQgT2YgRGFya25lc3MnOiAnNTYwNicsIC8vIHRoaXJkIGFydCBsZWZ0LXJpZ2h0IGNsZWF2ZSBmaW5hbFxyXG4gICAgJ0U5UyBGdWxsLVBlcmltaXRlciBQYXJ0aWNsZSBCZWFtJzogJzU2MjknLCAvLyBwYW5lbCBcImdldCBpblwiXHJcbiAgICAnRTlTIERhcmsgQ2hhaW5zJzogJzVGQUMnLCAvLyBTbG93IHRvIGJyZWFrIHBhcnRuZXIgY2hhaW5zXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnRTlTIFdpdGhkcmF3JzogJzU2MUEnLCAvLyBTbG93IHRvIGJyZWFrIHNlZWQgY2hhaW4sIGdldCBzdWNrZWQgYmFjayBpbiB5aWtlc1xyXG4gICAgJ0U5UyBBZXRoZXJvc3ludGhlc2lzJzogJzU2MUInLCAvLyBTdGFuZGluZyBvbiBzZWVkcyBkdXJpbmcgZXhwbG9zaW9uIChwb3NzaWJseSB2aWEgV2l0aGRyYXcpXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdFdhcm46IHtcclxuICAgICdFOVMgU3R5Z2lhbiBUZW5kcmlscyc6ICc5NTInLCAvLyBzdGFuZGluZyBpbiB0aGUgYnJhbWJsZXNcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0U5UyBIeXBlci1Gb2N1c2VkIFBhcnRpY2xlIEJlYW0nOiAnNTVGRCcsIC8vIEFydCBPZiBEYXJrbmVzcyBwcm90ZWFuXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdFOVMgQ29uZGVuc2VkIFdpZGUtQW5nbGUgUGFydGljbGUgQmVhbSc6ICc1NjEwJywgLy8gd2lkZS1hbmdsZSBcInRhbmsgbGFzZXJcIlxyXG4gIH0sXHJcbiAgc29sb1dhcm46IHtcclxuICAgICdFOVMgTXVsdGktUHJvbmdlZCBQYXJ0aWNsZSBCZWFtJzogJzU2MDAnLCAvLyBBcnQgT2YgRGFya25lc3MgUGFydG5lciBTdGFja1xyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgLy8gQW50aS1haXIgXCJ0YW5rIHNwcmVhZFwiLiAgVGhpcyBjYW4gYmUgc3RhY2tlZCBieSB0d28gdGFua3MgaW52dWxuaW5nLlxyXG4gICAgICAvLyBOb3RlOiB0aGlzIHdpbGwgc3RpbGwgc2hvdyBzb21ldGhpbmcgZm9yIGhvbG1nYW5nL2xpdmluZywgYnV0XHJcbiAgICAgIC8vIGFyZ3VhYmx5IGEgaGVhbGVyIG1pZ2h0IG5lZWQgdG8gZG8gc29tZXRoaW5nIGFib3V0IHRoYXQsIHNvIG1heWJlXHJcbiAgICAgIC8vIGl0J3Mgb2sgdG8gc3RpbGwgc2hvdyBhcyBhIHdhcm5pbmc/P1xyXG4gICAgICBpZDogJ0U5UyBDb25kZW5zZWQgQW50aS1BaXIgUGFydGljbGUgQmVhbScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyB0eXBlOiAnMjInLCBpZDogJzU2MTUnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEuRGFtYWdlRnJvbU1hdGNoZXMobWF0Y2hlcykgPiAwLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgLy8gQW50aS1haXIgXCJvdXRcIi4gIFRoaXMgY2FuIGJlIGludnVsbmVkIGJ5IGEgdGFuayBhbG9uZyB3aXRoIHRoZSBzcHJlYWQgYWJvdmUuXHJcbiAgICAgIGlkOiAnRTlTIEFudGktQWlyIFBoYXNlciBVbmxpbWl0ZWQnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICc1NjEyJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiBkYXRhLkRhbWFnZUZyb21NYXRjaGVzKG1hdGNoZXMpID4gMCxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmFiaWxpdHkgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gRGlhbW9uZCBXZWFwb24gTm9ybWFsXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVDbG91ZERlY2ssXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0RpYW1vbmQgV2VhcG9uIEF1cmkgQXJ0cyc6ICc1RkUzJywgLy8gQXVyaSBBcnRzIGRhc2hlc1xyXG4gICAgJ0RpYW1vbmQgV2VhcG9uIERpYW1vbmQgU2hyYXBuZWwgSW5pdGlhbCc6ICc1RkUxJywgLy8gaW5pdGlhbCBjaXJjbGUgb2YgRGlhbW9uZCBTaHJhcG5lbFxyXG4gICAgJ0RpYW1vbmQgV2VhcG9uIERpYW1vbmQgU2hyYXBuZWwgQ2hhc2luZyc6ICc1RkUyJywgLy8gZm9sbG93dXAgY2lyY2xlcyBmcm9tIERpYW1vbmQgU2hyYXBuZWxcclxuICAgICdEaWFtb25kIFdlYXBvbiBBZXRoZXJpYWwgQnVsbGV0JzogJzVGRDUnLCAvLyBiaXQgbGFzZXJzXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnRGlhbW9uZCBXZWFwb24gQ2xhdyBTd2lwZSBMZWZ0JzogJzVGRDknLCAvLyBBZGFtYW50IFB1cmdlIHBsYXRmb3JtIGNsZWF2ZVxyXG4gICAgJ0RpYW1vbmQgV2VhcG9uIENsYXcgU3dpcGUgUmlnaHQnOiAnNUZEQScsIC8vIEFkYW1hbnQgUHVyZ2UgcGxhdGZvcm0gY2xlYXZlXHJcbiAgICAnRGlhbW9uZCBXZWFwb24gQXVyaSBDeWNsb25lIDEnOiAnNUZFNicsIC8vIHN0YW5kaW5nIG9uIHRoZSBibHVlIGtub2NrYmFjayBwdWNrXHJcbiAgICAnRGlhbW9uZCBXZWFwb24gQXVyaSBDeWNsb25lIDInOiAnNUZFNycsIC8vIHN0YW5kaW5nIG9uIHRoZSBibHVlIGtub2NrYmFjayBwdWNrXHJcbiAgICAnRGlhbW9uZCBXZWFwb24gQWlyc2hpcFxcJ3MgQmFuZSAxJzogJzVGRTgnLCAvLyBkZXN0cm95aW5nIG9uZSBvZiB0aGUgcGxhdGZvcm1zIGFmdGVyIEF1cmkgQ3ljbG9uZVxyXG4gICAgJ0RpYW1vbmQgV2VhcG9uIEFpcnNoaXBcXCdzIEJhbmUgMic6ICc1RkZFJywgLy8gZGVzdHJveWluZyBvbmUgb2YgdGhlIHBsYXRmb3JtcyBhZnRlciBBdXJpIEN5Y2xvbmVcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0RpYW1vbmQgV2VhcG9uIEhvbWluZyBMYXNlcic6ICc1RkRCJywgLy8gc3ByZWFkIG1hcmtlcnNcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRGlhbW9uZCBXZWFwb24gVmVydGljYWwgQ2xlYXZlIEtub2NrZWQgT2ZmJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICc1RkU1JyB9KSxcclxuICAgICAgZGVhdGhSZWFzb246IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ0tub2NrZWQgb2ZmJyxcclxuICAgICAgICAgICAgZGU6ICdSdW50ZXJnZWZhbGxlbicsXHJcbiAgICAgICAgICAgIGZyOiAnUmVudmVyc8OpKGUpJyxcclxuICAgICAgICAgICAgamE6ICfjg47jg4Pjgq/jg5Djg4Pjgq8nLFxyXG4gICAgICAgICAgICBjbjogJ+WHu+mAgOWdoOiQvScsXHJcbiAgICAgICAgICAgIGtvOiAn64SJ67CxJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gVE9ETzogd2FybmluZyBmb3IgdGFraW5nIERpYW1vbmQgRmxhc2ggKDVGQTEpIHN0YWNrIG9uIHlvdXIgb3duP1xyXG5cclxuLy8gRGlhbW9uZCBXZWFwb24gRXh0cmVtZVxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlQ2xvdWREZWNrRXh0cmVtZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnRGlhbW9uZEV4IEF1cmkgQXJ0cyAxJzogJzVGQUYnLCAvLyBBdXJpIEFydHMgZGFzaGVzL2V4cGxvc2lvbnNcclxuICAgICdEaWFtb25kRXggQXVyaSBBcnRzIDInOiAnNUZCMicsIC8vIEF1cmkgQXJ0cyBkYXNoZXMvZXhwbG9zaW9uc1xyXG4gICAgJ0RpYW1vbmRFeCBBdXJpIEFydHMgMyc6ICc1RkNEJywgLy8gQXVyaSBBcnRzIGRhc2hlcy9leHBsb3Npb25zXHJcbiAgICAnRGlhbW9uZEV4IEF1cmkgQXJ0cyA0JzogJzVGQ0UnLCAvLyBBdXJpIEFydHMgZGFzaGVzL2V4cGxvc2lvbnNcclxuICAgICdEaWFtb25kRXggQXVyaSBBcnRzIDUnOiAnNUZDRicsIC8vIEF1cmkgQXJ0cyBkYXNoZXMvZXhwbG9zaW9uc1xyXG4gICAgJ0RpYW1vbmRFeCBBdXJpIEFydHMgNic6ICc1RkY4JywgLy8gQXVyaSBBcnRzIGRhc2hlcy9leHBsb3Npb25zXHJcbiAgICAnRGlhbW9uZEV4IEF1cmkgQXJ0cyA3JzogJzYxNTknLCAvLyBBdXJpIEFydHMgZGFzaGVzL2V4cGxvc2lvbnNcclxuICAgICdEaWFtb25kRXggQXJ0aWN1bGF0ZWQgQml0IEFldGhlcmlhbCBCdWxsZXQnOiAnNUZBQicsIC8vIGJpdCBsYXNlcnMgZHVyaW5nIGFsbCBwaGFzZXNcclxuICAgICdEaWFtb25kRXggRGlhbW9uZCBTaHJhcG5lbCAxJzogJzVGQ0InLCAvLyBjaGFzaW5nIGNpcmNsZXNcclxuICAgICdEaWFtb25kRXggRGlhbW9uZCBTaHJhcG5lbCAyJzogJzVGQ0MnLCAvLyBjaGFzaW5nIGNpcmNsZXNcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdEaWFtb25kRXggQ2xhdyBTd2lwZSBMZWZ0JzogJzVGQzInLCAvLyBBZGFtYW50IFB1cmdlIHBsYXRmb3JtIGNsZWF2ZVxyXG4gICAgJ0RpYW1vbmRFeCBDbGF3IFN3aXBlIFJpZ2h0JzogJzVGQzMnLCAvLyBBZGFtYW50IFB1cmdlIHBsYXRmb3JtIGNsZWF2ZVxyXG4gICAgJ0RpYW1vbmRFeCBBdXJpIEN5Y2xvbmUgMSc6ICc1RkQxJywgLy8gc3RhbmRpbmcgb24gdGhlIGJsdWUga25vY2tiYWNrIHB1Y2tcclxuICAgICdEaWFtb25kRXggQXVyaSBDeWNsb25lIDInOiAnNUZEMicsIC8vIHN0YW5kaW5nIG9uIHRoZSBibHVlIGtub2NrYmFjayBwdWNrXHJcbiAgICAnRGlhbW9uZEV4IEFpcnNoaXBcXCdzIEJhbmUgMSc6ICc1RkZFJywgLy8gZGVzdHJveWluZyBvbmUgb2YgdGhlIHBsYXRmb3JtcyBhZnRlciBBdXJpIEN5Y2xvbmVcclxuICAgICdEaWFtb25kRXggQWlyc2hpcFxcJ3MgQmFuZSAyJzogJzVGRDMnLCAvLyBkZXN0cm95aW5nIG9uZSBvZiB0aGUgcGxhdGZvcm1zIGFmdGVyIEF1cmkgQ3ljbG9uZVxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnRGlhbW9uZEV4IFRhbmsgTGFzZXJzJzogJzVGQzgnLCAvLyBjbGVhdmluZyB5ZWxsb3cgbGFzZXJzIG9uIHRvcCB0d28gZW5taXR5XHJcbiAgICAnRGlhbW9uZEV4IEhvbWluZyBMYXNlcic6ICc1RkM0JywgLy8gQWRhbWFudGUgUHVyZ2Ugc3ByZWFkXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdEaWFtb25kRXggRmxvb2QgUmF5JzogJzVGQzcnLCAvLyBcImxpbWl0IGN1dFwiIGNsZWF2ZXNcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRGlhbW9uZEV4IFZlcnRpY2FsIENsZWF2ZSBLbm9ja2VkIE9mZicsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnNUZEMCcgfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdLbm9ja2VkIG9mZicsXHJcbiAgICAgICAgICAgIGRlOiAnUnVudGVyZ2VmYWxsZW4nLFxyXG4gICAgICAgICAgICBmcjogJ1JlbnZlcnPDqShlKScsXHJcbiAgICAgICAgICAgIGphOiAn44OO44OD44Kv44OQ44OD44KvJyxcclxuICAgICAgICAgICAgY246ICflh7vpgIDlnaDokL0nLFxyXG4gICAgICAgICAgICBrbzogJ+uEieuwsScsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5DYXN0cnVtTWFyaW51bSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnRW1lcmFsZCBXZWFwb24gSGVhdCBSYXknOiAnNEY5RCcsIC8vIEVtZXJhbGQgQmVhbSBpbml0aWFsIGNvbmFsXHJcbiAgICAnRW1lcmFsZCBXZWFwb24gUGhvdG9uIExhc2VyIDEnOiAnNTUzNCcsIC8vIEVtZXJhbGQgQmVhbSBpbnNpZGUgY2lyY2xlXHJcbiAgICAnRW1lcmFsZCBXZWFwb24gUGhvdG9uIExhc2VyIDInOiAnNTUzNicsIC8vIEVtZXJhbGQgQmVhbSBtaWRkbGUgY2lyY2xlXHJcbiAgICAnRW1lcmFsZCBXZWFwb24gUGhvdG9uIExhc2VyIDMnOiAnNTUzOCcsIC8vIEVtZXJhbGQgQmVhbSBvdXRzaWRlIGNpcmNsZVxyXG4gICAgJ0VtZXJhbGQgV2VhcG9uIEhlYXQgUmF5IDEnOiAnNTUzMicsIC8vIEVtZXJhbGQgQmVhbSByb3RhdGluZyBwdWxzaW5nIGxhc2VyXHJcbiAgICAnRW1lcmFsZCBXZWFwb24gSGVhdCBSYXkgMic6ICc1NTMzJywgLy8gRW1lcmFsZCBCZWFtIHJvdGF0aW5nIHB1bHNpbmcgbGFzZXJcclxuICAgICdFbWVyYWxkIFdlYXBvbiBNYWduZXRpYyBNaW5lIEV4cGxvc2lvbic6ICc1QjA0JywgLy8gcmVwdWxzaW5nIG1pbmUgZXhwbG9zaW9uc1xyXG4gICAgJ0VtZXJhbGQgV2VhcG9uIFNpZGVzY2F0aGUgMSc6ICc1NTNGJywgLy8gbGVmdC9yaWdodCBjbGVhdmVcclxuICAgICdFbWVyYWxkIFdlYXBvbiBTaWRlc2NhdGhlIDInOiAnNTU0MCcsIC8vIGxlZnQvcmlnaHQgY2xlYXZlXHJcbiAgICAnRW1lcmFsZCBXZWFwb24gU2lkZXNjYXRoZSAzJzogJzU1NDEnLCAvLyBsZWZ0L3JpZ2h0IGNsZWF2ZVxyXG4gICAgJ0VtZXJhbGQgV2VhcG9uIFNpZGVzY2F0aGUgNCc6ICc1NTQyJywgLy8gbGVmdC9yaWdodCBjbGVhdmVcclxuICAgICdFbWVyYWxkIFdlYXBvbiBCaXQgU3Rvcm0nOiAnNTU0QScsIC8vIFwiZ2V0IGluXCJcclxuICAgICdFbWVyYWxkIFdlYXBvbiBFbWVyYWxkIENydXNoZXInOiAnNTUzQycsIC8vIGJsdWUga25vY2tiYWNrIHB1Y2tcclxuICAgICdFbWVyYWxkIFdlYXBvbiBQdWxzZSBMYXNlcic6ICc1NTQ4JywgLy8gbGluZSBhb2VcclxuICAgICdFbWVyYWxkIFdlYXBvbiBFbmVyZ3kgQWV0aGVyb3BsYXNtJzogJzU1NTEnLCAvLyBoaXR0aW5nIGEgZ2xvd3kgb3JiXHJcbiAgICAnRW1lcmFsZCBXZWFwb24gRGl2aWRlIEV0IEltcGVyYSBHcm91bmQnOiAnNTU2RicsIC8vIHBhcnR5IHRhcmdldGVkIGdyb3VuZCBjb25lc1xyXG4gICAgJ0VtZXJhbGQgV2VhcG9uIFByaW11cyBUZXJtaW51cyBFc3QnOiAnNEIzRScsIC8vIGdyb3VuZCBjaXJjbGUgZHVyaW5nIGFycm93IGhlYWRtYXJrZXJzXHJcbiAgICAnRW1lcmFsZCBXZWFwb24gU2VjdW5kdXMgVGVybWludXMgRXN0JzogJzU1NkEnLCAvLyBYIC8gKyBoZWFkbWFya2Vyc1xyXG4gICAgJ0VtZXJhbGQgV2VhcG9uIFRlcnRpdXMgVGVybWludXMgRXN0JzogJzU1NkQnLCAvLyB0cmlwbGUgc3dvcmRzXHJcbiAgICAnRW1lcmFsZCBXZWFwb24gU2hvdHMgRmlyZWQnOiAnNTU1RicsIC8vIGxpbmUgYW9lcyBmcm9tIHNvbGRpZXJzXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdFbWVyYWxkIFdlYXBvbiBEaXZpZGUgRXQgSW1wZXJhIFAxJzogJzU1NEUnLCAvLyB0YW5rYnVzdGVyLCBwcm9iYWJseSBjbGVhdmVzLCBwaGFzZSAxXHJcbiAgICAnRW1lcmFsZCBXZWFwb24gRGl2aWRlIEV0IEltcGVyYSBQMic6ICc1NTcwJywgLy8gdGFua2J1c3RlciwgcHJvYmFibHkgY2xlYXZlcywgcGhhc2UgMlxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6ICdFbWVyYWxkIFdlYXBvbiBFbWVyYWxkIENydXNoZXIgS25vY2tlZCBPZmYnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzU1M0UnIH0pLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnS25vY2tlZCBvZmYnLFxyXG4gICAgICAgICAgICBkZTogJ1J1bnRlcmdlZmFsbGVuJyxcclxuICAgICAgICAgICAgZnI6ICdSZW52ZXJzw6koZSknLFxyXG4gICAgICAgICAgICBqYTogJ+ODjuODg+OCr+ODkOODg+OCrycsXHJcbiAgICAgICAgICAgIGNuOiAn5Ye76YCA5Z2g6JC9JyxcclxuICAgICAgICAgICAga286ICfrhInrsLEnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgLy8gR2V0dGluZyBrbm9ja2VkIGludG8gYSB3YWxsIGZyb20gdGhlIGFycm93IGhlYWRtYXJrZXIuXHJcbiAgICAgIGlkOiAnRW1lcmFsZCBXZWFwb24gUHJpbXVzIFRlcm1pbnVzIEVzdCBXYWxsJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6IFsnNTU2MycsICc1NTY0J10gfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdQdXNoZWQgaW50byB3YWxsJyxcclxuICAgICAgICAgICAgZGU6ICdSw7xja3N0b8OfIGluIGRpZSBXYW5kJyxcclxuICAgICAgICAgICAgZnI6ICdQb3Vzc8OpKGUpIGRhbnMgbGUgbXVyJyxcclxuICAgICAgICAgICAgamE6ICflo4Hjgbjjg47jg4Pjgq/jg5Djg4Pjgq8nLFxyXG4gICAgICAgICAgICBjbjogJ+WHu+mAgOiHs+WimScsXHJcbiAgICAgICAgICAgIGtvOiAn64SJ67CxJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIERhdGEgZXh0ZW5kcyBPb3BzeURhdGEge1xyXG4gIHNwaGVyZU5pdHJvPzogeyBbbmFtZTogc3RyaW5nXTogYm9vbGVhbiB9O1xyXG4gIHNwaGVyZUNlcnVsZXVtPzogeyBbbmFtZTogc3RyaW5nXTogYm9vbGVhbiB9O1xyXG59XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuQ2FzdHJ1bU1hcmludW1FeHRyZW1lLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdFbWVyYWxkRXggSGVhdCBSYXknOiAnNUJEMycsIC8vIEVtZXJhbGQgQmVhbSBpbml0aWFsIGNvbmFsXHJcbiAgICAnRW1lcmFsZEV4IFBob3RvbiBMYXNlciAxJzogJzU1N0InLCAvLyBFbWVyYWxkIEJlYW0gaW5zaWRlIGNpcmNsZVxyXG4gICAgJ0VtZXJhbGRFeCBQaG90b24gTGFzZXIgMic6ICc1NTdEJywgLy8gRW1lcmFsZCBCZWFtIG91dHNpZGUgY2lyY2xlXHJcbiAgICAnRW1lcmFsZEV4IEhlYXQgUmF5IDEnOiAnNTU3QScsIC8vIEVtZXJhbGQgQmVhbSByb3RhdGluZyBwdWxzaW5nIGxhc2VyXHJcbiAgICAnRW1lcmFsZEV4IEhlYXQgUmF5IDInOiAnNTU3OScsIC8vIEVtZXJhbGQgQmVhbSByb3RhdGluZyBwdWxzaW5nIGxhc2VyXHJcbiAgICAnRW1lcmFsZEV4IEV4cGxvc2lvbic6ICc1NTk2JywgLy8gTWFnaXRlayBNaW5lIGV4cGxvc2lvblxyXG4gICAgJ0VtZXJhbGRFeCBUZXJ0aXVzIFRlcm1pbnVzIEVzdCBJbml0aWFsJzogJzU1Q0QnLCAvLyBzd29yZCBpbml0aWFsIHB1ZGRsZXNcclxuICAgICdFbWVyYWxkRXggVGVydGl1cyBUZXJtaW51cyBFc3QgRXhwbG9zaW9uJzogJzU1Q0UnLCAvLyBzd29yZCBleHBsb3Npb25zXHJcbiAgICAnRW1lcmFsZEV4IEFpcmJvcm5lIEV4cGxvc2lvbic6ICc1NUJEJywgLy8gZXhhZmxhcmVcclxuICAgICdFbWVyYWxkRXggU2lkZXNjYXRoZSAxJzogJzU1RDQnLCAvLyBsZWZ0L3JpZ2h0IGNsZWF2ZVxyXG4gICAgJ0VtZXJhbGRFeCBTaWRlc2NhdGhlIDInOiAnNTVENScsIC8vIGxlZnQvcmlnaHQgY2xlYXZlXHJcbiAgICAnRW1lcmFsZEV4IFNob3RzIEZpcmVkJzogJzU1QjcnLCAvLyByYW5rIGFuZCBmaWxlIHNvbGRpZXJzXHJcbiAgICAnRW1lcmFsZEV4IFNlY3VuZHVzIFRlcm1pbnVzIEVzdCc6ICc1NUNCJywgLy8gZHJvcHBlZCArIGFuZCB4IGhlYWRtYXJrZXJzXHJcbiAgICAnRW1lcmFsZEV4IEV4cGlyZSc6ICc1NUQxJywgLy8gZ3JvdW5kIGFvZSBvbiBib3NzIFwiZ2V0IG91dFwiXHJcbiAgICAnRW1lcmFsZEV4IFBob3RvbiBSaW5nJzogJzU1QTknLCAvLyB1bnRlbGVncmFwaGVkIFwiZ2V0IG91dFwiXHJcbiAgICAnRW1lcmFsZEV4IEFpcmUgVGFtIFN0b3JtJzogJzU1RDAnLCAvLyBleHBhbmRpbmcgcmVkIGFuZCBibGFjayBncm91bmQgYW9lXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdFbWVyYWxkRXggRGl2aWRlIEV0IEltcGVyYSc6ICc1NUQ5JywgLy8gbm9uLXRhbmsgcHJvdGVhbiBzcHJlYWRcclxuICAgICdFbWVyYWxkRXggUHJpbXVzIFRlcm1pbnVzIEVzdCAxJzogJzU1QzQnLCAvLyBrbm9ja2JhY2sgYXJyb3dcclxuICAgICdFbWVyYWxkRXggUHJpbXVzIFRlcm1pbnVzIEVzdCAyJzogJzU1QzUnLCAvLyBrbm9ja2JhY2sgYXJyb3dcclxuICAgICdFbWVyYWxkRXggUHJpbXVzIFRlcm1pbnVzIEVzdCAzJzogJzU1QzYnLCAvLyBrbm9ja2JhY2sgYXJyb3dcclxuICAgICdFbWVyYWxkRXggUHJpbXVzIFRlcm1pbnVzIEVzdCA0JzogJzU1QzcnLCAvLyBrbm9ja2JhY2sgYXJyb3dcclxuICB9LFxyXG4gIHNvbG9XYXJuOiB7XHJcbiAgICAnRW1lcmFsZEV4IE5pdHJvc3BoZXJlIEFldGhlcm9wbGFzbSc6ICc1NUFFJyxcclxuICAgICdFbWVyYWxkRXggQ2VydWxldW0gU3BoZXJlIEFldGhlcm9wbGFzbSc6ICc1NUFGJyxcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRW1lcmFsZEV4IE5pdHJvc3BoZXJlIFBoeXNpY2FsIFZ1bG5lcmFiaWxpdHkgVXAgR2FpbicsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICc4MkEnIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS5zcGhlcmVOaXRybyA9IGRhdGEuc3BoZXJlTml0cm8gPz8ge307XHJcbiAgICAgICAgZGF0YS5zcGhlcmVOaXRyb1ttYXRjaGVzLnRhcmdldF0gPSB0cnVlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFbWVyYWxkRXggTml0cm9zcGhlcmUgUGh5c2ljYWwgVnVsbmVyYWJpbGl0eSBVcCBMb3NlJyxcclxuICAgICAgdHlwZTogJ0xvc2VzRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMubG9zZXNFZmZlY3QoeyBlZmZlY3RJZDogJzgyQScgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICAvLyBOZWVkIHRvIHRyYWNrIGxvc3MgaGVyZSBmb3IgdGhlIDQvNCBzdHJhdGVneS5cclxuICAgICAgICBkYXRhLnNwaGVyZU5pdHJvID0gZGF0YS5zcGhlcmVOaXRybyA/PyB7fTtcclxuICAgICAgICBkYXRhLnNwaGVyZU5pdHJvW21hdGNoZXMudGFyZ2V0XSA9IGZhbHNlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFbWVyYWxkRXggQ2VydWxldW0gU3BoZXJlIE1hZ2ljIFZ1bG5lcmFiaWxpdHkgVXAgR2FpbicsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICc4MkInIH0pLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS5zcGhlcmVDZXJ1bGV1bSA9IGRhdGEuc3BoZXJlQ2VydWxldW0gPz8ge307XHJcbiAgICAgICAgZGF0YS5zcGhlcmVDZXJ1bGV1bVttYXRjaGVzLnRhcmdldF0gPSB0cnVlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdFbWVyYWxkRXggQ2VydWxldW0gU3BoZXJlIE1hZ2ljIFZ1bG5lcmFiaWxpdHkgVXAgTG9zZScsXHJcbiAgICAgIHR5cGU6ICdMb3Nlc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmxvc2VzRWZmZWN0KHsgZWZmZWN0SWQ6ICc4MkInIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS5zcGhlcmVDZXJ1bGV1bSA9IGRhdGEuc3BoZXJlQ2VydWxldW0gPz8ge307XHJcbiAgICAgICAgZGF0YS5zcGhlcmVDZXJ1bGV1bVttYXRjaGVzLnRhcmdldF0gPSBmYWxzZTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRW1lcmFsZEV4IE5pdHJvc3BoZXJlIFR3aWNlJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICc1NUFFJyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gZGF0YS5zcGhlcmVOaXRybz8uW21hdGNoZXMudGFyZ2V0XSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHR5cGU6ICdmYWlsJyxcclxuICAgICAgICAgIGJsYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogYCR7bWF0Y2hlcy5hYmlsaXR5fSAod3JvbmcgY29sb3IpYCxcclxuICAgICAgICAgICAgZGU6IGAke21hdGNoZXMuYWJpbGl0eX0gKGZhbHNjaGUgRmFyYmUpYCxcclxuICAgICAgICAgICAgZnI6IGAke21hdGNoZXMuYWJpbGl0eX0gKG1hdXZhaXNlIGNvdWxldXIpYCxcclxuICAgICAgICAgICAgamE6IGAke21hdGNoZXMuYWJpbGl0eX0gKOiJsumBleOBhilgLFxyXG4gICAgICAgICAgICBjbjogYCR7bWF0Y2hlcy5hYmlsaXR5fSAo6aKc6Imy6ZSZ5LqGKWAsXHJcbiAgICAgICAgICAgIGtvOiBgJHttYXRjaGVzLmFiaWxpdHl9ICjsg4kg7YuA66a8KWAsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0VtZXJhbGRFeCBDZXJ1bGV1bSBTcGhlcmUgVHdpY2UnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzU1QUYnIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiBkYXRhLnNwaGVyZUNlcnVsZXVtPy5bbWF0Y2hlcy50YXJnZXRdLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ2ZhaWwnLFxyXG4gICAgICAgICAgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiBgJHttYXRjaGVzLmFiaWxpdHl9ICh3cm9uZyBjb2xvcilgLFxyXG4gICAgICAgICAgICBkZTogYCR7bWF0Y2hlcy5hYmlsaXR5fSAoZmFsc2NoZSBGYXJiZSlgLFxyXG4gICAgICAgICAgICBmcjogYCR7bWF0Y2hlcy5hYmlsaXR5fSAobWF1dmFpc2UgY291bGV1cilgLFxyXG4gICAgICAgICAgICBqYTogYCR7bWF0Y2hlcy5hYmlsaXR5fSAo6Imy6YGV44GGKWAsXHJcbiAgICAgICAgICAgIGNuOiBgJHttYXRjaGVzLmFiaWxpdHl9ICjpopzoibLplJnkuoYpYCxcclxuICAgICAgICAgICAga286IGAke21hdGNoZXMuYWJpbGl0eX0gKOyDiSDti4DrprwpYCxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIEhhZGVzIE5vcm1hbFxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlRHlpbmdHYXNwLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdIYWRlcyBCYWQgRmFpdGggMSc6ICc0MTRCJyxcclxuICAgICdIYWRlcyBCYWQgRmFpdGggMic6ICc0MTRDJyxcclxuICAgICdIYWRlcyBEYXJrIEVydXB0aW9uJzogJzQxNTInLFxyXG4gICAgJ0hhZGVzIFNoYWRvdyBTcHJlYWQgMSc6ICc0MTU2JyxcclxuICAgICdIYWRlcyBTaGFkb3cgU3ByZWFkIDInOiAnNDE1NycsXHJcbiAgICAnSGFkZXMgQnJva2VuIEZhaXRoJzogJzQxNEUnLFxyXG4gICAgJ0hhZGVzIEhlbGxib3JuIFlhd3AnOiAnNDE2RicsXHJcbiAgICAnSGFkZXMgUHVyZ2F0aW9uJzogJzQxNzInLFxyXG4gICAgJ0hhZGVzIFNoYWRvdyBTdHJlYW0nOiAnNDE1QycsXHJcbiAgICAnSGFkZXMgQWVybyc6ICc0NTk1JyxcclxuICAgICdIYWRlcyBFY2hvIDEnOiAnNDE2MycsXHJcbiAgICAnSGFkZXMgRWNobyAyJzogJzQxNjQnLFxyXG4gIH0sXHJcbiAgc2hhcmVGYWlsOiB7XHJcbiAgICAnSGFkZXMgTmV0aGVyIEJsYXN0JzogJzQxNjMnLFxyXG4gICAgJ0hhZGVzIFJhdmVub3VzIEFzc2F1bHQnOiAnNDE1OCcsXHJcbiAgICAnSGFkZXMgQW5jaWVudCBEYXJrbmVzcyc6ICc0NTkzJyxcclxuICAgICdIYWRlcyBEdWFsIFN0cmlrZSc6ICc0MTYyJyxcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSBleHRlbmRzIE9vcHN5RGF0YSB7XHJcbiAgaGFzRGFyaz86IHN0cmluZ1tdO1xyXG4gIGhhc0JleW9uZERlYXRoPzogeyBbbmFtZTogc3RyaW5nXTogYm9vbGVhbiB9O1xyXG4gIGhhc0Rvb20/OiB7IFtuYW1lOiBzdHJpbmddOiBib29sZWFuIH07XHJcbn1cclxuXHJcbi8vIEhhZGVzIEV4XHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVNaW5zdHJlbHNCYWxsYWRIYWRlc3NFbGVneSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnSGFkZXNFeCBTaGFkb3cgU3ByZWFkIDInOiAnNDdBQScsXHJcbiAgICAnSGFkZXNFeCBTaGFkb3cgU3ByZWFkIDMnOiAnNDdFNCcsXHJcbiAgICAnSGFkZXNFeCBTaGFkb3cgU3ByZWFkIDQnOiAnNDdFNScsXHJcbiAgICAvLyBFdmVyeWJvZHkgc3RhY2tzIGluIGdvb2QgZmFpdGggZm9yIEJhZCBGYWl0aCwgc28gZG9uJ3QgY2FsbCBpdCBhIG1pc3Rha2UuXHJcbiAgICAvLyAnSGFkZXNFeCBCYWQgRmFpdGggMSc6ICc0N0FEJyxcclxuICAgIC8vICdIYWRlc0V4IEJhZCBGYWl0aCAyJzogJzQ3QjAnLFxyXG4gICAgLy8gJ0hhZGVzRXggQmFkIEZhaXRoIDMnOiAnNDdBRScsXHJcbiAgICAvLyAnSGFkZXNFeCBCYWQgRmFpdGggNCc6ICc0N0FGJyxcclxuICAgICdIYWRlc0V4IEJyb2tlbiBGYWl0aCc6ICc0N0IyJyxcclxuICAgICdIYWRlc0V4IE1hZ2ljIFNwZWFyJzogJzQ3QjYnLFxyXG4gICAgJ0hhZGVzRXggTWFnaWMgQ2hha3JhbSc6ICc0N0I1JyxcclxuICAgICdIYWRlc0V4IEZvcmtlZCBMaWdodG5pbmcnOiAnNDdDOScsXHJcbiAgICAnSGFkZXNFeCBEYXJrIEN1cnJlbnQgMSc6ICc0N0YxJyxcclxuICAgICdIYWRlc0V4IERhcmsgQ3VycmVudCAyJzogJzQ3RjInLFxyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ0hhZGVzRXggQ29tZXQnOiAnNDdCOScsIC8vIG1pc3NlZCB0b3dlclxyXG4gICAgJ0hhZGVzRXggQW5jaWVudCBFcnVwdGlvbic6ICc0N0QzJyxcclxuICAgICdIYWRlc0V4IFB1cmdhdGlvbiAxJzogJzQ3RUMnLFxyXG4gICAgJ0hhZGVzRXggUHVyZ2F0aW9uIDInOiAnNDdFRCcsXHJcbiAgICAnSGFkZXNFeCBTaGFkb3cgU3RyZWFtJzogJzQ3RUEnLFxyXG4gICAgJ0hhZGVzRXggRGVhZCBTcGFjZSc6ICc0N0VFJyxcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0hhZGVzRXggU2hhZG93IFNwcmVhZCBJbml0aWFsJzogJzQ3QTknLFxyXG4gICAgJ0hhZGVzRXggUmF2ZW5vdXMgQXNzYXVsdCc6ICcoPzo0N0E2fDQ3QTcpJyxcclxuICAgICdIYWRlc0V4IERhcmsgRmxhbWUgMSc6ICc0N0M2JyxcclxuICAgICdIYWRlc0V4IERhcmsgRnJlZXplIDEnOiAnNDdDNCcsXHJcbiAgICAnSGFkZXNFeCBEYXJrIEZyZWV6ZSAyJzogJzQ3REYnLFxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6ICdIYWRlc0V4IERhcmsgSUkgVGV0aGVyJyxcclxuICAgICAgdHlwZTogJ1RldGhlcicsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLnRldGhlcih7IHNvdXJjZTogJ1NoYWRvdyBvZiB0aGUgQW5jaWVudHMnLCBpZDogJzAwMTEnIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS5oYXNEYXJrID8/PSBbXTtcclxuICAgICAgICBkYXRhLmhhc0RhcmsucHVzaChtYXRjaGVzLnRhcmdldCk7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0hhZGVzRXggRGFyayBJSScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyB0eXBlOiAnMjInLCBpZDogJzQ3QkEnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIC8vIERvbid0IGJsYW1lIHBlb3BsZSB3aG8gZG9uJ3QgaGF2ZSB0ZXRoZXJzLlxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiBkYXRhLmhhc0RhcmsgJiYgZGF0YS5oYXNEYXJrLmluY2x1ZGVzKG1hdGNoZXMudGFyZ2V0KSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ2ZhaWwnLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmFiaWxpdHkgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnSGFkZXNFeCBCb3NzIFRldGhlcicsXHJcbiAgICAgIHR5cGU6ICdUZXRoZXInLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy50ZXRoZXIoeyBzb3VyY2U6IFsnSWdleW9yaG1cXCdzIFNoYWRlJywgJ0xhaGFicmVhXFwncyBTaGFkZSddLCBpZDogJzAwMEUnLCBjYXB0dXJlOiBmYWxzZSB9KSxcclxuICAgICAgbWlzdGFrZToge1xyXG4gICAgICAgIHR5cGU6ICd3YXJuJyxcclxuICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICBlbjogJ0Jvc3NlcyBUb28gQ2xvc2UnLFxyXG4gICAgICAgICAgZGU6ICdCb3NzZXMgenUgTmFoZScsXHJcbiAgICAgICAgICBmcjogJ0Jvc3MgdHJvcCBwcm9jaGVzJyxcclxuICAgICAgICAgIGphOiAn44Oc44K56L+R44GZ44GO44KLJyxcclxuICAgICAgICAgIGNuOiAnQk9TU+mdoOWkqui/keS6hicsXHJcbiAgICAgICAgICBrbzogJ+yrhOuTpOydtCDrhIjrrLQg6rCA6rmM7JuAJyxcclxuICAgICAgICB9LFxyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdIYWRlc0V4IERlYXRoIFNocmllaycsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzQ3Q0InLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEuRGFtYWdlRnJvbU1hdGNoZXMobWF0Y2hlcykgPiAwLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnd2FybicsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdIYWRlc0V4IEJleW9uZCBEZWF0aCBHYWluJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzU2NicgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLmhhc0JleW9uZERlYXRoID8/PSB7fTtcclxuICAgICAgICBkYXRhLmhhc0JleW9uZERlYXRoW21hdGNoZXMudGFyZ2V0XSA9IHRydWU7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0hhZGVzRXggQmV5b25kIERlYXRoIExvc2UnLFxyXG4gICAgICB0eXBlOiAnTG9zZXNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5sb3Nlc0VmZmVjdCh7IGVmZmVjdElkOiAnNTY2JyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuaGFzQmV5b25kRGVhdGggPz89IHt9O1xyXG4gICAgICAgIGRhdGEuaGFzQmV5b25kRGVhdGhbbWF0Y2hlcy50YXJnZXRdID0gZmFsc2U7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0hhZGVzRXggQmV5b25kIERlYXRoJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzU2NicgfSksXHJcbiAgICAgIGRlbGF5U2Vjb25kczogKF9kYXRhLCBtYXRjaGVzKSA9PiBwYXJzZUZsb2F0KG1hdGNoZXMuZHVyYXRpb24pIC0gMC41LFxyXG4gICAgICBkZWF0aFJlYXNvbjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBpZiAoIWRhdGEuaGFzQmV5b25kRGVhdGgpXHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgaWYgKCFkYXRhLmhhc0JleW9uZERlYXRoW21hdGNoZXMudGFyZ2V0XSlcclxuICAgICAgICAgIHJldHVybjtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IG1hdGNoZXMuZWZmZWN0LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0hhZGVzRXggRG9vbSBHYWluJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzZFOScgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLmhhc0Rvb20gPz89IHt9O1xyXG4gICAgICAgIGRhdGEuaGFzRG9vbVttYXRjaGVzLnRhcmdldF0gPSB0cnVlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdIYWRlc0V4IERvb20gTG9zZScsXHJcbiAgICAgIHR5cGU6ICdMb3Nlc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmxvc2VzRWZmZWN0KHsgZWZmZWN0SWQ6ICc2RTknIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgZGF0YS5oYXNEb29tID8/PSB7fTtcclxuICAgICAgICBkYXRhLmhhc0Rvb21bbWF0Y2hlcy50YXJnZXRdID0gZmFsc2U7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0hhZGVzRXggRG9vbScsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICc2RTknIH0pLFxyXG4gICAgICBkZWxheVNlY29uZHM6IChfZGF0YSwgbWF0Y2hlcykgPT4gcGFyc2VGbG9hdChtYXRjaGVzLmR1cmF0aW9uKSAtIDAuNSxcclxuICAgICAgZGVhdGhSZWFzb246IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgaWYgKCFkYXRhLmhhc0Rvb20pXHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgaWYgKCFkYXRhLmhhc0Rvb21bbWF0Y2hlcy50YXJnZXRdKVxyXG4gICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDogbWF0Y2hlcy5lZmZlY3QsXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIElubm9jZW5jZSBOb3JtYWxcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZUNyb3duT2ZUaGVJbW1hY3VsYXRlLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdJbm5vIERheWJyZWFrJzogJzNFOUQnLFxyXG4gICAgJ0lubm8gSG9seSBUcmluaXR5JzogJzNFQjMnLFxyXG5cclxuICAgICdJbm5vIFJlcHJvYmF0aW9uIDEnOiAnM0VCNicsXHJcbiAgICAnSW5ubyBSZXByb2JhdGlvbiAyJzogJzNFQjgnLFxyXG4gICAgJ0lubm8gUmVwcm9iYXRpb24gMyc6ICczRUNCJyxcclxuICAgICdJbm5vIFJlcHJvYmF0aW9uIDQnOiAnM0VCNycsXHJcblxyXG4gICAgJ0lubm8gU291bCBhbmQgQm9keSAxJzogJzNFQjEnLFxyXG4gICAgJ0lubm8gU291bCBhbmQgQm9keSAyJzogJzNFQjInLFxyXG4gICAgJ0lubm8gU291bCBhbmQgQm9keSAzJzogJzNFRjknLFxyXG4gICAgJ0lubm8gU291bCBhbmQgQm9keSA0JzogJzNFRkEnLFxyXG5cclxuICAgICdJbm5vIEdvZCBSYXkgMSc6ICczRUJEJyxcclxuICAgICdJbm5vIEdvZCBSYXkgMic6ICczRUJFJyxcclxuICAgICdJbm5vIEdvZCBSYXkgMyc6ICczRUJGJyxcclxuICAgICdJbm5vIEdvZCBSYXkgNCc6ICczRUMwJyxcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gSW5ub2NlbmNlIEV4dHJlbWVcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZUNyb3duT2ZUaGVJbW1hY3VsYXRlRXh0cmVtZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnSW5ub0V4IER1ZWwgRGVzY2VudCc6ICczRUQyJyxcclxuICAgICdJbm5vRXggUmVwcm9iYXRpb24gMSc6ICczRUUwJyxcclxuICAgICdJbm5vRXggUmVwcm9iYXRpb24gMic6ICczRUNDJyxcclxuICAgICdJbm5vRXggU3dvcmQgb2YgQ29uZGVtbmF0aW9uIDEnOiAnM0VERScsXHJcbiAgICAnSW5ub0V4IFN3b3JkIG9mIENvbmRlbW5hdGlvbiAyJzogJzNFREYnLFxyXG4gICAgJ0lubm9FeCBEcmVhbSBvZiB0aGUgUm9vZCAxJzogJzNFRDMnLFxyXG4gICAgJ0lubm9FeCBEcmVhbSBvZiB0aGUgUm9vZCAyJzogJzNFRDQnLFxyXG4gICAgJ0lubm9FeCBEcmVhbSBvZiB0aGUgUm9vZCAzJzogJzNFRDUnLFxyXG4gICAgJ0lubm9FeCBEcmVhbSBvZiB0aGUgUm9vZCA0JzogJzNFRDYnLFxyXG4gICAgJ0lubm9FeCBEcmVhbSBvZiB0aGUgUm9vZCA1JzogJzNFRkInLFxyXG4gICAgJ0lubm9FeCBEcmVhbSBvZiB0aGUgUm9vZCA2JzogJzNFRkMnLFxyXG4gICAgJ0lubm9FeCBEcmVhbSBvZiB0aGUgUm9vZCA3JzogJzNFRkQnLFxyXG4gICAgJ0lubm9FeCBEcmVhbSBvZiB0aGUgUm9vZCA4JzogJzNFRkUnLFxyXG4gICAgJ0lubm9FeCBIb2x5IFRyaW5pdHknOiAnM0VEQicsXHJcbiAgICAnSW5ub0V4IFNvdWwgYW5kIEJvZHkgMSc6ICczRUQ3JyxcclxuICAgICdJbm5vRXggU291bCBhbmQgQm9keSAyJzogJzNFRDgnLFxyXG4gICAgJ0lubm9FeCBTb3VsIGFuZCBCb2R5IDMnOiAnM0VEOScsXHJcbiAgICAnSW5ub0V4IFNvdWwgYW5kIEJvZHkgNCc6ICczRURBJyxcclxuICAgICdJbm5vRXggU291bCBhbmQgQm9keSA1JzogJzNFRkYnLFxyXG4gICAgJ0lubm9FeCBTb3VsIGFuZCBCb2R5IDYnOiAnM0YwMCcsXHJcbiAgICAnSW5ub0V4IFNvdWwgYW5kIEJvZHkgNyc6ICczRjAxJyxcclxuICAgICdJbm5vRXggU291bCBhbmQgQm9keSA4JzogJzNGMDInLFxyXG4gICAgJ0lubm9FeCBHb2QgUmF5IDEnOiAnM0VFNicsXHJcbiAgICAnSW5ub0V4IEdvZCBSYXkgMic6ICczRUU3JyxcclxuICAgICdJbm5vRXggR29kIFJheSAzJzogJzNFRTgnLFxyXG4gICAgJ0lubm9FeCBFeHBsb3Npb24nOiAnM0VGMCcsXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gSXQncyBoYXJkIHRvIGNhcHR1cmUgdGhlIHJlZmxlY3Rpb24gYWJpbGl0aWVzIGZyb20gTGV2aWF0aGFuJ3MgSGVhZCBhbmQgVGFpbCBpZiB5b3UgdXNlXHJcbi8vIHJhbmdlZCBwaHlzaWNhbCBhdHRhY2tzIC8gbWFnaWMgYXR0YWNrcyByZXNwZWN0aXZlbHksIGFzIHRoZSBhYmlsaXR5IG5hbWVzIGFyZSB0aGVcclxuLy8gYWJpbGl0eSB5b3UgdXNlZCBhbmQgZG9uJ3QgYXBwZWFyIHRvIHNob3cgdXAgaW4gdGhlIGxvZyBhcyBub3JtYWwgXCJhYmlsaXR5XCIgbGluZXMuXHJcbi8vIFRoYXQgc2FpZCwgZG90cyBzdGlsbCB0aWNrIGluZGVwZW5kZW50bHkgb24gYm90aCBzbyBpdCdzIGxpa2VseSB0aGF0IHBlb3BsZSB3aWxsIGF0YWNrXHJcbi8vIHRoZW0gYW55d2F5LlxyXG5cclxuLy8gVE9ETzogRmlndXJlIG91dCB3aHkgRHJlYWQgVGlkZSAvIFdhdGVyc3BvdXQgYXBwZWFyIGxpa2Ugc2hhcmVzIChpLmUuIDB4MTYgaWQpLlxyXG4vLyBEcmVhZCBUaWRlID0gNUNDQS81Q0NCLzVDQ0MsIFdhdGVyc3BvdXQgPSA1Q0QxXHJcblxyXG4vLyBMZXZpYXRoYW4gVW5yZWFsXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVXaG9ybGVhdGVyVW5yZWFsLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdMZXZpVW4gR3JhbmQgRmFsbCc6ICc1Q0RGJywgLy8gdmVyeSBsYXJnZSBjaXJjdWxhciBhb2UgYmVmb3JlIHNwaW5ueSBkaXZlcywgYXBwbGllcyBoZWF2eVxyXG4gICAgJ0xldmlVbiBIeWRyb3Nob3QnOiAnNUNENScsIC8vIFdhdmVzcGluZSBTYWhhZ2luIGFvZSB0aGF0IGdpdmVzIERyb3BzeSBlZmZlY3RcclxuICAgICdMZXZpVW4gRHJlYWRzdG9ybSc6ICc1Q0Q2JywgLy8gV2F2ZXRvb3RoIFNhaGFnaW4gYW9lIHRoYXQgZ2l2ZXMgSHlzdGVyaWEgZWZmZWN0XHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnTGV2aVVuIEJvZHkgU2xhbSc6ICc1Q0QyJywgLy8gbGV2aSBzbGFtIHRoYXQgdGlsdHMgdGhlIGJvYXRcclxuICAgICdMZXZpVW4gU3Bpbm5pbmcgRGl2ZSAxJzogJzVDREInLCAvLyBsZXZpIGRhc2ggYWNyb3NzIHRoZSBib2F0IHdpdGgga25vY2tiYWNrXHJcbiAgICAnTGV2aVVuIFNwaW5uaW5nIERpdmUgMic6ICc1Q0UzJywgLy8gbGV2aSBkYXNoIGFjcm9zcyB0aGUgYm9hdCB3aXRoIGtub2NrYmFja1xyXG4gICAgJ0xldmlVbiBTcGlubmluZyBEaXZlIDMnOiAnNUNFOCcsIC8vIGxldmkgZGFzaCBhY3Jvc3MgdGhlIGJvYXQgd2l0aCBrbm9ja2JhY2tcclxuICAgICdMZXZpVW4gU3Bpbm5pbmcgRGl2ZSA0JzogJzVDRTknLCAvLyBsZXZpIGRhc2ggYWNyb3NzIHRoZSBib2F0IHdpdGgga25vY2tiYWNrXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdFdhcm46IHtcclxuICAgICdMZXZpVW4gRHJvcHN5JzogJzExMCcsIC8vIHN0YW5kaW5nIGluIHRoZSBoeWRybyBzaG90IGZyb20gdGhlIFdhdmVzcGluZSBTYWhhZ2luXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdEZhaWw6IHtcclxuICAgICdMZXZpVW4gSHlzdGVyaWEnOiAnMTI4JywgLy8gc3RhbmRpbmcgaW4gdGhlIGRyZWFkc3Rvcm0gZnJvbSB0aGUgV2F2ZXRvb3RoIFNhaGFnaW5cclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnTGV2aVVuIEJvZHkgU2xhbSBLbm9ja2VkIE9mZicsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnNUNEMicgfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdLbm9ja2VkIG9mZicsXHJcbiAgICAgICAgICAgIGRlOiAnUnVudGVyZ2VmYWxsZW4nLFxyXG4gICAgICAgICAgICBmcjogJ1JlbnZlcnPDqShlKScsXHJcbiAgICAgICAgICAgIGphOiAn44OO44OD44Kv44OQ44OD44KvJyxcclxuICAgICAgICAgICAgY246ICflh7vpgIDlnaDokL0nLFxyXG4gICAgICAgICAgICBrbzogJ+uEieuwsScsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBSdWJ5IE5vcm1hbFxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuQ2luZGVyRHJpZnQsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1J1YnkgUmF2ZW5zY2xhdyc6ICc0QTkzJywgLy8gY2VudGVyZWQgY2lyY2xlIGFvZSBmb3IgcmF2ZW5zY2xhd1xyXG4gICAgJ1J1YnkgU3Bpa2UgT2YgRmxhbWUgMSc6ICc0QTlBJywgLy8gaW5pdGlhbCBleHBsb3Npb24gZHVyaW5nIGhlbGljb2NsYXdcclxuICAgICdSdWJ5IFNwaWtlIE9mIEZsYW1lIDInOiAnNEIyRScsIC8vIGZvbGxvd3VwIGhlbGljb2NsYXcgZXhwbG9zaW9uc1xyXG4gICAgJ1J1YnkgU3Bpa2UgT2YgRmxhbWUgMyc6ICc0QTk0JywgLy8gcmF2ZW5zY2xhdyBleHBsb3Npb24gYXQgZW5kcyBvZiBsaW5lc1xyXG4gICAgJ1J1YnkgU3Bpa2UgT2YgRmxhbWUgNCc6ICc0QTk1JywgLy8gcmF2ZW5zY2xhdyBleHBsb3Npb24gYXQgZW5kcyBvZiBsaW5lc1xyXG4gICAgJ1J1YnkgU3Bpa2UgT2YgRmxhbWUgNSc6ICc0RDAyJywgLy8gcmF2ZW5zY2xhdyBleHBsb3Npb24gYXQgZW5kcyBvZiBsaW5lc1xyXG4gICAgJ1J1YnkgU3Bpa2UgT2YgRmxhbWUgNic6ICc0RDAzJywgLy8gcmF2ZW5zY2xhdyBleHBsb3Npb24gYXQgZW5kcyBvZiBsaW5lc1xyXG4gICAgJ1J1YnkgUnVieSBSYXknOiAnNEFDNicsIC8vIGZyb250YWwgbGFzZXJcclxuICAgICdSdWJ5IFVuZGVybWluZSc6ICc0QTk3JywgLy8gZ3JvdW5kIGFvZXMgdW5kZXIgdGhlIHJhdmVuc2NsYXcgcGF0Y2hlc1xyXG4gICAgJ1J1YnkgUmF2ZW5zZmxpZ2h0IDEnOiAnNEU2OScsIC8vIGRhc2ggYXJvdW5kIHRoZSBhcmVuYVxyXG4gICAgJ1J1YnkgUmF2ZW5zZmxpZ2h0IDInOiAnNEU2QScsIC8vIGRhc2ggYXJvdW5kIHRoZSBhcmVuYVxyXG4gICAgJ1J1YnkgUmF2ZW5zZmxpZ2h0IDMnOiAnNEFBMScsIC8vIGRhc2ggYXJvdW5kIHRoZSBhcmVuYVxyXG4gICAgJ1J1YnkgUmF2ZW5zZmxpZ2h0IDQnOiAnNEFBMicsIC8vIGRhc2ggYXJvdW5kIHRoZSBhcmVuYVxyXG4gICAgJ1J1YnkgUmF2ZW5zZmxpZ2h0IDUnOiAnNEFBMycsIC8vIGRhc2ggYXJvdW5kIHRoZSBhcmVuYVxyXG4gICAgJ1J1YnkgUmF2ZW5zZmxpZ2h0IDYnOiAnNEFBNCcsIC8vIGRhc2ggYXJvdW5kIHRoZSBhcmVuYVxyXG4gICAgJ1J1YnkgUmF2ZW5zZmxpZ2h0IDcnOiAnNEFBNScsIC8vIGRhc2ggYXJvdW5kIHRoZSBhcmVuYVxyXG4gICAgJ1J1YnkgUmF2ZW5zZmxpZ2h0IDgnOiAnNEFBNicsIC8vIGRhc2ggYXJvdW5kIHRoZSBhcmVuYVxyXG4gICAgJ1J1YnkgUmF2ZW5zZmxpZ2h0IDknOiAnNEFBNycsIC8vIGRhc2ggYXJvdW5kIHRoZSBhcmVuYVxyXG4gICAgJ1J1YnkgUmF2ZW5zZmxpZ2h0IDEwJzogJzRDMjEnLCAvLyBkYXNoIGFyb3VuZCB0aGUgYXJlbmFcclxuICAgICdSdWJ5IFJhdmVuc2ZsaWdodCAxMSc6ICc0QzJBJywgLy8gZGFzaCBhcm91bmQgdGhlIGFyZW5hXHJcbiAgICAnUnVieSBDb21ldCBCdXJzdCc6ICc0QUI0JywgLy8gbWV0ZW9yIGV4cGxvZGluZ1xyXG4gICAgJ1J1YnkgQnJhZGFtYW50ZSc6ICc0QUJDJywgLy8gaGVhZG1hcmtlcnMgd2l0aCBsaW5lIGFvZXNcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1J1YnkgSG9taW5nIExhc2VyJzogJzRBQzUnLCAvLyBzcHJlYWQgbWFya2VycyBpbiBQMVxyXG4gICAgJ1J1YnkgTWV0ZW9yIFN0cmVhbSc6ICc0RTY3JywgLy8gc3ByZWFkIG1hcmtlcnMgaW4gUDJcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBUT0RPOiB0YWtpbmcgdHdvIGRpZmZlcmVudCBIaWdoLVBvd2VyZWQgSG9taW5nIExhc2VycyAoNEFEOClcclxuLy8gVE9ETzogY291bGQgYmxhbWUgdGhlIHRldGhlcmVkIHBsYXllciBmb3IgV2hpdGUgQWdvbnkgLyBXaGl0ZSBGdXJ5IGZhaWx1cmVzP1xyXG5cclxuLy8gUnVieSBXZWFwb24gRXh0cmVtZVxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuQ2luZGVyRHJpZnRFeHRyZW1lLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdSdWJ5RXggUnVieSBCaXQgTWFnaXRlayBSYXknOiAnNEFEMicsIC8vIGxpbmUgYW9lcyBkdXJpbmcgaGVsaWNvY2xhd1xyXG4gICAgJ1J1YnlFeCBTcGlrZSBPZiBGbGFtZSAxJzogJzRBRDMnLCAvLyBpbml0aWFsIGV4cGxvc2lvbiBkdXJpbmcgaGVsaWNvY2xhd1xyXG4gICAgJ1J1YnlFeCBTcGlrZSBPZiBGbGFtZSAyJzogJzRCMkYnLCAvLyBmb2xsb3d1cCBoZWxpY29jbGF3IGV4cGxvc2lvbnNcclxuICAgICdSdWJ5RXggU3Bpa2UgT2YgRmxhbWUgMyc6ICc0RDA0JywgLy8gcmF2ZW5zY2xhdyBleHBsb3Npb24gYXQgZW5kcyBvZiBsaW5lc1xyXG4gICAgJ1J1YnlFeCBTcGlrZSBPZiBGbGFtZSA0JzogJzREMDUnLCAvLyByYXZlbnNjbGF3IGV4cGxvc2lvbiBhdCBlbmRzIG9mIGxpbmVzXHJcbiAgICAnUnVieUV4IFNwaWtlIE9mIEZsYW1lIDUnOiAnNEFDRCcsIC8vIHJhdmVuc2NsYXcgZXhwbG9zaW9uIGF0IGVuZHMgb2YgbGluZXNcclxuICAgICdSdWJ5RXggU3Bpa2UgT2YgRmxhbWUgNic6ICc0QUNFJywgLy8gcmF2ZW5zY2xhdyBleHBsb3Npb24gYXQgZW5kcyBvZiBsaW5lc1xyXG4gICAgJ1J1YnlFeCBVbmRlcm1pbmUnOiAnNEFEMCcsIC8vIGdyb3VuZCBhb2VzIHVuZGVyIHRoZSByYXZlbnNjbGF3IHBhdGNoZXNcclxuICAgICdSdWJ5RXggUnVieSBSYXknOiAnNEIwMicsIC8vIGZyb250YWwgbGFzZXJcclxuICAgICdSdWJ5RXggUmF2ZW5zZmxpZ2h0IDEnOiAnNEFEOScsIC8vIGRhc2ggYXJvdW5kIHRoZSBhcmVuYVxyXG4gICAgJ1J1YnlFeCBSYXZlbnNmbGlnaHQgMic6ICc0QURBJywgLy8gZGFzaCBhcm91bmQgdGhlIGFyZW5hXHJcbiAgICAnUnVieUV4IFJhdmVuc2ZsaWdodCAzJzogJzRBREQnLCAvLyBkYXNoIGFyb3VuZCB0aGUgYXJlbmFcclxuICAgICdSdWJ5RXggUmF2ZW5zZmxpZ2h0IDQnOiAnNEFERScsIC8vIGRhc2ggYXJvdW5kIHRoZSBhcmVuYVxyXG4gICAgJ1J1YnlFeCBSYXZlbnNmbGlnaHQgNSc6ICc0QURGJywgLy8gZGFzaCBhcm91bmQgdGhlIGFyZW5hXHJcbiAgICAnUnVieUV4IFJhdmVuc2ZsaWdodCA2JzogJzRBRTAnLCAvLyBkYXNoIGFyb3VuZCB0aGUgYXJlbmFcclxuICAgICdSdWJ5RXggUmF2ZW5zZmxpZ2h0IDcnOiAnNEFFMScsIC8vIGRhc2ggYXJvdW5kIHRoZSBhcmVuYVxyXG4gICAgJ1J1YnlFeCBSYXZlbnNmbGlnaHQgOCc6ICc0QUUyJywgLy8gZGFzaCBhcm91bmQgdGhlIGFyZW5hXHJcbiAgICAnUnVieUV4IFJhdmVuc2ZsaWdodCA5JzogJzRBRTMnLCAvLyBkYXNoIGFyb3VuZCB0aGUgYXJlbmFcclxuICAgICdSdWJ5RXggUmF2ZW5zZmxpZ2h0IDEwJzogJzRBRTQnLCAvLyBkYXNoIGFyb3VuZCB0aGUgYXJlbmFcclxuICAgICdSdWJ5RXggUmF2ZW5zZmxpZ2h0IDExJzogJzRBRTUnLCAvLyBkYXNoIGFyb3VuZCB0aGUgYXJlbmFcclxuICAgICdSdWJ5RXggUmF2ZW5zZmxpZ2h0IDEyJzogJzRBRTYnLCAvLyBkYXNoIGFyb3VuZCB0aGUgYXJlbmFcclxuICAgICdSdWJ5RXggUmF2ZW5zZmxpZ2h0IDEzJzogJzRBRTcnLCAvLyBkYXNoIGFyb3VuZCB0aGUgYXJlbmFcclxuICAgICdSdWJ5RXggUmF2ZW5zZmxpZ2h0IDE0JzogJzRBRTgnLCAvLyBkYXNoIGFyb3VuZCB0aGUgYXJlbmFcclxuICAgICdSdWJ5RXggUmF2ZW5zZmxpZ2h0IDE1JzogJzRBRTknLCAvLyBkYXNoIGFyb3VuZCB0aGUgYXJlbmFcclxuICAgICdSdWJ5RXggUmF2ZW5zZmxpZ2h0IDE2JzogJzRBRUEnLCAvLyBkYXNoIGFyb3VuZCB0aGUgYXJlbmFcclxuICAgICdSdWJ5RXggUmF2ZW5zZmxpZ2h0IDE3JzogJzRFNkInLCAvLyBkYXNoIGFyb3VuZCB0aGUgYXJlbmFcclxuICAgICdSdWJ5RXggUmF2ZW5zZmxpZ2h0IDE4JzogJzRFNkMnLCAvLyBkYXNoIGFyb3VuZCB0aGUgYXJlbmFcclxuICAgICdSdWJ5RXggUmF2ZW5zZmxpZ2h0IDE5JzogJzRFNkQnLCAvLyBkYXNoIGFyb3VuZCB0aGUgYXJlbmFcclxuICAgICdSdWJ5RXggUmF2ZW5zZmxpZ2h0IDIwJzogJzRFNkUnLCAvLyBkYXNoIGFyb3VuZCB0aGUgYXJlbmFcclxuICAgICdSdWJ5RXggUmF2ZW5zZmxpZ2h0IDIxJzogJzRFNkYnLCAvLyBkYXNoIGFyb3VuZCB0aGUgYXJlbmFcclxuICAgICdSdWJ5RXggUmF2ZW5zZmxpZ2h0IDIyJzogJzRFNzAnLCAvLyBkYXNoIGFyb3VuZCB0aGUgYXJlbmFcclxuICAgICdSdWJ5RXggQ3V0IEFuZCBSdW4gMSc6ICc0QjA1JywgLy8gc2xvdyBjaGFyZ2UgYWNyb3NzIGFyZW5hIGFmdGVyIHN0YWNrc1xyXG4gICAgJ1J1YnlFeCBDdXQgQW5kIFJ1biAyJzogJzRCMDYnLCAvLyBzbG93IGNoYXJnZSBhY3Jvc3MgYXJlbmEgYWZ0ZXIgc3RhY2tzXHJcbiAgICAnUnVieUV4IEN1dCBBbmQgUnVuIDMnOiAnNEIwNycsIC8vIHNsb3cgY2hhcmdlIGFjcm9zcyBhcmVuYSBhZnRlciBzdGFja3NcclxuICAgICdSdWJ5RXggQ3V0IEFuZCBSdW4gNCc6ICc0QjA4JywgLy8gc2xvdyBjaGFyZ2UgYWNyb3NzIGFyZW5hIGFmdGVyIHN0YWNrc1xyXG4gICAgJ1J1YnlFeCBDdXQgQW5kIFJ1biA1JzogJzRET0QnLCAvLyBzbG93IGNoYXJnZSBhY3Jvc3MgYXJlbmEgYWZ0ZXIgc3RhY2tzXHJcbiAgICAnUnVieUV4IE1ldGVvciBCdXJzdCc6ICc0QUYyJywgLy8gbWV0ZW9yIGV4cGxvZGluZ1xyXG4gICAgJ1J1YnlFeCBCcmFkYW1hbnRlJzogJzRFMzgnLCAvLyBoZWFkbWFya2VycyB3aXRoIGxpbmUgYW9lc1xyXG4gICAgJ1J1YnlFeCBDb21ldCBIZWF2eSBJbXBhY3QnOiAnNEFGNicsIC8vIGxldHRpbmcgYSB0YW5rIGNvbWV0IGxhbmRcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdSdWJ5RXggUnVieSBTcGhlcmUgQnVyc3QnOiAnNEFDQicsIC8vIGV4cGxvZGluZyB0aGUgcmVkIG1pbmVcclxuICAgICdSdWJ5RXggTHVuYXIgRHluYW1vJzogJzRFQjAnLCAvLyBcImdldCBpblwiIGZyb20gUmF2ZW4ncyBJbWFnZVxyXG4gICAgJ1J1YnlFeCBJcm9uIENoYXJpb3QnOiAnNEVCMScsIC8vIFwiZ2V0IG91dFwiIGZyb20gUmF2ZW4ncyBJbWFnZVxyXG4gICAgJ1J1YnlFeCBIZWFydCBJbiBUaGUgTWFjaGluZSc6ICc0QUZBJywgLy8gV2hpdGUgQWdvbnkvRnVyeSBza3VsbCBoaXR0aW5nIHBsYXllcnNcclxuICB9LFxyXG4gIGdhaW5zRWZmZWN0RmFpbDoge1xyXG4gICAgJ1J1YnlFeCBIeXN0ZXJpYSc6ICcxMjgnLCAvLyBOZWdhdGl2ZSBBdXJhIGxvb2thd2F5IGZhaWx1cmVcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1J1YnlFeCBIb21pbmcgTGFzZXJzJzogJzRBRDYnLCAvLyBzcHJlYWQgbWFya2VycyBkdXJpbmcgY3V0IGFuZCBydW5cclxuICAgICdSdWJ5RXggTWV0ZW9yIFN0cmVhbSc6ICc0RTY4JywgLy8gc3ByZWFkIG1hcmtlcnMgZHVyaW5nIFAyXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ1J1YnlFeCBTY3JlZWNoJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICc0QUVFJyB9KSxcclxuICAgICAgZGVhdGhSZWFzb246IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ0tub2NrZWQgaW50byB3YWxsJyxcclxuICAgICAgICAgICAgZGU6ICdSw7xja3N0b8OfIGluIGRpZSBXYW5kJyxcclxuICAgICAgICAgICAgZnI6ICdGcmFwcMOpKGUpIGRhbnMgbGUgbXVyJyxcclxuICAgICAgICAgICAgamE6ICflo4Hjgbjjg47jg4Pjgq/jg5Djg4Pjgq8nLFxyXG4gICAgICAgICAgICBjbjogJ+WHu+mAgOiHs+WimScsXHJcbiAgICAgICAgICAgIGtvOiAn64SJ67CxJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gU2hpdmEgVW5yZWFsXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVBa2hBZmFoQW1waGl0aGVhdHJlVW5yZWFsLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgIC8vIExhcmdlIHdoaXRlIGNpcmNsZXMuXHJcbiAgICAnU2hpdmFFeCBJY2ljbGUgSW1wYWN0JzogJzUzN0InLFxyXG4gICAgLy8gXCJnZXQgaW5cIiBhb2VcclxuICAgICdTaGl2YUV4IFdoaXRlb3V0JzogJzUzNzYnLFxyXG4gICAgLy8gQXZvaWRhYmxlIHRhbmsgc3R1bi5cclxuICAgICdTaGl2YUV4IEdsYWNpZXIgQmFzaCc6ICc1Mzc1JyxcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgIC8vIDI3MCBkZWdyZWUgYXR0YWNrLlxyXG4gICAgJ1NoaXZhRXggR2xhc3MgRGFuY2UnOiAnNTM3OCcsXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgIC8vIEhhaWxzdG9ybSBzcHJlYWQgbWFya2VyLlxyXG4gICAgJ1NoaXZhRXggSGFpbHN0b3JtJzogJzUzNkYnLFxyXG4gIH0sXHJcbiAgc2hhcmVGYWlsOiB7XHJcbiAgICAvLyBMYXNlci4gIFRPRE86IG1heWJlIGJsYW1lIHRoZSBwZXJzb24gaXQncyBvbj8/XHJcbiAgICAnU2hpdmFFeCBBdmFsYW5jaGUnOiAnNTM3OScsXHJcbiAgfSxcclxuICBzb2xvV2Fybjoge1xyXG4gICAgLy8gUGFydHkgc2hhcmVkIHRhbmsgYnVzdGVyLlxyXG4gICAgJ1NoaXZhRXggSWNlYnJhbmQnOiAnNTM3MycsXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ1NoaXZhRXggRGVlcCBGcmVlemUnLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICAvLyBTaGl2YSBhbHNvIHVzZXMgYWJpbGl0eSA1MzdBIG9uIHlvdSwgYnV0IGl0IGhhcyBhbiB1bmtub3duIG5hbWUuXHJcbiAgICAgIC8vIFNvLCB1c2UgdGhlIGVmZmVjdCBpbnN0ZWFkIGZvciBmcmVlIHRyYW5zbGF0aW9uLlxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnMUU3JyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICAvLyBUaGUgaW50ZXJtaXNzaW9uIGFsc28gZ2V0cyB0aGlzIGVmZmVjdCwgYnV0IGZvciBhIHNob3J0ZXIgZHVyYXRpb24uXHJcbiAgICAgICAgcmV0dXJuIHBhcnNlRmxvYXQobWF0Y2hlcy5kdXJhdGlvbikgPiAyMDtcclxuICAgICAgfSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ2ZhaWwnLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHRleHQ6IG1hdGNoZXMuZWZmZWN0IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlRGFuY2luZ1BsYWd1ZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnVGl0YW5pYSBXb29kXFwncyBFbWJyYWNlJzogJzNENTAnLFxyXG4gICAgLy8gJ1RpdGFuaWEgRnJvc3QgUnVuZSc6ICczRDRFJyxcclxuICAgICdUaXRhbmlhIEdlbnRsZSBCcmVlemUnOiAnM0Y4MycsXHJcbiAgICAnVGl0YW5pYSBMZWFmc3Rvcm0gMSc6ICczRDU1JyxcclxuICAgICdUaXRhbmlhIFB1Y2tcXCdzIFJlYnVrZSc6ICczRDU4JyxcclxuICAgICdUaXRhbmlhIExlYWZzdG9ybSAyJzogJzNFMDMnLFxyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ1RpdGFuaWEgUGhhbnRvbSBSdW5lIDEnOiAnM0Q1RCcsXHJcbiAgICAnVGl0YW5pYSBQaGFudG9tIFJ1bmUgMic6ICczRDVFJyxcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ1RpdGFuaWEgRGl2aW5hdGlvbiBSdW5lJzogJzNENUInLFxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlRGFuY2luZ1BsYWd1ZUV4dHJlbWUsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1RpdGFuaWFFeCBXb29kXFwncyBFbWJyYWNlJzogJzNEMkYnLFxyXG4gICAgLy8gJ1RpdGFuaWFFeCBGcm9zdCBSdW5lJzogJzNEMkInLFxyXG4gICAgJ1RpdGFuaWFFeCBHZW50bGUgQnJlZXplJzogJzNGODInLFxyXG4gICAgJ1RpdGFuaWFFeCBMZWFmc3Rvcm0gMSc6ICczRDM5JyxcclxuICAgICdUaXRhbmlhRXggUHVja1xcJ3MgUmVidWtlJzogJzNENDMnLFxyXG4gICAgJ1RpdGFuaWFFeCBXYWxsb3AnOiAnM0QzQicsXHJcbiAgICAnVGl0YW5pYUV4IExlYWZzdG9ybSAyJzogJzNENDknLFxyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ1RpdGFuaWFFeCBQaGFudG9tIFJ1bmUgMSc6ICczRDRDJyxcclxuICAgICdUaXRhbmlhRXggUGhhbnRvbSBSdW5lIDInOiAnM0Q0RCcsXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgIC8vIFRPRE86IFRoaXMgY291bGQgbWF5YmUgYmxhbWUgdGhlIHBlcnNvbiB3aXRoIHRoZSB0ZXRoZXI/XHJcbiAgICAnVGl0YW5pYUV4IFRodW5kZXIgUnVuZSc6ICczRDI5JyxcclxuICAgICdUaXRhbmlhRXggRGl2aW5hdGlvbiBSdW5lJzogJzNENEEnLFxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBUaXRhbiBVbnJlYWxcclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZU5hdmVsVW5yZWFsLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdUaXRhblVuIFdlaWdodCBPZiBUaGUgTGFuZCc6ICc1OEZFJyxcclxuICAgICdUaXRhblVuIEJ1cnN0JzogJzVBREYnLFxyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ1RpdGFuVW4gTGFuZHNsaWRlJzogJzVBREMnLFxyXG4gICAgJ1RpdGFuVW4gR2FvbGVyIExhbmRzbGlkZSc6ICc1OTAyJyxcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1RpdGFuVW4gUm9jayBCdXN0ZXInOiAnNThGNicsXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdUaXRhblVuIE1vdW50YWluIEJ1c3Rlcic6ICc1OEY3JyxcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuaW1wb3J0IHsgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuTWVtb3JpYU1pc2VyYUV4dHJlbWUsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1ZhcmlzRXggQWxlYSBJYWN0YSBFc3QgMSc6ICc0Q0QyJyxcclxuICAgICdWYXJpc0V4IEFsZWEgSWFjdGEgRXN0IDInOiAnNENEMycsXHJcbiAgICAnVmFyaXNFeCBBbGVhIElhY3RhIEVzdCAzJzogJzRDRDQnLFxyXG4gICAgJ1ZhcmlzRXggQWxlYSBJYWN0YSBFc3QgNCc6ICc0Q0Q1JyxcclxuICAgICdWYXJpc0V4IEFsZWEgSWFjdGEgRXN0IDUnOiAnNENENicsXHJcbiAgICAnVmFyaXNFeCBJZ25pcyBFc3QgMSc6ICc0Q0I1JyxcclxuICAgICdWYXJpc0V4IElnbmlzIEVzdCAyJzogJzRDQzUnLFxyXG4gICAgJ1ZhcmlzRXggVmVudHVzIEVzdCAxJzogJzRDQzcnLFxyXG4gICAgJ1ZhcmlzRXggVmVudHVzIEVzdCAyJzogJzRDQzgnLFxyXG4gICAgJ1ZhcmlzRXggQXNzYXVsdCBDYW5ub24nOiAnNENFNScsXHJcbiAgICAnVmFyaXNFeCBGb3J0aXVzIFJvdGF0aW5nJzogJzRDRTknLFxyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgLy8gRG9uJ3QgaGl0IHRoZSBzaGllbGRzIVxyXG4gICAgJ1ZhcmlzRXggUmVwYXknOiAnNENERCcsXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgIC8vIFRoaXMgaXMgdGhlIFwicHJvdGVhblwiIGZvcnRpdXMuXHJcbiAgICAnVmFyaXNFeCBGb3J0aXVzIFByb3RlYW4nOiAnNENFNycsXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdWYXJpc0V4IE1hZ2l0ZWsgQnVyc3QnOiAnNENERicsXHJcbiAgICAnVmFyaXNFeCBBZXRoZXJvY2hlbWljYWwgR3JlbmFkbyc6ICc0Q0VEJyxcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnVmFyaXNFeCBUZXJtaW51cyBFc3QnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICc0Q0I0JywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBzdXBwcmVzc1NlY29uZHM6IDEsXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFRPRE86IFJhZGlhbnQgQnJhdmVyIGlzIDRGMTYvNEYxNyh4MiksIHNob3VsZG4ndCBnZXQgaGl0IGJ5IGJvdGg/XHJcbi8vIFRPRE86IFJhZGlhbnQgRGVzcGVyYWRvIGlzIDRGMTgvNEYxOSwgc2hvdWxkbid0IGdldCBoaXQgYnkgYm90aD9cclxuLy8gVE9ETzogUmFkaWFudCBNZXRlb3IgaXMgNEYxQSwgYW5kIHNob3VsZG4ndCBnZXQgaGl0IGJ5IG1vcmUgdGhhbiAxP1xyXG4vLyBUT0RPOiBtaXNzaW5nIGEgdG93ZXI/XHJcblxyXG4vLyBOb3RlOiBEZWxpYmVyYXRlbHkgbm90IGluY2x1ZGluZyBweXJldGljIGRhbWFnZSBhcyBhbiBlcnJvci5cclxuLy8gTm90ZTogSXQgZG9lc24ndCBhcHBlYXIgdGhhdCB0aGVyZSdzIGFueSB3YXkgdG8gdGVsbCB3aG8gZmFpbGVkIHRoZSBjdXRzY2VuZS5cclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVTZWF0T2ZTYWNyaWZpY2UsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1dPTCBTb2xlbW4gQ29uZml0ZW9yJzogJzRGMkEnLCAvLyBncm91bmQgcHVkZGxlc1xyXG4gICAgJ1dPTCBDb3J1c2NhbnQgU2FiZXIgSW4nOiAnNEYxMCcsIC8vIHNhYmVyIGluXHJcbiAgICAnV09MIENvcnVzY2FudCBTYWJlciBPdXQnOiAnNEYxMScsIC8vIHNhYmVyIG91dFxyXG4gICAgJ1dPTCBJbWJ1ZWQgQ29ydXNhbmNlIE91dCc6ICc0RjRCJywgLy8gc2FiZXIgb3V0XHJcbiAgICAnV09MIEltYnVlZCBDb3J1c2FuY2UgSW4nOiAnNEY0QycsIC8vIHNhYmVyIGluXHJcbiAgICAnV09MIFNoaW5pbmcgV2F2ZSc6ICc0RjI2JywgLy8gc3dvcmQgdHJpYW5nbGVcclxuICAgICdXT0wgQ2F1dGVyaXplJzogJzRGMjUnLFxyXG4gICAgJ1dPTCBCcmltc3RvbmUgRWFydGggMSc6ICc0RjFFJywgLy8gY29ybmVyIGdyb3dpbmcgY2lyY2xlcywgaW5pdGlhbFxyXG4gICAgJ1dPTCBCcmltc3RvbmUgRWFydGggMic6ICc0RjFGJywgLy8gY29ybmVyIGdyb3dpbmcgY2lyY2xlcywgZ3Jvd2luZ1xyXG4gICAgJ1dPTCBGbGFyZSBCcmVhdGgnOiAnNEYyNCcsXHJcbiAgICAnV09MIERlY2ltYXRpb24nOiAnNEYyMycsXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdFdhcm46IHtcclxuICAgICdXT0wgRGVlcCBGcmVlemUnOiAnNEU2JyxcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnV09MIFRydWUgV2Fsa2luZyBEZWFkJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzM4RScgfSksXHJcbiAgICAgIGRlbGF5U2Vjb25kczogKF9kYXRhLCBtYXRjaGVzKSA9PiBwYXJzZUZsb2F0KG1hdGNoZXMuZHVyYXRpb24pIC0gMC41LFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiBtYXRjaGVzLmVmZmVjdCxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBUT0RPOiBSYWRpYW50IEJyYXZlciBpcyA0RUY3LzRFRjgoeDIpLCBzaG91bGRuJ3QgZ2V0IGhpdCBieSBib3RoP1xyXG4vLyBUT0RPOiBSYWRpYW50IERlc3BlcmFkbyBpcyA0RUY5LzRFRkEsIHNob3VsZG4ndCBnZXQgaGl0IGJ5IGJvdGg/XHJcbi8vIFRPRE86IFJhZGlhbnQgTWV0ZW9yIGlzIDRFRkMsIGFuZCBzaG91bGRuJ3QgZ2V0IGhpdCBieSBtb3JlIHRoYW4gMT9cclxuLy8gVE9ETzogQWJzb2x1dGUgSG9seSBzaG91bGQgYmUgc2hhcmVkP1xyXG4vLyBUT0RPOiBpbnRlcnNlY3RpbmcgYnJpbXN0b25lcz9cclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVTZWF0T2ZTYWNyaWZpY2VFeHRyZW1lLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdXT0xFeCBTb2xlbW4gQ29uZml0ZW9yJzogJzRGMEMnLCAvLyBncm91bmQgcHVkZGxlc1xyXG4gICAgJ1dPTEV4IENvcnVzY2FudCBTYWJlciBJbic6ICc0RUYyJywgLy8gc2FiZXIgaW5cclxuICAgICdXT0xFeCBDb3J1c2NhbnQgU2FiZXIgT3V0JzogJzRFRjEnLCAvLyBzYWJlciBvdXRcclxuICAgICdXT0xFeCBJbWJ1ZWQgQ29ydXNhbmNlIE91dCc6ICc0RjQ5JywgLy8gc2FiZXIgb3V0XHJcbiAgICAnV09MRXggSW1idWVkIENvcnVzYW5jZSBJbic6ICc0RjRBJywgLy8gc2FiZXIgaW5cclxuICAgICdXT0xFeCBTaGluaW5nIFdhdmUnOiAnNEYwOCcsIC8vIHN3b3JkIHRyaWFuZ2xlXHJcbiAgICAnV09MRXggQ2F1dGVyaXplJzogJzRGMDcnLFxyXG4gICAgJ1dPTEV4IEJyaW1zdG9uZSBFYXJ0aCc6ICc0RjAwJywgLy8gY29ybmVyIGdyb3dpbmcgY2lyY2xlcywgZ3Jvd2luZ1xyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RXYXJuOiB7XHJcbiAgICAnV09MRXggRGVlcCBGcmVlemUnOiAnNEU2JywgLy8gZmFpbGluZyBBYnNvbHV0ZSBCbGl6emFyZCBJSUlcclxuICAgICdXT0xFeCBEYW1hZ2UgRG93bic6ICcyNzQnLCAvLyBmYWlsaW5nIEFic29sdXRlIEZsYXNoXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdXT0xFeCBBYnNvbHV0ZSBTdG9uZSBJSUknOiAnNEVFQicsIC8vIHByb3RlYW4gd2F2ZSBpbWJ1ZWQgbWFnaWNcclxuICAgICdXT0xFeCBGbGFyZSBCcmVhdGgnOiAnNEYwNicsIC8vIHRldGhlciBmcm9tIHN1bW1vbmVkIGJhaGFtdXRzXHJcbiAgICAnV09MRXggUGVyZmVjdCBEZWNpbWF0aW9uJzogJzRGMDUnLCAvLyBzbW4vd2FyIHBoYXNlIG1hcmtlclxyXG4gIH0sXHJcbiAgc29sb1dhcm46IHtcclxuICAgICdXb2xFeCBLYXRvbiBTYW4gU2hhcmUnOiAnNEVGRScsXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ1dPTEV4IFRydWUgV2Fsa2luZyBEZWFkJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzhGRicgfSksXHJcbiAgICAgIGRlbGF5U2Vjb25kczogKF9kYXRhLCBtYXRjaGVzKSA9PiBwYXJzZUZsb2F0KG1hdGNoZXMuZHVyYXRpb24pIC0gMC41LFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiBtYXRjaGVzLmVmZmVjdCxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdXT0xFeCBUb3dlcicsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnNEYwNCcsIGNhcHR1cmU6IGZhbHNlIH0pLFxyXG4gICAgICBtaXN0YWtlOiB7XHJcbiAgICAgICAgdHlwZTogJ2ZhaWwnLFxyXG4gICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgIGVuOiAnTWlzc2VkIFRvd2VyJyxcclxuICAgICAgICAgIGRlOiAnVHVybSB2ZXJwYXNzdCcsXHJcbiAgICAgICAgICBmcjogJ1RvdXIgbWFucXXDqWUnLFxyXG4gICAgICAgICAgamE6ICfloZTjgpLouI/jgb7jgarjgYvjgaPjgZ8nLFxyXG4gICAgICAgICAgY246ICfmsqHouKnloZQnLFxyXG4gICAgICAgICAga286ICfsnqXtjJAg7Iuk7IiYJyxcclxuICAgICAgICB9LFxyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdXT0xFeCBUcnVlIEhhbGxvd2VkIEdyb3VuZCcsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnNEY0NCcgfSksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICdmYWlsJywgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyBGb3IgQmVyc2VyayBhbmQgRGVlcCBEYXJrc2lkZVxyXG4gICAgICBpZDogJ1dPTEV4IE1pc3NlZCBJbnRlcnJ1cHQnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogWyc1MTU2JywgJzUxNTgnXSB9KSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ2ZhaWwnLCB0ZXh0OiBtYXRjaGVzLmFiaWxpdHkgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcbmltcG9ydCB7IHBsYXllckRhbWFnZUZpZWxkcyB9IGZyb20gJy4uLy4uLy4uL29vcHN5X2NvbW1vbic7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIERhdGEgZXh0ZW5kcyBPb3BzeURhdGEge1xyXG4gIGhhc1Rocm90dGxlPzogeyBbbmFtZTogc3RyaW5nXTogYm9vbGVhbiB9O1xyXG4gIGphZ2RUZXRoZXI/OiB7IFtzb3VyY2VJZDogc3RyaW5nXTogc3RyaW5nIH07XHJcbn1cclxuXHJcbi8vIFRPRE86IEZJWCBsdW1pbm91cyBhZXRoZXJvcGxhc20gd2FybmluZyBub3Qgd29ya2luZ1xyXG4vLyBUT0RPOiBGSVggZG9sbCBkZWF0aCBub3Qgd29ya2luZ1xyXG4vLyBUT0RPOiBmYWlsaW5nIGhhbmQgb2YgcGFpbi9wYXJ0aW5nIChjaGVjayBmb3IgaGlnaCBkYW1hZ2U/KVxyXG4vLyBUT0RPOiBtYWtlIHN1cmUgZXZlcnlib2R5IHRha2VzIGV4YWN0bHkgb25lIHByb3RlYW4gKHJhdGhlciB0aGFuIHdhdGNoaW5nIGRvdWJsZSBoaXRzKVxyXG4vLyBUT0RPOiB0aHVuZGVyIG5vdCBoaXR0aW5nIGV4YWN0bHkgMj9cclxuLy8gVE9ETzogcGVyc29uIHdpdGggd2F0ZXIvdGh1bmRlciBkZWJ1ZmYgZHlpbmdcclxuLy8gVE9ETzogYmFkIG5pc2kgcGFzc1xyXG4vLyBUT0RPOiBmYWlsZWQgZ2F2ZWwgbWVjaGFuaWNcclxuLy8gVE9ETzogZG91YmxlIHJvY2tldCBwdW5jaCBub3QgaGl0dGluZyBleGFjdGx5IDI/IChvciB0YW5rcylcclxuLy8gVE9ETzogc3RhbmRpbmcgaW4gc2x1ZGdlIHB1ZGRsZXMgYmVmb3JlIGhpZGRlbiBtaW5lP1xyXG4vLyBUT0RPOiBoaWRkZW4gbWluZSBmYWlsdXJlP1xyXG4vLyBUT0RPOiBmYWlsdXJlcyBvZiBvcmRhaW5lZCBtb3Rpb24gLyBzdGlsbG5lc3NcclxuLy8gVE9ETzogZmFpbHVyZXMgb2YgcGxhaW50IG9mIHNldmVyaXR5ICh0ZXRoZXJzKVxyXG4vLyBUT0RPOiBmYWlsdXJlcyBvZiBwbGFpbnQgb2Ygc29saWRhcml0eSAoc2hhcmVkIHNlbnRlbmNlKVxyXG4vLyBUT0RPOiBvcmRhaW5lZCBjYXBpdGFsIHB1bmlzaG1lbnQgaGl0dGluZyBub24tdGFua3NcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVFcGljT2ZBbGV4YW5kZXJVbHRpbWF0ZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnVEVBIFNsdWljZSc6ICc0OUIxJyxcclxuICAgICdURUEgUHJvdGVhbiBXYXZlIDEnOiAnNDgyNCcsXHJcbiAgICAnVEVBIFByb3RlYW4gV2F2ZSAyJzogJzQ5QjUnLFxyXG4gICAgJ1RFQSBTcGluIENydXNoZXInOiAnNEE3MicsXHJcbiAgICAnVEVBIFNhY3JhbWVudCc6ICc0ODVGJyxcclxuICAgICdURUEgUmFkaWFudCBTYWNyYW1lbnQnOiAnNDg4NicsXHJcbiAgICAnVEVBIEFsbWlnaHR5IEp1ZGdtZW50JzogJzQ4OTAnLFxyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ1RFQSBIYXdrIEJsYXN0ZXInOiAnNDgzMCcsXHJcbiAgICAnVEVBIENoYWtyYW0nOiAnNDg1NScsXHJcbiAgICAnVEVBIEVudW1lcmF0aW9uJzogJzQ4NTAnLFxyXG4gICAgJ1RFQSBBcG9jYWx5cHRpYyBSYXknOiAnNDg0QycsXHJcbiAgICAnVEVBIFByb3BlbGxlciBXaW5kJzogJzQ4MzInLFxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnVEVBIFByb3RlYW4gV2F2ZSBEb3VibGUgMSc6ICc0OUI2JyxcclxuICAgICdURUEgUHJvdGVhbiBXYXZlIERvdWJsZSAyJzogJzQ4MjUnLFxyXG4gICAgJ1RFQSBGbHVpZCBTd2luZyc6ICc0OUIwJyxcclxuICAgICdURUEgRmx1aWQgU3RyaWtlJzogJzQ5QjcnLFxyXG4gICAgJ1RFQSBIaWRkZW4gTWluZSc6ICc0ODUyJyxcclxuICAgICdURUEgQWxwaGEgU3dvcmQnOiAnNDg2QicsXHJcbiAgICAnVEVBIEZsYXJldGhyb3dlcic6ICc0ODZCJyxcclxuICAgICdURUEgQ2hhc3RlbmluZyBIZWF0JzogJzRBODAnLFxyXG4gICAgJ1RFQSBEaXZpbmUgU3BlYXInOiAnNEE4MicsXHJcbiAgICAnVEVBIE9yZGFpbmVkIFB1bmlzaG1lbnQnOiAnNDg5MScsXHJcbiAgICAvLyBPcHRpY2FsIFNwcmVhZFxyXG4gICAgJ1RFQSBJbmRpdmlkdWFsIFJlcHJvYmF0aW9uJzogJzQ4OEMnLFxyXG4gIH0sXHJcbiAgc29sb0ZhaWw6IHtcclxuICAgIC8vIE9wdGljYWwgU3RhY2tcclxuICAgICdURUEgQ29sbGVjdGl2ZSBSZXByb2JhdGlvbic6ICc0ODhEJyxcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIC8vIFwidG9vIG11Y2ggbHVtaW5vdXMgYWV0aGVyb3BsYXNtXCJcclxuICAgICAgLy8gV2hlbiB0aGlzIGhhcHBlbnMsIHRoZSB0YXJnZXQgZXhwbG9kZXMsIGhpdHRpbmcgbmVhcmJ5IHBlb3BsZVxyXG4gICAgICAvLyBidXQgYWxzbyB0aGVtc2VsdmVzLlxyXG4gICAgICBpZDogJ1RFQSBFeGhhdXN0JyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnNDgxRicsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoX2RhdGEsIG1hdGNoZXMpID0+IG1hdGNoZXMudGFyZ2V0ID09PSBtYXRjaGVzLnNvdXJjZSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHR5cGU6ICdmYWlsJyxcclxuICAgICAgICAgIGJsYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ2x1bWlub3VzIGFldGhlcm9wbGFzbScsXHJcbiAgICAgICAgICAgIGRlOiAnTHVtaW5pc3plbnRlcyDDhHRoZXJvcGxhc21hJyxcclxuICAgICAgICAgICAgZnI6ICfDiXRow6lyb3BsYXNtYSBsdW1pbmV1eCcsXHJcbiAgICAgICAgICAgIGphOiAn5YWJ5oCn54iG6Zu3JyxcclxuICAgICAgICAgICAgY246ICflhYnmgKfniIbpm7cnLFxyXG4gICAgICAgICAgICBrbzogJ+u5m+ydmCDtj63rorAnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdURUEgRHJvcHN5JyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzEyMScgfSksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICd3YXJuJywgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LCB0ZXh0OiBtYXRjaGVzLmVmZmVjdCB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdURUEgVGV0aGVyIFRyYWNraW5nJyxcclxuICAgICAgdHlwZTogJ1RldGhlcicsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLnRldGhlcih7IHNvdXJjZTogJ0phZ2QgRG9sbCcsIGlkOiAnMDAxMScgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLmphZ2RUZXRoZXIgPz89IHt9O1xyXG4gICAgICAgIGRhdGEuamFnZFRldGhlclttYXRjaGVzLnNvdXJjZUlkXSA9IG1hdGNoZXMudGFyZ2V0O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdURUEgUmVkdWNpYmxlIENvbXBsZXhpdHknLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICc0ODIxJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICB0eXBlOiAnZmFpbCcsXHJcbiAgICAgICAgICAvLyBUaGlzIG1heSBiZSB1bmRlZmluZWQsIHdoaWNoIGlzIGZpbmUuXHJcbiAgICAgICAgICBuYW1lOiBkYXRhLmphZ2RUZXRoZXIgPyBkYXRhLmphZ2RUZXRoZXJbbWF0Y2hlcy5zb3VyY2VJZF0gOiB1bmRlZmluZWQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnRG9sbCBEZWF0aCcsXHJcbiAgICAgICAgICAgIGRlOiAnUHVwcGUgVG90JyxcclxuICAgICAgICAgICAgZnI6ICdQb3Vww6llIG1vcnRlJyxcclxuICAgICAgICAgICAgamE6ICfjg4njg7zjg6vjgYzmrbvjgpPjgaAnLFxyXG4gICAgICAgICAgICBjbjogJ+a1ruWjq+W+t+atu+S6oScsXHJcbiAgICAgICAgICAgIGtvOiAn7J247ZiV7J20IOyjveydjCcsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ1RFQSBEcmFpbmFnZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzQ4MjcnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+ICFkYXRhLnBhcnR5LmlzVGFuayhtYXRjaGVzLnRhcmdldCksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IHR5cGU6ICdmYWlsJywgbmFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmFiaWxpdHkgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnVEVBIFRocm90dGxlIEdhaW4nLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnMkJDJyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuaGFzVGhyb3R0bGUgPz89IHt9O1xyXG4gICAgICAgIGRhdGEuaGFzVGhyb3R0bGVbbWF0Y2hlcy50YXJnZXRdID0gdHJ1ZTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnVEVBIFRocm90dGxlIExvc2UnLFxyXG4gICAgICB0eXBlOiAnTG9zZXNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5sb3Nlc0VmZmVjdCh7IGVmZmVjdElkOiAnMkJDJyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuaGFzVGhyb3R0bGUgPz89IHt9O1xyXG4gICAgICAgIGRhdGEuaGFzVGhyb3R0bGVbbWF0Y2hlcy50YXJnZXRdID0gZmFsc2U7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ1RFQSBUaHJvdHRsZScsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICcyQkMnIH0pLFxyXG4gICAgICBkZWxheVNlY29uZHM6IChfZGF0YSwgbWF0Y2hlcykgPT4gcGFyc2VGbG9hdChtYXRjaGVzLmR1cmF0aW9uKSAtIDAuNSxcclxuICAgICAgZGVhdGhSZWFzb246IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgaWYgKCFkYXRhLmhhc1Rocm90dGxlKVxyXG4gICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIGlmICghZGF0YS5oYXNUaHJvdHRsZVttYXRjaGVzLnRhcmdldF0pXHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiBtYXRjaGVzLmVmZmVjdCxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgLy8gQmFsbG9vbiBQb3BwaW5nLiAgSXQgc2VlbXMgbGlrZSB0aGUgcGVyc29uIHdobyBwb3BzIGl0IGlzIHRoZVxyXG4gICAgICAvLyBmaXJzdCBwZXJzb24gbGlzdGVkIGRhbWFnZS13aXNlLCBzbyB0aGV5IGFyZSBsaWtlbHkgdGhlIGN1bHByaXQuXHJcbiAgICAgIGlkOiAnVEVBIE91dGJ1cnN0JyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5RnVsbCh7IGlkOiAnNDgyQScsIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgc3VwcHJlc3NTZWNvbmRzOiA1LFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuc291cmNlIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuLy8gVE9ETzogQnlyZWdvdCdzIGhhbW1lciBjYXVzaW5nIHBlb3BsZSB0byBmYWxsIHRvIHRoZWlyIGRlYXRoP1xyXG4vLyBUT0RPOiBSaGFsZ3IncyBCcm9rZW4gV29ybGQgKGZha2UpIDcxREQgdGVjaG5pY2FsbHkgZG9lcyBubyBkYW1hZ2UgaWYgZmFyIGVub3VnaCwgYnV0IHN1cnZpdmFibGUgaGFsZndheVxyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5BZ2xhaWEsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0FnbGFpYSBCeXJlZ290IEJ5cmVnb3RcXCdzIFN0cmlrZSc6ICc3MjVBJywgLy8gYmx1ZSBrbm9ja2JhY2sgcHVja1xyXG4gICAgJ0FnbGFpYSBCeXJlZ290IEJ5cmVnb3RcXCdzIFN0cmlrZSBMaWdodG5pbmcnOiAnNzE2OCcsIC8vIGNhcmRpbmFsIGxpZ2h0bmluZyBkdXJpbmcgc3RyaWtlICMyXHJcbiAgICAnQWdsYWlhIEJ5cmVnb3QgTGV2aW5mb3JnZSc6ICc3MTcyJywgLy8gbGlnaHRuaW5nIGhhbW1lciBsaW5lXHJcbiAgICAnQWdsYWlhIEJ5cmVnb3QgQnlyZWdvdFxcJ3MgU3BpcmUnOiAnNzE3MCcsIC8vIHdpZGUgbGluZSBkdXJpbmcgaGFtbWVyIHNlY3Rpb25cclxuICAgICdBZ2xhaWEgQnlyZWdvdCBDbG91ZCB0byBHcm91bmQgMSc6ICc3MDREJywgLy8gbW92aW5nIHB1cnBsZS95ZWxsb3cgYnViYmxlc1xyXG4gICAgJ0FnbGFpYSBCeXJlZ290IENsb3VkIHRvIEdyb3VuZCAyJzogJzcwNEUnLCAvLyBtb3ZpbmcgcHVycGxlL3llbGxvdyBidWJibGVzXHJcbiAgICAnQWdsYWlhIEJ5cmVnb3QgQ2xvdWQgdG8gR3JvdW5kIDMnOiAnNzE2RCcsIC8vIG1vdmluZyBwdXJwbGUveWVsbG93IGJ1YmJsZXNcclxuICAgICdBZ2xhaWEgQnlyZWdvdCBDbG91ZCB0byBHcm91bmQgNCc6ICc3MTZFJywgLy8gbW92aW5nIHB1cnBsZS95ZWxsb3cgYnViYmxlc1xyXG4gICAgJ0FnbGFpYSBSaGFsZ3JcXCdzIEVtaXNzYXJ5IERlc3RydWN0aXZlIFN0YXRpYyc6ICc3MEUwJywgLy8gZnJvbnQgMTgwIGNsZWF2ZVxyXG4gICAgJ0FnbGFpYSBSaGFsZ3JcXCdzIEVtaXNzYXJ5IERlc3RydWN0aXZlIENoYXJnZSc6ICc3MERCJywgLy8gbGlnaHRuaW5nIHF1YWRyYW50c1xyXG4gICAgJ0FnbGFpYSBSaGFsZ3JcXCdzIEVtaXNzYXJ5IExpZ2h0bmluZyBCb2x0JzogJzcwRTInLCAvLyB0YXJnZXRlZCBjaXJjbGVzXHJcbiAgICAnQWdsYWlhIFJoYWxnclxcJ3MgRW1pc3NhcnkgQm9sdGxvb3AgMSc6ICc3MEREJywgLy8gb3ZlcmxhcHBpbmcgZXhwYW5kaW5nIGxpZ2h0bmluZyByaW5nc1xyXG4gICAgJ0FnbGFpYSBSaGFsZ3JcXCdzIEVtaXNzYXJ5IEJvbHRsb29wIDInOiAnNzBERScsIC8vIG92ZXJsYXBwaW5nIGV4cGFuZGluZyBsaWdodG5pbmcgcmluZ3NcclxuICAgICdBZ2xhaWEgUmhhbGdyXFwncyBFbWlzc2FyeSBCb2x0bG9vcCAzJzogJzcwREYnLCAvLyBvdmVybGFwcGluZyBleHBhbmRpbmcgbGlnaHRuaW5nIHJpbmdzXHJcbiAgICAnQWdsYWlhIFJoYWxnciBGaXN0IG9mIEp1ZGdtZW50IEhhbmQgb2YgdGhlIERlc3Ryb3llcic6ICc3MEIwJywgLy8gMTgwIGNsZWF2ZSBwdW5jaCB0aHJvdWdoIGJsdWUgcG9ydGFsXHJcbiAgICAnQWdsYWlhIFJoYWxnciBGaXN0IG9mIFdyYXRoIEhhbmQgb2YgdGhlIERlc3Ryb3llcic6ICc3MEFGJywgLy8gMTgwIGNsZWF2ZSBwdW5jaCB0aHJvdWdoIHJlZCBwb3J0YWxcclxuICAgICdBZ2xhaWEgUmhhbGdyIFJoYWxnclxcJ3MgQmVhY29uJzogJzczMTQnLCAvLyBwdXJwbGUga25vY2tiYWNrIHB1Y2tcclxuICAgICdBZ2xhaWEgUmhhbGdyIEJyb256ZSBMaWdodG5pbmcnOiAnNzBCOScsIC8vIHBpbndoZWVsIGdyb3VuZCBsaWdodG5pbmdcclxuICAgICdBZ2xhaWEgUmhhbGdyIFN0cmlraW5nIE1ldGVvcic6ICc3MEJCJywgLy8gdGFyZ2V0ZWQgY2lyY2xlIGR1cmluZyBCcm9uemUgTGlnaHRuaW5nXHJcbiAgICAnQWdsYWlhIFJoYWxnciBMaWdodG5pbmcgT3JiIFNob2NrJzogJzcwQjMnLCAvLyBvcmIgZXhwbG9zaW9uIGR1cmluZyBIZWxsIG9mIExpZ2h0bmluZyArIEJlYWNvblxyXG4gICAgJ0FnbGFpYSBMaW9ucyBTbGFzaCBhbmQgQnVybiBEb251dCAxJzogJzcxRDInLCAvLyBMaW9uZXNzIGRvbnV0ICgxIGRvdClcclxuICAgICdBZ2xhaWEgTGlvbnMgU2xhc2ggYW5kIEJ1cm4gRG9udXQgMic6ICc3MUQ2JywgLy8gTGlvbmVzcyBkb251dCAoMiBkb3RzKVxyXG4gICAgJ0FnbGFpYSBMaW9ucyBTbGFzaCBhbmQgQnVybiBDaXJjbGUgMSc6ICc3MUQwJywgLy8gTGlvbiBjaXJjbGUgKDEgZG90KVxyXG4gICAgJ0FnbGFpYSBMaW9ucyBTbGFzaCBhbmQgQnVybiBDaXJjbGUgMic6ICc3MUQ1JywgLy8gTGlvbiBjaXJjbGUgKDIgZG90cylcclxuICAgICdBZ2xhaWEgTGlvbnMgUm9hcmluZyBCbGF6ZSAxJzogJzcxQ0UnLCAvLyBMaW9uIGhhbGYgY2xlYXZlICgxIGRvdClcclxuICAgICdBZ2xhaWEgTGlvbnMgUm9hcmluZyBCbGF6ZSAyJzogJzcxQ0YnLCAvLyBMaW9uIGhhbGYgY2xlYXZlICgyIGRvdHMpXHJcbiAgICAnQWdsYWlhIExpb25zIFJvYXJpbmcgQmxhemUgMyc6ICc3MkJGJywgLy8gTGlvbiBoYWxmIGNsZWF2ZSAod2hlbiBMaW9uZXNzIGlzIGRlYWQpXHJcbiAgICAnQWdsYWlhIExpb25zIFJvYXJpbmcgQmxhemUgNCc6ICc3MUNFJywgLy8gTGlvbmVzcyBoYWxmIGNsZWF2ZSAod2hlbiBMaW9uIGlzIGRlYWQpXHJcbiAgICAnQWdsYWlhIExpb25zIFRyaWFsIGJ5IEZpcmUnOiAnNzJDMCcsIC8vIGxhcmdlIGNlbnRlcmVkIGNpcmNsZSB3aGVuIExpb25lc3MgaXMgZGVhZFxyXG4gICAgJ0FnbGFpYSBMaW9ucyBTcGlubmluZyBTbGFzaCc6ICc3MkMxJywgLy8gZG9udXQgd2hlbiBMaW9uIGlzIGRlYWRcclxuICAgICdBZ2xhaWEgQXpleW1hIFNvbGFyIFdpbmdzIDEnOiAnNzA4MicsIC8vIG5hcnJvdyBmcm9udC9iYWNrIHNhZmUgYXR0YWNrXHJcbiAgICAnQWdsYWlhIEF6ZXltYSBTb2xhciBXaW5ncyAyJzogJzcwODMnLCAvLyBuYXJyb3cgZnJvbnQvYmFjayBzYWZlIGF0dGFja1xyXG4gICAgJ0FnbGFpYSBBemV5bWEgU29sYXIgRmxhaXInOiAnNzA4NCcsIC8vIG9yYiBleHBsb2RpbmcgYWZ0ZXIgU29sYXIgV2luZ3NcclxuICAgICdBZ2xhaWEgQXpleW1hIFNvbGFyIEZhbnMgMSc6ICc3MDhFJywgLy8gaG9yaXpvbnRhbCBsaW5lIGFvZVxyXG4gICAgJ0FnbGFpYSBBemV5bWEgU29sYXIgRmFucyAyJzogJzcyQkUnLCAvLyBob3Jpem9udGFsIGxpbmUgYW9lXHJcbiAgICAnQWdsYWlhIEF6ZXltYSBXYXJkZW5cXCdzIEZsYW1lIFJhZGlhbnQgRmxvdXJpc2gnOiAnNzA5NCcsIC8vIFJhZGlhbnQgUmh5dGhtL0ZpbmlzaCBleHBsb3Npb25cclxuICAgICdBZ2xhaWEgQXpleW1hIFNvbGFyIEZvbGQnOiAnNzFFRScsIC8vIGNyb3NzIGxpbmUgYW9lIHRoYXQgc3Bhd25zIGZpcmUgbGluZXNcclxuICAgICdBZ2xhaWEgQXpleW1hIEZvbGRpbmcgRmxhcmUgMSc6ICc3MDg5JywgLy8gZXhwYW5kaW5nIGZpcmUgbGluZXNcclxuICAgICdBZ2xhaWEgQXpleW1hIEZvbGRpbmcgRmxhcmUgMic6ICc3MzFDJywgLy8gZXhwYW5kaW5nIGZpcmUgbGluZXNcclxuICAgICdBZ2xhaWEgQXpleW1hIERhbmNpbmcgRmxhbWUgMSc6ICc3MDhCJywgLy8gSGF1dGUgQWlyLWJsb3duIGZpcmUgcXVhZHJhbnRcclxuICAgICdBZ2xhaWEgQXpleW1hIERhbmNpbmcgRmxhbWUgMic6ICc3MDhDJywgLy8gSGF1dGUgQWlyLWJsb3duIGZpcmUgcXVhZHJhbnRcclxuICAgICdBZ2xhaWEgQXpleW1hIFN1bmJlYW0nOiAnNzA5NycsIC8vIHRyaW5lIHB1ZGRsZXNcclxuICAgICdBZ2xhaWEgTmFsZFxcJ3RoYWwgRmxhbWVzIG9mIHRoZSBEZWFkJzogJzczQTcnLCAvLyBvbiBibHVlIG91dCBpbmNvcnJlY3RseSBkdXJpbmcgSGVhdCBBYm92ZSwgRmxhbWVzIEJlbG93XHJcbiAgICAnQWdsYWlhIE5hbGRcXCd0aGFsIExpdmluZyBIZWF0JzogJzczQTknLCAvLyBvbiByZWQgaW4gaW5jb3JyZWN0bHkgZHVyaW5nIEhlYXQgQWJvdmUsIEZsYW1lcyBCZWxvd1xyXG4gICAgJ0FnbGFpYSBOYWxkXFwndGhhbCBFdmVyZmlyZSc6ICc3M0M0JywgLy8gT25jZSBBYm92ZSwgRXZlciBCZWxvdyBtb3ZpbmcgcHVkZGxlc1xyXG4gICAgJ0FnbGFpYSBOYWxkXFwndGhhbCBPbmNlIEJ1cm5lZCAxJzogJzczQzUnLCAvLyBPbmNlIEFib3ZlLCBFdmVyIEJlbG93IG1vdmluZyByZWQgcHVkZGxlc1xyXG4gICAgJ0FnbGFpYSBOYWxkXFwndGhhbCBPbmNlIEJ1cm5lZCAyJzogJzczQzYnLCAvLyBPbmNlIEFib3ZlLCBFdmVyIEJlbG93IG1vdmluZyByZWQgcHVkZGxlc1xyXG4gICAgJ0FnbGFpYSBOYWxkXFwndGhhbCBFdmVyZmlyZSAxJzogJzczQzInLCAvLyBPbmNlIEFib3ZlLCBFdmVyIEJlbG93IG1vdmluZyBibHVlIHB1ZGRsZXNcclxuICAgICdBZ2xhaWEgTmFsZFxcJ3RoYWwgRXZlcmZpcmUgMic6ICc3M0MzJywgLy8gT25jZSBBYm92ZSwgRXZlciBCZWxvdyBtb3ZpbmcgYmx1ZSBwdWRkbGVzXHJcbiAgICAnQWdsYWlhIE5hbGRcXCd0aGFsIEhlbGwgb2YgRmlyZSc6ICc3MkI4JywgLy8gMTgwIGNsZWF2ZVxyXG4gICAgJ0FnbGFpYSBOYWxkXFwndGhhbCBXYXl3YXJkIFNvdWwnOiAnNzExMCcsIC8vIG1pbGxpb25zIG9mIGxhcmdlIGNpcmNsZXMgZnJvbSBkcm9wcGluZyBvcmJzXHJcbiAgICAnQWdsYWlhIE5hbGRcXCd0aGFsIFNldmVudGggUGFzc2FnZSAxJzogJzcxMTgnLCAvLyBGaXJlZCBVcCBcImdldCBvdXRcIiBjaXJjbGVcclxuICAgICdBZ2xhaWEgTmFsZFxcJ3RoYWwgU2V2ZW50aCBQYXNzYWdlIDInOiAnNzExOScsIC8vIEZpcmVkIFVwIFwiZ2V0IG91dFwiIGNpcmNsZVxyXG4gICAgJ0FnbGFpYSBOYWxkXFwndGhhbCBTb3VsIFZlc3NlbCBUd2luZ2F6ZSc6ICc3MTJBJywgLy8gYWRkIHBoYXNlIG5hcnJvdyBjb25hbFxyXG4gICAgJ0FnbGFpYSBOYWxkXFwndGhhbCBEZWVwZXN0IFBpdCAxJzogJzczQzcnLCAvLyBGYXIgQWJvdmUsIERlZXAgQmVsb3cgY2hhc2luZyBhcnJvd3NcclxuICAgICdBZ2xhaWEgTmFsZFxcJ3RoYWwgRGVlcGVzdCBQaXQgMic6ICc3M0M4JywgLy8gRmFyIEFib3ZlLCBEZWVwIEJlbG93IGNoYXNpbmcgYXJyb3dzXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnQWdsYWlhIE5hbGRcXCd0aGFsIFRpcHBlZCBTY2FsZXMnOiAnNzM3QScsIC8vIGZhaWxpbmcgQmFsYW5jZSBtZWNoYW5pYyAoNzM3OSBpcyBkYW1hZ2UgZm9yIGRvaW5nIGl0IGNvcnJlY3RseSlcclxuICB9LFxyXG4gIGdhaW5zRWZmZWN0V2Fybjoge1xyXG4gICAgLy8gQkY5IGlzIHRoZSBcIjk5OTkgZHVyYXRpb25cIiBlZmZlY3QsIGFuZCBCRkEgaXMgd2hhdCB5b3UgZ2V0IGFmdGVyIHlvdSBzdGVwIG91dCBvZiBmaXJlLlxyXG4gICAgJ0FnbGFpYSBBemV5bWEgQnVybnMnOiAnQkZBJywgLy8gQXpleW1hIFdpbGRmaXJlIFdhcmQgYnVybnNcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0FnbGFpYSBCeXJlZ290IEJ5cmVnb3RcXCdzIFdhcmQnOiAnNzE3NScsIC8vIHRhbmtidXN0ZXIgY2xlYXZlXHJcbiAgICAnQWdsYWlhIFJoYWxnclxcJ3MgRW1pc3NhcnkgRGVzdHJ1Y3RpdmUgU3RyaWtlJzogJzcwRDknLCAvLyB0YW5rYnVzdGVyIGNsZWF2ZVxyXG4gICAgJ0FnbGFpYSBSaGFsZ3IgRGVzdHJ1Y3RpdmUgQm9sdCc6ICc3MEI0JywgLy8gM3ggdGFua2J1c3RlciBjbGVhdmVcclxuICAgICdBZ2xhaWEgUmhhbGdyIExpZ2h0bmluZyBTdG9ybSc6ICc3MEJBJywgLy8gc3ByZWFkIG1hcmtlcnNcclxuICAgICdBZ2xhaWEgTmFsZFxcJ3RoYWwgU21lbHRpbmcnOiAnNzEyMCcsIC8vIHByb3RlYW4gc3ByZWFkXHJcbiAgfSxcclxuICBzb2xvRmFpbDoge1xyXG4gICAgJ0FnbGFpYSBOYWxkXFwndGhhbCBIZWF2ZW5cXCdzIFRyaWFsJzogJzcxMUYnLCAvLyBzdGFjayBtYXJrZXJcclxuICAgICdBZ2xhaWEgTmFsZFxcJ3RoYWwgU291bCBWZXNzZWwgTWFnbWF0aWMgU3BlbGwnOiAnNzEyRCcsIC8vIDN4IHN0YWNrIG1hcmtlcnNcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnQWdsYWlhIEtub2NrZWQgT2ZmJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICAvLyA3MEI4ID0gUmhhbGdyJ3MgQmVhY29uIHB1cnBsZSBrbm9ja2JhY2tcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiBbJzcwQjgnXSB9KSxcclxuICAgICAgZGVhdGhSZWFzb246IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ0tub2NrZWQgb2ZmJyxcclxuICAgICAgICAgICAgZGU6ICdSdW50ZXJnZWZhbGxlbicsXHJcbiAgICAgICAgICAgIGZyOiAnUmVudmVyc8OpKGUpJyxcclxuICAgICAgICAgICAgamE6ICfjg47jg4Pjgq/jg5Djg4Pjgq8nLFxyXG4gICAgICAgICAgICBjbjogJ+WHu+mAgOWdoOiQvScsXHJcbiAgICAgICAgICAgIGtvOiAn64SJ67CxJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5LdGlzaXNIeXBlcmJvcmVpYSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnQWx6YWRhYWwgQWx6YWRhYWxcXCdzIFF1dHJ1YiBXaGlybGluZyBTbGFzaCc6ICc3MDNFJywgLy8gQ2lyY2xlIEFvRSwgYmVmb3JlIGJvc3MgMVxyXG4gICAgJ0FsemFkYWFsIEFsemFkYWFsXFwncyBRdXRydWIgTGVhcGluZyBDbGVhdmUnOiAnNzA0MCcsIC8vIENpcmNsZSBBb0UsIGJlZm9yZSBib3NzIDFcclxuICAgICdBbHphZGFhbCBBbHphZGFhbFxcJ3MgQXN2YXR0aGEgQmFkIEJyZWF0aCc6ICc3MDQxJywgLy8gQ29uYWwgQW9FLCBiZWZvcmUgYm9zcyAxXHJcblxyXG4gICAgJ0FsemFkYWFsIEFtYnVqYW0gVG94aW4gU2hvd2VyJzogJzY1RkMnLCAvLyBMYXJnZSBBb0UgY2lyY2xlcywgYm9zcyAxXHJcbiAgICAnQWx6YWRhYWwgQWJ1amFtIENvcnJvc2l2ZSBWZW5vbSc6ICc3MUU2JywgLy8gTGFyZ2UgQW9FIGNpcmNsZXMsIGJvc3MgMVxyXG4gICAgJ0FsemFkYWFsIEFtYnVqYW0gVG94aWMgRm91bnRhaW4nOiAnNzMxQicsIC8vIFJlZCBBb0UgY2lyY2xlcywgYm9zcyAxXHJcbiAgICAnQWx6YWRhYWwgQW1idWphbSBDb3Jyb3NpdmUgRm91bnRhaW4nOiAnNzM3NCcsIC8vIEJsdWUgQW9FICBjaXJjbGVzLCBib3NzIDFcclxuXHJcbiAgICAnQWx6YWRhYWwgQm91bnR5IFJvY2tmaW4gQXF1YSBTcGVhcic6ICc3MDRDJywgLy8gUmVjdGFuZ2xlIGNsZWF2ZSBBb0UsIGJlZm9yZSBib3NzIDJcclxuICAgICdBbHphZGFhbCBBbHphZGFhbFxcJ3MgUmFtcGFydCBQdWxzZSBMYXNlcic6ICc3MDQxJywgLy8gUmVjdGFuZ2xlIEFvRSwgYmVmb3JlIGJvc3MgMlxyXG4gICAgJ0FsemFkYWFsIEJvdW50eSBVcmFnbml0ZSBQYWxzeW5peHlzJzogJzcwNDMnLCAvLyBGcm9udGFsIGNvbmUgQW9FLCBiZWZvcmUgYm9zcyAyXHJcbiAgICAnQWx6YWRhYWwgQm91bnR5IFJ1c3pvciBBcXVhIEJMYXN0JzogJzcwNDQnLCAvLyBMYXJnZSBmcm9udGFsIGNvbmUgQW9FLCBiZWZvcmUgYm9zcyAyXHJcbiAgICAnQWx6YWRhYWwgU2hhbGxvd3MgT2dyZWJvbiBGbG91bmRlcic6ICc3MDQ2JywgLy8gUmVjdGFuZ2xlIEFvRSwgYmVmb3JlIGJvc3MgMlxyXG4gICAgJ0FsemFkYWFsIEJvdW50eSBWZXBhciBTY3Jld2RyaXZlcic6ICc3MDQ3JywgLy8gU21hbGwgZnJvbnRhbCBjb25lIEFvRSwgYmVmb3JlIGJvc3MgMlxyXG4gICAgJ0FsemFkYWFsIEJvdW50eSBDbGF3dHJhcCBBbHphZGFhbCBYSVYgV2F0ZXIgSUlJJzogJzcwNEYnLCAvLyBGcm9udGFsIGNvbmUgQW9FLCBiZWZvcmUgYm9zcyAyXHJcblxyXG4gICAgJ0FsemFkYWFsIEFybW9yZWQgQ2hhcmlvdCBBc3NhdWx0IENhbm5vbiAxJzogJzZGMUMnLCAvLyBQcmltYXJ5IGNhbm5vbiBmaXJlLCBib3NzIDJcclxuICAgICdBbHphZGFhbCBBcm1vcmVkIENoYXJpb3QgQXNzYXVsdCBDYW5ub24gMic6ICc2RjFEJywgLy8gUHJpbWFyeSBjYW5ub24gZmlyZSwgYm9zcyAyXHJcbiAgICAnQWx6YWRhYWwgQXJtb3JlZCBDaGFyaW90IENhbm5vbiBSZWZsZWN0aW9uJzogJzZGMjcnLCAvLyBTZWNvbmRhcnkgY2Fubm9uIGZpcmUsIGJvc3MgMlxyXG5cclxuICAgICdBbHphZGFhbCBBbHphZGFhbFxcJ3MgQWNyb2xpdGggRWFydGhzaGF0dGVyJzogJzcwNTEnLCAvLyBDZW50ZXJlZCBjaXJjbGUgQW9FLCBhZnRlciBib3NzIDJcclxuICAgICdBbHphZGFhbCBBbHphZGFhbFxcJ3MgR3VhcmRpYW4gRG9taW5pb24gU2xhc2gnOiAnNzA1MicsIC8vIExhcmdlIGZyb250YWwgY29uZSBBb0UsIGFmdGVyIGJvc3MgMlxyXG4gICAgJ0FsemFkYWFsIE15c3RpYyBXZWFwb24gU21pdGUgb2YgUmFnZSc6ICc3MDUzJywgLy8gTGluZSBBb0UsIGFmdGVyIGJvc3MgMlxyXG4gICAgJ0FsemFkYWFsIE15c3RpYyBXZWFwb24gV2hpcmwgb2YgUmFnZSc6ICc3MDU0JywgLy8gQ2VudGVyZWQgY2lyY2xlIEFvRSwgYWZ0ZXIgYm9zcyAyXHJcbiAgICAnQWx6YWRhYWwgQWx6YWRhYWxcXCdzICBNaW1pYyBEZWF0aHRyYXAnOiAnNzA1NScsIC8vIENlbnRlcmVkIGNpcmNsZSBBb0UsIGFmdGVyIGJvc3MgMlxyXG5cclxuICAgICdBbHphZGFhbCBLYXBpa3VsdSBCYXN0aW5nIEJsYWRlJzogJzZGNjgnLCAvLyBMYXJnZSBSZWN0YW5nbGUgQW9FLCBib3NzIDNcclxuICAgICdBbHphZGFhbCBLYXBpa3VsdSBNYW5hIEV4cGxvc2lvbic6ICc2RjZCJywgLy8gUG93ZXIgU2VyZ2UgZXhwbG9zaW9uIGNpcmNsZXMsIGJvc3MgM1xyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RXYXJuOiB7XHJcbiAgICAnQWx6YWRhYWwgS2FwaWt1bHUgU3RhYiBXb3VuZCc6ICdCRjYnLCAvLyBTcGlrZSB0cmFwcywgYm9zcyAzXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdBbHphZGFhbCBBcm1vcmVkIENoYXJpb3QgR3Jhdml0b24gQ2Fubm9uJzogJzczNzMnLCAvLyBMYXJnZSBzcHJlYWQgY2lyY2xlcywgYm9zcyAyXHJcbiAgICAnQWx6YWRhYWwgS2FwaWt1bHUgUm90YXJ5IEdhbGUnOiAnNkY2RCcsIC8vIFNwcmVhZCBjaXJjbGVzLCBib3NzIDNcclxuICB9LFxyXG4gIHNvbG9XYXJuOiB7XHJcbiAgICAnQWx6YWRhYWwgS2FwaWt1bHUgTWFnbml0dWRlIE9wdXMnOiAnNkY2RicsIC8vIFN0YW5kYXJkIHN0YWNrIG1hcmtlciwgYm9zcyAzXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5LdGlzaXNIeXBlcmJvcmVpYSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnS3Rpc2lzIEt0aXNlb3MgTGVvbiBDcnknOiAnNjg1NycsIC8vIGNlbnRlcmVkIHJpY2xlXHJcbiAgICAnS3Rpc2lzS3Rpc2VvcyBQYW50aGVyIENoYXJnZWQgV2hpc2tlcic6ICc2ODU1JywgLy8gY2VudGVyZWQgY2lyY2xlXHJcbiAgICAnS3Rpc2lzS3Rpc2VvcyBQYW50aGVyIE1lZ2FibGFzdGVyJzogJzY4NTYnLCAvLyBjb25hbFxyXG4gICAgJ0t0aXNpcyBLdGlzZW9zIENoaW9uZSBTbm93Y2FwJzogJzY3MDcnLCAvLyBjaXJjbGUgd2hlbiBhcHBlYXJpbmdcclxuICAgICdLdGlzaXMgS3Rpc2VvcyBDaGlvbmUgV2hpdGUgRGVhdGgnOiAnNjg1QicsIC8vIHRhcmdldGVkIGNvbmFsXHJcbiAgICAnS3Rpc2lzIEx5c3NhIFB1bmlzaGluZyBTbGljZSc6ICc2MjU5JywgLy8gMTgwIGNsZWF2ZSBhZnRlciBGcm9zdGJpdGUgYW5kIFNlZWtcclxuICAgICdLdGlzaXMgTHlzc2EgSWNlIFBpbGxhcic6ICc2MjVCJywgLy8gbGluZXMgZnJvbSBpY2UgcGlsbGFyIGFkZHNcclxuICAgICdLdGlzaXMgS3Rpc2VvcyBEYWlkYWxpb24gVHJhbnNvbmljIEJsYXN0JzogJzY4NUQnLCAvLyBjb25hbFxyXG4gICAgJ0t0aXNpcyBLdGlzZW9zIEhpcHBvZ3J5cGggU2hyaWVrJzogJzY4NjInLCAvLyB0YXJnZXRlZCBjaXJjbGVcclxuICAgICdLdGlzaXMgS3Rpc2VvcyBMYWlsYXBzIEZpcmUgSUknOiAnNjg2NycsIC8vIHRhcmdldGVkIGNpcmNsZVxyXG4gICAgJ0t0aXNpcyBLdGlzZW9zIEdyeXBzIEZyZWVmYWxsJzogJzY4NUYnLCAvLyB0YXJnZXRlZCBqdW1wXHJcbiAgICAnS3Rpc2lzIEt0aXNlb3MgR3J5cHMgQWxwaW5lIERyYWZ0JzogJzY4NUYnLCAvLyBsaW5lXHJcbiAgICAnS3Rpc2lzIEt0aXNlb3MgT3BoaW90YXVyb3MgQnV0Y2hlcic6ICc2ODYzJywgLy8gY29uYWxcclxuICAgICdLdGlzaXMgS3Rpc2VvcyBPcGhpb3RhdXJvcyBTY3l0aGUgVGFpbCc6ICc2ODY1JywgLy8gY2VudGVyZWQgY2lyY2xlXHJcbiAgICAnS3Rpc2lzIExhZG9uIExvcmQgUHlyaWMgQnJlYXRoIDEnOiAnNjQ4NicsIC8vIDEvMyB3aWRlIGNvbmFsIGJyZWF0aFxyXG4gICAgJ0t0aXNpcyBMYWRvbiBMb3JkIFB5cmljIEJyZWF0aCAyJzogJzY0ODcnLCAvLyAxLzMgd2lkZSBjb25hbCBicmVhdGhcclxuICAgICdLdGlzaXMgTGFkb24gTG9yZCBQeXJpYyBCcmVhdGggMyc6ICc2NDg4JywgLy8gMS8zIHdpZGUgY29uYWwgYnJlYXRoXHJcbiAgICAnS3Rpc2lzIExhZG9uIExvcmQgUHlyaWMgQnJlYXRoIDQnOiAnNjQ4OScsIC8vIDEvMyB3aWRlIGNvbmFsIGJyZWF0aFxyXG4gICAgJ0t0aXNpcyBMYWRvbiBMb3JkIFB5cmljIEJyZWF0aCA1JzogJzY0OEEnLCAvLyAxLzMgd2lkZSBjb25hbCBicmVhdGhcclxuICAgICdLdGlzaXMgTGFkb24gTG9yZCBQeXJpYyBCcmVhdGggNic6ICc2NDhCJywgLy8gMS8zIHdpZGUgY29uYWwgYnJlYXRoXHJcbiAgICAnS3Rpc2lzIExhZG9uIExvcmQgUHlyaWMgU3BoZXJlJzogJzY0OTEnLCAvLyBzcGhlcmUgYm9tYmVybWFuIGxpbmVzXHJcbiAgICAnS3Rpc2lzIEt0aXNlb3MgU3R5bXBoYWxpZCBUaWNrbGUnOiAnNjg2QicsIC8vIHdpZGUgbGluZVxyXG4gICAgJ0t0aXNpcyBLdGlzZW9zIFN0eW1waGFsaWQgR3VzdCc6ICc2ODZEJywgLy8gdGFyZ2V0ZWQgY2lyY2xlXHJcbiAgICAnS3Rpc2lzIEt0aXNlb3MgQWxreW9uZSBGbGFtZXNwaXR0ZXInOiAnNjk2QScsIC8vIHRhcmdldGVkIGNvbmFsXHJcbiAgICAnS3Rpc2lzIEt0aXNlb3MgQWVsbG8gU2lkZXNsaXAnOiAnNjg2RScsIC8vIGNlbnRlcmVkIGNpcmNsZVxyXG4gICAgJ0t0aXNpcyBLdGlzZW9zIEFlbGxvIEZlYXRoZXJjdXQnOiAnNjg2RicsIC8vIGxpbmVcclxuICAgICdLdGlzaXMgS3Rpc2VvcyBBZWxsbyBXaW5nYmVhdCc6ICc2ODcwJywgLy8gbmFycm93IGNvbmFsXHJcbiAgICAnS3Rpc2lzIEhlcm1lcyBUcnVlIEFlcm8gSVYgMSc6ICc2NTIxJywgLy8gbWlycm9yc1xyXG4gICAgJ0t0aXNpcyBIZXJtZXMgVHJ1ZSBBZXJvIElWIDInOiAnNkNCQycsIC8vIG1pcnJvcnNcclxuICAgICdLdGlzaXMgSGVybWVzIFRydWUgQWVybyBEb3VibGUnOiAnNjUyRCcsIC8vIERvdWJsZWQgbGluZSBmcm9tIFRydWUgQWVybyBsaW5lc1xyXG4gICAgJ0t0aXNpcyBIZXJtZXMgVHJ1ZSBBZXJvIElJIERvdWJsZSc6ICc2NTJBJywgLy8gRG91YmxlZCBjaXJjbGUgZnJvbSBUcnVlIEFlcm8gSUkgc3ByZWFkXHJcbiAgICAnS3Rpc2lzIEhlcm1lcyBUcnVlIFRvcm5hZG8gRG91YmxlJzogJzY1MzInLCAvLyBEb3VibGVkIGNpcmNsZSBhZnRlciB0YW5rYnVzdGVyXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdFdhcm46IHtcclxuICAgICdLdGlzaXMgSGVybWVzIFdpbmRidXJuJzogJzgyNCcsIC8vIG91dHNpZGUgSGVybWVzIHJpbmdcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0t0aXNpcyBIZXJtZXMgVHJ1ZSBBZXJvIElJJzogJzY1MjgnLCAvLyBzcHJlYWRcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ0t0aXNpcyBIZXJtZXMgVHJ1ZSBUb3JuYWRvJzogJzY1MzEnLCAvLyB0YW5rYnVzdGVyIGNsZWF2ZVxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5TbWlsZXRvbixcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnU21pbGV0b24gU21pbGV5IFdhbmRlcmVyIEVtcHR5IEJlbGVhZ3Vlcic6ICc2OTY0JywgLy8gdGFyZ2V0ZWQgY2lyY2xlXHJcbiAgICAnU21pbGV0b24gU21pbGV5IEx1bmF0ZW5kZXIgTGEgVmllIGVuIEVwaW5lcyc6ICc2OTVFJywgLy8gZnJvbnRhbCBsaW5lXHJcbiAgICAnU21pbGV0b24gU21pbGV5IEx1bmF0ZW5kZXIgQW50aGluZSBOZWVkbGVzJzogJzY5NUYnLCAvLyA/P1xyXG4gICAgJ1NtaWxldG9uIFNtaWxleSBQYW5vcHQgUmV0aW5hbCBHbGFyZSc6ICc2OTZBJywgLy8gZnJvbnRhbCBjb25lXHJcbiAgICAnU21pbGV0b24gRmFjZSBNaXhlZCBGZWVsaW5ncyc6ICc2NzM4JywgLy8gbGluZXMgYmV0d2VlbiByZWxhdGl2ZWx5IHNtYWxsIGZhY2VzXHJcbiAgICAnU21pbGV0b24gU21pbGV5IFNjcmFwZXIgSGVhZHNwaW4nOiAnNjk1RCcsIC8vIGNlbnRlcmVkIGNpcmNsZVxyXG4gICAgJ1NtaWxldG9uIFNtaWxleSBEYXBobmlhIEFjcmlkIFN0cmVhbSc6ICc2OTYwJywgLy8gdGFyZ2V0ZWQgY2lyY2xlXHJcbiAgICAnU21pbGV0b24gU21pbGV5IE1ldGFsbG9pZCBMYXR0aWNlJzogJzY5NjknLCAvLyBsb25nIGxpbmUgYW9lXHJcbiAgICAnU21pbGV0b24gRnJhbWV3b3JrZXIgTGVhcCBGb3J3YXJkJzogJzY3NDYnLCAvLyBqdW1wIHRvIGxhcmdlIGNpcmNsZVxyXG4gICAgJ1NtaWxldG9uIEZyYW1ld29ya2VyIFByaW50ZWQgV29ya2VyIExlYXAgRm9yd2FyZCc6ICc2NzQ3JywgLy8ganVtcCB0byBsYXJnZSBjaXJjbGVcclxuICAgICdTbWlsZXRvbiBGcmFtZXdvcmtlciBPbW5pZGlyZWN0aW9uYWwgT25zbGF1Z2h0JzogJzY3NDknLCAvLyBhbHRlcm5hdGluZyBwaW53aGVlbCdcclxuICAgICdTbWlsZXRvbiBTbWlsZXkgRHluYW1pdGUgQnVyc3QnOiAnNjk2QicsIC8vIHF1aWNrIGNlbnRlcmVkIGNpcmNsZSBuZWFyIGRlYXRoXHJcbiAgICAnU21pbGV0b24gU21pbGV5IFJlZ29saXRoIE1ldGFtb3JwaGljIEJsYXN0JzogJzY5NjcnLCAvLyBsYXJnZSBjb25hbFxyXG4gICAgJ1NtaWxldG9uIFNtaWxleSBSZWdvbGl0aCBPcm9nZW5pYyBTdG9ybSc6ICc2OTY4JywgLy8gdGFyZ2V0ZWQgY2lyY2xlXHJcbiAgICAnU21pbGV0b24gU21pbGV5IFN1cHBvcnRlciBGaXJlIEZpZ2h0ZXInOiAnNjk1QycsIC8vIGRvbnV0IGFvZVxyXG4gICAgJ1NtaWxldG9uIFNtaWxleSBTd2VlcGVyIFNld2VyIFdhdGVyIDEnOiAnNjk2MicsIC8vIGZyb250L2JhY2sgY2xlYXZlXHJcbiAgICAnU21pbGV0b24gU21pbGV5IFN3ZWVwZXIgU2V3ZXIgV2F0ZXIgMic6ICc2OTYzJywgLy8gZnJvbnQvYmFjayBjbGVhdmVcclxuICAgICdTbWlsZXRvbiBUaGUgQmlnIENoZWVzZSBCb21iIElyb24gS2lzcyc6ICc2NzREJywgLy8gbW92aW5nIGJvbWIgY2lyY3VsYXIgZXhwbG9zaW9uXHJcbiAgICAnU21pbGV0b24gVGhlIEJpZyBDaGVlc2UgRXhjYXZhdGlvbiBCb21iIEV4Y2F2YXRlZCc6ICc2QzMyJywgLy8gbWluZSBleHBsb3Npb24gYWZ0ZXIgRXhwbG9zaXZlIFBvd2VyXHJcbiAgICAnU21pbGV0b24gVGhlIEJpZyBDaGVlc2UgUmlnaHQgRGlzYXNzZW1ibGVyJzogJzY3NEYnLCAvLyByaWdodCBjbGVhdmVcclxuICAgICdTbWlsZXRvbiBUaGUgQmlnIENoZWVzZSBMZWZ0IERpc2Fzc2VtYmxlcic6ICc2NzUwJywgLy8gbGVmdCBjbGVhdmVcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1NtaWxldG9uIEZhY2UgVGVtcGVyLCBUZW1wZXInOiAnNjc0MCcsIC8vIHNwcmVhZFxyXG4gICAgJ1NtaWxldG9uIFRoZSBCaWcgQ2hlZXNlIExldmVsaW5nIE1pc3NpbGVzJzogJycsIC8vIHNwcmVhZFxyXG4gIH0sXHJcbiAgc29sb1dhcm46IHtcclxuICAgICdTbWlsZXRvbiBUaGUgQmlnIENoZWVzZSBFbGVjdHJpYyBBcmMnOiAnNjc1MycsIC8vIHN0YWNrIG1hcmtlclxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6ICdTbWlsZXRvbiBGYWNlIFdyb25nIEZhY2UnLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICAvLyBBQ0IgPSBTbWlsZXkgRmFjZVxyXG4gICAgICAvLyBBQ0MgPSBGcm93bnkgRmFjZVxyXG4gICAgICAvLyBUYWtpbmcgdGhpcyBtdWx0aXBsZSB0aW1lcyBzdGFja3MgdGhlIGVmZmVjdC5cclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJ0FDW0JDXScsIHNvdXJjZTogJ0ZhY2UnIH0pLFxyXG4gICAgICBjb25kaXRpb246IChfZGF0YSwgbWF0Y2hlcykgPT4gcGFyc2VJbnQobWF0Y2hlcy5jb3VudCkgPiAxLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ2ZhaWwnLFxyXG4gICAgICAgICAgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiBgJHttYXRjaGVzLmVmZmVjdH0geCR7bWF0Y2hlcy5jb3VudH1gLFxyXG4gICAgICAgICAgICBkZTogYCR7bWF0Y2hlcy5lZmZlY3R9IHgke21hdGNoZXMuY291bnR9YCxcclxuICAgICAgICAgICAgZnI6IGAke21hdGNoZXMuZWZmZWN0fSB4JHttYXRjaGVzLmNvdW50fWAsXHJcbiAgICAgICAgICAgIGNuOiBgJHttYXRjaGVzLmVmZmVjdH0geCR7bWF0Y2hlcy5jb3VudH1gLFxyXG4gICAgICAgICAgICBrbzogYCR7bWF0Y2hlcy5lZmZlY3R9IHgke21hdGNoZXMuY291bnR9YCxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFRPRE86IERvIE11c3RhcmQgQm9tYiBvciBXaGVlbCBzcGxhc2g/XHJcbi8vIFRPRE86IEhvdyB0byBkaXNhbWJpZ3VhdGUgdGhlIDgyOCBCbGVlZGluZyBkZWJ1ZmY/IEl0J3MgdW5hdm9pZGFibHkgaW5mbGljdGVkIGJ5IHNldmVyYWwgdGhpbmdzLFxyXG4vLyBpbmNsdWRpbmcgTXVzdGFyZCBCb21iIGFuZCBBdG9taWMgUmF5LlxyXG4vLyBIb3dldmVyLCBpdCBpcyBhbHNvIGluZmxpY3RlZCBieSBhcmVuYSB3YWxscyBvbiBib3NzZXMgMS8zLlxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlU3RpZ21hRHJlYW1zY2FwZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnRHJlYW1zY2FwZSBPbWljcm9uIEludmFkZXIgRWxlY3RyaWMgU3RyZWFtJzogJzZEQjgnLCAvLyBMaW5lIEFvRSwgYmVmb3JlIGJvc3MgMVxyXG4gICAgJ0RyZWFtc2NhcGUgT21pY3JvbiBJbnZhZGVyIFNob2NraW5nIERpc2NoYXJnZSc6ICc2Qjk5JywgLy8gU21hbGwgQ2hhcmlvdCBBb0UsIGJlZm9yZSBib3NzIDFcclxuXHJcbiAgICAnRHJlYW1zY2FwZSBQcm90by1PbWVnYSBTdGFyYm9hcmQgU2lkZSBDYW5ub25zJzogJzYzMjAnLCAvLyBIYWxmLWFyZW5hIGNsZWF2ZSwgYm9zcyAxXHJcbiAgICAnRHJlYW1zY2FwZSBQcm90by1PbWVnYSBMYXJib2FyZCBTaWRlIENhbm5vbnMnOiAnNjMyMScsIC8vIEhhbGYtYXJlbmEgY2xlYXZlLCBib3NzIDFcclxuICAgICdEcmVhbXNjYXBlIFByb3RvLU9tZWdhIEZvcndhcmQgSW50ZXJjZXB0b3JzJzogJzYzMjMnLCAvLyBGb3J3YXJkIGhhbGYgYXJlbmEgY2xlYXZlLCBib3NzIDFcclxuICAgICdEcmVhbXNjYXBlIFByb3RvLU9tZWdhIFJlYXIgSW50ZXJjZXB0b3JzJzogJzYzMjUnLCAvLyBSZWFyIGhhbGYgYXJlbmEgY2xlYXZlLCBib3NzIDFcclxuICAgICdEcmVhbXNjYXBlIE1hcmsgSUkgR3VpZGVkIE1pc3NpbGUgSXJvbiBLaXNzJzogJzYzMjcnLCAvLyBNaXNzaWxlIGV4cGxvc2lvbiwgYm9zcyAxXHJcblxyXG4gICAgJ0RyZWFtc2NhcGUgRGVsdGEgSW52YWRlciBSYWlsIENhbm5vbic6ICc2QjlFJywgLy8gTGluZSBBb0UsIGJlZm9yZSBib3NzIDJcclxuXHJcbiAgICAnRHJlYW1zY2FwZSBBcmNoLUxhbWJkYSBUcmVhZCc6ICc2M0FDJywgLy8gTW9iaWxlIEFzc2F1bHQgQ2Fubm9uIGRhc2hlcywgYm9zcyAyXHJcbiAgICAnRHJlYW1zY2FwZSBBcmNoLUxhbWJkYSBXYXZlIENhbm5vbic6ICc2M0FGJywgLy8gR2V0LWJlaGluZCBhcmVuYSBjbGVhdmUgYWZ0ZXIgVHJlYWQsIGJvc3MgMlxyXG4gICAgJ0RyZWFtc2NhcGUgQXJjaC1MYW1iZGEgTWFpbiBTbmlwZXIgQ2Fubm9uJzogJzYzQjAnLCAvLyBDaGFyZ2UgZHVyaW5nIEF1dG8tTW9iaWxlIFNuaXBlciBDYW5ub24sIGJvc3MgMlxyXG5cclxuICAgICdEcmVhbXNjYXBlIEh5YnJpZCBEcmFnb24gRW5ndWxmaW5nIEZsYW1lcyc6ICc2QkEwJywgLy8gUmVjdGFuZ2xlIEFvRSwgYWZ0ZXIgYm9zcyAyXHJcbiAgICAnRHJlYW1zY2FwZSBPbWVnYSBGcmFtZSBUaGVybWl0ZSBCb21iJzogJzZCQTEnLCAvLyBTbWFsbCBjaXJjbGUgQW9FLCBhZnRlciBib3NzIDJcclxuXHJcbiAgICAnRHJlYW1zY2FwZSBPbWVnYSBGcmFtZSBTdGFyYm9hcmQgUHJvdG8tV2F2ZSBDYW5ub24nOiAnNjQyQScsIC8vIEhhbGYtYXJlbmEgY2xlYXZlLCBib3NzIDNcclxuICAgICdEcmVhbXNjYXBlIE9tZWdhIEZyYW1lIExhcmJvYXJkIFByb3RvLVdhdmUgQ2Fubm9uJzogJzY0MkInLCAvLyBIYWxmLWFyZW5hIGNsZWF2ZSwgYm9zcyAzXHJcbiAgICAnRHJlYW1zY2FwZSBIeWJyaWQgRHJhZ29uIFRvdWNoZG93bic6ICc2OEY5JywgLy8gQ2lyY2xlIEFvRSwgYm9zcyAzXHJcbiAgICAnRHJlYW1zY2FwZSBIeWJyaWQgRHJhZ29uIEZpcmUgQnJlYXRoJzogJzY0MkUnLCAvLyBHaWFudCBjb25lIEFvRSwgYm9zcyAzXHJcbiAgICAnRHJlYW1zY2FwZSBQcm90by1Sb2NrZXQgUHVuY2ggUnVzaCc6ICc2NDJEJywgLy8gTGluZSBBb0VzLCBib3NzIDNcclxuICAgICdEcmVhbXNjYXBlIFN0aWdtYS00IEVsZWN0cm9tYWduZXRpYyBSZWxlYXNlIER5bmFtbyc6ICc2NDMyJywgLy8gRHluYW1vIEFvRSwgYm9zcyAzXHJcbiAgICAnRHJlYW1zY2FwZSBTdGlnbWEtNCBFbGVjdHJvbWFnbmV0aWMgUmVsZWFzZSBDaGFyaW90JzogJzY0MzQnLCAvLyBDaGFyaW90IEFvRSwgYm9zcyAzXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdFdhcm46IHtcclxuICAgICdEcmVhbXNjYXBlIFByb3RvLU9tZWdhIFB1ZGRsZSBCdXJucyc6ICc4OTInLCAvLyBGbGFtZSBwdWRkbGUgZWZmZWN0LCBib3NzIDFcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0RyZWFtc2NhcGUgUHJvdG8tT21lZ2EgU3ByZWFkIEJ1cm4nOiAnNjMyOScsIC8vIFNwcmVhZCBjaXJjbGVzLCBib3NzIDEuIChDYXN0IG5hbWUgaXMgQ2hlbWljYWwgTWlzc2lsZSwgNjMyOC4pXHJcbiAgICAnRHJlYW1zY2FwZSBBcmNoLUxhbWJkYSBQZXJzb25hbCBTbmlwZXIgQ2Fubm9uJzogJzYzQjInLCAvLyBIZWFkbWFya2VyIGxhc2VycywgYm9zcyAyXHJcbiAgfSxcclxuICBzb2xvV2Fybjoge1xyXG4gICAgJ0RyZWFtc2NhcGUgUHJvdG8tT21lZ2EgRWxlY3RyaWMgU2xpZGUnOiAnNjMyQScsIC8vIFN0YWNrIG1hcmtlciwgYm9zcyAxLlxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlQWl0aWFzY29wZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnQWl0aWFzY29wZSBTaW5raW5nIFJpdmFscnkgRWdvdGlzbSc6ICc2QjFBJywgLy8gdmVyeSBsYXJnZSBjaXJjbGVcclxuICAgICdBaXRpYXNjb3BlIExpdmlhIEFnbGFlYSBDbGltYic6ICc2NDQ0JywgLy8gZGlhZ29uYWwgcXVhZHJhbnQgY2xlYXZlXHJcbiAgICAnQWl0aWFzY29wZSBMaXZpYSBBZ2xhZWEgU2hvdCAxJzogJzY0NDYnLCAvLyBsaW5lc1xyXG4gICAgJ0FpdGlhc2NvcGUgTGl2aWEgQWdsYWVhIFNob3QgMic6ICc2NDQ3JywgLy8gbGluZXMgY29taW5nIGJhY2tcclxuICAgICdBaXRpYXNjb3BlIExpdmlhIElnbmlzIEFtb3Jpcyc6ICc2NDRDJywgLy8gT2RpIGV0IEFtbyB0YXJnZXRlZCBjaXJjbGVzXHJcbiAgICAnQWl0aWFzY29wZSBMaXZpYSBEaXNwYXJhZ2VtZW50JzogJzY0NEEnLCAvLyB3aWRlIGNvbmFsXHJcbiAgICAnQWl0aWFzY29wZSBTaW5raW5nIERlc2lyZSBUaGUgUGF0aCBvZiBBdmFyaWNlJzogJzZCMUInLCAvLyBsaW5lIGFvZVxyXG4gICAgJ0FpdGlhc2NvcGUgU2lua2luZyBQYXJ0aWFsaXR5IFVucmlnaHRmdWwgQ2xhaW0nOiAnNkIxQycsIC8vIGNlbnRlcmVkIGNpcmNsZSwgZ2l2ZXMgZGlzZWFzZVxyXG4gICAgJ0FpdGlhc2NvcGUgU2lua2luZyBEaXNzZW5zaW9uIFdoaXNwZXIgb2YgT3VyIERpc2NvbnRlbnQnOiAnNkIxRCcsIC8vIGNvbmFsXHJcbiAgICAnQWl0aWFzY29wZSBSaGl0YWh0eW4gVGFydGFyZWFuIFNwYXJrJzogJzY0NTcnLCAvLyBsYXNlciBsaW5lIGFvZVxyXG4gICAgJ0FpdGlhc2NvcGUgUmhpdGFodHluIFNoaWVsZCBTa2V3ZXInOiAnNjQ1MCcsIC8vIGNoYXJnZVxyXG4gICAgJ0FpdGlhc2NvcGUgUmhpdGFodHluIFNocmFwbmVsIFNoZWxsJzogJzY0NTQnLFxyXG4gICAgJ0FpdGlhc2NvcGUgU2lua2luZyBSZWdyZXQgTG9zdCBPcHBvcnR1bml0eSc6ICc2QjFGJywgLy8gYWJzb2x1dGVseSBnaWdhbnRpYyBjb25hbFxyXG4gICAgJ0FpdGlhc2NvcGUgQW1vbiBUaHVuZGFnYSBGb3J0ZSAxJzogJzY0NUInLCAvLyBpbml0aWFsIHBpbndoZWVsXHJcbiAgICAnQWl0aWFzY29wZSBBbW9uIFRodW5kYWdhIEZvcnRlIDInOiAnNjQ1QycsIC8vIHNlY29uZCBwaW53aGVlbFxyXG4gICAgJ0FpdGlhc2NvcGUgQW1vbiBFcG9kZSc6ICc2NDVGJywgLy8gY29pbiBsYXNlclxyXG4gICAgJ0FpdGlhc2NvcGUgQW1vbiBSaWdodCBGaXJhZ2EgRm9ydGUnOiAnNjQ2MCcsIC8vIHJpZ2h0IGNsZWF2ZVxyXG4gICAgJ0FpdGlhc2NvcGUgQW1vbiBMZWZ0IEZpcmFnYSBGb3J0ZSc6ICc2NDYxJywgLy8gbGVmdCBjbGVhdmVcclxuICAgICdBaXRpYXNjb3BlIEFtb24gRXJ1cHRpb24gRm9ydGUnOiAnNjQ2OCcsIC8vIHRhcmdldGVkIGNpcmNsZXNcclxuICAgICdBaXRpYXNjb3BlIEFtb24gRHJlYW1zIG9mIEljZSc6ICc2QzZDJywgLy8gc2hpdmEgaWNpY2xlIGFwcGVhcmluZ1xyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ0FpdGlhc2NvcGUgUmhpdGFodHluIEltcGFjdCc6ICc2NDRGJywgLy8gd2FsbHMgYXBwZWFyaW5nIGR1cmluZyBWZXhpbGxhdGlvIGNhc3RcclxuICAgICdBaXRpYXNjb3BlIEFtb24gQ3VydGFpbiBDYWxsJzogJzY0NjYnLCAvLyBsaW5lIG9mIHNpZ2h0XHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdBaXRpYXNjb3BlIExpdmlhIEFnbGFlYSBCaXRlJzogJzY0NDknLFxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuLy8gTm90ZTogSWdub3JpbmcgVG94aWNvc2lzIChCQjgpIHN0YW5kaW5nIGluIG9pbCBwdWRkbGVzIGluIHNlY3Rpb24gMSBhcyBpdCBpcyBqdXN0IGZsYXZvci5cclxuLy8gTm90ZTogSWdub3JpbmcgTmVjcm9zaXMgKEI5NSkgYXMgaXQncyBjb3ZlcmVkIGJ5IFdhdmUgb2YgTmF1c2VhIGFuZCBOZWNyb3RpYyBGbHVpZC5cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSBleHRlbmRzIE9vcHN5RGF0YSB7XHJcbiAgaGFzRG9vbT86IHsgW25hbWU6IHN0cmluZ106IGJvb2xlYW4gfTtcclxufVxyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZURlYWRFbmRzLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdEZWFkRW5kcyBXYXJwZWQgRmxlc2ggQW1vcnBoaWMgRmxhaWwnOiAnNkU5MScsIC8vIGNlbnRlcmVkIGNpcmNsZSAocHVkZGluZylcclxuICAgICdEZWFkRW5kcyBXYXJwZWQgRmxlc2ggVGVybWluYWwgQmxvb20nOiAnNkZGRicsIC8vIHRhcmdldGVkIGNpcmNsZSAocHVkZGluZylcclxuICAgICdEZWFkRW5kcyBXYXJwZWQgRmxlc2ggUGxhZ3VlIEZhbmcnOiAnNkU5MicsIC8vIHRhcmdldGVkIGNpcmNsZSAodGFsbFxyXG4gICAgJ0RlYWRFbmRzIEdyZWJ1bG9mZiBDb3VnaCBVcCc6ICc2NTNFJywgLy8gM3ggdGFyZ2V0ZWQgY2lyY2xlc1xyXG4gICAgJ0RlYWRFbmRzIEFtYmllbnQgTm8gRnV0dXJlJzogJzZDQzknLCAvLyBhbWJpZW50IHJlZCByZXRpY3VsZSAoYmVmb3JlKVxyXG4gICAgJ0RlYWRFbmRzIEFpcmJvcm5lIEZyZWVkb20gRmlnaHRlciBBaXIgQmxhc3QnOiAnNkU3MicsIC8vIGxpbmUgYW9lXHJcbiAgICAnRGVhZEVuZHMgTGFuZGVkIEZyZWVkb20gRmlnaHRlciBQaG90b24gQnVyc3QnOiAnNkU3MScsIC8vIHRhcmdldGVkIGNpcmNsZVxyXG4gICAgJ0RlYWRFbmRzIFBlYWNla2VlcGVyIEVsZWN0cm9tYWduZXRpYyBSZXBlbGxhbnQnOiAnNkVDOCcsIC8vIHJlZCBjaXJjbGUgdW5kZXIgYm9zcyBwcmlvciB0byBlbGVjdHJpYyBjaXJjbGVcclxuICAgICdEZWFkRW5kcyBQZWFjZWtlZXBlciBQZXJwZXR1YWwgV2FyIE1hY2hpbmUgU21hbGwtQm9yZSBMYXNlcic6ICc2RUMwJywgLy8gbGFzZXJzIGZyb20gdHJpYW5nbGVzLCBzaG9ydCB0ZWxlZ3JhcGhcclxuICAgICdEZWFkRW5kcyBQZWFjZWtlZXBlciBQZWFjZWZpcmUnOiAnNjU0RScsIC8vIHJvdGF0aW5nIGxhcmdlIGNpcmNsZXNcclxuICAgICdEZWFkRW5kcyBQZWFjZWtlZXBlciBObyBGdXR1cmUnOiAnNjU0NycsIC8vIHJlZCByZXRpY3VsZSAoZHVyaW5nIGJvc3MpXHJcbiAgICAnRGVhZEVuZHMgWGVub2ZhdW5hIFJlbGV2YXRpb24nOiAnNkM0NycsIC8vIHRhcmdldGVkIGJsYWNrL3llbGxvdyBjaXJjbGVcclxuICAgICdEZWFkRW5kcyBYZW5vZmxvcmEgQ3JlZXBpbmcgSHVzaCc6ICc2QzQ1JywgLy8gZnJvbnRhbCBibHVlIGNsZWF2ZVxyXG4gICAgJ0RlYWRFbmRzIFJhLWxhIExhbWVsbGFyIExpZ2h0JzogJzY1NTMnLCAvLyBleHBhbmRpbmcgY2lyY2xlcyBmcm9tIFByYW5jZVxyXG4gICAgJ0RlYWRFbmRzIFJhLWxhIExpZmVzYnJlYXRoJzogJzY1NTQnLCAvLyBsaW5lIGFvZVxyXG4gICAgJ0RlYWRFbmRzIFJhLWxhIExvdmluZyBFbWJyYWNlIDEnOiAnNjU1NycsIC8vIGxlZnQvcmlnaHQgY2xlYXZlXHJcbiAgICAnRGVhZEVuZHMgUmEtbGEgTG92aW5nIEVtYnJhY2UgMic6ICc2NTU4JywgLy8gbGVmdC9yaWdodCBjbGVhdmVcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgIC8vIEFsbCBnaXZlIGRlYnVmZnMgdGhhdCByZXF1aXJlIGhlYWxlciBhdHRlbnRpb24sIHNvIGlzIGEgd29yc2UgbWlzdGFrZS5cclxuICAgICdEZWFkRW5kcyBHcmVidWxvZmYgTmVjcm90aWMgRmx1aWQnOiAnNjUzRicsIC8vIGV4YWZsYXJlIG9yYnNcclxuICAgICdEZWFkRW5kcyBHcmVidWxvZmYgV2F2ZSBvZiBOYXVzZWEnOiAnNkVCQicsIC8vIGRvbnV0XHJcbiAgICAnRGVhZEVuZHMgUmEtbGEgR29sZGVuIFdpbmdzIExhbWVsbGFyIExpZ2h0IDEnOiAnNjU1NicsIC8vIERvb20tZ2l2aW5nIExpZmVzYnJlYXRoIGJ1dHRlcmZseSBsaW5lc1xyXG4gICAgJ0RlYWRFbmRzIFJhLWxhIEdvbGRlbiBXaW5ncyBMYW1lbGxhciBMaWdodCAyJzogJzY1NUYnLCAvLyBEb29tLWdpdmluZyBMaWZlc2JyZWF0aCBidXR0ZXJmbHkgbGluZXNcclxuICB9LFxyXG4gIGdhaW5zRWZmZWN0V2Fybjoge1xyXG4gICAgJ0RlYWRFbmRzIEdyZWJ1bG9mZiBIeXN0ZXJpYSc6ICcxMjgnLCAvLyBmYWlsaW5nIGRvcml0byBzdGFja1xyXG4gICAgJ0RlYWRFbmRzIFBlYWNla2VlcGVyIEJ1cm5zJzogJzg5MicsIC8vIHN0YW5kaW5nIG9yIGdldHRpbmcga25vY2tlZCBpbnRvIG91dHNpZGUgZWRnZVxyXG4gICAgJ0RlYWRFbmRzIFBlYWNla2VlcGVyIEVsZWN0cm9jdXRpb24nOiAnNzZCJywgLy8gc3RhbmRpbmcgdW5kZXIgUGVhY2VrZWVwZXIgYWZ0ZXIgRWxlY3Ryb21hZ25ldGljIFJlcGVsbGFudFxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnRGVhZEVuZHMgR3JlYnVsb2ZmIEJlZm91bG1lbnQnOiAnNjU0NCcsIC8vIHNwcmVhZFxyXG4gICAgJ0RlYWRFbmRzIFBlYWNla2VlcGVyIEluZmFudHJ5IERldGVycmVudCc6ICc2RUM3JywgLy8gc3ByZWFkXHJcbiAgICAnRGVhZEVuZHMgUGVhY2VrZWVwZXIgTm8gRnV0dXJlIFNwcmVhZCc6ICc2NTQ4JywgLy8gc3ByZWFkIGF0IHRoZSBlbmQgb2YgTm8gRnV0dXJlXHJcbiAgICAnRGVhZEVuZHMgUmEtbGEgU3RpbGwgRW1icmFjZSc6ICc2NTVDJywgLy8gc3ByZWFkXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdEZWFkRW5kcyBQZWFjZWtlZXBlciBFbGltaW5hdGlvbic6ICc2NTRGJywgLy8gdGFua2J1c3RlciBsYXNlciBjbGVhdmVcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRGVhZEVuZHMgUmEtbGEgRG9vbSBHYWluJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzZFOScgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBkYXRhLmhhc0Rvb20gPz89IHt9O1xyXG4gICAgICAgIGRhdGEuaGFzRG9vbVttYXRjaGVzLnRhcmdldF0gPSB0cnVlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdEZWFkRW5kcyBSYS1sYSBEb29tIExvc2UnLFxyXG4gICAgICB0eXBlOiAnTG9zZXNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5sb3Nlc0VmZmVjdCh7IGVmZmVjdElkOiAnNkU5JyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuaGFzRG9vbSA/Pz0ge307XHJcbiAgICAgICAgZGF0YS5oYXNEb29tW21hdGNoZXMudGFyZ2V0XSA9IGZhbHNlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdEZWFkRW5kcyBSYS1sYSBEb29tJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzZFOScgfSksXHJcbiAgICAgIGRlbGF5U2Vjb25kczogKF9kYXRhLCBtYXRjaGVzKSA9PiBwYXJzZUZsb2F0KG1hdGNoZXMuZHVyYXRpb24pIC0gMC41LFxyXG4gICAgICBkZWF0aFJlYXNvbjogKGRhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICBpZiAoIWRhdGEuaGFzRG9vbSlcclxuICAgICAgICAgIHJldHVybjtcclxuICAgICAgICBpZiAoIWRhdGEuaGFzRG9vbVttYXRjaGVzLnRhcmdldF0pXHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiBtYXRjaGVzLmVmZmVjdCxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG4vLyBUT0RPOiBpZiBSb3R0ZW4gUmFtcGFnZSBzcHJlYWQgaXMgc2hhcmVkIHdpdGggYSB3YWxsLCBpdCBpcyBzaG93biBhcyBhIG1pc3Rha2VcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlRmVsbENvdXJ0T2ZUcm9pYSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnVHJvaWEgVHJvaWFuIFNlbnRyeSBFdmlsIFBsZWdobSc6ICc3NjA2JywgLy8gdGFyZ2V0ZWQgY2lyY2xlXHJcbiAgICAnVHJvaWEgVHJvaWFuIFNjYXZlbmdlciBEYXJrIEFycml2aXNtZSc6ICc3NjA1JywgLy8gdGFyZ2V0ZWQgY2lyY2xlXHJcbiAgICAnVHJvaWEgVHJvaWFuIFBhd24gQ29uZGVtbmF0aW9uJzogJzc2MDQnLCAvLyBmcm9udGFsIGNvbmFsXHJcblxyXG4gICAgJ1Ryb2lhIEV2aWwgRHJlYW1lciBEYXJrIFZpc2lvbiAxJzogJzczQjgnLCAvLyB1bnRlbGVncmFwaGVkIGxpbmUgYW9lc1xyXG4gICAgJ1Ryb2lhIEV2aWwgRHJlYW1lciBEYXJrIFZpc2lvbiAyJzogJzczQkInLCAvLyB1bnRlbGVncmFwaGVkIGxpbmUgYW9lc1xyXG4gICAgJ1Ryb2lhIEV2aWwgRHJlYW1lciBVbml0ZSBNYXJlIEFkZHMnOiAnNzNCQycsIC8vIGxhcmdlIGNpcmNsZXMgd2hlcmUgeW91IG5lZWQgdG8ga2lsbCBvbmUgYWRkXHJcbiAgICAnVHJvaWEgRXZpbCBEcmVhbWVyIFVuaXRlIE1hcmUgU21hbGwnOiAnNzNCNScsIC8vIGZpbmFsIHBoYXNlIGVucmFnZSBzbWFsbCBjaXJjbGVzXHJcbiAgICAnVHJvaWEgRXZpbCBEcmVhbWVyIFVuaXRlIE1hcmUgQmlnJzogJzczQjYnLCAvLyBmaW5hbCBwaGFzZSBlbnJhZ2UgbGFyZ2UgY2lyY2xlXHJcblxyXG4gICAgJ1Ryb2lhIFRyb2lhbiBHdWFyZCBWb2lkIFRyYXAnOiAnNzYwQScsIC8vIGxhcmdlIHRhcmdldGVkIGNpcmNsZVxyXG4gICAgJ1Ryb2lhIFRyb2lhbiBGb290bWFuIEdyaW0gSGFsbyc6ICc3NDEwJywgLy8gbGFyZ2UgY2VudGVyZWQgY2lyY2xlXHJcbiAgICAnVHJvaWEgVHJvaWFuIFJpZGVyIEdlaXJyb3Rocic6ICc3NjA3JywgLy8gcmFuZG9tIHBsYXllciB0YXJnZXRlZCBmcm9udCBjb25hbFxyXG4gICAgJ1Ryb2lhIFRyb2lhbiBCaXNob3AgSmVzdGVyXFwncyBSZWFwJzogJzc2MDknLCAvLyBmcm9udGFsIGNvbmFsXHJcbiAgICAnVHJvaWEgVHJvaWFuIEtuaWdodCBIYWxsIG9mIFNvcnJvdyc6ICc3NjA4JywgLy8gdGFyZ2V0ZWQgY2lyY2xlXHJcblxyXG4gICAgJ1Ryb2lhIEJlYXRyaWNlIEJlYXRpZmljIFNjb3JuJzogJzc0NzknLCAvLyBleHBsb3Npb25zXHJcbiAgICAnVHJvaWEgQmVhdHJpY2UgVm9pZHNoYWtlcic6ICc3NDdFJywgLy8gZnJvbnQgY29uYWxcclxuICAgICdUcm9pYSBCZWF0cmljZSBUb3JpYyBWb2lkJzogJzc5RTcnLCAvLyBvdXRzaWRlIHJpbmcgZG9udXRcclxuXHJcbiAgICAnVHJvaWEgVHJvaWFuIFRyYXBwZXIgQXJhY2huZSBXZWInOiAnNzYwRicsIC8vIHRhcmdldGVkIGNpcmNsZVxyXG4gICAgJ1Ryb2lhIFRyb2lhbiBFcXVlcnJ5IFN3b29wJzogJzc2MEQnLCAvLyBjaXJjdWxhciBlbnRyYW5jZSBhb2VcclxuICAgICdUcm9pYSBUcm9pYW4gQnV0bGVyIERhcmsnOiAnNzYwRScsIC8vIGZyb250YWwgY29udGFsXHJcbiAgICAnVHJvaWEgVHJvaWFuIFN0ZXdhcmQgVW5ob2x5IERhcmtuZXNzJzogJzc2MEMnLCAvLyBjZW50ZXJlZCBjaXJjbGVcclxuXHJcbiAgICAnVHJvaWEgU2Nhcm1pZ2xpb25lIFJvdHRlbiBSYW1wYWdlIENpcmNsZSc6ICc3NjE4JywgLy8gdW50YXJnZXRlZCBncm91bmQgY2lyY2xlc1xyXG4gICAgJ1Ryb2lhIFNjYXJtaWdsaW9uZSBCbGlnaHRlZCBCZWRldmlsbWVudCc6ICc3NjFCJywgLy8gcHVycGxlIGtub2NrYmFjayBjaXJjbGVcclxuICAgICdUcm9pYSBTY2FybWlnbGlvbmUgQmxpZ2h0ZWQgQmxhZGV3b3JrJzogJzc2MzMnLCAvLyBnaWFudCBjaXJjbGUgKHdpdGggYSBsaW5lIHRvIGl0KVxyXG4gICAgJ1Ryb2lhIFNjYXJtaWdsaW9uZSBCbGlnaHRlZCBTd2VlcCc6ICc3NjM1JywgLy8gMTgwIFwiZ2V0IGJlaGluZFwiIGF0dGFja1xyXG4gICAgJ1Ryb2lhIFNjYXJtaWdsaW9uZSBOb3gnOiAnNzYyMScsIC8vIHVudGFyZ2V0ZWQgZ3JvdW5kIGNpcmNsZXMgZHVyaW5nIGFkZCBwaGFzZVxyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RGYWlsOiB7XHJcbiAgICAnVHJvaWEgQmVhdHJpY2UgRG9vbSc6ICdEMjQnLCAvLyBmYWlsaW5nIERlYXRoIEZvcnNlZW4gNzQ3RCBsb29rYXdheVxyXG4gICAgJ1Ryb2lhIFNjYXJtaWdsaW9uZSBab21iaWZpY2F0aW9uJzogJzkwMScsIC8vIHRha2luZyB0aHJlZSBzdGFja3Mgb2YgQnJhaW4gUm90IGR1cmluZyBSb3R0ZW4gUmFtcGFnZVxyXG4gICAgLy8gQzA5IGlzIHRoZSA5OTk5IGR1cmF0aW9uIHdoaWxlIHlvdSBhcmUgc3RhbmRpbmcgaW4gdGhlIHdhbGwsIGFuZCBDMEEgaXMgdGhlIDE1cyBsaW5nZXJpbmcgZGVidWZmXHJcbiAgICAnVHJvaWEgU2Nhcm1pZ2xpb25lIFRveGljb3Npcyc6ICdDMEEnLCAvLyBnZXR0aW5nIGtub2NrZWQgYnkgVmFjdXVtIFdhdmUgbm90IGludG8gYSB3YWxsXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdUcm9pYSBCZWF0cmljZSBWb2lkIE5haWwnOiAnNzQ3RicsIC8vIHNwcmVhZFxyXG4gICAgJ1Ryb2lhIFNjYXJtbGlnaW9uZSBSb3R0ZW4gUmFtcGFnZSBTcHJlYWQnOiAnNzYxOScsIC8vIHNwcmVhZCBtYXJrZXJzXHJcbiAgICAnVHJvaWEgU2Nhcm1pZ2xpb25lIFZvaWQgR3Jhdml0eSc6ICc3NjIyJywgLy8gc3ByZWFkIGR1cmluZyBhZGQgcGhhc2VcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ1Ryb2lhIFNjYXJtaWdsaW9uZSBGaXJlZGFtcCc6ICc3NjM3JywgLy8gY2xlYXZpbmcgdGFua2J1c3RlclxyXG4gIH0sXHJcbiAgc29sb1dhcm46IHtcclxuICAgICdUcm9pYSBCZWF0cmljZSBBbnRpcHJlc3N1cmUnOiAnNzlFOCcsIC8vIHN0YWNrXHJcbiAgICAnVHJvaWEgU2Nhcm1pZ2xpb25lIFZvaWQgVm9ydGV4JzogJzc2MjMnLCAvLyBzdGFjayBkdXJpbmcgYWRkIHBoYXNlXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gVE9ETzogRmlndXJlIG91dCBob3cgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgc29tZW9uZSBhY3RpdmVseSBzdG9vZCBpbiBCb3VuZGxlc3MgUGFpblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlVG93ZXJPZkJhYmlsLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdCYWJpbCBOaW1yb2QgQ2Fubm9uIFNob3QnOiAnNkRFMScsIC8vIExhcmdlIGNpcmNsZSBBb0UsIGJlZm9yZSBmaXJzdCBib3NzXHJcbiAgICAnQmFiaWwgVGVtcGVyZWQgSW1wZXJpYWwgU3ByZWFkIFNob3QnOiAnNkRFMicsIC8vIENvbmFsIEFvRSwgYmVmb3JlIGZpcnN0IGJvc3NcclxuICAgICdCYWJpbCBTYXRlbGxpdGUgSW5jZW5kaWFyeSBDaXJjbGUnOiAnNkRFMycsIC8vIExhcmdlIGRvbnV0IEFvRSwgYmVmb3JlIGZpcnN0IGJvc3NcclxuICAgICdCYWJpbCBSZWFwZXIgTWFnaXRlayBDYW5ub24nOiAnNkRFNCcsIC8vIEFPRSBjaXJjbGUsIGJlZm9yZSBmaXJzdCBib3NzXHJcblxyXG4gICAgJ0JhYmlsIEJhcm5hYmFzIEdyb3VuZCBhbmQgUG91bmQnOiAnNjJFQScsIC8vIFRlbGVncmFwaGVkIGxpbmUga25vY2tiYWNrLCBib3NzIDFcclxuICAgICdCYWJpbCBCYXJuYWJhcyBEeW5hbWljIFNjcmFwbGluZSc6ICc2MkYwJywgLy8gSW5uZXIgY2lyY2xlIGR1cmluZyBEeW5hbWljIFNjcmFwbGluZSwgYm9zcyAxXHJcbiAgICAnQmFiaWwgQmFybmFiYXMgRHluYW1pYyBQb3VuZCc6ICc2MkVFJywgLy8gTGluZSBkdXJpbmcgRHluYW1pYyBQb3VuZCwgYm9zcyAxXHJcbiAgICAnQmFiaWwgQmFybmFiYXMgRWxlY3Ryb21hZ25ldGljIFJlbGVhc2UgMSc6ICc2MkYxJywgLy8gQ2VudGVyIEFvRSBjaXJjbGUsIGJvc3MgMVxyXG4gICAgJ0JhYmlsIEJhcm5hYmFzIEVsZWN0cm9tYWduZXRpYyBSZWxlYXNlIDInOiAnNjJFRicsIC8vIENlbnRlciBtYWduZXRpYyBsaW5lLCBib3NzIDFcclxuICAgICdCYWJpbCBCYXJuYWJhcyBSb2xsaW5nIFNjcmFwbGluZSc6ICc2MkVCJywgLy8gQ2VudGVyIEFvRSBjaXJjbGUsIG5vIG1hZ25ldHMsIGJvc3MgMVxyXG4gICAgJ0JhYmlsIFRodW5kZXJiYWxsIFNob2NrJzogJzYyRjInLCAvLyBDYXJkaW5hbC9pbnRlcmNhcmRpbmFsIEFvRSBjaXJjbGVzLCBib3NzIDFcclxuXHJcbiAgICAnQmFiaWwgU2t5IEFybW9yIEFldGhlcnNob3QnOiAnNkRFNycsIC8vIENpcmNsZSBBb0UsIGFmdGVyIGJvc3MgMVxyXG4gICAgJ0JhYmlsIFJlYXJndWFyZCBDZXJtZXQgUGlsZSc6ICc2REU4JywgLy8gTGluZSBBb0UsIGJlZm9yZSBib3NzIDJcclxuICAgICdCYWJpbCBDb2xvc3N1cyBHcmFuZCBTd29yZCc6ICc2REU5JywgLy8gRnJvbnRhbCBjb25lLCBiZWZvcmUgYm9zcyAyXHJcbiAgICAnQmFiaWwgQXZlbmdlciBTaG91bGRlciBDYW5ub24nOiAnNkRFQScsIC8vIFRhcmdldGVkIEFvRSBjaXJjbGUsIGJlZm9yZSBib3NzIDJcclxuICAgICdCYWJpbCBEZWF0aCBNYWNoaW5lIE1hZ2l0ZWsgUmF5JzogJzZERUInLCAvLyBMb25nIGxpbmUgQW9FLCBiZWZvcmUgYm9zcyAyXHJcblxyXG4gICAgJ0JhYmlsIE1hZ2l0ZWsgQ2hha3JhbSBNaWdodHkgQmxvdyc6ICc2MkY0JywgLy8gQXJlbmEgQW9FLCBpZiBub3QgbWluaSwgYm9zcyAyXHJcbiAgICAnQmFiaWwgTHVnYWUgU3VyZmFjZSBNaXNzaWxlJzogJzYyRjcnLCAvLyBUYXJnZXRlZCBBb0UgY2lyY2xlcyBmcm9tIE1hZ2l0ZWsgTWlzc2lsZSwgYm9zcyAyXHJcbiAgICAnQmFiaWwgTWFnaXRlayBFeHBsb3NpdmUgRXhwbG9zaW9uJzogJzYyRjknLCAvLyBCb21iZXJtYW4gbGluZSBBb0UsIGJvc3MgMlxyXG4gICAgJ0JhYmlsIEx1Z2FlIE1hZ2l0ZWsgUmF5JzogJzYyRkMnLCAvLyBGcm9udGFsIGxpbmUgQW9FLCBib3NzIDJcclxuXHJcbiAgICAnQmFiaWwgR3Vuc2hpcCBHYXJsZWFuIEZpcmUnOiAnNkRFRScsIC8vIENpcmNsZSBBb0UsIGFmdGVyIGJvc3MgMlxyXG4gICAgJ0JhYmlsIEFybW9yZWQgV2VhcG9uIERpZmZyYWN0aXZlIExhc2VyJzogJzVFNTMnLCAvLyBDaXJjbGUgQW9FLCBhZnRlciBib3NzIDJcclxuICAgICdCYWJpbCBNYWdpdGVrIENyYW5lIENyYW5lIEdhbWUnOiAnNkMzNScsIC8vIExhcmdlIGVudmlyb25tZW50YWwgY2lyY2xlIEFvRSwgYWZ0ZXIgYm9zcyAyXHJcbiAgICAnQmFiaWwgSGV4YWRyb25lIDItVG9uemUgTWFnaXRlayBNaXNzaWxlJzogJzZERUMnLCAvLyBDaXJjbGUgQW9FLCBhZnRlciBib3NzIDJcclxuICAgICdCYWJpbCBSb2FkZXIgUnVzaCc6ICc2REVEJywgLy8gUmVjdGFuZ2xlIEFvRSwgYWZ0ZXIgYm9zcyAyXHJcbiAgICAnQmFiaWwgSHlwZXJ0dW5lZCBTcGVjaW1lbiBSaWdodC1hcm0gQmxhc3Rlcic6ICc2REYwJywgLy8gUmVjdGFuZ2xlIEFvRSwgYWZ0ZXIgYm9zcyAyXHJcblxyXG4gICAgJ0JhYmlsIEFuaW1hIFBoYW50b20gUGFpbic6ICc2MkZGJywgLy8gTHVuYXIgTmFpbCBzcXVhcmVzLCBib3NzIDNcclxuICAgICdCYWJpbCBNZWdhLWdyYXZpdG9uIEdyYXZpdG9uIFNwYXJrJzogJzYzMDInLCAvLyBUZXRoZXIgZmFpbHVyZSwgYm9zcyAzXHJcbiAgICAnQmFiaWwgQW5pbWEgUGF0ZXIgUGF0aWFlJzogJzYzMDYnLCAvLyBMaW5lIEFvRSwgYm9zcyAzXHJcbiAgICAnQmFiaWwgQW5pbWEgT2JsaXZpYXRpbmcgQ2xhdyc6ICc2MzBBJywgLy8gQ2hhc2UgcHVkZGxlIGluaXRpYWwgY2lyY2xlLCBib3NzIDNcclxuICAgICdCYWJpbCBJcm9uIE5haWwgT2JsaXZpYXRpbmcgQ2xhdyc6ICc2MzBDJywgLy8gSXJvbiBOYWlsIHNwYXduIGNpcmNsZXMsIGJvc3MgM1xyXG4gICAgJ0JhYmlsIElyb24gTmFpbCBDaGFybmVsIENsYXcnOiAnNjMwRCcsIC8vIExpbmUgZGFzaGVzLCBib3NzIDNcclxuICAgICdCYWJpbCBBbmltYSBDb2ZmaW4gU2NyYXRjaCc6ICc2MzBFJywgLy8gQ2hhc2UgcHVkZGxlcywgYm9zcyAzXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdFdhcm46IHtcclxuICAgICdCYWJpbCBCYXJuYWJhcyBFbGVjdHJvY3V0aW9uJzogJzgyNicsIC8vIEFyZW5hIGVkZ2UgZWZmZWN0LCBib3NzIDFcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ0JhYmlsIEFuaW1hIEVydXB0aW5nIFBhaW4nOiAnNjMwOCcsIC8vIFB1cnBsZSBzcHJlYWQgY2lyY2xlcywgYm9zcyAzXHJcbiAgfSxcclxuICBzb2xvV2Fybjoge1xyXG4gICAgJ0JhYmlsIEJhcm5hYmFzIFNob2NraW5nIEZvcmNlJzogJzYyRUMnLCAvLyBTdGFjayBtYXJrZXIsIGJvc3MgMVxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgLy8gUmVhY2hpbmcgOCBzdGFja3Mgb2YgQnJlYXRobGVzcyBpcyBhIGRlYXRoXHJcbiAgICAgIGlkOiAnQmFiaWwgTHVnYWUgQnJlYXRobGVzcycsXHJcbiAgICAgIHR5cGU6ICdMb3Nlc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmxvc2VzRWZmZWN0KHsgZWZmZWN0SWQ6ICdBNzAnLCBjb3VudDogJzcnIH0pLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnU3VmZm9jYXRlZCcsXHJcbiAgICAgICAgICAgIGRlOiAnRXJzdGlja3QnLFxyXG4gICAgICAgICAgICBmcjogJ0Egc3VmZm9xdcOpKGUpJyxcclxuICAgICAgICAgICAgY246ICfnqpLmga8nLFxyXG4gICAgICAgICAgICBrbzogJ+yniOyLnScsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbi8vIFRPRE86IFByYXB0aSBTaWRkaGkgaXMgYSBtaXN0YWtlIG9uIGl0cyBvd24gYmVmb3JlIHN0b3BcclxuLy8gYW5kIGFmdGVyIHN0b3AsIG9ubHkgYSBtaXN0YWtlIGZvciB0aGUgcGVyc29uIHdpdGhvdXQgc3RvcC5cclxuLy8gVE9ETzogZG9lcyBNaW5kdXJ1dmEgZG8gYW55dGhpbmcgb24gZmluYWwgZmlnaHQgaWYgbGVmdCBhbGl2ZSBmb3IgbG9uZz9cclxuLy8gVE9ETzogUHJha2FteWEgU2lkZGhpIGlzIGEgcmFpZHdpZGUgZWFybGllciwgYnV0IG9uZSBsb2cgaGFkIGl0IGxvb2sgbGlrZSBhIGdyb3VuZCBhb2U/XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZVRvd2VyT2Zab3QsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1pvdCBBcm1vcmVkIEZpZW5kIFNvcG9yaWZpYyBHYXMnOiAnNkNFMicsIC8vIGNlbnRlcmVkIGNpcmNsZVxyXG4gICAgJ1pvdCBTa3kgQXJtb3IgR2FybGVhbiBGaXJlJzogJzU0RUEnLCAvLyB0YXJnZXRlZCBjaXJjbGVcclxuICAgICdab3QgTWluZHVydXZhIE1hbnVzeWEgQmxpenphcmQgSUlJJzogJzYyOTYnLCAvLyBibGl6emFyZCBwaW53aGVlbFxyXG4gICAgJ1pvdCBNaW5kdXJ1dmEgTWFudXN5YSBGaXJlIElJSSc6ICc2Mjk1JywgLy8gZmlyZSBkb251dFxyXG4gICAgJ1pvdCBNaW5kdXJ1dmEgTWFudXN5YSBUaHVuZGVyIElJSSc6ICc2Mjk3JywgLy8gdGh1bmRlciBcImNyb3NzXCIgY2lyY2xlc1xyXG4gICAgJ1pvdCBNaW5kdXJ1dmEgTWFudXN5YSBCaW8gSUlJJzogJzYyOTgnLCAvLyAxODAgZGVncmVlIGZyb250YWwgY2xlYXZlXHJcbiAgICAnWm90IERlYXRoIENsYXcgU2hyZWQnOiAnNTRFRCcsIC8vIGxpbmUgYW9lXHJcbiAgICAnWm90IEh5cGVydHVuZWQgTGVmdC1Bcm0gU2xhc2gnOiAnNTRFQycsIC8vIGZyb250YWwgY29uYWxcclxuICAgICdab3QgU2FuZHVydXZhIEJlcnNlcmtlciBTcGhlcmUgU3BoZXJlIFNoYXR0ZXInOiAnNjJBNCcsIC8vIGNpcmNsZXMgZHVyaW5nIEV4cGxvc2l2ZSBGb3JjZVxyXG4gICAgJ1pvdCBQcmVkYXRvciBNYWdpdGVrIFJheSc6ICc1RTRGJywgLy8gbG9uZyBsaW5lIGFvZVxyXG4gICAgJ1pvdCBSb2FkZXIgSGF5d2lyZSc6ICc1RTUxJywgLy8gbGluZSBhb2UgY2hhcmdlXHJcbiAgICAnWm90IE1hcmsgSUkgWm90IENvbG9zc3VzIEV4aGF1c3QnOiAnNUU0QicsIC8vIGxvbmcgbGluZSBhb2VcclxuICAgICdab3QgQXJtb3JlZCBXZWFwb24gRGlmZnJhY3RpdmUgTGFzZXInOiAnNUU1MycsIC8vIHRhcmdldGVkIGNpcmNsZVxyXG4gICAgJ1pvdCBDaW5kdXJ1dmEgRGVsdGEgQmxpenphcmQgSUlJIDEnOiAnNjJCMicsIC8vIGxpbmVzL3BpbndoZWVsc1xyXG4gICAgJ1pvdCBDaW5kdXJ1dmEgRGVsdGEgQmxpenphcmQgSUlJIDInOiAnNjJCMycsIC8vIGxpbmVzL3BpbndoZWVsc1xyXG4gICAgJ1pvdCBDaW5kdXJ1dmEgRGVsdGEgVGh1bmRlciBJSUkgMSc6ICc2MkI1JywgLy8gbGluZXMvY2lyY2xlc1xyXG4gICAgJ1pvdCBDaW5kdXJ1dmEgRGVsdGEgVGh1bmRlciBJSUkgMic6ICc2MkI2JywgLy8gbGluZXMvY2lyY2xlc1xyXG4gICAgJ1pvdCBDaW5kdXJ1dmEgRGVsdGEgRmlyZSBJSUkgMSc6ICc2MkFGJywgLy8gbGluZXMvZG9udXRzXHJcbiAgICAnWm90IENpbmR1cnV2YSBEZWx0YSBGaXJlIElJSSAyJzogJzYyQjAnLCAvLyBsaW5lcy9kb251dHNcclxuICAgICdab3QgQ2luZHVydXZhIFByYXB0aSBTaWRkaGknOiAnNjJCQicsIC8vIE1pbmR1cnV2YSBsaW5lIGR1cmluZyBmaW5hbCBib3NzXHJcbiAgICAnWm90IENpbmR1cnV2YSBCZXJzZXJrZXIgU3BoZXJlIFNwaGVyZSBTaGF0dGVyJzogJzYyQkYnLCAvLyBFeHBsb3NpdmUgRm9yY2UgZHVyaW5nIGZpbmFsIGJvc3NcclxuICAgICdab3QgQ2luZHVydXZhIFByYWthbXlhIFNpZGRoaSc6ICc2MkJFJywgLy8gPz8gY2FzdGVkIGJ5IFNpbmR1cnV2YSBhZnRlciBNaW5kdXJ1dmEgaGFzIGRpZWRcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1pvdCBTYW5kdXJ1dmEgUHJhcHRpIFNpZGRoaSc6ICc2MkE4JywgLy8gdGFyZ2V0ZWQgbGluZSwgc29tZXRpbWVzIHdpdGggc3RvcFxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuLy8gVE9ETzogZG8gdGFua2J1c3RlcnMgY2xlYXZlP1xyXG4vLyBUT0RPOiB3aGF0J3MgdGhlIGVmZmVjdCBmb3IgcnVubmluZyBpbnRvIHRoZSBvdXRlciBlZGdlIG9uIFRlcm1pbnVzIFdyZWNrZXI/XHJcbi8vIFRPRE86IHdoYXQncyB0aGUgZWZmZWN0IGZvciBydW5uaW5nIGludG8gdGhlIG91dGVyIHJpbmcgb24gU3ZhcmJoYW51P1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5WYW5hc3BhdGksXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1ZhbmFzcGF0aSBUZXJtaW51cyBUcmFtcGxlciBUcmVtYmxvcic6ICc2QzIyJywgLy8gbGFyZ2UgY2VudGVyZWQgY2lyY2xlXHJcbiAgICAnVmFuYXNwYXRpIFRlcm1pbnVzIElkb2xpemVyIERlYWRseSBUZW50YWNsZXMnOiAnNkNERCcsIC8vIGNvbmFsXHJcbiAgICAnVmFuYXNwYXRpIFRlcm1pbnVzIFNuYXRjaGVyIFZpdHJpb2wnOiAnNjIzMicsIC8vIE1vdXRoIE9mZiBtb3V0aCBjaXJjbGVzXHJcbiAgICAnVmFuYXNwYXRpIFRlcm1pbnVzIFNuYXRjaGVyIFdoYXQgSXMgUmlnaHQnOiAnNjIzMycsIC8vIHJpZ2h0IGNsZWF2ZVxyXG4gICAgJ1ZhbmFzcGF0aSBUZXJtaW51cyBTbmF0Y2hlciBXaGF0IElzIExlZnQnOiAnNjIzNCcsIC8vIGxlZnQgY2xlYXZlXHJcbiAgICAnVmFuYXNwYXRpIFRlcm1pbnVzIFNwcmludGVyIEhvbGxvdyBTcGlrZSc6ICc2QzFGJywgLy8gbG9uZyBsaW5lIGFvZVxyXG4gICAgJ1ZhbmFzcGF0aSBUZXJtaW51cyBIb3Jyb3IgQmVsbG93cyc6ICc2QzFFJywgLy8gOTAgZGVncmVlIGNvbmFsXHJcbiAgICAnVmFuYXNwYXRpIFRlcm1pbnVzIEJlbGx3ZXRoZXIgV2luZHMgT2YgRGVzcGFpcic6ICc2Q0RDJywgLy8gbGluZSBhb2VcclxuICAgICdWYW5hc3BhdGkgU3ZhcmJoYW51IENoYW90aWMgVW5kZXJjdXJyZW50IFB1cnBsZSc6ICc2MjRBJywgLy8gcHVycGxlIHNxdWFyZSBleHBsb3Npb25zXHJcbiAgICAnVmFuYXNwYXRpIFN2YXJiaGFudSBDaGFvdGljIFVuZGVyY3VycmVudCBCbHVlJzogJzYyNEInLCAvLyBibHVlIHNxdWFyZSBleHBsb3Npb25zXHJcbiAgICAnVmFuYXNwYXRpIFN2YXJiaGFudSBDb3NtaWMgS2lzcyBDaXJjbGUnOiAnNjI0RicsIC8vIG1pZHBoYXNlIGNpcmNsZXMgb24gZ3JvdW5kXHJcbiAgICAnVmFuYXNwYXRpIFN2YXJiaGFudSBNaWRwaGFzZSBDaGFyZ2UnOiAnNjMxRScsIC8vIHVubmFtZWQgbWlkZHBoYXNlIGxpbmUgYXR0YWNrc1xyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnVmFuYXNwYXRpIFRlcm1pbnVzIFNuYXRjaGVyIFdhbGxvdyc6ICc2MjM2JywgLy8gc3ByZWFkIG1hcmtlclxyXG4gICAgJ1ZhbmFzcGF0aSBTdmFyYmhhbnUgQ29zbWljIEtpc3MgU3ByZWFkJzogJzYyNTAnLCAvLyBzcHJlYWQgbWFya2VyXHJcbiAgfSxcclxuICBzb2xvV2Fybjoge1xyXG4gICAgJ1ZhbmFzcGF0aSBUZXJtaW51cyBXcmVja2VyIFBvaXNvbiBIZWFydCc6ICc2Q0RDJywgLy8gc3RhY2sgbWFya2VyXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICAvLyBMb29rYXdheSBtZWNoYW5pYywgZG9lcyBubyBkYW1hZ2Ugb24gc3VjY2Vzcy5cclxuICAgICAgaWQ6ICdWYW5hc3BhdGkgVGVybWludXMgVHdpdGNoZXIgRG91YmxlIEhleCBFeWUnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICc2QzIxJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiBkYXRhLkRhbWFnZUZyb21NYXRjaGVzKG1hdGNoZXMpID4gMCxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHsgdHlwZTogJ3dhcm4nLCBibGFtZTogbWF0Y2hlcy50YXJnZXQsIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLCB0ZXh0OiBtYXRjaGVzLmFiaWxpdHkgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIERhdGEgZXh0ZW5kcyBPb3BzeURhdGEge1xyXG4gIHNwZWxsPzogeyBbbmFtZTogc3RyaW5nXTogJ2NvbGQnIHwgJ2hvdCcgfTtcclxufVxyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkFzcGhvZGVsb3NUaGVGaXJzdENpcmNsZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnUDFOIEdhb2xlclxcJ3MgRmxhaWwgMSc6ICc2REEyJywgLy8gbGVmdC9yaWdodCAxODAgY2xlYXZlXHJcbiAgICAnUDFOIEdhb2xlclxcJ3MgRmxhaWwgMic6ICc2REEzJywgLy8gbGVmdC9yaWdodCAxODAgY2xlYXZlXHJcbiAgICAnUDFOIFBvd2VyZnVsIExpZ2h0JzogJzY1RUQnLCAvLyBsaWdodCBleHBsb3Npb24gZHVyaW5nIGZpcmUvbGlnaHRcclxuICAgICdQMU4gUG93ZXJmdWwgRmlyZSc6ICc2NUVDJywgLy8gZmlyZSBleHBsb3Npb24gZHVyaW5nIGZpcmUvbGlnaHRcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdQMU4gUGFpbmZ1bCBGbHV4JzogJzY1RjInLCAvLyBzdGFuZGluZyBpbiBjcm9zcyBiZXR3ZWVuIGhvdC9jb2xkIHNlY3Rpb25zXHJcbiAgfSxcclxuICBzb2xvV2Fybjoge1xyXG4gICAgJ1AxTiBUcnVlIEhvbHknOiAnNjVFNycsIC8vIFBpdGlsZXNzIEZsYWlsIHN0YWNrIG1hcmtlclxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6ICdQMU4gSG90IENvbGQgU3BlbGwgR2FpbicsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICdBQlszNF0nIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgY29uc3QgdGVtcCA9IG1hdGNoZXMuZWZmZWN0SWQgPT09ICdBQjMnID8gJ2NvbGQnIDogJ2hvdCc7XHJcbiAgICAgICAgKGRhdGEuc3BlbGwgPz89IHt9KVttYXRjaGVzLnRhcmdldF0gPSB0ZW1wO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdQMU4gSG90IENvbGQgU3BlbGwgTG9zZScsXHJcbiAgICAgIHR5cGU6ICdMb3Nlc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmxvc2VzRWZmZWN0KHsgZWZmZWN0SWQ6ICdBQlszNF0nIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiBkZWxldGUgKGRhdGEuc3BlbGwgPz89IHt9KVttYXRjaGVzLnRhcmdldF0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ1AxTiBDb2xkIFNwZWxsJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICc2NUYxJyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gZGF0YS5zcGVsbD8uW21hdGNoZXMudGFyZ2V0XSA9PT0gJ2NvbGQnLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ3dhcm4nLFxyXG4gICAgICAgICAgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICB0ZXh0OiBtYXRjaGVzLmFiaWxpdHksXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnUDFOIEhvdCBTcGVsbCcsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnNjVGMCcgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEuc3BlbGw/LlttYXRjaGVzLnRhcmdldF0gPT09ICdob3QnLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ3dhcm4nLFxyXG4gICAgICAgICAgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICB0ZXh0OiBtYXRjaGVzLmFiaWxpdHksXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnUDFOIFBpdGlsZXNzIEZsYWlsIEtub2NrYmFjaycsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnNjVFNScgfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdQdXNoZWQgaW50byB3YWxsJyxcclxuICAgICAgICAgICAgZGU6ICdSw7xja3N0b8OfIGluIGRpZSBXYW5kJyxcclxuICAgICAgICAgICAgZnI6ICdQb3Vzc8OpKGUpIGRhbnMgbGUgbXVyJyxcclxuICAgICAgICAgICAgamE6ICflo4Hjgbjjg47jg4Pjgq/jg5Djg4Pjgq8nLFxyXG4gICAgICAgICAgICBjbjogJ+WHu+mAgOiHs+WimScsXHJcbiAgICAgICAgICAgIGtvOiAn67K97Jy866GcIOuEieuwsScsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuLy8gTm90ZTogR2FvbGVyJ3MgRmxhaWwgNkY1Ni02NjAxIGNhbiBoaXQgcGVvcGxlIGJ1dCBkb2Vzbid0IGRvIGRhbWFnZS5cclxuLy8gICAgICAgUHJlc3VtYWJseSB0aGlzIGlzIHRoZSBhbmltYXRpb24vd2VhcG9uIGRyb3BwaW5nIG9uIHRoZSBncm91bmQ/XHJcblxyXG4vLyBUT0RPOiBzaGFja2xlcyBjb3VsZCBwcm9iYWJseSBiZSBoYW5kbGVkIHdpdGggbW9yZSBudWFuY2UgdGhhbiBqdXN0IFwid2FzIGl0IHNoYXJlZFwiXHJcbi8vICAgICAgIGJ1dCB0aGlzIGlzIHRoZSBtb3N0IGNvbW1vbiBmYWlsdXJlIG1vZGUgYW5kIGlzIGVhc3kgdG8gd3JpdGUuXHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIERhdGEgZXh0ZW5kcyBPb3BzeURhdGEge1xyXG4gIHNwZWxsPzogeyBbbmFtZTogc3RyaW5nXTogJ2NvbGQnIHwgJ2hvdCcgfTtcclxufVxyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkFzcGhvZGVsb3NUaGVGaXJzdENpcmNsZVNhdmFnZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnUDFTIEdhb2xlclxcJ3MgRmxhaWwgMSc6ICc2REE2JywgLy8gZ28gbGVmdCBmaXJzdFxyXG4gICAgJ1AxUyBHYW9sZXJcXCdzIEZsYWlsIDInOiAnNkRBNycsIC8vIGdvIHJpZ2h0IGZpcnN0XHJcbiAgICAnUDFTIEdhb2xlclxcJ3MgRmxhaWwgMyc6ICc2REE4JywgLy8gZ28gb3V0IGZpcnN0XHJcbiAgICAnUDFTIEdhb2xlclxcJ3MgRmxhaWwgNCc6ICc2REE5JywgLy8gZ28gaW4gZmlyc3RcclxuICAgICdQMVMgR2FvbGVyXFwncyBGbGFpbCA1JzogJzZEQUEnLCAvLyBnbyBsZWZ0IHNlY29uZFxyXG4gICAgJ1AxUyBHYW9sZXJcXCdzIEZsYWlsIDYnOiAnNkRBQicsIC8vIGdvIHJpZ2h0IHNlY29uZFxyXG4gICAgJ1AxUyBHYW9sZXJcXCdzIEZsYWlsIDcnOiAnNkRBQycsIC8vIGdvIG91dCBzZWNvbmRcclxuICAgICdQMVMgR2FvbGVyXFwncyBGbGFpbCA4JzogJzZEQUQnLCAvLyBnbyBpbiBzZWNvbmRcclxuICAgICdQMVMgUG93ZXJmdWwgRmlyZSc6ICc2NjFBJywgLy8gZmlyZSBleHBsb3Npb24gZHVyaW5nIGZpcmUvbGlnaHRcclxuICAgICdQMVMgUG93ZXJmdWwgTGlnaHQnOiAnNjYxQicsIC8vIGxpZ2h0IGV4cGxvc2lvbiBkdXJpbmcgZmlyZS9saWdodFxyXG4gICAgJ1AxUyBJbnRlbXBlcmF0ZSBGbGFtZXMnOiAnNkM3NScsIC8vIG1pc3NlZCBmaXJlIHRlbXBlcmF0dXJlIHNxdWFyZVxyXG4gICAgJ1AxUyBJbnRlbXBlcmF0ZSBJY2UnOiAnNkM3NicsIC8vIG1pc3NlZCBpY2UgdGVtcGVyYXR1cmUgc3F1YXJlXHJcbiAgICAnUDFTIEluZXZpdGFibGUgRmxhbWUnOiAnNkVDMScsIC8vIHNoYXJpbmcgdGhlIGNvbG9yIHdpdGggdGhlIHNoYWNrbGVzIG9mIHRpbWUgcGVyc29uXHJcbiAgICAnUDFTIEluZXZpdGFibGUgTGlnaHQnOiAnNkVDMicsIC8vIHNoYXJpbmcgdGhlIGNvbG9yIHdpdGggdGhlIHNoYWNrbGVzIG9mIHRpbWUgcGVyc29uXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnUDFTIERpc2FzdHJvdXMgU3BlbGwnOiAnNjYyMycsIC8vIHRoZSBwdXJwbGUgbWlkZGxlIGJsb2NrcyBkdXJpbmcgSW50ZW1wZXJhdGVcclxuICAgICdQMVMgUGFpbmZ1bCBGbHV4JzogJzY2MjQnLCAvLyBzdGFuZGluZyBiZXR3ZWVuIHRlbXBlcmF0dXJlIHNxdWFyZXNcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ1AxUyBDaGFpbiBQYWluIDEnOiAnNjYyNycsIC8vIGNsb3NlL2ZhciBzaGFja2xlc1xyXG4gICAgJ1AxUyBDaGFpbiBQYWluIDInOiAnNjYyOCcsIC8vIGNsb3NlL2ZhciBzaGFja2xlc1xyXG4gIH0sXHJcbiAgc29sb0ZhaWw6IHtcclxuICAgICdQMVMgVHJ1ZSBIb2x5JzogJzY2MTInLCAvLyBQaXRpbGVzcyBGbGFpbCBvZiBHcmFjZSBzdGFjayBtYXJrZXJcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnUDFTIEhvdCBDb2xkIFNwZWxsIEdhaW4nLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiAnQUJbMzRdJyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGNvbnN0IHRlbXAgPSBtYXRjaGVzLmVmZmVjdElkID09PSAnQUIzJyA/ICdjb2xkJyA6ICdob3QnO1xyXG4gICAgICAgIChkYXRhLnNwZWxsID8/PSB7fSlbbWF0Y2hlcy50YXJnZXRdID0gdGVtcDtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnUDFTIEhvdCBDb2xkIFNwZWxsIExvc2UnLFxyXG4gICAgICB0eXBlOiAnTG9zZXNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5sb3Nlc0VmZmVjdCh7IGVmZmVjdElkOiAnQUJbMzRdJyB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4gZGVsZXRlIChkYXRhLnNwZWxsID8/PSB7fSlbbWF0Y2hlcy50YXJnZXRdLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdQMVMgQ29sZCBTcGVsbCcsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnNjYyMicgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEuc3BlbGw/LlttYXRjaGVzLnRhcmdldF0gPT09ICdjb2xkJyxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHR5cGU6ICdkYW1hZ2UnLFxyXG4gICAgICAgICAgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICB0ZXh0OiBtYXRjaGVzLmFiaWxpdHksXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnUDFTIEhvdCBTcGVsbCcsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnNjYyMScgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEuc3BlbGw/LlttYXRjaGVzLnRhcmdldF0gPT09ICdob3QnLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ2RhbWFnZScsXHJcbiAgICAgICAgICBibGFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdQMVMgUGl0aWxlc3MgRmxhaWwgS25vY2tiYWNrJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICAvLyA2NjBFID0gZ3JhY2UsIDY2MEYgPSBwdXJnYXRpb25cclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiBbJzY2MEUnLCAnNjYwRiddIH0pLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnUHVzaGVkIGludG8gd2FsbCcsXHJcbiAgICAgICAgICAgIGRlOiAnUsO8Y2tzdG/DnyBpbiBkaWUgV2FuZCcsXHJcbiAgICAgICAgICAgIGZyOiAnUG91c3PDqShlKSBkYW5zIGxlIG11cicsXHJcbiAgICAgICAgICAgIGphOiAn5aOB44G444OO44OD44Kv44OQ44OD44KvJyxcclxuICAgICAgICAgICAgY246ICflh7vpgIDoh7PlopknLFxyXG4gICAgICAgICAgICBrbzogJ+uyveycvOuhnCDrhInrsLEnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG4vLyBUT0RPOiBEb3VibGVkIEltcGFjdCAoNjgwRSkgc2hhcmVkIHRhbmtidXN0ZXIgaGl0dGluZyBub24tdGFua3M/XHJcbi8vIFRPRE86IFByZWRhdG9yeSBTaWdodCAoNjgwQikgZG9yaXRvIHN0YWNrIGZhaWx1cmU/XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkFzcGhvZGVsb3NUaGVTZWNvbmRDaXJjbGUsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1AyTiBTcG9rZW4gQ2F0YXJhY3QgMSc6ICc2N0Y3JywgLy8gaGVhZCBhbmQgYm9keSBjbGVhdmVcclxuICAgICdQMk4gU3Bva2VuIENhdGFyYWN0IDInOiAnNjdGOCcsIC8vIGhlYWQgYW5kIGJvZHkgY2xlYXZlXHJcbiAgICAnUDJOIFNwb2tlbiBDYXRhcmFjdCAzJzogJzY3RjknLCAvLyBoZWFkIGFuZCBib2R5IGNsZWF2ZVxyXG4gICAgJ1AyTiBTcG9rZW4gQ2F0YXJhY3QgNCc6ICc2N0ZEJywgLy8gaGVhZCBhbmQgYm9keSBjbGVhdmVcclxuICAgICdQMk4gRGlzc29jaWF0aW9uJzogJzY4MDYnLCAvLyBoZWFkIGNoYXJnZVxyXG4gICAgJ1AyTiBTZXdhZ2UgRXJ1cHRpb24nOiAnNjgwRCcsIC8vIGNoYXNpbmcgdGFyZ2V0ZWQgdGVsZWdyYXBoZWQgY2lyY2xlc1xyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RXYXJuOiB7XHJcbiAgICAnUDJOIERyb3BzeSc6ICdCNjknLCAvLyBzdGFuZGluZyBpbiBzbHVkZ2VcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1AyTiBUYWludGVkIEZsb29kJzogJzY4MDknLCAvLyBzcHJlYWQgbWFya2Vyc1xyXG4gIH0sXHJcbiAgc29sb1dhcm46IHtcclxuICAgICdQMk4gQ29oZXJlbmNlJzogJzY4MDInLCAvLyBzdGFjayBsaW5lXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG4vLyBOb3RlOiBzb21lIHBlb3BsZSBkbyBzaGFyZSB0aGUgS2FtcGVvcyBIYXJtYSAobGltaXQgY3V0KSAjMSBhbmQgIzQgdHJpYW5nbGUgZG90c1xyXG4vLyAgICAgICBmb3IgdXB0aW1lIGJ1dCB0aGlzIGlzIGlmZnkgdG8gZG8gdGltaW5nLXdpc2UgYW5kIHNlZW1zIHVubGlrZWx5IHRvIGJlXHJcbi8vICAgICAgIHRoZSBzb3J0IG9mIGNvbW1vbiBzdHJhdGVneSB0aGF0IFwic3RhY2sgbWlkZGxlIGZvciBwMSBIYWRlc0V4IGNpcmNsZXNcIiB3YXMuXHJcbi8vICAgICAgIFRoZXkgY2FuIHR1cm4gdGhpcyBvZmYgaW4gdGhlIGNhY3Rib3QgY29uZmlnIHVpIGlmIG5lZWRlZC5cclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuQXNwaG9kZWxvc1RoZVNlY29uZENpcmNsZVNhdmFnZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnUDJTIFNwb2tlbiBDYXRhcmFjdCAxJzogJzY4MTEnLCAvLyBmb3J3YXJkIGhlYWQgYW5kIGJvZHkgY2xlYXZlXHJcbiAgICAnUDJTIFNwb2tlbiBDYXRhcmFjdCAyJzogJzY4MTInLCAvLyBmb3J3YXJkIGhlYWQgYW5kIGJvZHkgY2xlYXZlXHJcbiAgICAnUDJTIFNwb2tlbiBDYXRhcmFjdCAzJzogJzY4MTMnLCAvLyBmb3J3YXJkIGhlYWQgYW5kIGJvZHkgY2xlYXZlXHJcbiAgICAnUDJTIFNwb2tlbiBDYXRhcmFjdCA0JzogJzY4MTcnLCAvLyBmb3J3YXJkIGhlYWQgYW5kIGJvZHkgY2xlYXZlXHJcbiAgICAnUDJTIFdpbmdlZCBDYXRhcmFjdCAxJzogJzY4MTQnLCAvLyBiYWNrd2FyZHMgaGVhZCBhbmQgYm9keSBjbGVhdmVcclxuICAgICdQMlMgV2luZ2VkIENhdGFyYWN0IDInOiAnNjgxNScsIC8vIGJhY2t3YXJkcyBoZWFkIGFuZCBib2R5IGNsZWF2ZVxyXG4gICAgJ1AyUyBXaW5nZWQgQ2F0YXJhY3QgMyc6ICc2ODE2JywgLy8gYmFja3dhcmRzIGhlYWQgYW5kIGJvZHkgY2xlYXZlXHJcbiAgICAnUDJTIFdpbmdlZCBDYXRhcmFjdCA0JzogJzY4MTgnLCAvLyBiYWNrd2FyZHMgaGVhZCBhbmQgYm9keSBjbGVhdmVcclxuICAgICdQMlMgRGlzc29jaWF0aW9uJzogJzY4MkUnLCAvLyBoZWFkIGNoYXJnZVxyXG4gICAgJ1AyUyBTZXdhZ2UgRXJ1cHRpb24nOiAnNjgzMScsIC8vIGNoYXNpbmcgdGFyZ2V0ZWQgdGVsZWdyYXBoZWQgY2lyY2xlc1xyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ1AyUyBEZWFkbHkgQ3VycmVudCc6ICc2ODI5JywgLy8gcHJlZGF0b3J5IGF2YXJpY2Uga25vY2tiYWNrIGV4cGxvc2lvblxyXG4gICAgJ1AyUyBHcmVhdGVyIFR5cGhvb24nOiAnNjgxRicsIC8vIGJlaW5nIGhpdCBieSBhbiBhcnJvdywgb3Igbm90IGhpdHRpbmcgYSBwYXJ0bmVyIHdpdGggeW91ciBhcnJvd1xyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RXYXJuOiB7XHJcbiAgICAvLyBUT0RPOiBCODYgaXMgYWxzbyBkcm9wc3ksIGJ1dCBtYXliZSBzdGFuZGluZyBpbiBkcm9wc3kgZm9yIGxvbmdlcj8gb3IgdGhlIGVkZ2U/XHJcbiAgICAnUDJTIERyb3BzeSc6ICdCNjknLCAvLyBzdGFuZGluZyBpbiBzbHVkZ2VcclxuICAgICdQMlMgU3VzdGFpbmVkIERhbWFnZSc6ICdCNzcnLCAvLyBiZWluZyBoaXQgYnkgYW4gYXJyb3cgY2hhcmdlIChub3QgeW91cnMpXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdQMlMgVGFpbnRlZCBGbG9vZCc6ICc2ODM4JywgLy8gc3ByZWFkIG1hcmtlcnMgKGJvdGggdGhlIDQgcGVvcGxlIGF0IG9uY2UgYW5kIDggcGVvcGxlIGF0IG9uY2UpXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdQMlMgS2FtcGVvcyBIYXJtYSBTcXVhcmUnOiAnNjgyNCcsIC8vIHNxdWFyZSBkYXNoZXMgIzEtNFxyXG4gICAgJ1AyUyBLYW1wZW9zIEhhcm1hIFRyaWFuZ2xlIDEnOiAnNjgyNScsIC8vIHRyaWFuZ2xlIGNpcmNsZSBhb2VzICMxLTNcclxuICAgICdQMlMgS2FtcGVvcyBIYXJtYSBUcmlhbmdsZSAyJzogJzY4MjYnLCAvLyB0cmlhbmdsZSBjaXJjbGUgYW9lcyAjNFxyXG4gIH0sXHJcbiAgc29sb1dhcm46IHtcclxuICAgICdQMlMgT21pbm91cyBCdWJibGluZyc6ICc2ODJCJywgLy8gaGVhbGVyIHN0YWNrcyBhZnRlciBzaG9ja3dhdmVcclxuICAgICdQMlMgQ29oZXJlbmNlIExpbmUnOiAnNjgxQScsIC8vIHN0YWNrIGxpbmVcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnUDJTIFNob2Nrd2F2ZScsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnNjgyRicgfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdQdXNoZWQgaW50byB3YWxsJyxcclxuICAgICAgICAgICAgZGU6ICdSw7xja3N0b8OfIGluIGRpZSBXYW5kJyxcclxuICAgICAgICAgICAgZnI6ICdQb3Vzc8OpKGUpIGRhbnMgbGUgbXVyJyxcclxuICAgICAgICAgICAgamE6ICflo4Hjgbjjg47jg4Pjgq/jg5Djg4Pjgq8nLFxyXG4gICAgICAgICAgICBjbjogJ+WHu+mAgOiHs+WimScsXHJcbiAgICAgICAgICAgIGtvOiAn67K97Jy866GcIOuEieuwsScsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuLy8gTm90ZTogaWdub3JpbmcgQnJpZ2h0ZW5lZCBGaXJlICg2RURDKSB0aGF0IGhpdCB0aGUgRGFya2VuZWQgRmlyZSxcclxuLy8gc2luY2Ugb2Z0ZW4gZXZlcnlib2R5IGdldHMgaGl0IGJ5IDAtMS5cclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuQXNwaG9kZWxvc1RoZVRoaXJkQ2lyY2xlLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdQM04gRmlyZXBsdW1lIE91dCc6ICc2Njk3JywgLy8gZ2V0IG91dCBFeHBlcmltZW50YWwgRmlyZXBsdW1lIHNob3J0IHRlbGVncmFwaFxyXG4gICAgJ1AzTiBGaXJlcGx1bWUgQ2lyY2xlcyc6ICc2Njk5JywgLy8gb3B0aWNhbCBzaWdodCBFeHBlcmltZW50YWwgRmlyZXBsdW1lIGNpcmNsZXNcclxuICAgICdQM04gTGVmdCBDaW5kZXJ3aW5nJzogJzY2QjUnLCAvLyBsZWZ0IDE4MCBjbGVhdmVcclxuICAgICdQM04gUmlnaHQgQ2luZGVyd2luZyc6ICc2NkI0JywgLy8gcmlnaHQgMTgwIGNsZWF2ZVxyXG4gICAgJ1AzTiBUcmFpbCBvZiBDb25kZW1uYXRpb24nOiAnNjZBRicsIC8vIGFyZW5hIGNoYXJnZVxyXG4gICAgJ1AzTiBTdW5iaXJkIEZvcmUgQ2FydmUnOiAnNjZBNycsIC8vIGZyb250IDE4MCBhZGQgY2xlYXZlXHJcbiAgICAnUDNOIFN1bmJpcmQgUmVhciBDYXJ2ZSc6ICc2NkEqJywgLy8gYmFjayAxODAgYWRkIGNsZWF2ZVxyXG4gICAgJ1AzTiBTcGFya2ZsZWRnZWQgQXNoZW4gRXllJzogJzY2QUInLCAvLyA0eCBjYXJkaW5hbCBjb25hbCBjbGVhdmVzXHJcbiAgICAnUDNOIFNwYXJrZmxlZGdlZCBEZXZvdXJpbmcgQnJhbmQgMSc6ICc2NjlGJywgLy8gZmlyZSBjcm9zc1xyXG4gICAgJ1AzTiBTcGFya2ZsZWRnZWQgRGV2b3VyaW5nIEJyYW5kIDInOiAnNjZBMCcsIC8vIGZpcmUgY3Jvc3NcclxuICAgICdQM04gU3BhcmtmbGVkZ2VkIERldm91cmluZyBCcmFuZCAzJzogJzY2QTEnLCAvLyBmaXJlIGNyb3NzXHJcbiAgICAnUDNOIFNwYXJrZmxlZGdlZCBEZXZvdXJpbmcgQnJhbmQgNCc6ICc2RDgyJywgLy8gZmlyZSBjcm9zc1xyXG4gICAgJ1AzTiBTZWFyaW5nIEJyZWV6ZSc6ICc2NkI3JywgLy8gY2lyY2xlcyBkdXJpbmcgRGV2b3VyaW5nIEJyYW5kIGZpcmUgY3Jvc3NcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdQM04gRGFya2VuZWQgQmxhemUnOiAnNkVEQicsIC8vIG5vdCBraWxsaW5nIERhcmtlbmVkIEZpcmVcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1AzTiBDaGFycGx1bWUnOiAnNjY5RCcsIC8vIEV4cGVyaW1lbnRhbCBGaXJlcGx1bWUgc3ByZWFkIG1hcmtlcnNcclxuICAgICdQM04gRmxhcmUgb2YgQ29uZGVtbmF0aW9uJzogJzY2QjAnLCAvLyBzcHJlYWQgbWFya2VycyBhZnRlciBBc2hlbiBFeWVcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ1AzTiBIZWF0IG9mIENvbmRlbW5hdGlvbic6ICc2NkIzJywgLy8gMnggdGFua2J1c3RlciBjbGVhdmVzXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ1AzTiBCaXJkIFRldGhlcicsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgLy8gSWYgdGhlIGJpcmRzIGhpdCBlYWNoIG90aGVyIHdpdGggSm9pbnQgUHlyZSwgaXQncyBhIG1pc3Rha2UuXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzY2QTUnLCBzb3VyY2U6ICdTcGFya2ZsZWRnZWQnLCB0YXJnZXQ6ICdTcGFya2ZsZWRnZWQnIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ2ZhaWwnLFxyXG4gICAgICAgICAgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnU3BhcmtmbGVkZ2VkIHRldGhlcmVkJyxcclxuICAgICAgICAgICAgZGU6ICdTYWF0IGRlcyBQaG9pbml4IHZlcmJ1bmRlbicsXHJcbiAgICAgICAgICAgIGZyOiAnT2lzZWxldCBkZSBmZXUgbGnDqScsXHJcbiAgICAgICAgICAgIGNuOiAn54Gr54G16bif6L+e57q/JyxcclxuICAgICAgICAgICAga286ICftmZTroLnsobAg7ISgIOyXsOqysOuQqCcsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbi8vIFRPRE86IGZhaWxpbmcgbGlmZSdzIGFnb25pZXNcclxuLy8gVE9ETzogbWlzc2luZyBhIHRpY2sgb2YgYSBmb3VudGFpblxyXG4vLyBUT0RPOiB0cmFja2luZyB3aG9zZSBiaXJkIGhpdCB5b3U/XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkFzcGhvZGVsb3NUaGVUaGlyZENpcmNsZVNhdmFnZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnUDNTIEZpcmVwbHVtZSBPdXQnOiAnNjZCRicsIC8vIGdldCBvdXQgRXhwZXJpbWVudGFsIEZpcmVwbHVtZSBzaG9ydCB0ZWxlZ3JhcGhcclxuICAgICdQM1MgRmlyZXBsdW1lIENpcmNsZXMnOiAnNjZDMScsIC8vIG9wdGljYWwgc2lnaHQgRXhwZXJpbWVudGFsIEZpcmVwbHVtZSBjaXJjbGVzXHJcbiAgICAnUDNTIExlZnQgQ2luZGVyd2luZyc6ICc2NzAzJywgLy8gbGVmdCAxODAgY2xlYXZlXHJcbiAgICAnUDNTIFJpZ2h0IENpbmRlcndpbmcnOiAnNjcwMicsIC8vIHJpZ2h0IDE4MCBjbGVhdmVcclxuXHJcbiAgICAnUDNTIERldm91cmluZyBCcmFuZCAxJzogJzY2Q0UnLCAvLyBmaXJlIGNyb3NzXHJcbiAgICAnUDNTIERldm91cmluZyBCcmFuZCAyJzogJzY2Q0YnLCAvLyBmaXJlIGNyb3NzXHJcbiAgICAnUDNTIERldm91cmluZyBCcmFuZCAzJzogJzY2RDAnLCAvLyBmaXJlIGNyb3NzXHJcbiAgICAnUDNTIERldm91cmluZyBCcmFuZCA0JzogJzY2RDEnLCAvLyBmaXJlIGNyb3NzXHJcbiAgICAnUDNTIERldm91cmluZyBCcmFuZCA1JzogJzZEODMnLCAvLyBmaXJlIGNyb3NzXHJcbiAgICAnUDNTIFNlYXJpbmcgQnJlZXplIDEnOiAnNjZCNycsIC8vIGNpcmNsZXMgZHVyaW5nIERldm91cmluZyBCcmFuZCBmaXJlIGNyb3NzXHJcbiAgICAnUDNTIFNlYXJpbmcgQnJlZXplIDInOiAnNjcwNScsIC8vIGNpcmNsZXMgZHVyaW5nIEZpcmVzdG9ybXNcclxuXHJcbiAgICAnUDNTIEdsb3J5cGx1bWUgUm90YXRpbmcnOiAnNjZDQicsIC8vIEV4cGVyaW1lbnRhbCBHbG9yeXBsbHVtZSByb3RhdGluZyBjaXJjbGVzXHJcbiAgICAnUDNTIEdsb3J5cGx1bWUgTWlkZGxlJzogJzY2QzcnLCAvLyBFeHBlcmltZW50YWwgR2xvcnlwbHVtZSBtaWRkbGVcclxuXHJcbiAgICAnUDNTIFNwYXJrZmxlZGdlZCBBc2hlbiBFeWUnOiAnNjZFNicsIC8vIGluaXRpYWwgRmxlZGdsaW5nIEZsaWdodCBkb2RnZVxyXG4gICAgJ1AzUyBGbGFtZXMgb2YgQXNwaG9kZWxvcyAxJzogJzY2RjInLCAvLyBwaXp6YSBzbGljZSAxXHJcbiAgICAnUDNTIEZsYW1lcyBvZiBBc3Bob2RlbG9zIDInOiAnNjZGMycsIC8vIHBpenphIHNsaWNlIDJcclxuICAgICdQM1MgRmxhbWVzIG9mIEFzcGhvZGVsb3MgMyc6ICc2NkY0JywgLy8gcGl6emEgc2xpY2UgM1xyXG4gICAgJ1AzUyBCdXJuaW5nIFR3aXN0ZXInOiAnNjZGQScsIC8vIGRvbnV0IGFyb3VuZCB0b3JuYWRvXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnUDNTIERhcmtlbmVkIEJsYXplJzogJzY2QkEnLCAvLyBmYWlsaW5nIHRvIGtpbGwgdGhlIERhcmtlbmVkIEZpcmUgaW4gdGltZVxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnUDNTIEZsYXJlIG9mIENvbmRlbW5hdGlvbic6ICc2NkZFJywgLy8gc2lkZXMgc3ByZWFkIGR1cmluZyBUcmFpbCBvZiBDb25kZW1uYXRpb25cclxuICAgICdQM1MgR2xvcnlwbHVtZSBTcHJlYWQnOiAnNjZDOScsIC8vIHNwcmVhZCBkdXJpbmcgRXhwZXJpbWVudGFsIEdsb3J5cGx1bWVcclxuICAgICdQM1MgQXNocGx1bWUgU3ByZWFkJzogJzY2QzUnLCAvLyBzcHJlYWQgZHVyaW5nIEV4cGVyaW1lbnRhbCBBc2hwbHVtZVxyXG4gICAgJ1AzUyBCZWFjb25zIG9mIEFzcGhvZGVsb3MnOiAnNjZGNycsIC8vIHRhbmtidXN0ZXIgZHVyaW5nIEZpcmVzdG9ybXNcclxuICAgICdQM1MgU3VuXFwncyBQaW5pb24nOiAnNjZFQicsIC8vIHNwcmVhZCBtYXJrZXIgZHVyaW5nIEZvdW50YWluIG9mIEZpcmVcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ1AzUyBIZWF0IG9mIENvbmRlbW5hdGlvbic6ICc2NzAxJywgLy8gZG91YmxlIHRhbmsgYnVzdGVyXHJcbiAgfSxcclxuICBzb2xvV2Fybjoge1xyXG4gICAgJ1AzUyBHbG9yeXBsdW1lIFN0YWNrJzogJzY2Q0QnLCAvLyBzdGFjayBkdXJpbmcgRXhwZXJpbWVudGFsIEdsb3J5cGx1bWVcclxuICAgICdQM1MgQXNocGx1bWUgU3RhY2snOiAnNjZDMycsIC8vIHN0YWNrIGR1cmluZyBFeHBlcmltZW50YWwgQXNocGx1bWVcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbi8vIFRPRE86IHRocmVlIHN0YWNrcyBvZiBUaHJpY2UtY29tZSBSdWluICg5RTIpIGZyb20gb3Jic1xyXG4vLyAgICAgICBzaG91bGQgdGhpcyBnaXZlIERvb20/IGl0IGFwcGVhcnMgbWF5YmUgaXQncyBqdXN0IGluc3RhbnQgZGVhdGg/XHJcbi8vIFRPRE86IG5vdCBoYXZpbmcgeW91ciBvcmIgcG9wcGVkP1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5Bc3Bob2RlbG9zVGhlRm91cnRoQ2lyY2xlLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdQNE4gSGVsbCBTa2V3ZXInOiAnNkE0RicsIC8vIHRhcmdldGVkIGxpbmUgYW9lIHdpdGggc2hvcnQgdGVsZWdyYXBoXHJcbiAgICAnUDROIFNoaWZ0aW5nIFN0cmlrZSc6ICc2QTRFJywgLy8gZGFzaCB0byB3YWxsIGFuZCB+MTcwIGNsZWF2ZVxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnUDROIEFjaWQgTWVraGFuZSc6ICc2QTM4JywgLy8gZ3JlZW4gQWNpZCBQaW5heCBzcHJlYWRcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ1A0TiBFbGVnYW50IEV2aXNjZXJhdGlvbic6ICc2QTUwJywgLy8gY2lyY3VsYXIgdGFua2J1c3RlciBjbGVhdmVcclxuICB9LFxyXG4gIHNvbG9GYWlsOiB7XHJcbiAgICAnUDROIExhdmEgTWVraGFuZSc6ICc2QTM5JywgLy8gcmVkIExhdmEgc3RhY2tcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnUDROIFRvd2VyIEJ1cnN0IE5vIFRhbmsnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzZBNDQnIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiBkYXRhLnBhcnR5LmlzVGFuayhtYXRjaGVzLnRhcmdldCksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICB0eXBlOiAnZmFpbCcsXHJcbiAgICAgICAgICBibGFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdUYW5rIFRvd2VyJyxcclxuICAgICAgICAgICAgZGU6ICdUYW5rLVR1cm0nLFxyXG4gICAgICAgICAgICBmcjogJ1RvdXIgVGFuaycsXHJcbiAgICAgICAgICAgIGNuOiAn5Z2m5YWL5aGUJyxcclxuICAgICAgICAgICAga286ICftg7Hsu6Qg7J6l7YyQJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnUDROIFRvd2VyIEJ1cnN0IE5vIEhlYWxlcicsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnNkE0NScgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEucGFydHkuaXNIZWFsZXIobWF0Y2hlcy50YXJnZXQpLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ2ZhaWwnLFxyXG4gICAgICAgICAgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnSGVhbGVyIFRvd2VyJyxcclxuICAgICAgICAgICAgZGU6ICdIZWlsZXItVHVybScsXHJcbiAgICAgICAgICAgIGZyOiAnVG91ciBIZWFsZXInLFxyXG4gICAgICAgICAgICBjbjogJ+ayu+eWl+WhlCcsXHJcbiAgICAgICAgICAgIGtvOiAn7Z6Q65+sIOyepe2MkCcsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ1A0TiBUb3dlciBCdXJzdCBObyBEUFMnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzZBNDYnIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiBkYXRhLnBhcnR5LmlzRFBTKG1hdGNoZXMudGFyZ2V0KSxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHR5cGU6ICdmYWlsJyxcclxuICAgICAgICAgIGJsYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ0RQUyBUb3dlcicsXHJcbiAgICAgICAgICAgIGRlOiAnREQtVHVybScsXHJcbiAgICAgICAgICAgIGZyOiAnVG91ciBEUFMnLFxyXG4gICAgICAgICAgICBjbjogJ0RQU+WhlCcsXHJcbiAgICAgICAgICAgIGtvOiAn65Sc65+sIOyepe2MkCcsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ1A0TiBFeHBsb3NpdmUgQWV0aGVyIEJ1cnN0IE5vIFRhbmsnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzZBNDEnIH0pLFxyXG4gICAgICBjb25kaXRpb246IChkYXRhLCBtYXRjaGVzKSA9PiBkYXRhLnBhcnR5LmlzVGFuayhtYXRjaGVzLnRhcmdldCksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICB0eXBlOiAnZmFpbCcsXHJcbiAgICAgICAgICBibGFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdUYW5rIE9yYicsXHJcbiAgICAgICAgICAgIGRlOiAnVGFuay1PcmInLFxyXG4gICAgICAgICAgICBmcjogJ09yYmUgVGFuaycsXHJcbiAgICAgICAgICAgIGNuOiAn5Z2m5YWL55CDJyxcclxuICAgICAgICAgICAga286ICftg7Hsu6Qg6rWs7IqsJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnUDROIEV4cGxvc2l2ZSBBZXRoZXIgQnVyc3QgTm8gSGVhbGVyJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICc2QTQyJyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gZGF0YS5wYXJ0eS5pc0hlYWxlcihtYXRjaGVzLnRhcmdldCksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICB0eXBlOiAnZmFpbCcsXHJcbiAgICAgICAgICBibGFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdIZWFsZXIgT3JiJyxcclxuICAgICAgICAgICAgZGU6ICdIZWlsZXItT3JiJyxcclxuICAgICAgICAgICAgZnI6ICdPcmJlIEhlYWxlcicsXHJcbiAgICAgICAgICAgIGNuOiAn5rK755aX55CDJyxcclxuICAgICAgICAgICAga286ICftnpDrn6wg6rWs7IqsJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnUDROIEV4cGxvc2l2ZSBBZXRoZXIgQnVyc3QgTm8gRFBTJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICc2QTQzJyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gZGF0YS5wYXJ0eS5pc0RQUyhtYXRjaGVzLnRhcmdldCksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICB0eXBlOiAnZmFpbCcsXHJcbiAgICAgICAgICBibGFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICByZXBvcnRJZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdEUFMgT3JiJyxcclxuICAgICAgICAgICAgZGU6ICdERC1PcmInLFxyXG4gICAgICAgICAgICBmcjogJ09yYmUgRFBTJyxcclxuICAgICAgICAgICAgY246ICdEUFPnkIMnLFxyXG4gICAgICAgICAgICBrbzogJ+uUnOufrCDqtazsiqwnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdQNE4gS25vY2tiYWNrJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICAvLyA2QTNBID0gV2VsbCBNZWtoYW5lXHJcbiAgICAgIC8vIDZEQUUgPSBOb3J0aGVybHkgU2hpZnQgKGtub2NrYmFjaylcclxuICAgICAgLy8gNkRBRiA9IFNvdXRoZXJseSBTaGlmdCAoa25vY2tiYWNrKVxyXG4gICAgICAvLyA2REIwID0gRWFzdGVybHkgU2hpZnQgKGtub2NrYmFjaylcclxuICAgICAgLy8gNkRCMSA9IFdlc3Rlcmx5IFNoaWZ0IChrbm9ja2JhY2spXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogWyc2QTNBJywgJzZEQUUnLCAnNkRBRicsICc2REIwJywgJzZEQjEnXSB9KSxcclxuICAgICAgZGVhdGhSZWFzb246IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ1B1c2hlZCBpbnRvIHdhbGwnLFxyXG4gICAgICAgICAgICBkZTogJ1LDvGNrc3Rvw58gaW4gZGllIFdhbmQnLFxyXG4gICAgICAgICAgICBmcjogJ1BvdXNzw6koZSkgZGFucyBsZSBtdXInLFxyXG4gICAgICAgICAgICBqYTogJ+WjgeOBuOODjuODg+OCr+ODkOODg+OCrycsXHJcbiAgICAgICAgICAgIGNuOiAn5Ye76YCA6Iez5aKZJyxcclxuICAgICAgICAgICAga286ICfrsr3snLzroZwg64SJ67CxJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG4vLyBUT0RPOiBDdXJzZWQgQ2FzdGluZyAocG94KSB3aGVuIHlvdSBzaG91bGRuJ3QgKGl0IGhpdHMgYnV0IGRvZXMgbm8gZGFtYWdlIGlmIGNvcnJlY3QpXHJcbi8vIFRPRE86IFZlbmdlZnVsIEJlbG9uZSAob3JicykgaW5jb3JyZWN0IGRlYnVmZlxyXG4vLyBUT0RPOiBEaXJlY3RvcidzIEJlbG9uZSAodG93ZXJzKSBtaXNzZWQgdG93ZXIgLyBpbmNvcnJlY3QgdG93ZXI/XHJcbi8vIFRPRE86IEhlbWl0aGVvcydzIEZpcmUgSUlJICg2QTE4KSBjYW4gYmUgc29sbydkIGluIHNvbWUgQWN0IDIgdXB0aW1lIHN0cmF0cywgbm90IGEgbWlzdGFrZT9cclxuLy8gVE9ETzogQWN0IDIgcHVycGxlIHRldGhlciBub3QgYnJlYWtpbmcgc29vbiBlbm91Z2hcclxuLy8gVE9ETzogQWN0IDIgYWVybyB0ZXRoZXIgYnJlYWtpbmcgdG9vIHNvb25cclxuLy8gVE9ETzogdHJhY2sgd2hvIHRvb2sgYSA2QTBFIHRvd2VyIGFuZCBhZGQgYSBtaXN0YWtlIGZvciBvdGhlcnMgaWYgNkEwRiBoYXBwZW5zXHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkFzcGhvZGVsb3NUaGVGb3VydGhDaXJjbGVTYXZhZ2UsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1A0UyBBY2lkIFBpbmF4JzogJzY5RDQnLCAvLyBzdGFuZGluZyBvbiBhY2lkIHNxdWFyZVxyXG4gICAgJ1A0UyBMYXZhIFBpbmF4JzogJzY5RDUnLCAvLyBzdGFuZGluZyBvbiBmaXJlIHNxdWFyZVxyXG4gICAgJ1A0UyBXZWxsIFBpbmF4JzogJzY5RDYnLCAvLyBzdGFuZGluZyBvbiB3YXRlciBzcXVhcmVcclxuICAgICdQNFMgTGV2aW5zdHJpa2UgUGluYXgnOiAnNjlENycsIC8vIHN0YW5kaW5nIG9uIGxpZ2h0bmluZyBzcXVhcmVcclxuICAgIC8vIFRoZSBzYWZlIHNxdWFyZXMgZHVyaW5nIEVsZW1lbnRhbCBCZWxvbmUgYXJlIDY5RjUgdGhyb3VnaCA2OUY4LlxyXG4gICAgJ1A0UyBFbGVtZW50YWwgQmVsb25lIEFjaWQgUGluYXgnOiAnNjlGOScsIC8vIGFjaWQgc3F1YXJlIGR1cmluZyBFbGVtZW50YWwgQmVsb25lXHJcbiAgICAnUDRTIEVsZW1lbnRhbCBCZWxvbmUgTGF2YSBQaW5heCc6ICc2OUZBJywgLy8gZmlyZSBzcXVhcmUgZHVyaW5nIEVsZW1lbnRhbCBCZWxvbmVcclxuICAgICdQNFMgRWxlbWVudGFsIEJlbG9uZSBXZWxsIFBpbmF4JzogJzY5RkInLCAvLyB3YXRlciBzcXVhcmUgZHVyaW5nIEVsZW1lbnRhbCBCZWxvbmVcclxuICAgICdQNFMgRWxlbWVudGFsIEJlbG9uZSBMZXZpbnN0cmlrZSBQaW5heCc6ICc2OUZDJywgLy8gbGlnaHRuaW5nIHNxdWFyZSBkdXJpbmcgRWxlbWVudGFsIEJlbG9uZVxyXG4gICAgJ1A0UyBTaGlmdGluZyBTdHJpa2UnOiAnNkEwNicsIC8vIGp1bXAgdG8gY2FyZGluYWwgKyBjbGVhdmVcclxuICAgICdQNFMgRGFyayBEZXNpZ24nOiAnNkEyQScsIC8vIEFjdCAyIGJhaXRlZCBwdWRkbGVzXHJcbiAgICAnUDRTIEhlbWl0aGVvc1xcJ3MgRmlyZSBJVic6ICc2QTBEJywgLy8gQWN0IDEsIEFjdCAyLCBBY3QgNCBib3NzIHRldGhlciBmaXJlIGV4cGxvc2lvblxyXG4gICAgJ1A0UyBIZWxsXFwncyBTdGluZyAxJzogJzZBMjAnLCAvLyBjdXJ0YWluIGNhbGwgcHJvdGVhblxyXG4gICAgJ1A0UyBIZWxsXFwncyBTdGluZyAyJzogJzZBMjEnLCAvLyBjdXJ0YWluIGNhbGwgcHJvdGVhblxyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ1A0UyBIZW1pdGhlb3NcXCdzIFRodW5kZXIgSUlJJzogJzZBMEYnLCAvLyBtaXNzaW5nIGEgNkEwRSB0b3dlclxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnUDRTIEludmVyc2l2ZSBDaGxhbXlzJzogJzY5RUUnLCAvLyB0ZXRoZXJzXHJcbiAgICAnUDRTIEFjaWQgTWVraGFuZSc6ICc2OUQwJywgLy8gYWNpZCBwaW5heCBzcHJlYWRcclxuICAgICdQNFMgSGVtaXRoZW9zXFwncyBUaHVuZGVyIElJSSc6ICc2QTBFJywgLy8gQWN0IDEsIEFjdCAyLCBBY3QgMywgQWN0IDQsIEZpbmFsZSB0b3dlcnNcclxuICAgICdQNFMgSGVtaXRoZW9zXFwncyBXYXRlciBJSUknOiAnNkExNCcsIC8vIEFjdCA0IHdhdGVyIHRldGhlciBleHBsb3Npb25cclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ1A0UyBFbGVnYW50IEV2aXNjZXJhdGlvbic6ICc2QTA4JywgLy8gdGFuayBidXN0ZXJcclxuICAgICdQNFMgRmFyc2lnaHQnOiAnNkEyNycsIC8vIHRhbmsgYnVzdGVyXHJcbiAgICAnUDRTIE5lYXJzaWdodCc6ICc2QTI4JywgLy8gdGFuayBidXN0ZXJcclxuICAgIC8vIFRPRE86IGh0dHBzOi8vZ2l0aHViLmNvbS9xdWlzcXVvdXMvY2FjdGJvdC9wdWxsLzQxNjFcclxuICAgIC8vICdQNFMgS290aG9ybm9zIEtpY2snOiAnNkEyMycsIC8vIEFjdCAzIGp1bXBcclxuICAgICdQNFMgS290aG9ybm9zIFF1YWtlJzogJzZBMjQnLCAvLyBBY3QgMyBlYXJ0aHNoYWtlclxyXG4gICAgJ1A0UyBGbGVldGluZyBJbXB1bHNlJzogJzZBMUMnLCAvLyBGaW5hbGUgY291bnRlZCB2dWxuc1xyXG4gIH0sXHJcbiAgc29sb0ZhaWw6IHtcclxuICAgICdQNFMgTGF2YSBNZWtoYW5lJzogJzY5RDEnLCAvLyBsYXZhIHBpbmF4IHN0YWNrXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ1A0UyBLbm9ja2JhY2snLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIC8vIDY5RDIgPSBXZWxsIE1la2hhbmVcclxuICAgICAgLy8gNkEwMSA9IFNoaWZ0aW5nIFN0cmlrZSAoa25vY2tiYWNrKVxyXG4gICAgICAvLyA2QTEwID0gSGVtaXRoZW9zJ3MgV2F0ZXIgSVYgKEFjdCAzIGtub2NrYmFjaylcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiBbJzY5RDInLCAnNkEwMScsICc2QTEwJ10gfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdQdXNoZWQgaW50byB3YWxsJyxcclxuICAgICAgICAgICAgZGU6ICdSw7xja3N0b8OfIGluIGRpZSBXYW5kJyxcclxuICAgICAgICAgICAgZnI6ICdQb3Vzc8OpKGUpIGRhbnMgbGUgbXVyJyxcclxuICAgICAgICAgICAgamE6ICflo4Hjgbjjg47jg4Pjgq/jg5Djg4Pjgq8nLFxyXG4gICAgICAgICAgICBjbjogJ+WHu+mAgOiHs+WimScsXHJcbiAgICAgICAgICAgIGtvOiAn67K97Jy866GcIOuEieuwsScsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG4vLyBUT0RPOiBUb3VjaGVkIHBvaXNvbiB3YWxsXHJcbi8vIFRPRE86IFRvdWNoZWQgcG9pc29uIHB1ZGRsZVxyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkFieXNzb3NUaGVGaWZ0aENpcmNsZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnUDVOIFNlYXJpbmcgUmF5IDEnOiAnNjY5NycsIC8vIE5vcm1hbFxyXG4gICAgJ1A1TiBTZWFyaW5nIFJheSAyJzogJzY2OTgnLCAvLyBXaXRoIFJlZmxlY3Rpb25cclxuICAgICdQNU4gVG9wYXogU3RvbmVzJzogJzc2REUnLCAvLyBUb3BheiBTdG9uZSBBb0VcclxuICAgICdQNU4gVG9wYXogUmF5JzogJzc5RkMnLCAvLyBUb3BheiBTdG9uZSBTcXVhcmUgVGlsZVxyXG4gICAgJ1A1TiBWZW5vbSBEcm9wcyc6ICc3NkVFJywgLy8gUHVkZGxlc1xyXG4gICAgJ1A1TiBTdGFydmluZyBTdGFtcGVkZSc6ICc3OUU5JywgLy8gU3RvbXBlZFxyXG4gICAgJ1A1TiBTcGl0JzogJzc3MjcnLCAvLyBTcGl0dGluZyBEZXZvdXJlZCBQbGF5ZXJcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdQNU4gRGV2b3VyJzogJzc3MjgnLCAvLyBOb21cclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ1A1TiBWZW5vbSBSYWluJzogJzc2RUQnLCAvLyBTcHJlYWRcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG4vLyA3NzBDIFZlbm9tIGlmIHRvd2VyIG1pc3NlZFxyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5BYnlzc29zVGhlRmlmdGhDaXJjbGVTYXZhZ2UsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1A1UyBUb3BheiBSYXknOiAnNzlGRScsIC8vIGluaXRpYWwgVG9wYXogU3RvbmUgZXhwbG9zaW9uXHJcbiAgICAnUDVTIFJ1YnkgUmVmbGVjdGlvbiAxJzogJzc3MDEnLCAvLyByZWZsZWN0aW9uIG9mIFRvcGF6IFJheSAoaW5pdGlhbClcclxuICAgICdQNVMgUnVieSBSZWZsZWN0aW9uIDInOiAnNzZGOScsIC8vIHJlZmxlY3Rpb24gb2YgVG9wYXogUmF5IChhZnRlciBEb3VibGUgUnVzaClcclxuICAgICdQNVMgUmFnaW5nIENsYXcgMSc6ICc3NzBGJywgLy8gaW5pdGlhbCBmcm9udCAxODAgY2xlYXZlIChwYXJ0IG9mIENsYXcgdG8gVGFpbClcclxuICAgICdQNVMgUmFnaW5nIENsYXcgMic6ICc3NzEwJywgLy8gZnJvbnQgMTgwIGNsZWF2ZSAocGFydCBvZiBDbGF3IHRvIFRhaWwpXHJcbiAgICAnUDVTIFJhZ2luZyBDbGF3IDMnOiAnNzZGQicsIC8vIGluaXRpYWwgZnJvbnQgMTgwIGNsZWF2ZSAod2l0aCBTZWFyaW5nIFJheSlcclxuICAgICdQNVMgUmFnaW5nIENsYXcgNCc6ICc3NkZDJywgLy8gZnJvbnQgMTgwIGNsZWF2ZSAod2l0aCBTZWFyaW5nIFJheSlcclxuICAgICdQNVMgUmFnaW5nIENsYXcgNSc6ICc3NzE0JywgLy8gaW5pdGlhbCBmcm9udCAxODAgY2xlYXZlXHJcbiAgICAnUDVTIFJhZ2luZyBDbGF3IDYnOiAnNzcxNScsIC8vIGZyb250IDE4MCBjbGVhdmVcclxuICAgICdQNVMgUmFnaW5nIFRhaWwgMSc6ICc3NzExJywgLy8gcmVhciAxODAgY2xlYXZlXHJcbiAgICAnUDVTIFJhZ2luZyBUYWlsIDInOiAnN0EwQycsIC8vIHJlYXIgMTgwIGNsZWF2ZVxyXG4gICAgJ1A1UyBWZW5vbSBEcm9wcyc6ICc3NzE5JywgLy8gYmFpdGVkIHB1ZGRsZXMgZHVyaW5nIFZlbm9tIFNxdWFsbC9TdXJnZVxyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ1A1UyBTdGFydmluZyBTdGFtcGVkZSc6ICc3QTAzJywgLy8gbGFyZ2UgY2lyY2xlIGR1cmluZyBTdGFydmluZyBTdGFtcGVkZSBqdW1wc1xyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RGYWlsOiB7XHJcbiAgICAvLyBhbHNvIEQ0RiwgYnV0IHRoYXQncyBwcm9iYWJseSBpbiB0b3dlciBwdWRkbGVzXHJcbiAgICAnUDVTIFRveGljb3NpcyAxJzogJ0MwQScsIC8vIDE1cyBkZWJ1ZmYgKHBvaXNvbiBwdWRkbGUpXHJcbiAgICAnUDVTIFRveGljb3NpcyAyJzogJ0MwOScsIC8vIDk5OTkgZWZmZWN0ICh3YWxsPylcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ1A1UyBWZW5vbW91cyBNYXNzJzogJzc3MUUnLCAvLyBGaXJzdCB0YW5rYnVzdGVyXHJcbiAgICAnUDVTIFRveGljIENydW5jaCc6ICc3NzFGJywgLy8gU2Vjb25kIHRhbmtidXN0ZXJcclxuICAgICdQNVMgVmVub20gUmFpbic6ICc3NzE4JywgLy8gc3ByZWFkIGR1cmluZyBWZW5vbSBTcXVhbGwvU3VyZ2VcclxuICB9LFxyXG4gIHNvbG9GYWlsOiB7XHJcbiAgICAnUDVTIFZlbm9tIFBvb2wnOiAnNzlFMycsIC8vIHN0YWNrIGR1cmluZyBWZW5vbSBTcXVhbGwvU3VyZ2VcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkFieXNzb3NUaGVTaXh0aENpcmNsZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnUDZOIFBvbHlvbWlub3VzIERhcmsgSVYnOiAnNzg1NScsIC8vIFJhZGlhdGluZyBBb0VzIGZyb20gdG90ZW1zXHJcbiAgICAnUDZOIENob3JvcyBJeG91IEZyb250IEJhY2snOiAnNzg1OScsXHJcbiAgICAnUDZOIENob3JvcyBJeG91IFNpZGVzJzogJzc4NUEnLFxyXG4gICAgJ1A2TiBSZWVrIEhhdm9jJzogJzc5RUQnLCAvLyBQYXJhc2l0ZSBjb25hbFxyXG4gICAgJ1A2TiBQYXRob2dlbmljIENlbGxzJzogJzdBMTQnLCAvLyBGcm9udCBwb3J0aW9uIG9mIFN0cm9waGUgSXhvdSBzcGlubnkgY29uYWxcclxuICAgICdQNk4gQ2hlbGljIFZlY3Rvcic6ICc3QTE1JywgLy8gUmVhciBwb3J0aW9uIG9mIFN0cm9waGUgSXhvdSBzcGlubnkgY29uYWxcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1A2TiBEYXJrIEFzaGVzJzogJzc4NUYnLCAvLyBPcmFuZ2Ugc3ByZWFkIGNpcmNsZXNcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ1A2TiBTeW5lcmd5IDEnOiAnNzg1QycsIC8vIE9mZi10YW5rIGJ1c3RlclxyXG4gICAgJ1A2TiBTeW5lcmd5IDInOiAnNzg1RCcsIC8vIE1haW4gdGFuayBidXN0ZXIgKFNxdWFyZSwgd2h5Pz8pXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5BYnlzc29zVGhlU2l4dGhDaXJjbGVTYXZhZ2UsXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuQWJ5c3Nvc1RoZVNldmVudGhDaXJjbGUsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ1A3TiBCb3VnaCBPZiBBdHRpcyBPdXQnOiAnNzdGQScsXHJcbiAgICAnUDdOIEJvdWdoIE9mIEF0dGlzIEluJzogJzc3RkYnLFxyXG4gICAgJ1A3TiBCb3VnaCBPZiBBdHRpcyBTaWRlcyc6ICc3N0ZEJyxcclxuICAgICdQN04gSGVtaXRoZW9zIEdsYXJlIElJSSAxJzogJzc3RjgnLCAvLyBEb251dCBhdHRhY2sgYWxvbmdzaWRlIEhlbWl0aGVvcydzIEhvbHlcclxuICAgICdQN04gSGVtaXRoZW9zIEdsYXJlIElJSSAyJzogJzc5RkEnLCAvLyBEb251dCBhdHRhY2sgYWxvbmdzaWRlIHBsYXRmb3JtIHJlZ2VuZXJhdGlvblxyXG4gICAgJ1A3TiBTdGF0aWMgTW9vbic6ICc3ODAyJywgLy8gQmVoZW1vdGhzJyBjaGFyaW90IGF0dGFja1xyXG4gICAgJ1A3TiBTdHltcGhhbGlhbiBTdHJpa2UnOiAnNzgwMycsIC8vIEJpcmRzJyBsaW5lIGF0dGFja1xyXG4gICAgJ1A3TiBCaWcgQnVyc3QnOiAnNzgzRScsIC8vIE1pc3NlZCB0b3dlclxyXG4gICAgJ1A3TiBCbGFkZXMgT2YgQXR0aXMgU3RhdGlvbmFyeSc6ICc3ODA1JywgLy8gRXhhZmxhcmUgaW5pdGlhbCBoaXRcclxuICAgICdQN04gQmxhZGVzIE9mIEF0dGlzIEV4YWZsYXJlcyc6ICc3ODA2JyxcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1A3TiBIZW1pdGhlb3MgSG9seSc6ICc3ODA4JywgLy8gUHVycGxlIHNwcmVhZCBjaXJjbGVzXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdQN04gSGVtaXRoZW9zIEFlcm8gSUknOiAnNzgwQScsIC8vIFRhbmsgY2xlYXZlXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbi8vIFRPRE86IG1hbnkgdGhpbmdzIHN0aWxsIG1pc3NpbmcgaGVyZVxyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkFieXNzb3NUaGVTZXZlbnRoQ2lyY2xlU2F2YWdlLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdQN1MgQm91Z2ggb2YgQXR0aXMgQ2xvc2UnOiAnNzgyMicsIC8vIGxlZnQvcmlnaHQgYXJyb3cgKGZyb20gNzgyMSBjYXN0KVxyXG4gICAgJ1A3UyBCb3VnaCBvZiBBdHRpcyBBcnJvdyc6ICc3ODI1JywgLy8gYm91Z2ggaGl0IHNvdXRoIChmcm9tIDc4MjMgY2FzdClcclxuICAgICdQN1MgQm91Z2ggb2YgQXR0aXMgRmFyJzogJzc4MjcnLCAvLyBib3VnaHQgaGl0IG5vcnRoIChmcm9tIDc4MjYgY2FzdClcclxuICAgICdQN1MgQnVsbGlzaCBTd2lwZSc6ICc3ODE5JywgLy8gYmFpdGVkIE1pbm90YXVyIGNsZWF2ZXMgKGZyb20gNzgxOCBjYXN0KVxyXG4gICAgJ1A3UyBIZW1pdGhlb3NcXCdzIEdsYXJlJzogJzc4MkEnLCAvLyBjaGFzaW5nIGFvZVxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnUDdTIFN0YXRpYyBQYXRoJzogJzc4MTQnLCAvLyBJbW1hdHVyZSBJbyB0ZXRoZXIgbGluZSBhb2VcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ1A3UyBEaXNwZXJzZWQgQWVybyBJSSc6ICc3ODM3JywgLy8gc3ByZWFkIHRhbmtidXN0ZXJcclxuICB9LFxyXG4gIHNvbG9XYXJuOiB7XHJcbiAgICAnUDdTIENvbmRlbnNlZCBBZXJvIElJJzogJzc4MzgnLCAvLyBzaGFyZWQgdGFua2J1c3RlclxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuQWJ5c3Nvc1RoZUVpZ2h0aENpcmNsZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnUDhOIFNjb3JjaGluZyBGYW5nJzogJzc4RUUnLCAvLyBsaW5lIGFvZSBkb3duIHRoZSBtaWRkbGVcclxuICAgICdQOE4gU3VuXFwncyBQaW5pb24nOiAnNzhFRicsIC8vIGxpbmUgYW9lcyBkb3duIHRoZSBzaWRlc1xyXG4gICAgJ1A4TiBHb3Jnb3NwaXQnOiAnNzhGRicsIC8vIGxhcmdlIGxpbmUgYW9lXHJcbiAgICAnUDhOIFN1bmVhdGVyIEN0aG9uaWMgVmVudCAxJzogJzc4RjUnLCAvLyBjaXJjdWxhciBleHBsb3Npb24gZnJvbSBpbnRlcmNhcmQgdm9sY2Fub3NcclxuICAgICdQOE4gU3VuZWF0ZXIgQ3Rob25pYyBWZW50IDInOiAnNzhGNicsIC8vIGNpcmN1bGFyIGV4cGxvc2lvbiBmcm9tIGludGVyY2FyZCB2b2xjYW5vc1xyXG4gICAgJ1A4TiBTdW5lYXRlciBDdGhvbmljIFZlbnQgMyc6ICc3OTREJywgLy8gY2lyY3VsYXIgZXhwbG9zaW9uIGZyb20gaW50ZXJjYXJkIHZvbGNhbm9zXHJcbiAgICAnUDhOIFF1YWRydXBlZGFsIENydXNoJzogJzc5MDQnLCAvLyBqdW1wIHRvIHRoZSB3YWxsIGJlZm9yZSBrbm9ja2JhY2sgKD8/KVxyXG4gICAgJ1A4TiBUb3JjaCBGbGFtZSc6ICc3OEY4JywgLy8gYmVpbmcgaGl0IGJ5IGJsdWUgb3V0bGluZWQgc3F1YXJlcyBmcm9tIFZvbGNhbmljIFRvcmNoZXNcclxuICAgICdQOE4gSWxsdXNvcnkgSGVwaGFpc3RvcyBHb3Jnb3NwaXQnOiAnNkZENycsIC8vIHNxdWFyZSBvdXRsaW5lIGxpbmUgYW9lcyBhZnRlciBJbnRvIHRoZSBTaGFkb3dzXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnUDhOIEdvcmdvbiBHb3Jnb25laW9uJzogJzc4RkQnLCAvLyBmYWlsaW5nIHRvIGtpbGwgR29yZ29uIGFkZHMgaW4gdGltZVxyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RXYXJuOiB7XHJcbiAgICAnUDhOIFBldHJpZmljYXRpb24nOiAnQkJGJywgLy8gZmFpbGluZyA2MjczIFBldHJpZmFjdGlvbiBsb29rYXdheVxyXG4gICAgJ1A4TiBCdXJucyc6ICdCRkEnLCAvLyBiZWluZyBrbm9ja2VkIGJhY2sgaW50byB0aGUgZmlyZSB3YWxsLCBCRjkgPSA5OTk5IGR1cmF0aW9uIHN0YXR1c1xyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnUDhOIEhlbWl0aGVvc1xcJ3MgRmxhcmUnOiAnNzkwNycsIC8vIHNwcmVhZCBtYXJrZXJzXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5BYnlzc29zVGhlRWlnaHRoQ2lyY2xlU2F2YWdlLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gTm90ZTogaWdub3JpbmcgVm9pZHN0cm9tIDc1QkQsIHRoZSAzayBkYW1hZ2UgKGJ1dCBhdm9pZGFibGUpIGRhbWFnZSBmcm9tIHN0YW5kaW5nIHVuZGVyIGJvc3MuXHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuU3Rvcm1zQ3Jvd24sXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0JhcmJhcmljY2lhIFNhdmFnZSBCYXJiZXJ5IERvbnV0JzogJzc1QkEnLCAvLyBkb251dCBhb2VcclxuICAgICdCYXJiYXJpY2NpYSBTYXZhZ2UgQmFyYmVyeSBMaW5lJzogJzc1QzAnLCAvLyBsaW5lIGFvZSB0aHJvdWdoIGhpdGJveFxyXG4gICAgJ0JhcmJhcmljY2lhIFNhdmFnZSBCYXJiZXJ5IE91dCAxJzogJzc1QkInLCAvLyBzd29yZCBleHBsb3Npb24gKGFmdGVyIGRvbnV0KVxyXG4gICAgJ0JhcmJhcmljY2lhIFNhdmFnZSBCYXJiZXJ5IE91dCAyJzogJzc1QzEnLCAvLyBzd29yZCBleHBsb3Npb24gKGFmdGVyIGxpbmUpXHJcbiAgICAnQmFyYmFyaWNjaWEgSGFpciBSYWlkIFdhbGwnOiAnNzVDMicsIC8vIH4xNjAgZGVncmVlIGNsZWF2ZSBmcm9tIHdhbGwgYXQgc3dvcmRcclxuICAgICdCYXJiYXJpY2NpYSBUYW5nbGUnOiAnNzVFMCcsIC8vIGdyb3VuZCBjaXJjbGVzIGJlZm9yZSBmZXR0ZXJzXHJcbiAgICAnQmFyYmFyaWNjaWEgU2VjcmV0IEJyZWV6ZSAxJzogJzc1QzQnLCAvLyBncm91bmQgY29uYWxcclxuICAgICdCYXJiYXJpY2NpYSBTZWNyZXQgQnJlZXplIDInOiAnNzVDNScsIC8vIGdyb3VuZCBjb25hbFxyXG4gICAgJ0JhcmJhcmljY2lhIEJydXRhbCBHdXN0JzogJzc1QzgnLCAvLyBsaW5lIGFvZSBhZnRlciBCcnV0YWwgUnVzaCB0ZXRoZXJcclxuICAgICdCYXJiYXJpY2NpYSBXYXJuaW5nIEdhbGUgMSc6ICc3NTg2JywgLy8gY2VudGVyIHJlZC9ibGFjayBjaXJjbGVcclxuICAgICdCYXJiYXJpY2NpYSBXYXJuaW5nIEdhbGUgMic6ICc3NUM5JywgLy8gY2VudGVyIHJlZC9ibGFjayBjaXJjbGVcclxuICAgICdCYXJiYXJpY2NpYSBXaW5kaW5nIEdhbGUgMSc6ICc3NDg3JywgLy8gZ3JvdW5kIGxpbmUgYW9lc1xyXG4gICAgJ0JhcmJhcmljY2lhIFdpbmRpbmcgR2FsZSAyJzogJzc1Q0EnLCAvLyBncm91bmQgbGluZSBhb2VzXHJcbiAgICAnQmFyYmFyaWNjaWEgV2luZGluZyBHYWxlIDMnOiAnNzVDQicsIC8vIGdyb3VuZCBsaW5lIGFvZXNcclxuICAgICdCYXJiYXJpY2NpYSBXaW5kaW5nIEdhbGUgNCc6ICc3NUNDJywgLy8gZ3JvdW5kIGxpbmUgYW9lc1xyXG4gICAgJ0JhcmJhcmljY2lhIFdpbmRpbmcgR2FsZSA1JzogJzc1Q0QnLCAvLyBncm91bmQgbGluZSBhb2VzXHJcbiAgICAnQmFyYmFyaWNjaWEgQm91bGRlciAxJzogJzc1OUMnLCAvLyBsYXJnZSBiYWl0ZWQgYW9lcyBmcm9tIGhlYWRtYXJrZXJzXHJcbiAgICAnQmFyYmFyaWNjaWEgQm91bGRlciAyJzogJzc1RDcnLCAvLyBsYXJnZSBiYWl0ZWQgYW9lcyBmcm9tIGhlYWRtYXJrZXJzXHJcbiAgICAnQmFyYmFyaWNjaWEgQmxvdyBBd2F5IDEnOiAnNzU5NScsIC8vIGJhaXRlZCBncm91bmQgY2lyY2xlc1xyXG4gICAgJ0JhcmJhcmljY2lhIEJsb3cgQXdheSAyJzogJzc1RDMnLCAvLyBiYWl0ZWQgZ3JvdW5kIGNpcmNsZXNcclxuICAgICdCYXJiYXJpY2NpYSBUb3JuYWRvIENoYWluIE91dCc6ICc3NThFJywgLy8gbGFyZ2UgaW5uZXIgY2lyY2xlXHJcbiAgICAnQmFyYmFyaWNjaWEgVG9ybmFkbyBDaGFpbiBJbic6ICc3NThGJywgLy8gb3V0ZXIgZG9udXRcclxuICAgICdCYXJiYXJpY2NpYSBJbXBhY3QnOiAnNzVEOScsIC8vIGJsdWUga25vY2tiYWNrIGNpcmNsZVxyXG4gICAgJ0JhcmJhcmljY2lhIERyeSBCbG93cyc6ICc3NTkzJywgLy8gbWFueSBzbWFsbCBncm91bmQgY2lyY2xlc1xyXG4gICAgJ0JhcmJhcmljY2lhIFN0aWZmIEJyZWV6ZSBUb3VzbGUnOiAnNzVEMScsIC8vIG1vdmluZyBncmVlbiBjaXJjbGVzXHJcbiAgfSxcclxuICBnYWluc0VmZmVjdEZhaWw6IHtcclxuICAgICdCYXJiYXJpY2NpYSBXaW5kYnVybic6ICdCRkQnLCAvLyBzdGFuZGluZyBpbiBvdXRzaWRlIHJpbmdcclxuICAgICdCYXJiYXJpY2NpYSBTdXN0YWluZWQgRGFtYWdlJzogJ0I3NycsIC8vIHdhbGtpbmcgb3V0IG9mIFRhbmdsZWQgY2lyY2xlXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdCYXJiYXJpY2NpYSBIYWlyIFNwcmF5JzogJzc1REInLCAvLyBzcHJlYWQgbWFya2Vyc1xyXG4gIH0sXHJcbiAgc29sb0ZhaWw6IHtcclxuICAgICdCYXJiYXJpY2NpYSBUcmFtcGxlJzogJzc1REEnLCAvLyBzdGFjayBtYXJrZXIgd2l0aCBmbGFyZXNcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuLy8gTm90ZTogaWdub3JpbmcgVm9pZHN0cm9tIDc1NzcsIHRoZSAzayBkYW1hZ2UgKGJ1dCBhdm9pZGFibGUpIGRhbWFnZSBmcm9tIHN0YW5kaW5nIHVuZGVyIGJvc3MuXHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuU3Rvcm1zQ3Jvd25FeHRyZW1lLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdCYXJiYXJpY2NpYUV4IFNhdmFnZSBCYXJiZXJ5IERvbnV0JzogJzc1NzQnLCAvLyBkb251dCBhb2VcclxuICAgICdCYXJiYXJpY2NpYUV4IFNhdmFnZSBCYXJiZXJ5IExpbmUnOiAnNzU3QScsIC8vIGxpbmUgYW9lIHRocm91Z2ggaGl0Ym94XHJcbiAgICAnQmFyYmFyaWNjaWFFeCBTYXZhZ2UgQmFyYmVyeSBPdXQgMSc6ICc3NTc1JywgLy8gc3dvcmQgZXhwbG9zaW9uIChhZnRlciBkb251dClcclxuICAgICdCYXJiYXJpY2NpYUV4IFNhdmFnZSBCYXJiZXJ5IE91dCAyJzogJzc1N0InLCAvLyBzd29yZCBleHBsb3Npb24gKGFmdGVyIGxpbmUpXHJcbiAgICAnQmFyYmFyaWNjaWFFeCBIYWlyIFJhaWQgV2FsbCc6ICc3NTdEJywgLy8gfjE2MCBkZWdyZWUgY2xlYXZlIGZyb20gd2FsbCBhdCBzd29yZFxyXG4gICAgJ0JhcmJhcmljY2lhRXggSGFpciBSYWlkIERvbnV0JzogJzc1N0YnLCAvLyBkb251dCBhb2VcclxuICAgICdCYXJiYXJpY2NpYUV4IFRhbmdsZSc6ICc3NUFCJywgLy8gZ3JvdW5kIGNpcmNsZXMgYmVmb3JlIGZldHRlcnNcclxuICAgICdCYXJiYXJpY2NpYUV4IFNlY3JldCBCcmVlemUgUGlud2hlZWwnOiAnNzQxNScsIC8vIGdyb3VuZCBjb25hbHMgYmVmb3JlIHByb3RlYW5cclxuICAgICdCYXJiYXJpY2NpYUV4IEJydXRhbCBHdXN0JzogJzc1ODUnLCAvLyBsaW5lIGFvZSBhZnRlciBCcnV0YWwgUnVzaCB0ZXRoZXJcclxuICAgICdCYXJiYXJpY2NpYUV4IFdhcm5pbmcgR2FsZSc6ICc3NTg3JywgLy8gY2VudGVyIHJlZC9ibGFjayBjaXJjbGVcclxuICAgICdCYXJiYXJpY2NpYUV4IFdpbmRpbmcgR2FsZSAxJzogJzc1ODgnLCAvLyBncm91bmQgbGluZSBhb2VzXHJcbiAgICAnQmFyYmFyaWNjaWFFeCBXaW5kaW5nIEdhbGUgMic6ICc3NDg2JywgLy8gZ3JvdW5kIGxpbmUgYW9lc1xyXG4gICAgJ0JhcmJhcmljY2lhRXggV2luZGluZyBHYWxlIDMnOiAnNzU4OScsIC8vIGdyb3VuZCBsaW5lIGFvZXNcclxuICAgICdCYXJiYXJpY2NpYUV4IFdpbmRpbmcgR2FsZSA0JzogJzc1OEEnLCAvLyBncm91bmQgbGluZSBhb2VzXHJcbiAgICAnQmFyYmFyaWNjaWFFeCBCb3VsZGVyJzogJzc1OUQnLCAvLyBsYXJnZSBiYWl0ZWQgYW9lcyBmcm9tIGhlYWRtYXJrZXJzXHJcbiAgICAnQmFyYmFyaWNjaWFFeCBCbG93IEF3YXknOiAnNzU5NicsIC8vIGJhaXRlZCBncm91bmQgY2lyY2xlc1xyXG4gICAgJ0JhcmJhcmljY2lhRXggVG9ybmFkbyBDaGFpbiBPdXQnOiAnNzU4QycsIC8vIGxhcmdlIGlubmVyIGNpcmNsZVxyXG4gICAgJ0JhcmJhcmljY2lhRXggVG9ybmFkbyBDaGFpbiBJbic6ICc3NThEJywgLy8gb3V0ZXIgZG9udXRcclxuICAgICdCYXJiYXJpY2NpYUV4IEltcGFjdCAxJzogJzc1OUYnLCAvLyBibHVlIGtub2NrYmFjayBjaXJjbGVcclxuICAgICdCYXJiYXJpY2NpYUV4IEltcGFjdCAyJzogJzc1QTAnLCAvLyBibHVlIGtub2NrYmFjayBjaXJjbGUgKD8/PyBtYXliZSBub3RoaW5nKVxyXG4gICAgJ0JhcmJhcmljY2lhRXggRHJ5IEJsb3dzJzogJzc1OTQnLCAvLyBtYW55IHNtYWxsIGdyb3VuZCBjaXJjbGVzXHJcbiAgICAnQmFyYmFyaWNjaWFFeCBTdGlmZiBCcmVlemUgVG91c2xlJzogJzc1OTInLCAvLyBtb3ZpbmcgZ3JlZW4gY2lyY2xlc1xyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RGYWlsOiB7XHJcbiAgICAnQmFyYmFyaWNjaWFFeCBXaW5kYnVybic6ICcxMEQnLCAvLyB0aGUgMTJzIGRvdCBmcm9tIGRlYXRoIHJpbmcsIGBCRkRgIHdoaWxlIHN0YW5kaW5nIGluIHJpbmdcclxuICAgICdCYXJiYXJpY2NpYUV4IFN1c3RhaW5lZCBEYW1hZ2UnOiAnQjc3JywgLy8gd2Fsa2luZyBvdXQgb2YgVGFuZ2xlZCBjaXJjbGVcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ0JhcmJhcmljY2lhRXggSGFpciBTcHJheSc6ICc3NUE2JywgLy8gc3ByZWFkIG1hcmtlcnNcclxuICAgICdCYXJiYXJpY2NpYUV4IEhhaXIgRmxheSc6ICc3NDEzJywgLy8gbGFyZ2UgY2lyY2xlIGR1cmluZyBmaXJzdCBmZXR0ZXJzXHJcbiAgICAnQmFyYmFyaWNjaWFFeCBTZWNyZXQgQnJlZXplIFByb3RlYW4nOiAnNzU4MCcsIC8vIHByb3RlYW5cclxuICAgICdCYXJiYXJpY2NpYUV4IEJyaXR0bGUgQm91bGRlcic6ICc3NTlFJywgLy8gc3ByZWFkXHJcbiAgfSxcclxuICBzb2xvRmFpbDoge1xyXG4gICAgJ0JhcmJhcmljY2lhRXggRGVhZGx5IFR3aXN0JzogJzc1QTcnLCAvLyBzdGFjayBtYXJrZXJzXHJcbiAgICAnQmFyYmFyaWNjaWFFeCBVcGJyYWlkJzogJzc1QTgnLCAvLyBwYXJ0bmVyIHN0YWNrIGNpcmNsZXNcclxuICAgICdCYXJiYXJpY2NpYUV4IFRyYW1wbGUnOiAnNzVBMicsIC8vIHN0YWNrIG1hcmtlciB3aXRoIGZsYXJlc1xyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVGaW5hbERheSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnRW5kc2luZ2VyIFN0ZWxsYXIgQ29sbGlzaW9uIDEnOiAnNjYyRScsIC8vIHBsYW5ldCBjb2xsaXNpb25cclxuICAgICdFbmRzaW5nZXIgU3RlbGxhciBDb2xsaXNpb24gMic6ICc2NjNCJywgLy8gcGxhbmV0IGNvbGxpc2lvblxyXG4gICAgJ0VuZHNpbmdlciBFbGVuY2hvcyBNaWRkbGUnOiAnNjY0NCcsIC8vIG1pZGRsZSBsYXNlclxyXG4gICAgJ0VuZHNpbmdlciBFbGVuY2hvcyBTaWRlcyc6ICc2NjQzJywgLy8gc2lkZSBsYXNlcnNcclxuICAgICdFbmRzaW5nZXIgRWxlbmNob3MgSGVhZHMnOiAnNjYzRScsIC8vIGhlYWQgbGFzZXJzXHJcbiAgICAnRW5kc2luZ2VyIEZlYXRoZXIgb2YgRGVzcGFpciBQaGFybWFrb24nOiAnNjY0QycsIC8vIGZlYXRoZXIgY2lyY2xlcyBhZnRlciBEZWF0aCdzIEVtYnJhY2VcclxuICAgICdFbmRzaW5nZXIgRXBpZ29ub2knOiAnNjY0QycsIC8vIGNpcmNsZXMgYWZ0ZXIgRWtzdGFzaXMgdGhhdCBzcGF3biBoZWFkcyB3aXRoIHB1ZGRsZXNcclxuICAgICdFbmRzaW5nZXIgTWlzZXJ5JzogJzY2NDgnLCAvLyBibGFjayBwdWRkbGVzXHJcbiAgICAnRW5kc2luZ2VyIEludGVyc3RlbGxhcic6ICc2N0ZCJywgLy8gbGFyZ2UgbGluZSBkaXZlICh3aXRoIHNwcmVhZCBkdXJpbmcpXHJcbiAgICAnRW5kc2luZ2VyIEtha29kYWltb24gQ3Jhc2gnOiAnNjY1NycsIC8vIHBsYW5ldHMgYmVpbmcgdG9zc2VkIGR1cmluZyBtaWRwaGFzZVxyXG4gICAgJ0VuZHNpbmdlciBEZWFkIFN0YXInOiAnNUU0RScsIC8vIHRhcmdldGVkIGNpcmNsZXMgZHVyaW5nIGZpbmFsIHBoYXNlXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdFbmRTaW5nZXIgRGVhdGhcXCdzIEVtYnJhY2UnOiAnNjY0OScsIC8vIHB1cnBsZSBwcm90ZWFuIHRyaWFuZ2xlc1xyXG4gICAgJ0VuZHNpbmdlciBOZW1lc2lzJzogJzY2NEUnLCAvLyBzcHJlYWQgZHVyaW5nIEludGVyc3RlbGxhclxyXG4gIH0sXHJcbiAgc2hhcmVGYWlsOiB7XHJcbiAgICAnRW5kc2luZ2VyIEh1YnJpcyc6ICc2NjUzJywgLy8gdGFua2J1c3RlclxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6ICdFbmRzaW5nZXIgR2FsYXhpYXMnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzZDNkEnIH0pLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnS25vY2tlZCBvZmYnLFxyXG4gICAgICAgICAgICBkZTogJ1J1bnRlcmdlZmFsbGVuJyxcclxuICAgICAgICAgICAgZnI6ICdSZW52ZXJzw6koZSknLFxyXG4gICAgICAgICAgICBqYTogJ+ODjuODg+OCr+ODkOODg+OCrycsXHJcbiAgICAgICAgICAgIGNuOiAn5Ye76YCA5Z2g6JC9JyxcclxuICAgICAgICAgICAga286ICfrhInrsLEnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbi8vIFRPRE86IGZhaWxpbmcgdG8gYnJlYWsgR3JpcHMgb2YgRGVzcGFpciBjaGFpbnNcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlTWluc3RyZWxzQmFsbGFkRW5kc2luZ2Vyc0FyaWEsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0VuZHNpbmdlckV4IFJ1YmlzdGVsbGFyIENvbGxpc2lvbiAxJzogJzZGRkEnLCAvLyByZWQgcGxhbmV0IGNvbGxpc2lvblxyXG4gICAgJ0VuZHNpbmdlckV4IFJ1YmlzdGVsbGFyIENvbGxpc2lvbiAyJzogJzcwMDMnLCAvLyBGYXRhbGlzbSByZWQgcGxhbmV0IGNvbGxpc2lvblxyXG4gICAgJ0VuZHNpbmdlckV4IEVsZW5jaG9zIE1pZGRsZSc6ICc3MDIyJywgLy8gc2lkZSBsYXNlcnNcclxuICAgICdFbmRzaW5nZXJFeCBFbGVuY2hvcyBTaWRlcyc6ICc3MDIxJywgLy8gc2lkZSBsYXNlcnNcclxuICAgICdFbmRzaW5nZXJFeCBEaWFpcmVzaXMgMSc6ICc2RkZDJywgLy8gbWlkZGxlIGhlYWQgY29uYWwgY2xlYXZlIGR1cmluZyBpbml0aWFsIHBsYW5ldHNcclxuICAgICdFbmRzaW5nZXJFeCBEaWFpcmVzaXMgMic6ICc3MDA2JywgLy8gbWlkZGxlIGhlYWQgY29uYWwgY2xlYXZlIGR1cmluZyBUd2luc29uZydzIEFwb3JyaG9pYVxyXG4gICAgJ0VuZHNpbmdlckV4IERpYWlyZXNpcyAzJzogJzcwMTEnLCAvLyBtaWRkbGUgaGVhZCBjb25hbCBjbGVhdmUgZHVyaW5nIFR3aW5zb25nJ3MgQXBvcnJob2lhICsgVGhlb2xvZ2ljYWwgRmF0YWxpc21cclxuICAgICdFbmRzaW5nZXJFeCBOZWNyb3RpYyBGbHVpZCAxJzogJzcwMDknLCAvLyBUd2luc29uZydzIEFwb3JyaG9pYSBjaXJjbGVcclxuICAgICdFbmRzaW5nZXJFeCBOZWNyb3RpYyBGbHVpZCAyJzogJzcwMEYnLCAvLyBUd2luc29uZydzIEFwb3JyaG9pYSArIFRoZW9sb2dpY2FsIEZhdGFsaXNtIGNpcmNsZVxyXG4gICAgJ0VuZHNpbmdlckV4IFdhdmUgb2YgTmF1c2VhIDEnOiAnNzAwQScsIC8vIFR3aW5zb25nJ3MgQXBvcnJob2lhIGhlYWQgZG9udXRcclxuICAgICdFbmRzaW5nZXJFeCBXYXZlIG9mIE5hdXNlYSAyJzogJzcwMTAnLCAvLyBUd2luc29uZydzIEFwb3JyaG9pYSArIFRoZW9sb2dpY2FsIEZhdGFsaXNtIGhlYWQgZG9udXRcclxuICAgICdFbmRzaW5nZXJFeCBXYXZlIG9mIE5hdXNlYSAzJzogJzcwMTMnLCAvLyBEZXNwYWlyIFVuZm9yZ290dGVuIGRvbnV0XHJcbiAgICAnRW5kc2luZ2VyRXggV2F2ZSBvZiBOYXVzZWEgNCc6ICc3MDE3JywgLy8gRGVzcGFpciBVbmZvcmdvdHRlbiArIFRoZW9sb2dpY2FsIEZhdGFsaXNtIGRvbnV0XHJcbiAgICAnRW5kc2luZ2VyRXggRW5kc29uZyc6ICc3MDFDJywgLy8gRW5kc29uZydzIEFwb3JyaG9pYSBiaWcgaGVhZCBjaXJjbGVzIGZyb20gcmluZ3NcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdFbmRzaW5nZXJFeCBNYXNzaXZlIEV4cGxvc2lvbic6ICc3MDJCJywgLy8gbWlzc2luZyBhIHRvd2VyXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdFbmRzaW5nZXJFeCBCZWZvdWxtZW50IDEnOiAnNzAxNCcsIC8vIERlc3BhaXIgVW5mb3Jnb3R0ZW4gc3ByZWFkXHJcbiAgICAnRW5kc2luZ2VyRXggQmVmb3VsbWVudCAyJzogJzcwMTgnLCAvLyBEZXNwYWlyIFVuZm9yZ290dGVuICsgVGhlb2xvZ2ljYWwgRmF0YWxpc20gc3ByZWFkXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdFbmRzaW5nZXJFeCBIdWJyaXMnOiAnNzAyRCAnLCAvLyB0YW5rYnVzdGVyXHJcbiAgfSxcclxuICBzb2xvRmFpbDoge1xyXG4gICAgJ0VuZHNpbmdlckV4IEJlbmV2b2xlbmNlIDEnOiAnNzAxNicsIC8vIERlc3BhaXIgVW5mb3Jnb3R0ZW4gc3RhY2tcclxuICAgICdFbmRzaW5nZXJFeCBCZW5ldm9sZW5jZSAyJzogJzcwMUEnLCAvLyBEZXNwYWlyIFVuZm9yZ290dGVuICsgVGhlb2xvZ2ljYWwgRmF0YWxpc20gc3RhY2tcclxuICB9LFxyXG4gIHRyaWdnZXJzOiBbXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRW5kc2luZ2VyIEdhbGF4aWFzJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICAvLyA2RkZCID0gQXp1cmUgU3RhciBDYWVydXN0ZWxsYXIgQ29sbGlzaW9uIGtub2NrYmFja1xyXG4gICAgICAvLyA3MDA1ID0gRmF0YWxpc20gQXp1cmUgU3RhciBDYWVydXN0ZWxsYXIgQ29sbGlzaW9uIGtub2NrYmFja1xyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6IFsnNkZGQicsICc3MDA1J10gfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdLbm9ja2VkIG9mZicsXHJcbiAgICAgICAgICAgIGRlOiAnUnVudGVyZ2VmYWxsZW4nLFxyXG4gICAgICAgICAgICBmcjogJ1JlbnZlcnPDqShlKScsXHJcbiAgICAgICAgICAgIGphOiAn44OO44OD44Kv44OQ44OD44KvJyxcclxuICAgICAgICAgICAgY246ICflh7vpgIDlnaDokL0nLFxyXG4gICAgICAgICAgICBrbzogJ+uEieuwsScsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbi8vIFRPRE86IDY1Q0EgUmF5IG9mIExpZ2h0IChzdGFuZGluZyBpbiB0aGUgbW92aW5nIGxpZ2h0d2F2ZSkgaXMgc3VwZXIgbm9pc3lcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBPb3BzeURhdGE7XHJcblxyXG5jb25zdCB0cmlnZ2VyU2V0OiBPb3BzeVRyaWdnZXJTZXQ8RGF0YT4gPSB7XHJcbiAgem9uZUlkOiBab25lSWQuVGhlTW90aGVyY3J5c3RhbCxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnSHlkYWVseW4gSGlnaGVzdCBIb2x5JzogJzY1QzcnLCAvLyBvdXRcclxuICAgICdIeWRhZWx5biBFcXVpbm94JzogJzY2OEYnLCAvLyBjcm9zc1xyXG4gICAgJ0h5ZGFlbHluIEFudGhlbGlvbic6ICc2NUM4JywgLy8gaW5cclxuICAgICdIeWRhZWx5biBNeXN0aWMgUmVmdWxnZW5jZSBJbmNhbmRlc2NlbmNlJzogJzY1Q0QnLCAvLyBQYXJoZWxpYyBDaXJjbGUgb3Jic1xyXG4gICAgJ0h5ZGFlbHluIFBhcmhlbGlvbiBCZWFjb24gMSc6ICc2NUNFJywgLy8gaW5pdGlhbCBjaGFrcmFtc1xyXG4gICAgJ0h5ZGFlbHluIFBhcmhlbGlvbiBCZWFjb24gMic6ICc2NUNGJywgLy8gc2Vjb25kIGNoYWtyYW1zXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdIeWRhZWx5biBDcnlzdGFsbGluZSBCbGl6emFyZCBJSUknOiAnNkM1QScsIC8vIHNwcmVhZFxyXG4gIH0sXHJcbiAgc2hhcmVGYWlsOiB7XHJcbiAgICAnSHlkYWVseW4gSGVyb3NcXCdzIFN1bmRlcmluZyc6ICc2NUQ1JywgLy8gc2luZ2xlIHRhbmsgY2xlYXZlXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuLy8gVE9ETzogdGFraW5nIHR3byA2NUFBIEluZnJhbGF0ZXJhbCBBcmMgKHBhcnR5IHNoYXJlKVxyXG4vLyBUT0RPOiA2NUE3IFJheSBvZiBMaWdodCAoc3RhbmRpbmcgaW4gdGhlIG1vdmluZyBsaWdodHdhdmUpIGlzIHN1cGVyIG5vaXN5XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZU1pbnN0cmVsc0JhbGxhZEh5ZGFlbHluc0NhbGwsXHJcbiAgZGFtYWdlV2Fybjoge1xyXG4gICAgJ0h5ZGFlbHluRXggSGlnaGVzdCBIb2x5JzogJzY1OTgnLCAvLyBvdXRcclxuICAgICdIeWRhZWx5bkV4IEVxdWlub3gnOiAnNkVCMicsIC8vIGNyb3NzXHJcbiAgICAnSHlkYWVseW5FeCBBbnRoZWxpb24nOiAnNjU5NCcsIC8vIGluXHJcbiAgICAnSHlkYWVseW5FeCBBdXJlb2xlIDEnOiAnNkYxMicsIC8vIGdvIHNpZGVzXHJcbiAgICAnSHlkYWVseW5FeCBBdXJlb2xlIDInOiAnNkM5MicsIC8vIGdvIHNpZGVzXHJcbiAgICAnSHlkYWVseW5FeCBMYXRlcmFsIEF1cmVvbGUgMSc6ICc2NjkwJywgLy8gZ28gZnJvbnQgYmFja1xyXG4gICAgJ0h5ZGFlbHluRXggTGF0ZXJhbCBBdXJlb2xlIDInOiAnNkYxNCcsIC8vIGdvIGZyb250IGJhY2tcclxuICAgICdIeWRhZWx5bkV4IE15c3RpYyBSZWZ1bGdlbmNlIEluY2FuZGVzY2VuY2UnOiAnNjVBRicsIC8vIFBhcmhlbGljIENpcmNsZSBvcmJzXHJcbiAgICAnSHlkYWVseW5FeCBMaWdodCBvZiB0aGUgQ3J5c3RhbCc6ICc2NUE2JywgLy8gbGluZSBvZiBzaWdodCB3YXZlK2NyeXN0YWxcclxuICAgICdIeWRhZWx5bkV4IEhlcm9zXFwncyBHbG9yeSc6ICc2NUE4JywgLy8gZ2V0IGJlaGluZFxyXG4gICAgJ0h5ZGFlbHluRXggUGFyaGVsaW9uIEJlYWNvbiAxJzogJzY1QjInLCAvLyBpbml0aWFsIGNoYWtyYW1zXHJcbiAgICAnSHlkYWVseW5FeCBQYXJoZWxpb24gQmVhY29uIDInOiAnNjVCMycsIC8vIHNlY29uZCBjaGFrcmFtc1xyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnSHlkYWVseW5FeCBDcnlzdGFsbGluZSBCbGl6emFyZCBJSUknOiAnNjVBNCcsIC8vIHNwcmVhZFxyXG4gIH0sXHJcbiAgc2hhcmVGYWlsOiB7XHJcbiAgICAnSHlkYWVseW5FeCBIZXJvc1xcJ3MgU3VuZGVyaW5nJzogJzY1QkYnLCAvLyBzaW5nbGUgdGFuayBjbGVhdmVcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHJpZ2dlclNldDtcclxuIiwiaW1wb3J0IE5ldFJlZ2V4ZXMgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL25ldHJlZ2V4ZXMnO1xyXG5pbXBvcnQgWm9uZUlkIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy96b25lX2lkJztcclxuaW1wb3J0IHsgT29wc3lEYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvZGF0YSc7XHJcbmltcG9ydCB7IE9vcHN5VHJpZ2dlclNldCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL29vcHN5JztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSBleHRlbmRzIE9vcHN5RGF0YSB7XHJcbiAgZm9yY2U/OiB7IFtuYW1lOiBzdHJpbmddOiBzdHJpbmcgfTtcclxufVxyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLkNvbnRhaW5tZW50QmF5UzFUN1VucmVhbCxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnU2VwaGlyb3RVbiBZZXNvZCc6ICc3NkFCJywgLy8gU25hcHNob3QgZmxvb3Igc3Bpa2VzXHJcbiAgICAnU2VwaGlyb3RVbiBBaW4nOiAnNzY5NicsIC8vIEhhbGYtYXJlbmEgYmFpdGVkIGZyb250YWxcclxuICAgICdTZXBoaXJvdFVuIEVpbiBTb2YnOiAnNzY5QycsIC8vIEV4cGFuZGluZyBncmVlbiBwdWRkbGVzXHJcbiAgICAnU2VwaGlyb3RVbiBGaWVuZGlzaCBXYWlsJzogJzc2QTQnLCAvLyBSYWlkd2lkZSBpZiB0b3dlciBpcyBtaXNzZWRcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdTZXBoaXJvdFVuIFBpbGxhciBPZiBNZXJjeSc6ICc3NkFFJywgLy8gU3RhbmRpbmcgaW4gdGhlIGJsdWUgcHVkZGxlc1xyXG4gICAgJ1NlcGhpcm90VW4gU3Rvcm0gT2YgV29yZHMgUmV2ZWxhdGlvbic6ICc3NjgwJywgLy8gTWlzc2luZyB0aGUgZW5yYWdlIG9uIFN0b3JtIG9mIFdvcmRzXHJcbiAgfSxcclxuICBzaGFyZVdhcm46IHtcclxuICAgICdTZXBoaXJvdFVuIFRyaXBsZSBUcmlhbCc6ICc3NjkzJywgLy8gSW5zdGFudCB0YW5rIGNsZWF2ZVxyXG4gICAgJ1NlcGhpcm90VW4gUmF0em9uIEdyZWVuJzogJzc2OTgnLCAvLyBTbWFsbCBncmVlbiBzcHJlYWQgY2lyY2xlXHJcbiAgICAnU2VwaGlyb3RVbiBSYXR6b24gUHVycGxlJzogJzc2OTknLCAvLyBMYXJnZSBwdXJwbGUgc3ByZWFkIGNpcmNsZVxyXG4gICAgJ1NlcGhpcm90VW4gRWFydGggU2hha2VyJzogJzc2ODgnLFxyXG4gICAgJ1NlcGhpcm90VW4gU3ByZWFkIERhXFwnYXQnOiAnNzZBMCcsXHJcbiAgfSxcclxuICBzb2xvV2Fybjoge1xyXG4gICAgJ1NlcGhpcm90VW4gRmllbmRpc2ggUmFnZSc6ICc3NjlBJywgLy8gU3RhY2sgbWFya2VycywgcGhhc2UgMVxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgLy8gUGlsbGFyIG9mIE1lcmN5LCAgTWFsa3V0aCwgYW5kIFBpbGxhciBvZiBTZXZlcml0eVxyXG4gICAgICBpZDogJ1NlcGhpcm90VW4gS25vY2tiYWNrcycsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiBbJzc2QUQnLCAnNzZBRicsICc3NkIyJ10sIHNvdXJjZTogJ1NlcGhpcm90JyB9KSxcclxuICAgICAgZGVhdGhSZWFzb246IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBpZDogbWF0Y2hlcy50YXJnZXRJZCxcclxuICAgICAgICAgIG5hbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDoge1xyXG4gICAgICAgICAgICBlbjogJ1B1c2hlZCBvZmYhJyxcclxuICAgICAgICAgICAgZGU6ICdSdW50ZXIgZ2VzY2h1YnN0IScsXHJcbiAgICAgICAgICAgIGZyOiAnUmVwb3Vzc8OpKGUpICEnLFxyXG4gICAgICAgICAgICBqYTogJ+iQveOBoeOBnycsXHJcbiAgICAgICAgICAgIGNuOiAn5Ye76YCA5Z2g6JC9JyxcclxuICAgICAgICAgICAga286ICfrhInrsLHrkKgnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgLy8gM0VEIGlzIEZvcmNlIEFnYWluc3QgTWlnaHQgb3JhbmdlLCAzRUUgaXMgRm9yY2UgQWdhaW5zdCBNYWdpYywgZ3JlZW4uXHJcbiAgICAgIGlkOiAnU2VwaGlyb3RVbiBGb3JjZSBBZ2FpbnN0IEdhaW4nLFxyXG4gICAgICB0eXBlOiAnR2FpbnNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5nYWluc0VmZmVjdCh7IGVmZmVjdElkOiBbJzNFRCcsICczRUUnXSB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuZm9yY2UgPz89IHt9O1xyXG4gICAgICAgIGRhdGEuZm9yY2VbbWF0Y2hlcy50YXJnZXRdID0gbWF0Y2hlcy5lZmZlY3RJZDtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnU2VwaGlyb3RVbiBGb3JjZSBBZ2FpbnN0IExvc2UnLFxyXG4gICAgICB0eXBlOiAnTG9zZXNFZmZlY3QnLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5sb3Nlc0VmZmVjdCh7IGVmZmVjdElkOiBbJzNFRCcsICczRUUnXSB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEuZm9yY2UgPz89IHt9O1xyXG4gICAgICAgIGRlbGV0ZSBkYXRhLmZvcmNlW21hdGNoZXMudGFyZ2V0XTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnU2VwaGlyb3RVbiBTcGlyaXQnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzc2QTgnLCBzb3VyY2U6ICdTZXBoaXJvdCcgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGE/LmZvcmNlPy5bbWF0Y2hlcy50YXJnZXRdID09PSAnM0VEJyxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHR5cGU6ICd3YXJuJyxcclxuICAgICAgICAgIGJsYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdTZXBoaXJvdFVuIExpZmUgRm9yY2UnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzc2QTcnLCBzb3VyY2U6ICdTZXBoaXJvdCcgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGE/LmZvcmNlPy5bbWF0Y2hlcy50YXJnZXRdID09PSAnM0VFJyxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHR5cGU6ICd3YXJuJyxcclxuICAgICAgICAgIGJsYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdTZXBoaXJvdFVuIEZpZW5kaXNoIFdhaWwgR3JlZW4nLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzc2QTMnLCBzb3VyY2U6ICdTZXBoaXJvdCcgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGE/LmZvcmNlPy5bbWF0Y2hlcy50YXJnZXRdID09PSAnM0VFJyxcclxuICAgICAgbWlzdGFrZTogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHR5cGU6ICdmYWlsJyxcclxuICAgICAgICAgIGJsYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgLy8gT25seSB0YW5rcyBvciBCbHVlIE1hZ2VzIHNob3VsZCB0YWtlIHRvd2VycyB3aXRob3V0IGEgRm9yY2UgZGVidWZmLlxyXG4gICAgICBpZDogJ1NlcGhpcm90VW4gRmllbmRpc2ggV2FpbCBOb24tVGFuaycsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnNzZBMycsIHNvdXJjZTogJ1NlcGhpcm90JyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGlmIChkYXRhLnBhcnR5LmlzVGFuayhtYXRjaGVzLnRhcmdldCkgfHwgZGF0YS5qb2IgPT09ICdCTFUnKVxyXG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIHJldHVybiBkYXRhPy5mb3JjZT8uW21hdGNoZXMudGFyZ2V0XSA9PT0gdW5kZWZpbmVkO1xyXG4gICAgICB9LFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ2ZhaWwnLFxyXG4gICAgICAgICAgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDogbWF0Y2hlcy5hYmlsaXR5LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyBUYWtpbmcgYSB0ZXRoZXIgd2hpbGUgdW5kZXIgRm9yY2UgQWdhaW5zdCBNaWdodCAob3JhbmdlKSBraWxscyB0aGUgdGFyZ2V0XHJcbiAgICAgIGlkOiAnU2VwaGlyb3RVbiBUZXRoZXIgRGFcXCdhdCcsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiAnNzZBMScsIHNvdXJjZTogJ1NlcGhpcm90JyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSwgbWF0Y2hlcykgPT4gZGF0YT8uZm9yY2U/LlttYXRjaGVzLnRhcmdldF0gPT09ICczRUQnLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ2ZhaWwnLFxyXG4gICAgICAgICAgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgdGV4dDogbWF0Y2hlcy5hYmlsaXR5LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5VbHRpbWFzQmFuZVVucmVhbCxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnVWx0aW1hRXggTWlzdHJhbCBTb25nJzogJzZFRkMnLCAvLyBHYXJ1ZGEgd2lkZSBjb25hbFxyXG4gICAgJ1VsdGltYUV4IEV5ZSBvZiB0aGUgU3Rvcm0nOiAnNkVGRScsIC8vIEdhcnVkYSBkb251dFxyXG4gICAgJ1VsdGltYUV4IFJhZGlhbnQgUGx1bWUnOiAnNkYwMCcsIC8vIElmcml0IGZpcmUgZXJ1cHRpb25zXHJcbiAgICAnVWx0aW1hRXggV2VpZ2h0IG9mIHRoZSBMYW5kJzogJzZGMDEnLCAvLyBUaXRhbiBwdWRkbGVzXHJcbiAgICAnVWx0aW1hRXggRXJ1cHRpb24nOiAnNkYwMycsIC8vIGNoYXNpbmcgSWZyaXQgZXhwbG9zaW9uc1xyXG4gICAgJ1VsdGltYUV4IENyaW1zb24gQ3ljbG9uZSc6ICc2RjA0JywgLy8gSWZyaXQgZGFzaFxyXG4gICAgJ1VsdGltYUV4IE1hZ2l0ZWsgUmF5IDEnOiAnNkVGMicsIC8vIHRyaWRlbnQgbGFzZXJcclxuICAgICdVbHRpbWFFeCBNYWdpdGVrIFJheSAyJzogJzZFRjMnLCAvLyB0cmlkZW50IGxhc2VyXHJcbiAgICAnVWx0aW1hRXggTWFnaXRlayBSYXkgMyc6ICc2RUY0JywgLy8gdHJpZGVudCBsYXNlclxyXG4gICAgJ1VsdGltYUV4IEhvbWluZyBBZXRoZXJvcGxhc20nOiAnNkVGNScsIC8vIGNoYXNpbmcgQWV0aGVyb3BsYXNtIGV4cGxvc2lvblxyXG4gICAgJ1VsdGltYUV4IE1hZ2l0ZWsgQml0IEFzc2F1bHQgQ2Fubm9uJzogJzZGMDUnLCAvLyBsaW5lIGFvZSBmcm9tIGJpdHNcclxuICB9LFxyXG4gIGRhbWFnZUZhaWw6IHtcclxuICAgICdVbHRpbWFFeCBGdXNpb24gQnVyc3QnOiAnNkVGOCcsIC8vIGZhaWxpbmcgdG8gcG9wIG9yYnNcclxuICB9LFxyXG4gIHNoYXJlV2Fybjoge1xyXG4gICAgJ1VsdGltYUV4IEhvbWluZyBMYXNlcnMnOiAnNkVGMCcsIC8vIGRpc3RhbmNlPyBhZ2dybz8gdGFyZ2V0ZWQgY2lyY3VsYXIgY2xlYXZlXHJcbiAgICAnVWx0aW1hRXggRGlmZnJhY3RpdmUgTGFzZXInOiAnNkVGMScsIC8vIGZyb250YWwgY29uYWwgY2xlYXZlXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ1VsdGltYUV4IFZpc2NvdXMgQWV0aGVyb3BsYXNtJyxcclxuICAgICAgdHlwZTogJ0dhaW5zRWZmZWN0JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuZ2FpbnNFZmZlY3QoeyBlZmZlY3RJZDogJzE3MScsIGNvdW50OiAnMDUnIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuZWZmZWN0IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBwbGF5ZXJEYW1hZ2VGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9vb3BzeV9jb21tb24nO1xyXG5cclxuZXhwb3J0IHR5cGUgRGF0YSA9IE9vcHN5RGF0YTtcclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5UaGVEYXJrSW5zaWRlLFxyXG4gIGRhbWFnZVdhcm46IHtcclxuICAgICdab2RpYXJrIEVzb3RlcmljIFNlY3QnOiAnNjdDQycsIC8vIGNvbmFsIHdhbGwgc3VtbW9uXHJcbiAgICAnWm9kaWFyayBFc290ZXJpYyBEeWFkJzogJzY3Q0InLCAvLyBoYWxmIGFyZW5hIHdhbGwgc3VtbW9uXHJcbiAgICAnWm9kaWFyayBCZWhlbW90aCBNZXRlb3JvcyBFaWRvbG9uJzogJzY3QzYnLCAvLyBsYXJnZSBjaXJjbGVzIGZyb20gQmVoZW1vdGggc3VtbW9uc1xyXG4gICAgJ1pvZGlhcmsgUHl0aG9uIE9waGVvcyBFaWRvbG9uJzogJzY3QzcnLCAvLyBsaW5lcyBmcm9tIFB5dGhvbiBzdW1tb25zXHJcbiAgICAnWm9kaWFyayBQaGxlZ290aG9uJzogJzY3Q0UnLCAvLyB0YXJnZXRlZCBjaXJjbGVzXHJcbiAgICAnWm9kaWFyayBFc290ZXJpYyBSYXknOiAnNjdDQScsIC8vIDErMiBsYXNlcnNcclxuICAgICdab2RpYXJrIEFkaWtpYSAxJzogJzYzQTgnLCAvLyB2ZXJ5IGxhcmdlIGNpcmNsZXMgdGhhdCBjcmVhdGUgTi9TIHNhZmUgem9uZXNcclxuICAgICdab2RpYXJrIEFkaWtpYSAyJzogJzY3RDknLCAvLyB2ZXJ5IGxhcmdlIGNpcmNsZXMgdGhhdCBjcmVhdGUgTi9TIHNhZmUgem9uZXNcclxuICAgICdab2RpYXJrIEFsZ2Vkb24nOiAnNjdEMycsIC8vIG1vdmUgdG8gY29ybmVyIGxhcmdlIGtub2NrYmFjayBhdHRhY2tcclxuICAgICdab2RpYXJrIEV4cGxvc2lvbic6ICc2N0NEJywgLy8gQXN0cmFsIEVjbGlwc2UgZXhwbG9zaW9uc1xyXG4gIH0sXHJcbiAgc2hhcmVGYWlsOiB7XHJcbiAgICAnWm9kaWFyayBBbmlhJzogJzZCNjInLCAvLyB0YW5rIGJ1c3RlciBzcGxhc2ggd2l0aCBoZWFkbWFya2VyXHJcbiAgfSxcclxuICBzb2xvV2Fybjoge1xyXG4gICAgJ1pvZGlhcmsgU3R5eCc6ICc2N0RDJywgLy8gbXVsdGktaGl0IHN0YWNrIG1hcmtlclxyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgaWQ6ICdab2RpYXJrIEFsZ2Vkb24gUHVzaCcsXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eUZ1bGwoeyBpZDogJzY3RDMnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGRlYXRoUmVhc29uOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICBuYW1lOiBtYXRjaGVzLnRhcmdldCxcclxuICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgZW46ICdQdXNoZWQgb2ZmIScsXHJcbiAgICAgICAgICAgIGRlOiAnUnVudGVyIGdlc2NodWJzdCEnLFxyXG4gICAgICAgICAgICBmcjogJ1JlcG91c3PDqShlKSAhJyxcclxuICAgICAgICAgICAgamE6ICfokL3jgaHjgZ8nLFxyXG4gICAgICAgICAgICBjbjogJ+WHu+mAgOWdoOiQvScsXHJcbiAgICAgICAgICAgIGtvOiAn64SJ67Cx65CoJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBOZXRSZWdleGVzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3Jlc291cmNlcy9uZXRyZWdleGVzJztcclxuaW1wb3J0IFpvbmVJZCBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvem9uZV9pZCc7XHJcbmltcG9ydCB7IE9vcHN5RGF0YSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzL2RhdGEnO1xyXG5pbXBvcnQgeyBPb3BzeVRyaWdnZXJTZXQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9vb3BzeSc7XHJcbmltcG9ydCB7IHBsYXllckRhbWFnZUZpZWxkcyB9IGZyb20gJy4uLy4uLy4uL29vcHN5X2NvbW1vbic7XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhID0gT29wc3lEYXRhO1xyXG5cclxuY29uc3QgdHJpZ2dlclNldDogT29wc3lUcmlnZ2VyU2V0PERhdGE+ID0ge1xyXG4gIHpvbmVJZDogWm9uZUlkLlRoZU1pbnN0cmVsc0JhbGxhZFpvZGlhcmtzRmFsbCxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnWm9kaWFya0V4IFF1ZXR6YWxjb2F0bCBLZXJhdW5vcyBFaWRvbG9uJzogJzY3RTEnLCAvLyBiaXJkIGRvbnV0XHJcbiAgICAnWm9kaWFya0V4IEJlaGVtb3RoIE1ldGVvcm9zIEVpZG9sb24nOiAnNjdFMicsIC8vIGJlaGVtb3RoIGNpcmNsZVxyXG4gICAgJ1pvZGlhcmtFeCBQeXRob24gT3BoZW9zIEVpZG9sb24nOiAnNjdFMycsIC8vIHB5dGhvbiBsaW5lXHJcbiAgICAnWm9kaWFya0V4IEluZmVybmFsIFN0cmVhbSAxJzogJzUyRDEnLCAvLyBpbml0aWFsIGZpcmUgd2FsbFxyXG4gICAgJ1pvZGlhcmtFeCBJbmZlcm5hbCBTdHJlYW0gMic6ICc2N0UwJywgLy8gcm90YXRpbmcgZmlyZSB3YWxsXHJcbiAgICAnWm9kaWFya0V4IEVzb3RlcmljIFJheSc6ICc2N0U0JywgLy8gbGFzZXIgd2FsbCBzdW1tb25cclxuICAgICdab2RpYXJrRXggRXNvdGVyaWMgRHlhZCc6ICc2N0U1JywgLy8gaGFsZiBhcmVuYSB3YWxsIHN1bW1vblxyXG4gICAgJ1pvZGlhcmtFeCBFc290ZXJpYyBTZWN0JzogJzY3RTYnLCAvLyBjb25hbCB3YWxsIHN1bW1vblxyXG4gICAgJ1pvZGlhcmtFeCBBbGdlZG9uJzogJzY3RUUnLCAvLyB1bnRlbGVncmFwaGVkIGRpYWdvbmFsIGtub2NrYmFja1xyXG4gICAgJ1pvZGlhcmtFeCBBZGlraWEgMSc6ICc2M0E5JywgLy8gdHdvIGhpdCBlYXN0IHdlc3QgY2lyY2xlc1xyXG4gICAgJ1pvZGlhcmtFeCBBZGlraWEgMic6ICc2N0YyJywgLy8gdHdvIGhpdCBlYXN0IHdlc3QgY2lyY2xlc1xyXG4gIH0sXHJcbiAgZGFtYWdlRmFpbDoge1xyXG4gICAgJ1pvZGlhcmtFeCBFeHBsb3Npb24nOiAnNjdFNycsIC8vIEFzdHJhbCBFY2xpcHNlIGV4cGxvc2lvbnNcclxuICB9LFxyXG4gIHNoYXJlRmFpbDoge1xyXG4gICAgJ1pvZGlhcmtFeCBBbmlhJzogJzZCNjMnLCAvLyB0YW5rIGJ1c3RlciBzcGxhc2ggd2l0aCBoZWFkbWFya2VyXHJcbiAgfSxcclxuICB0cmlnZ2VyczogW1xyXG4gICAge1xyXG4gICAgICBpZDogJ1pvZGlhcmtFeCBBbGdlZG9uIFB1c2gnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHlGdWxsKHsgaWQ6ICc2N0VFJywgLi4ucGxheWVyRGFtYWdlRmllbGRzIH0pLFxyXG4gICAgICBkZWF0aFJlYXNvbjogKF9kYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnUHVzaGVkIG9mZiEnLFxyXG4gICAgICAgICAgICBkZTogJ1J1bnRlciBnZXNjaHVic3QhJyxcclxuICAgICAgICAgICAgZnI6ICdSZXBvdXNzw6koZSkgIScsXHJcbiAgICAgICAgICAgIGphOiAn6JC944Gh44GfJyxcclxuICAgICAgICAgICAgY246ICflh7vpgIDlnaDokL0nLFxyXG4gICAgICAgICAgICBrbzogJ+uEieuwseuQqCcsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmlnZ2VyU2V0O1xyXG4iLCJpbXBvcnQgTmV0UmVnZXhlcyBmcm9tICcuLi8uLi8uLi8uLi8uLi9yZXNvdXJjZXMvbmV0cmVnZXhlcyc7XHJcbmltcG9ydCBab25lSWQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcmVzb3VyY2VzL3pvbmVfaWQnO1xyXG5pbXBvcnQgeyBPb3BzeURhdGEgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcy9kYXRhJztcclxuaW1wb3J0IHsgT29wc3lUcmlnZ2VyU2V0IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMvb29wc3knO1xyXG5pbXBvcnQgeyBrRmxhZ0luc3RhbnREZWF0aCwgcGxheWVyRGFtYWdlRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vb29wc3lfY29tbW9uJztcclxuXHJcbi8vIFRPRE86IDYzREQgU2t5d2FyZCBMZWFwIGR1cmluZyBTdHJlbmd0aCBvZiB0aGUgSGVhdmVucyBzaG91bGQgaWdub3JlIGludnVsbmluZyB0YW5rc1xyXG4vLyBUT0RPOiB0cmFjayB2dWxucyBmcm9tIFdyYXRoIHRldGhlcnMvYmx1ZSBtYXJrZXIgaW4gY2FzZSB0aGV5IHRha2UgYSAoZGVhZGx5KSBsaXF1aWQgZmlyZSB0aWNrXHJcbi8vIFRPRE86IEFraCBNb3JuIHB1ZGRsZSBkYW1hZ2UgaXMgZWZmZWN0SWQ9MCAweDE4IGxpbmVzIGZyb20gQmxlZWRpbmcgQjg3LCBidXQgZXZlcnlib2R5IGdldHMgdGhpcyBlZmZlY3QgdGVtcG9yYXJpbHk/XHJcbi8vICAgICAgIGl0IGlzIHRoZSBvbmx5IG5vbi16ZXJvIHBsYXllciBkb3QgZGFtYWdlIGJldHdlZW4gd3JvdGggZmxhbWVzIGFuZCBob3Qgd2luZyBhbmQgaG90LXRhaWwsIHRob3VnaD9cclxuLy8gVE9ETzogR2V0dGluZyBoaXQgYnkgdGhlIHdyb25nIGNhdXRlcml6ZSBhdCB0aGUgZW5kIG9mIGFkZHMgcGhhc2VcclxuLy8gVE9ETzogdHJpbml0eSBhdXRvcyBvbiB3cm9uZyBwZW9wbGUsIGJhc2VkIG9uIGRlYnVmZnNcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGF0YSBleHRlbmRzIE9vcHN5RGF0YSB7XHJcbiAgdG93ZXJBYmlsaXR5Pzogc3RyaW5nO1xyXG4gIGNvbnZpY3Rpb25Ub3dlcj86IHsgW25hbWU6IHN0cmluZ106IGJvb2xlYW4gfTtcclxuICBoYXNEb29tPzogeyBbbmFtZTogc3RyaW5nXTogYm9vbGVhbiB9O1xyXG4gIHNlZW5Xcm90aEZsYW1lcz86IGJvb2xlYW47XHJcbn1cclxuXHJcbmNvbnN0IHRyaWdnZXJTZXQ6IE9vcHN5VHJpZ2dlclNldDxEYXRhPiA9IHtcclxuICB6b25lSWQ6IFpvbmVJZC5EcmFnb25zb25nc1JlcHJpc2VVbHRpbWF0ZSxcclxuICBkYW1hZ2VXYXJuOiB7XHJcbiAgICAnRFNSIFNlciBHcmlubmF1eCBFbXB0eSBEaW1lbnNpb24nOiAnNjJEQScsIC8vIGRvbnV0IChwaGFzZTEgYW5kIFdyYXRoKVxyXG4gICAgJ0RTUiBTZXIgR3Jpbm5hdXggRnVsbCBEaW1lbnNpb24nOiAnNjJEQicsIC8vIGNpcmNsZSAocGhhc2UgMSlcclxuICAgICdEU1IgU2VyIEFkZWxwaGVsIEhvbHkgU2hpZWxkIEJhc2gnOiAnNjNFQicsIC8vIGxpbmUgY2hhcmdlIGF0IHRldGhlcmVkIHBsYXllclxyXG4gICAgJ0RTUiBTZXIgQWRlbHBoZWwgU2hpbmluZyBCbGFkZSc6ICc2MkNFJywgLy8gZGFzaCBhdHRhY2tcclxuICAgICdEU1IgQnJpZ2h0c3BoZXJlIEJyaWdodCBGbGFyZSc6ICc2MkNGJywgLy8gc3BoZXJlcyBnZW5lcmF0ZWQgYnkgNjJDRSBTaGluaW5nIEJsYWRlXHJcbiAgICAnRFNSIFNlciBDaGFyaWJlcnQgU2t5YmxpbmQnOiAnNjMxQScsIC8vIHB1ZGRsZXMgYWZ0ZXIgQnJpZ2h0d2luZyBjbGVhdmVzXHJcbiAgICAnRFNSIFNwaXJhbCBUaHJ1c3QnOiAnNjNENCcsIC8vIGRhc2hlcyBmcm9tIFNlciBWZWxsZ3VpbmUsIFNlciBJZ25hc3NlLCBTZXIgUGF1bGVjcmFpblxyXG4gICAgJ0RTUiBTZXIgR2VycmlxdWUgSGVhdnkgSW1wYWN0IDEnOiAnNjNENicsIC8vIGV4cGFuZGluZyBlYXJ0aCByaW5nXHJcbiAgICAnRFNSIFNlciBHZXJyaXF1ZSBIZWF2eSBJbXBhY3QgMic6ICc2M0Q3JywgLy8gZXhwYW5kaW5nIGVhcnRoIHJpbmdcclxuICAgICdEU1IgU2VyIEdlcnJpcXVlIEhlYXZ5IEltcGFjdCAzJzogJzYzRDgnLCAvLyBleHBhbmRpbmcgZWFydGggcmluZ1xyXG4gICAgJ0RTUiBTZXIgR2VycmlxdWUgSGVhdnkgSW1wYWN0IDQnOiAnNjNEOScsIC8vIGV4cGFuZGluZyBlYXJ0aCByaW5nXHJcbiAgICAnRFNSIFNlciBHZXJyaXF1ZSBIZWF2eSBJbXBhY3QgNSc6ICc2M0RBJywgLy8gZXhwYW5kaW5nIGVhcnRoIHJpbmdcclxuICAgICdEU1IgU2VyIEdyaW5uYXV4IERpbWVuc2lvbmFsIENvbGxhcHNlJzogJzYzREMnLCAvLyByZWQvYmxhY2sgcHVkZGxlc1xyXG4gICAgJ0RTUiBTZXIgQ2hhcmliZXJ0IEhlYXZlblxcJ3MgU3Rha2UgMSc6ICc2RkFGJywgLy8gaW5pdGlhbCBTYW5jdGl0eSBvZiB0aGUgV2FyZCA0eCBmaXJlIHB1ZGRsZXNcclxuICAgICdEU1IgU2VyIENoYXJpYmVydCBIZWF2ZW5cXCdzIFN0YWtlIDInOiAnNkZCMCcsIC8vIFNhbmN0aXR5IG9mIHRoZSBXYXJkIGRvbnV0IHJpbmcgYmVmb3JlIGZpcmUvaWNlXHJcbiAgICAnRFNSIEtpbmcgVGhvcmRhbiBCcm9hZCBTd2luZyc6ICc2M0MyJywgLy8gM3ggZGlyZWN0aW9uYWwgY2xlYXZlc1xyXG4gICAgJ0RTUiBOaWRob2dnIEduYXNoaW5nIFdoZWVsJzogJzY3MTUnLCAvLyBcImdldCBvdXRcIiBwYXJ0IG9mIEduYXNoIGFuZCBMYXNoXHJcbiAgICAnRFNSIE5pZGhvZ2cgTGFzaGluZyBXaGVlbCc6ICc2NzE2JywgLy8gXCJnZXQgaW5cIiBwYXJ0IG9mIEduYXNoIGFuZCBMYXNoXHJcbiAgICAnRFNSIE5pZGhvZ2cgR2VpcnNrb2d1bCc6ICc2NzBBJywgLy8gYmFpdGVkIGxpbmUgYW9lcyBmcm9tIHRvd2VyIGNsb25lc1xyXG4gICAgJ0RTUiBOaWRob2dnIERyYWNoZW5sYW5jZSc6ICc2NzBDJywgLy8gZnJvbnQgY29uYWxcclxuICAgICdEU1IgVmVkcmZvbG5pciBUd2lzdGluZyBEaXZlJzogJzZCOEInLCAvLyBpbml0aWFsIGRyYWdvbiBkaXZlICsgdHdpc3RlciBkdXJpbmcgV3JhdGgvRGVhdGhcclxuICAgICdEU1IgU2VyIENoYXJpYmVydCBBbHRhciBGbGFyZSc6ICc2M0U0JywgLy8gNHggYmlnIGV4cGxvc2lvbnMgZHVyaW5nIFdyYXRoIG9mIHRoZSBIZWF2ZW5zXHJcbiAgICAnRFNSIFZpZG9mbmlyIENhdXRlcml6ZSc6ICc2QjhFJywgLy8gZGl2ZSBkdXJpbmcgV3JhdGgvRGVhdGhcclxuICAgICdEU1IgRGFya3NjYWxlIENhdXRlcml6ZSc6ICc2QjhEJywgLy8gZGl2ZSBkdXJpbmcgV3JhdGgvRGVhdGhcclxuICAgICdEU1IgRGFya3NjYWxlIENoYWluIExpZ2h0bmluZyc6ICc2QjkwJywgLy8gMnggbGlnaHRuaW5nIHNwcmVhZCBkdXJpbmcgV3JhdGggKGRvZXNuJ3QgaGl0IHBsYXllciBpdCdzIG9uKVxyXG4gICAgJ0RTUiBTZXIgWmVwaGlyaW4gU3BlYXIgb2YgdGhlIEZ1cnknOiAnNkI5MycsIC8vIHNwZWFyIGxpbmUgYW9lIGR1cmluZyBEZWF0aCBvZiB0aGUgSGVhdmVuc1xyXG4gICAgJ0RTUiBWaWRvZm5pciBXaW5ncyBvZiBTYWx2YXRpb24nOiAnNkI5NicsIC8vIHdoaXRlIHB1ZGRsZSB0aGF0IGNyZWF0ZXMgZG9vbSBjbGVhbnNlciBpbiBEZWF0aCBvZiB0aGUgSGVhdmVuc1xyXG4gICAgJ0RTUiBIcmFzZXZlbGdyIFN3aXJsaW5nIEJsaXp6YXJkJzogJzZEMzgnLCAvLyB3aW5kIGRvbnV0IGR1cmluZyBhZGRzIHBoYXNlIGZpcnN0IHRldGhlcnNcclxuICAgICdEU1IgTmlkaG9nZyBEYXJrIEJyZWF0aCc6ICc2RDNCJywgLy8gY29uYWwgYXR0YWNrIGR1cmluZyBzaW5nbGUgdGFuayBidXN0ZXIgZHVyaW5nIGFkZHMgcGhhc2UgdGV0aGVyc1xyXG4gICAgJ0RTUiBIcmFlc3ZlbGdyIEhvbHkgQnJlYXRoJzogJzZEM0MnLCAvLyBjb25hbCBhdHRhY2sgZHVyaW5nIHNpbmdsZSB0YW5rIGJ1c3RlciBkdXJpbmcgYWRkcyBwaGFzZSB0ZXRoZXJzXHJcbiAgICAnRFNSIEhyYWVzdmVsZ3IgSGFsbG93ZWQgV2luZ3MgTGVmdCBXaW5nJzogJzZEMjUnLCAvLyBsZWZ0IGdsb3dpbmcgd2luZ1xyXG4gICAgJ0RTUiBIcmFlc3ZlbGdyIEhhbGxvd2VkIFdpbmdzIFJpZ2h0IFdpbmcnOiAnNkQyOCcsIC8vIHJpZ2h0IGdsb3dpbmcgd2luZ1xyXG4gICAgJ0RTUiBUaGUgU2NhcmxldCBQcmljZSBGbGFtZSBCbGFzdCc6ICc2NzI5JywgLy8gYm9tYmVybWFuIG9yYnMgZHVyaW5nIFdyb3RoIEZsYW1lc1xyXG4gICAgJ0RTUiBOaWRob2dnIEhvdCBUYWlsJzogJzZEMkUnLCAvLyBjZW50ZXIgbGluZSBhb2VcclxuICAgICdEU1IgTmlkaG9nZyBIb3QgV2luZyc6ICc2RDJDJywgLy8gc2lkZXMgbGluZSBhb2VzXHJcbiAgfSxcclxuICBkYW1hZ2VGYWlsOiB7XHJcbiAgICAnRFNSIERpbWVuc2lvbmFsIFRvcnNpb24nOiAnNjJEOCcsIC8vIHBsYXllciB0ZXRoZXJpbmcgYSBjbG91ZFxyXG4gICAgJ0RTUiBEaW1lbnNpb25hbCBQdXJnYXRpb24nOiAnNjJEOScsIC8vIFNlciBBZGVscGhlbCB0ZXRoZXJpbmcgYSBjbG91ZCBkdXJpbmcgY2hhcmdlc1xyXG4gICAgJ0RTUiBTZXIgQ2hhcmliZXJ0IEhvbHkgQ2hhaW4nOiAnNjJFMCcsIC8vIGZhaWxpbmcgdG8gYnJlYWsgY2hhaW5zLCBvZnRlbiBraWxscyBwZW9wbGVcclxuICAgICdEU1IgU2VyIEdyaW5uYXV4IFBsYW5hciBQcmlzb24nOiAnNjNFQycsIC8vIGxlYXZpbmcgdGhlIHB1cnBsZSBjaXJjbGVcclxuICAgICdEU1IgSG9seSBDb21ldCBIb2x5IEltcGFjdCc6ICc2M0VBJywgLy8gbWV0ZW9yIGV4cGxvc2lvbiBmcm9tIGJlaW5nIHRvbyBjbG9zZVxyXG4gICAgJ0RTUiBLaW5nIFRob3JkYW4gQXNjYWxvblxcJ3MgTWVyY3kgQ29uY2VhbGVkJzogJzYzQzknLCAvLyBwcm90ZWFuIDJuZCBoaXRcclxuICAgICdEU1IgTmlkaG9nZyBEYXJrZHJhZ29uIERpdmUgTWlzcyc6ICc2NzFCJywgLy8gdG93ZXIgZmFpbHVyZVxyXG4gICAgJ0RTUiBEcmFnb24tS2luZyBUaG9yZGFuIEZsYW1lcyBvZiBBc2NhbG9uJzogJzZEOTEnLCAvLyBmaW5hbCBwaGFzZSBcImdldCBvdXRcIlxyXG4gICAgJ0RTUiBEcmFnb24tS2luZyBUaG9yZGFuIEljZSBvZiBBc2NhbG9uJzogJzZEOTInLCAvLyBmaW5hbCBwaGFzZSBcImdldCBpblwiXHJcbiAgICAnRFNSIERyYWdvbi1LaW5nIFRob3JkYW4gRXhhZmxhcmVcXCdzIEVkZ2UgMSc6ICc2RDlDJywgLy8gZmluYWwgcGhhc2UgZXhhZmxhcmVzIChpbml0aWFsKVxyXG4gICAgJ0RTUiBEcmFnb24tS2luZyBUaG9yZGFuIEV4YWZsYXJlXFwncyBFZGdlIDInOiAnNkQ5RCcsIC8vIGZpbmFsIHBoYXNlIGV4YWZsYXJlc1xyXG4gIH0sXHJcbiAgZ2FpbnNFZmZlY3RGYWlsOiB7XHJcbiAgICAnRFNSIEJ1cm5zJzogJ0I4MScsIC8vIGZpcmUgcHVkZGxlcyBkdXJpbmcgU2FuY3RpdHkgb2YgdGhlIFdhcmRcclxuICAgICdEU1IgRnJvc3RiaXRlJzogJ0I4MicsIC8vIGljZSBwdWRkbGVzIGR1cmluZyBTYW5jdGl0eSBvZiB0aGUgV2FyZFxyXG4gICAgJ0RTUiBTdXBwdXJhdGlvbic6ICdDM0QnLCAvLyBzaGFyaW5nIGEgTW9ydGFsIFZvdyBwYXNzIChvciBpbml0aWFsIGFwcGxpY2F0aW9uKVxyXG4gIH0sXHJcbiAgc2hhcmVXYXJuOiB7XHJcbiAgICAnRFNSIFNlciBBZGVscGhlbCBFeGVjdXRpb24nOiAnNjJENScsIC8vIGRpdmUgb24gbWFpbiB0YW5rIGFmdGVyIDYyQ0UgU2hpbmluZyBCbGFkZVxyXG4gICAgJ0RTUiBTZXIgQ2hhcmliZXJ0IEhlYXZlbnNmbGFtZSc6ICc2MkRGJywgLy8gc3ByZWFkIHdpdGggNjJFMCBIb2x5IENoYWluIChhbHNvIGluIERlYXRoKVxyXG4gICAgJ0RTUiBTZXIgQ2hhcmliZXJ0IEJyaWdodHdpbmcnOiAnNjMxOScsIC8vIGNsZWF2ZXMgZHVyaW5nIFB1cmUgb2YgSGVhcnRcclxuICAgICdEU1IgS2luZyBUaG9yZGFuIEF0dGFjayc6ICc2M0JCJywgLy8gS2luZyBUaG9yZGFuIGNsZWF2ZSBhdXRvc1xyXG4gICAgJ0RTUiBLaW5nIFRob3JkYW4gTGlnaHRuaW5nIFN0b3JtJzogJzYzQ0QnLCAvLyBzcHJlYWQgZHVyaW5nIFN0cmVuZ3RoIG9mIHRoZSBXYXJkXHJcbiAgICAnRFNSIE5pZGhvZ2cgQXR0YWNrJzogJzY3MzAnLCAvLyBOaWRob2dnIGNsZWF2ZSBhdXRvc1xyXG4gICAgJ0RTUiBOaWRob2dnIERhcmsgSGlnaCBKdW1wJzogJzY3MEUnLCAvLyBzaGFyaW5nIGEgY2lyY2xlIG1hcmtlciB0b3dlciBkcm9wXHJcbiAgICAnRFNSIE5pZGhvZ2cgRGFyayBTcGluZXNoYXR0ZXIgRGl2ZSc6ICc2NzBGJywgLy8gc2hhcmluZyBhbiB1cC9mb3J3YXJkcyBhcnJvdyBtYXJrZXIgdG93ZXIgZHJvcFxyXG4gICAgJ0RTUiBOaWRob2dnIERhcmsgRWx1c2l2ZSBKdW1wJzogJzY3MTAnLCAvLyBzaGFyaW5nIGEgZG93bi9iYWNrIGFycm93IG1hcmtlciB0b3dlciBkcm9wXHJcbiAgICAnRFNSIE5pZGhvZ2cgRGFya2RyYWdvbiBEaXZlIFNoYXJlJzogJzY3MTEnLCAvLyBzaGFyaW5nIGEgc2luZ2xlIHRvd2VyXHJcbiAgICAnRFNSIFNwaXJhbCBQaWVyY2UnOiAnNkI4QScsIC8vIFNlciBJZ25hc3NlIGFuZCBTZXIgVmVsbGd1aW5lIHRldGhlciBjaGFyZ2VzIGR1cmluZyBXcmF0aFxyXG4gICAgJ0RTUiBLaW5nIFRob3JkYW4gQXNjYWxvblxcJ3MgTWVyY3kgUmV2ZWFsZWQnOiAnNjNDQicsIC8vIHByb3RlYW4gZHVyaW5nIFdyYXRoXHJcbiAgfSxcclxuICBzaGFyZUZhaWw6IHtcclxuICAgICdEU1IgS2luZyBUaG9yZGFuIEFzY2Fsb25cXCdzIE1pZ2h0JzogJzYzQzUnLCAvLyB0YW5rIGNsZWF2ZXNcclxuICAgICdEU1IgSG9seSBTaGllbGQgQmFzaCc6ICc2MkQxJywgLy8gU2VyIEFkZWxwaGVsL0phbmxlbm91eCB0YW5rIHRldGhlciBzdHVuIGNoYXJnZXNcclxuICAgICdEU1IgTmlkaG9nZyBTb3VsIFRldGhlcic6ICc2NzFDJywgLy8gdGFuayB0ZXRoZXIgY2xlYXZlc1xyXG4gICAgJ0RTUiBOaWRob2dnIE1pcmFnZSBEaXZlJzogJzY4QzQnLCAvLyBkaXZlcyBkdXJpbmcgZXllIHBoYXNlLCBwcm9iYWJseSBhIHdpcGUgaWYgc2hhcmVkXHJcbiAgICAnRFNSIFNreXdhcmQgTGVhcCAxeCc6ICc3MkEyJywgLy8gU2VyIFBhdWxlY3JhaW5lIHNpbmdsZSBibHVlIG1hcmtlciBkdXJpbmcgV3JhdGhcclxuICAgICdEU1IgU3RhZ2dlcmluZyBCcmVhdGgnOiAnNkQzRCcsIC8vIHNvbG8gdGFuayBidXN0ZXIgZnJvbSBOaWRob2dnL0hyYWUgZHVyaW5nIGFkZHMgcGhhc2UgdGV0aGVyc1xyXG4gICAgJ0RTUiBIYWxsb3dlZCBQbHVtZSc6ICc2RDI5JywgLy8gSGFsbG93ZWQgV2luZ3MgdGFua2J1c3RlcnNcclxuICAgICdEU1IgTmlkaG9nZyBTcHJlYWRpbmcgRmxhbWVzJzogJzc0MkInLCAvLyBXcm90aCBGbGFtZXMgc3ByZWFkXHJcbiAgICAnRFNSIEtpbmcgVGhvcmRhbiBUcmluaXR5IEhpZ2hlc3QgRW5taXR5JzogJzZEOUYnLCAvLyBUcmluaXR5IGF1dG9cclxuICAgICdEU1IgS2luZyBUaG9yZGFuIFRyaW5pdHkgU2Vjb25kIEVubWl0eSc6ICc2REEwJywgLy8gVHJpbml0eSBhdXRvXHJcbiAgICAnRFNSIEtpbmcgVGhvcmRhbiBUcmluaXR5IE5lYXJlc3QnOiAnNkRBMScsIC8vIFRyaW5pdHkgYXV0b1xyXG4gIH0sXHJcbiAgc29sb1dhcm46IHtcclxuICAgICdEU1IgU2VyIEhhdW1lcmljIEhpZW1hbCBTdG9ybSc6ICc2M0U3JywgLy8gU2FuY3RpdHkgb2YgdGhlIFdhcmQgaWNlIHBhaXIgc3RhY2tzXHJcbiAgfSxcclxuICBzb2xvRmFpbDoge1xyXG4gICAgJ0RTUiBOaWRob2dnIERhcmsgT3JiJzogJzZEMzknLCAvLyBzaGFyZWQgdGFuayBidXN0ZXIgZHVyaW5nIGFkZHMgcGhhc2UgdGV0aGVyc1xyXG4gICAgJ0RTUiBIcmFlc3ZlbGdyIEhvbHkgT3JiJzogJzZEM0EnLCAvLyBzaGFyZWQgdGFuayBidXN0ZXIgZHVyaW5nIGFkZHMgcGhhc2UgdGV0aGVyc1xyXG4gICAgJ0RTUiBOaWRob2dnIEVudGFuZ2xlZCBGbGFtZXMnOiAnNzQyQycsIC8vIFdyb3RoIEZsYW1lcyBzdGFja1xyXG4gIH0sXHJcbiAgdHJpZ2dlcnM6IFtcclxuICAgIHtcclxuICAgICAgLy8gSW50ZXJydXB0LlxyXG4gICAgICBpZDogJ0RTUiBTZXIgQWRlbHBoZWwgSG9saWVzdCBIYWxsb3dpbmcnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzYyRDAnIH0pLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgdGV4dDogbWF0Y2hlcy5hYmlsaXR5IH07XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0RTUiBTZXIgSGVybWVub3N0IENvbnZpY3Rpb24gQ2FzdCBDbGVhbnVwJyxcclxuICAgICAgdHlwZTogJ1N0YXJ0c1VzaW5nJyxcclxuICAgICAgLy8gNjNERS82M0RGID0gU3RyZW5ndGggb2YgdGhlIFdhcmQgdG93ZXJzXHJcbiAgICAgIC8vIDczN0IvNzM3QyA9IFNhbmN0aXR5IG9mIHRoZSBXYXJkIGZpcnN0IHRvd2Vyc1xyXG4gICAgICAvLyA2RkVBLzZGRUIgPSBTYW5jdGl0eSBvZiB0aGUgV2FyZCBzZWNvbmQgdG93ZXJzXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLnN0YXJ0c1VzaW5nKHsgaWQ6IFsnNjNERScsICc3MzdCJywgJzZGRUEnXSB9KSxcclxuICAgICAgcnVuOiAoZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIGRhdGEudG93ZXJBYmlsaXR5ID0gbWF0Y2hlcy5pZDtcclxuICAgICAgICBkYXRhLmNvbnZpY3Rpb25Ub3dlciA9IHt9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdEU1IgU2VyIEhlcm1lbm9zdCBDb252aWN0aW9uIFRvd2VyIENvbGxlY3QnLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogWyc2M0RGJywgJzczN0MnLCAnNkZFQiddLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEsIG1hdGNoZXMpID0+IChkYXRhLmNvbnZpY3Rpb25Ub3dlciA/Pz0ge30pW21hdGNoZXMudGFyZ2V0XSA9IHRydWUsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogJ0RTUiBTZXIgSGVybWVub3N0IEV0ZXJuYWwgQ29udmljdGlvbiBGYWlsdXJlJyxcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6ICc2M0UwJyB9KSxcclxuICAgICAgc3VwcHJlc3NTZWNvbmRzOiAxLFxyXG4gICAgICBtaXN0YWtlOiAoZGF0YSkgPT4ge1xyXG4gICAgICAgIGNvbnN0IG1pc3NpbmcgPSBkYXRhLnBhcnR5LnBhcnR5TmFtZXMuZmlsdGVyKChuYW1lKSA9PiB7XHJcbiAgICAgICAgICBpZiAoZGF0YS5jb252aWN0aW9uVG93ZXI/LltuYW1lXSlcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgLy8gU2tpcCB0YW5rcyBvbiBDb252aWN0aW9uIGR1cmluZyBTdHJlbmd0aCBvZiB0aGUgV2FyZC5cclxuICAgICAgICAgIGlmIChkYXRhLnRvd2VyQWJpbGl0eSA9PT0gJzYzREUnICYmIGRhdGEucGFydHkuaXNUYW5rKG5hbWUpKVxyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9KS5zb3J0KCk7XHJcbiAgICAgICAgcmV0dXJuIG1pc3NpbmcubWFwKChuYW1lKSA9PiB7XHJcbiAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICB0eXBlOiAnZmFpbCcsXHJcbiAgICAgICAgICAgIGJsYW1lOiBuYW1lLFxyXG4gICAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgICAgZW46ICdNaXNzZWQgVG93ZXInLFxyXG4gICAgICAgICAgICAgIGRlOiAnVG93ZXIgdmVyZmVobHQnLFxyXG4gICAgICAgICAgICAgIGZyOiAnVG91ciBtYW5xdcOpZScsXHJcbiAgICAgICAgICAgICAgY246ICfplJnov4floZQnLFxyXG4gICAgICAgICAgICAgIGtvOiAn6riw65GlIOuGk+y5qCcsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICB9O1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdEU1IgS2luZyBUaG9yZGFuIEdhemUnLFxyXG4gICAgICAvLyBTYW1lIGFiaWxpdGllcyBkdXJpbmcgYm90aCBUaG9yZGFuMSBhbmQgVGhvcmRhbjJcclxuICAgICAgLy8gNjNEMSA9IFRoZSBEcmFnb24ncyBHYXplIChUaG9yZGFuIGxvb2thd2F5KVxyXG4gICAgICAvLyA2M0QyID0gVGhlIERyYWdvbidzIEdsb3J5IChleWUgbG9va2F3YXkpXHJcbiAgICAgIC8vIFRlY2huaWNhbGx5IHRoZXJlIGlzIGFsc28gYSBIeXN0ZXJpYSBzdGF0dXMgKDEyNykgYnV0IHNvbWV0aW1lcyB0aGlzIGRvZXNuJ3QgYXBwbHkgKGlmIHNvbWVib2R5IGRpZXMgdG9vIHNvb24/PykuXHJcbiAgICAgIHR5cGU6ICdBYmlsaXR5JyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuYWJpbGl0eSh7IGlkOiBbJzYzRDEnLCAnNjNEMiddLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIGNvbmRpdGlvbjogKGRhdGEsIG1hdGNoZXMpID0+IGRhdGEuRGFtYWdlRnJvbU1hdGNoZXMobWF0Y2hlcykgPiAwLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdEU1IgS2luZyBUaG9yZGFuIFR3aXN0ZXInLFxyXG4gICAgICB0eXBlOiAnQWJpbGl0eScsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmFiaWxpdHkoeyBpZDogJzZCOEMnLCAuLi5wbGF5ZXJEYW1hZ2VGaWVsZHMgfSksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIC8vIEluc3RhbnQgZGVhdGggaGFzIGEgc3BlY2lhbCBmbGFnIHZhbHVlLCBkaWZmZXJlbnRpYXRpbmdcclxuICAgICAgICAvLyBmcm9tIHRoZSBleHBsb3Npb24gZGFtYWdlIHlvdSB0YWtlIHdoZW4gc29tZWJvZHkgZWxzZVxyXG4gICAgICAgIC8vIHBvcHMgb25lLlxyXG4gICAgICAgIGlmIChtYXRjaGVzLmZsYWdzID09PSBrRmxhZ0luc3RhbnREZWF0aCkge1xyXG4gICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgdHlwZTogJ2ZhaWwnLFxyXG4gICAgICAgICAgICBibGFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICAgIHJlcG9ydElkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgICAgZW46ICdUd2lzdGVyIFBvcCcsXHJcbiAgICAgICAgICAgICAgZGU6ICdXaXJiZWxzdHVybSBiZXLDvGhydCcsXHJcbiAgICAgICAgICAgICAgZnI6ICdBcHBhcml0aW9uIGRlcyB0b3JuYWRlcycsXHJcbiAgICAgICAgICAgICAgamE6ICfjg4TjgqTjgrnjgr/jg7wnLFxyXG4gICAgICAgICAgICAgIGNuOiAn5peL6aOOJyxcclxuICAgICAgICAgICAgICBrbzogJ+2ajOyYpOumrCDrsJ/snYwnLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgfTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gSWYgbm90IHRoZSBvbmUgcG9wcGluZywganVzdCBwcmludCBcIlR3aXN0ZXJcIi5cclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgdHlwZTogJ2ZhaWwnLFxyXG4gICAgICAgICAgYmxhbWU6IG1hdGNoZXMudGFyZ2V0LFxyXG4gICAgICAgICAgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsXHJcbiAgICAgICAgICB0ZXh0OiBtYXRjaGVzLmFiaWxpdHksXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRFNSIERvb20gR2FpbicsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICdCQTAnIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiAoZGF0YS5oYXNEb29tID8/PSB7fSlbbWF0Y2hlcy50YXJnZXRdID0gdHJ1ZSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRFNSIERvb20gTG9zZScsXHJcbiAgICAgIHR5cGU6ICdMb3Nlc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmxvc2VzRWZmZWN0KHsgZWZmZWN0SWQ6ICdCQTAnIH0pLFxyXG4gICAgICBydW46IChkYXRhLCBtYXRjaGVzKSA9PiAoZGF0YS5oYXNEb29tID8/PSB7fSlbbWF0Y2hlcy50YXJnZXRdID0gZmFsc2UsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAvLyBUaGVyZSBpcyBubyB0cmlnZ2VyIGxpbmUgZm9yIHdoZW4gZG9vbSBydW5zIG91dCwgc28gY2hlY2sgc2xpZ2h0bHlcclxuICAgICAgLy8gYmVmb3JlIHRvIHNlZSBpZiBkb29tIHdhcyBjbGVhcmVkIG9yIGlmIHdlIHNob3VsZCBjb25zaWRlciBhbnlcclxuICAgICAgLy8gbm9uLWRhbWFnZSBkZWF0aCBhZnRlciB0aGlzIGEgZG9vbS5cclxuICAgICAgaWQ6ICdEU1IgRG9vbSBEZWF0aCcsXHJcbiAgICAgIHR5cGU6ICdHYWluc0VmZmVjdCcsXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLmdhaW5zRWZmZWN0KHsgZWZmZWN0SWQ6ICdCQTAnIH0pLFxyXG4gICAgICBkZWxheVNlY29uZHM6IChfZGF0YSwgbWF0Y2hlcykgPT4gcGFyc2VGbG9hdChtYXRjaGVzLmR1cmF0aW9uKSAtIDAuNSxcclxuICAgICAgZGVhdGhSZWFzb246IChkYXRhLCBtYXRjaGVzKSA9PiB7XHJcbiAgICAgICAgaWYgKCFkYXRhLmhhc0Rvb20gfHwgIWRhdGEuaGFzRG9vbVttYXRjaGVzLnRhcmdldF0pXHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiBtYXRjaGVzLnRhcmdldElkLFxyXG4gICAgICAgICAgbmFtZTogbWF0Y2hlcy50YXJnZXQsXHJcbiAgICAgICAgICB0ZXh0OiBtYXRjaGVzLmVmZmVjdCxcclxuICAgICAgICB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdEU1IgV3JvdGggRmxhbWVzJyxcclxuICAgICAgLy8gV3JvdGggRmxhbWVzIGNhc3QgaGFwcGVucywgdGhlbiBjYXV0ZXJpemUgdGhhdCBub2JvZHkgc2hvdWxkIGJlIGhpdCBieSxcclxuICAgICAgLy8gdGhlbiBhdCB0aGUgZW5kIGlzIHRoZSBmaXJzdCBIb3QgV2luZyAvIEhvdCBUYWlsLCBtYXJraW5nIHRoZSBlbmQgb2YgV3JvdGggRmxhbWVzLlxyXG4gICAgICAvLyBDYXV0ZXJpemUgYWZ0ZXIgdGhpcyBpcyBpbnRlbnRpb25hbGx5IGhpdC5cclxuICAgICAgLy8gNkQyQiA9IEhvdCBXaW5nIChzZWxmLWNhc3RlZClcclxuICAgICAgLy8gNkQyRCA9IEhvdCBUYWlsIChzZWxmLWNhc3RlZClcclxuICAgICAgdHlwZTogJ1N0YXJ0c1VzaW5nJyxcclxuICAgICAgbmV0UmVnZXg6IE5ldFJlZ2V4ZXMuc3RhcnRzVXNpbmcoeyBpZDogWyc2RDJCJywgJzZEMkQnXSwgY2FwdHVyZTogZmFsc2UgfSksXHJcbiAgICAgIHJ1bjogKGRhdGEpID0+IGRhdGEuc2Vlbldyb3RoRmxhbWVzID0gdHJ1ZSxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIGlkOiAnRFNSIEhyYWVzdmVsZ3IgTmlkaG9nZyBDYXV0ZXJpemUnLFxyXG4gICAgICAvLyBEdXJpbmcgdGhlIGZpcnN0IGhhbGxvd2VkIGFuZCB3cm90aCBmbGFtZXMsIHRoZXJlIGFyZSBjYXV0ZXJpemUgY2FzdHMuXHJcbiAgICAgIC8vIDZEM0UgPSBOaWRob2dnIChkdXJpbmcgV3JvdGggRmxhbWVzIGFuZCBiZWZvcmUgVG91Y2hkb3duKVxyXG4gICAgICAvLyA2RDNGID0gSHJhZXN2ZWxnciAoZHVyaW5nIHRoZSBmaXJzdCBIYWxsb3dlZCBXaW5ncyBhbmQgYmVmb3JlIFRvdWNoZG93bilcclxuICAgICAgdHlwZTogJ0FiaWxpdHknLFxyXG4gICAgICBuZXRSZWdleDogTmV0UmVnZXhlcy5hYmlsaXR5KHsgaWQ6IFsnNkQzRScsICc2RDNGJ10sIC4uLnBsYXllckRhbWFnZUZpZWxkcyB9KSxcclxuICAgICAgY29uZGl0aW9uOiAoZGF0YSkgPT4gIWRhdGEuc2Vlbldyb3RoRmxhbWVzLFxyXG4gICAgICBtaXN0YWtlOiAoX2RhdGEsIG1hdGNoZXMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0eXBlOiAnZmFpbCcsIGJsYW1lOiBtYXRjaGVzLnRhcmdldCwgcmVwb3J0SWQ6IG1hdGNoZXMudGFyZ2V0SWQsIHRleHQ6IG1hdGNoZXMuYWJpbGl0eSB9O1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaWQ6ICdEU1IgUHlyZXRpYycsXHJcbiAgICAgIHR5cGU6ICdOZXR3b3JrRG9UJyxcclxuICAgICAgLy8gQW1hemluZ2x5LCB0aGUgZG90L2hvdCBsaW5lIGhhcyB0aGUgZWZmZWN0IGlkIGZvciBweXJldGljIGhlcmUuICBNb3N0IGRvdHMgZG9uJ3QuXHJcbiAgICAgIG5ldFJlZ2V4OiBOZXRSZWdleGVzLm5ldHdvcmtEb1QoeyBlZmZlY3RJZDogJzNDMCcgfSksXHJcbiAgICAgIG1pc3Rha2U6IChfZGF0YSwgbWF0Y2hlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICB0eXBlOiAnZmFpbCcsXHJcbiAgICAgICAgICBibGFtZTogbWF0Y2hlcy5uYW1lLFxyXG4gICAgICAgICAgcmVwb3J0SWQ6IG1hdGNoZXMuaWQsXHJcbiAgICAgICAgICB0ZXh0OiB7XHJcbiAgICAgICAgICAgIGVuOiAnUHlyZXRpYycsXHJcbiAgICAgICAgICAgIGRlOiAnUHlyZXRpc2NoJyxcclxuICAgICAgICAgICAgZnI6ICdQeXJldGlxdWUnLFxyXG4gICAgICAgICAgICBjbjogJ+eDreeXhScsXHJcbiAgICAgICAgICAgIGtvOiAn7Je067ORJyxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdnZXJTZXQ7XHJcbiIsImltcG9ydCBmaWxlMCBmcm9tICcuLzAwLW1pc2MvZ2VuZXJhbC50cyc7XG5pbXBvcnQgZmlsZTEgZnJvbSAnLi8wMC1taXNjL3Rlc3QudHMnO1xuaW1wb3J0IGZpbGUyIGZyb20gJy4vMDItYXJyL3RyaWFsL2lmcml0LW5tLnRzJztcbmltcG9ydCBmaWxlMyBmcm9tICcuLzAyLWFyci90cmlhbC9sZXZpLWV4LnRzJztcbmltcG9ydCBmaWxlNCBmcm9tICcuLzAyLWFyci90cmlhbC9zaGl2YS1leC50cyc7XG5pbXBvcnQgZmlsZTUgZnJvbSAnLi8wMi1hcnIvdHJpYWwvc2hpdmEtaG0udHMnO1xuaW1wb3J0IGZpbGU2IGZyb20gJy4vMDItYXJyL3RyaWFsL3RpdGFuLWV4LnRzJztcbmltcG9ydCBmaWxlNyBmcm9tICcuLzAyLWFyci90cmlhbC90aXRhbi1obS50cyc7XG5pbXBvcnQgZmlsZTggZnJvbSAnLi8wMi1hcnIvdHJpYWwvdGl0YW4tbm0udHMnO1xuaW1wb3J0IGZpbGU5IGZyb20gJy4vMDItYXJyL3RyaWFsL3VsdGltYS1leC50cyc7XG5pbXBvcnQgZmlsZTEwIGZyb20gJy4vMDMtaHcvYWxsaWFuY2Uvd2VlcGluZ19jaXR5LnRzJztcbmltcG9ydCBmaWxlMTEgZnJvbSAnLi8wMy1ody9kdW5nZW9uL2FldGhlcm9jaGVtaWNhbF9yZXNlYXJjaF9mYWNpbGl0eS50cyc7XG5pbXBvcnQgZmlsZTEyIGZyb20gJy4vMDMtaHcvZHVuZ2Vvbi9iYWVsc2Fyc193YWxsLnRzJztcbmltcG9ydCBmaWxlMTMgZnJvbSAnLi8wMy1ody9kdW5nZW9uL2ZyYWN0YWxfY29udGludXVtLnRzJztcbmltcG9ydCBmaWxlMTQgZnJvbSAnLi8wMy1ody9kdW5nZW9uL2d1YmFsX2xpYnJhcnlfaGFyZC50cyc7XG5pbXBvcnQgZmlsZTE1IGZyb20gJy4vMDMtaHcvZHVuZ2Vvbi9zb2htX2FsX2hhcmQudHMnO1xuaW1wb3J0IGZpbGUxNiBmcm9tICcuLzAzLWh3L2R1bmdlb24vdGhlX2xvc3RfY2l0eV9vZl9hbWRhcG9yX2hhcmQudHMnO1xuaW1wb3J0IGZpbGUxNyBmcm9tICcuLzAzLWh3L3JhaWQvYTNuLnRzJztcbmltcG9ydCBmaWxlMTggZnJvbSAnLi8wMy1ody9yYWlkL2ExMm4udHMnO1xuaW1wb3J0IGZpbGUxOSBmcm9tICcuLzAzLWh3L3JhaWQvYTEwbi50cyc7XG5pbXBvcnQgZmlsZTIwIGZyb20gJy4vMDMtaHcvcmFpZC9hNm4udHMnO1xuaW1wb3J0IGZpbGUyMSBmcm9tICcuLzAzLWh3L3RyaWFsL3NlcGhpcm90LWV4LnRzJztcbmltcG9ydCBmaWxlMjIgZnJvbSAnLi8wNC1zYi9hbGxpYW5jZS9vcmJvbm5lX21vbmFzdGVyeS50cyc7XG5pbXBvcnQgZmlsZTIzIGZyb20gJy4vMDQtc2IvYWxsaWFuY2Uvcmlkb3JhbmFfbGlnaHRob3VzZS50cyc7XG5pbXBvcnQgZmlsZTI0IGZyb20gJy4vMDQtc2IvYWxsaWFuY2Uvcm95YWxfY2l0eV9vZl9yYWJhbmFzdHJlLnRzJztcbmltcG9ydCBmaWxlMjUgZnJvbSAnLi8wNC1zYi9kdW5nZW9uL2FsYV9taGlnby50cyc7XG5pbXBvcnQgZmlsZTI2IGZyb20gJy4vMDQtc2IvZHVuZ2Vvbi9iYXJkYW1zX21ldHRsZS50cyc7XG5pbXBvcnQgZmlsZTI3IGZyb20gJy4vMDQtc2IvZHVuZ2Vvbi9jYXN0cnVtX2FiYW5pYS50cyc7XG5pbXBvcnQgZmlsZTI4IGZyb20gJy4vMDQtc2IvZHVuZ2Vvbi9kb21hX2Nhc3RsZS50cyc7XG5pbXBvcnQgZmlsZTI5IGZyb20gJy4vMDQtc2IvZHVuZ2Vvbi9kcm93bmVkX2NpdHlfb2Zfc2thbGxhLnRzJztcbmltcG9ydCBmaWxlMzAgZnJvbSAnLi8wNC1zYi9kdW5nZW9uL2ZyYWN0YWxfY29udGludXVtX2hhcmQudHMnO1xuaW1wb3J0IGZpbGUzMSBmcm9tICcuLzA0LXNiL2R1bmdlb24vZ2hpbWx5dF9kYXJrLnRzJztcbmltcG9ydCBmaWxlMzIgZnJvbSAnLi8wNC1zYi9kdW5nZW9uL2hlbGxzX2xpZC50cyc7XG5pbXBvcnQgZmlsZTMzIGZyb20gJy4vMDQtc2IvZHVuZ2Vvbi9rdWdhbmVfY2FzdGxlLnRzJztcbmltcG9ydCBmaWxlMzQgZnJvbSAnLi8wNC1zYi9kdW5nZW9uL3NoaXN1aV9vZl90aGVfdmlvbGV0X3RpZGVzLnRzJztcbmltcG9ydCBmaWxlMzUgZnJvbSAnLi8wNC1zYi9kdW5nZW9uL3NpcmVuc29uZ19zZWEudHMnO1xuaW1wb3J0IGZpbGUzNiBmcm9tICcuLzA0LXNiL2R1bmdlb24vc3RfbW9jaWFubmVfaGFyZC50cyc7XG5pbXBvcnQgZmlsZTM3IGZyb20gJy4vMDQtc2IvZHVuZ2Vvbi9zd2FsbG93c19jb21wYXNzLnRzJztcbmltcG9ydCBmaWxlMzggZnJvbSAnLi8wNC1zYi9kdW5nZW9uL3RlbXBsZV9vZl90aGVfZmlzdC50cyc7XG5pbXBvcnQgZmlsZTM5IGZyb20gJy4vMDQtc2IvZHVuZ2Vvbi90aGVfYnVybi50cyc7XG5pbXBvcnQgZmlsZTQwIGZyb20gJy4vMDQtc2IvcmFpZC9vMTBuLnRzJztcbmltcG9ydCBmaWxlNDEgZnJvbSAnLi8wNC1zYi9yYWlkL28xMHMudHMnO1xuaW1wb3J0IGZpbGU0MiBmcm9tICcuLzA0LXNiL3JhaWQvbzExbi50cyc7XG5pbXBvcnQgZmlsZTQzIGZyb20gJy4vMDQtc2IvcmFpZC9vMTFzLnRzJztcbmltcG9ydCBmaWxlNDQgZnJvbSAnLi8wNC1zYi9yYWlkL28xMm4udHMnO1xuaW1wb3J0IGZpbGU0NSBmcm9tICcuLzA0LXNiL3JhaWQvbzEycy50cyc7XG5pbXBvcnQgZmlsZTQ2IGZyb20gJy4vMDQtc2IvcmFpZC9vMW4udHMnO1xuaW1wb3J0IGZpbGU0NyBmcm9tICcuLzA0LXNiL3JhaWQvbzFzLnRzJztcbmltcG9ydCBmaWxlNDggZnJvbSAnLi8wNC1zYi9yYWlkL28ybi50cyc7XG5pbXBvcnQgZmlsZTQ5IGZyb20gJy4vMDQtc2IvcmFpZC9vMnMudHMnO1xuaW1wb3J0IGZpbGU1MCBmcm9tICcuLzA0LXNiL3JhaWQvbzNuLnRzJztcbmltcG9ydCBmaWxlNTEgZnJvbSAnLi8wNC1zYi9yYWlkL28zcy50cyc7XG5pbXBvcnQgZmlsZTUyIGZyb20gJy4vMDQtc2IvcmFpZC9vNG4udHMnO1xuaW1wb3J0IGZpbGU1MyBmcm9tICcuLzA0LXNiL3JhaWQvbzRzLnRzJztcbmltcG9ydCBmaWxlNTQgZnJvbSAnLi8wNC1zYi9yYWlkL281bi50cyc7XG5pbXBvcnQgZmlsZTU1IGZyb20gJy4vMDQtc2IvcmFpZC9vNXMudHMnO1xuaW1wb3J0IGZpbGU1NiBmcm9tICcuLzA0LXNiL3JhaWQvbzZuLnRzJztcbmltcG9ydCBmaWxlNTcgZnJvbSAnLi8wNC1zYi9yYWlkL282cy50cyc7XG5pbXBvcnQgZmlsZTU4IGZyb20gJy4vMDQtc2IvcmFpZC9vN24udHMnO1xuaW1wb3J0IGZpbGU1OSBmcm9tICcuLzA0LXNiL3JhaWQvbzdzLnRzJztcbmltcG9ydCBmaWxlNjAgZnJvbSAnLi8wNC1zYi9yYWlkL284bi50cyc7XG5pbXBvcnQgZmlsZTYxIGZyb20gJy4vMDQtc2IvcmFpZC9vOHMudHMnO1xuaW1wb3J0IGZpbGU2MiBmcm9tICcuLzA0LXNiL3JhaWQvbzluLnRzJztcbmltcG9ydCBmaWxlNjMgZnJvbSAnLi8wNC1zYi9yYWlkL285cy50cyc7XG5pbXBvcnQgZmlsZTY0IGZyb20gJy4vMDQtc2IvdHJpYWwvYnlha2tvLnRzJztcbmltcG9ydCBmaWxlNjUgZnJvbSAnLi8wNC1zYi90cmlhbC9ieWFra28tZXgudHMnO1xuaW1wb3J0IGZpbGU2NiBmcm9tICcuLzA0LXNiL3RyaWFsL2xha3NobWkudHMnO1xuaW1wb3J0IGZpbGU2NyBmcm9tICcuLzA0LXNiL3RyaWFsL2xha3NobWktZXgudHMnO1xuaW1wb3J0IGZpbGU2OCBmcm9tICcuLzA0LXNiL3RyaWFsL3JhdGhhbG9zLnRzJztcbmltcG9ydCBmaWxlNjkgZnJvbSAnLi8wNC1zYi90cmlhbC9yYXRoYWxvcy1leC50cyc7XG5pbXBvcnQgZmlsZTcwIGZyb20gJy4vMDQtc2IvdHJpYWwvc2Vpcnl1LnRzJztcbmltcG9ydCBmaWxlNzEgZnJvbSAnLi8wNC1zYi90cmlhbC9zZWlyeXUtZXgudHMnO1xuaW1wb3J0IGZpbGU3MiBmcm9tICcuLzA0LXNiL3RyaWFsL3NoaW5yeXUudHMnO1xuaW1wb3J0IGZpbGU3MyBmcm9tICcuLzA0LXNiL3RyaWFsL3NoaW5yeXUtZXgudHMnO1xuaW1wb3J0IGZpbGU3NCBmcm9tICcuLzA0LXNiL3RyaWFsL3N1c2Fuby50cyc7XG5pbXBvcnQgZmlsZTc1IGZyb20gJy4vMDQtc2IvdHJpYWwvc3VzYW5vLWV4LnRzJztcbmltcG9ydCBmaWxlNzYgZnJvbSAnLi8wNC1zYi90cmlhbC9zdXpha3UudHMnO1xuaW1wb3J0IGZpbGU3NyBmcm9tICcuLzA0LXNiL3RyaWFsL3N1emFrdS1leC50cyc7XG5pbXBvcnQgZmlsZTc4IGZyb20gJy4vMDQtc2IvdHJpYWwvdHN1a3V5b21pLnRzJztcbmltcG9ydCBmaWxlNzkgZnJvbSAnLi8wNC1zYi90cmlhbC90c3VrdXlvbWktZXgudHMnO1xuaW1wb3J0IGZpbGU4MCBmcm9tICcuLzA0LXNiL3RyaWFsL3lvamltYm8udHMnO1xuaW1wb3J0IGZpbGU4MSBmcm9tICcuLzA0LXNiL3VsdGltYXRlL3VsdGltYV93ZWFwb25fdWx0aW1hdGUudHMnO1xuaW1wb3J0IGZpbGU4MiBmcm9tICcuLzA0LXNiL3VsdGltYXRlL3VuZW5kaW5nX2NvaWxfdWx0aW1hdGUudHMnO1xuaW1wb3J0IGZpbGU4MyBmcm9tICcuLzA1LXNoYi9hbGxpYW5jZS90aGVfY29waWVkX2ZhY3RvcnkudHMnO1xuaW1wb3J0IGZpbGU4NCBmcm9tICcuLzA1LXNoYi9hbGxpYW5jZS90aGVfcHVwcGV0c19idW5rZXIudHMnO1xuaW1wb3J0IGZpbGU4NSBmcm9tICcuLzA1LXNoYi9hbGxpYW5jZS90aGVfdG93ZXJfYXRfcGFyYWRpZ21zX2JyZWFjaC50cyc7XG5pbXBvcnQgZmlsZTg2IGZyb20gJy4vMDUtc2hiL2R1bmdlb24vYWthZGFlbWlhX2FueWRlci50cyc7XG5pbXBvcnQgZmlsZTg3IGZyb20gJy4vMDUtc2hiL2R1bmdlb24vYW1hdXJvdC50cyc7XG5pbXBvcnQgZmlsZTg4IGZyb20gJy4vMDUtc2hiL2R1bmdlb24vYW5hbW5lc2lzX2FueWRlci50cyc7XG5pbXBvcnQgZmlsZTg5IGZyb20gJy4vMDUtc2hiL2R1bmdlb24vZG9obl9taGVnLnRzJztcbmltcG9ydCBmaWxlOTAgZnJvbSAnLi8wNS1zaGIvZHVuZ2Vvbi9oZXJvZXNfZ2F1bnRsZXQudHMnO1xuaW1wb3J0IGZpbGU5MSBmcm9tICcuLzA1LXNoYi9kdW5nZW9uL2hvbG1pbnN0ZXJfc3dpdGNoLnRzJztcbmltcG9ydCBmaWxlOTIgZnJvbSAnLi8wNS1zaGIvZHVuZ2Vvbi9tYWxpa2Foc193ZWxsLnRzJztcbmltcG9ydCBmaWxlOTMgZnJvbSAnLi8wNS1zaGIvZHVuZ2Vvbi9tYXRveWFzX3JlbGljdC50cyc7XG5pbXBvcnQgZmlsZTk0IGZyb20gJy4vMDUtc2hiL2R1bmdlb24vbXRfZ3VsZy50cyc7XG5pbXBvcnQgZmlsZTk1IGZyb20gJy4vMDUtc2hiL2R1bmdlb24vcGFnbHRoYW4udHMnO1xuaW1wb3J0IGZpbGU5NiBmcm9tICcuLzA1LXNoYi9kdW5nZW9uL3FpdGFuYV9yYXZlbC50cyc7XG5pbXBvcnQgZmlsZTk3IGZyb20gJy4vMDUtc2hiL2R1bmdlb24vdGhlX2dyYW5kX2Nvc21vcy50cyc7XG5pbXBvcnQgZmlsZTk4IGZyb20gJy4vMDUtc2hiL2R1bmdlb24vdHdpbm5pbmcudHMnO1xuaW1wb3J0IGZpbGU5OSBmcm9tICcuLzA1LXNoYi9ldXJla2EvZGVsdWJydW1fcmVnaW5hZS50cyc7XG5pbXBvcnQgZmlsZTEwMCBmcm9tICcuLzA1LXNoYi9ldXJla2EvZGVsdWJydW1fcmVnaW5hZV9zYXZhZ2UudHMnO1xuaW1wb3J0IGZpbGUxMDEgZnJvbSAnLi8wNS1zaGIvcmFpZC9lMTBuLnRzJztcbmltcG9ydCBmaWxlMTAyIGZyb20gJy4vMDUtc2hiL3JhaWQvZTEwcy50cyc7XG5pbXBvcnQgZmlsZTEwMyBmcm9tICcuLzA1LXNoYi9yYWlkL2UxMW4udHMnO1xuaW1wb3J0IGZpbGUxMDQgZnJvbSAnLi8wNS1zaGIvcmFpZC9lMTFzLnRzJztcbmltcG9ydCBmaWxlMTA1IGZyb20gJy4vMDUtc2hiL3JhaWQvZTEybi50cyc7XG5pbXBvcnQgZmlsZTEwNiBmcm9tICcuLzA1LXNoYi9yYWlkL2UxMnMudHMnO1xuaW1wb3J0IGZpbGUxMDcgZnJvbSAnLi8wNS1zaGIvcmFpZC9lMW4udHMnO1xuaW1wb3J0IGZpbGUxMDggZnJvbSAnLi8wNS1zaGIvcmFpZC9lMXMudHMnO1xuaW1wb3J0IGZpbGUxMDkgZnJvbSAnLi8wNS1zaGIvcmFpZC9lMm4udHMnO1xuaW1wb3J0IGZpbGUxMTAgZnJvbSAnLi8wNS1zaGIvcmFpZC9lMnMudHMnO1xuaW1wb3J0IGZpbGUxMTEgZnJvbSAnLi8wNS1zaGIvcmFpZC9lM24udHMnO1xuaW1wb3J0IGZpbGUxMTIgZnJvbSAnLi8wNS1zaGIvcmFpZC9lM3MudHMnO1xuaW1wb3J0IGZpbGUxMTMgZnJvbSAnLi8wNS1zaGIvcmFpZC9lNG4udHMnO1xuaW1wb3J0IGZpbGUxMTQgZnJvbSAnLi8wNS1zaGIvcmFpZC9lNHMudHMnO1xuaW1wb3J0IGZpbGUxMTUgZnJvbSAnLi8wNS1zaGIvcmFpZC9lNW4udHMnO1xuaW1wb3J0IGZpbGUxMTYgZnJvbSAnLi8wNS1zaGIvcmFpZC9lNXMudHMnO1xuaW1wb3J0IGZpbGUxMTcgZnJvbSAnLi8wNS1zaGIvcmFpZC9lNm4udHMnO1xuaW1wb3J0IGZpbGUxMTggZnJvbSAnLi8wNS1zaGIvcmFpZC9lNnMudHMnO1xuaW1wb3J0IGZpbGUxMTkgZnJvbSAnLi8wNS1zaGIvcmFpZC9lN24udHMnO1xuaW1wb3J0IGZpbGUxMjAgZnJvbSAnLi8wNS1zaGIvcmFpZC9lN3MudHMnO1xuaW1wb3J0IGZpbGUxMjEgZnJvbSAnLi8wNS1zaGIvcmFpZC9lOG4udHMnO1xuaW1wb3J0IGZpbGUxMjIgZnJvbSAnLi8wNS1zaGIvcmFpZC9lOHMudHMnO1xuaW1wb3J0IGZpbGUxMjMgZnJvbSAnLi8wNS1zaGIvcmFpZC9lOW4udHMnO1xuaW1wb3J0IGZpbGUxMjQgZnJvbSAnLi8wNS1zaGIvcmFpZC9lOXMudHMnO1xuaW1wb3J0IGZpbGUxMjUgZnJvbSAnLi8wNS1zaGIvdHJpYWwvZGlhbW9uZF93ZWFwb24udHMnO1xuaW1wb3J0IGZpbGUxMjYgZnJvbSAnLi8wNS1zaGIvdHJpYWwvZGlhbW9uZF93ZWFwb24tZXgudHMnO1xuaW1wb3J0IGZpbGUxMjcgZnJvbSAnLi8wNS1zaGIvdHJpYWwvZW1lcmFsZF93ZWFwb24udHMnO1xuaW1wb3J0IGZpbGUxMjggZnJvbSAnLi8wNS1zaGIvdHJpYWwvZW1lcmFsZF93ZWFwb24tZXgudHMnO1xuaW1wb3J0IGZpbGUxMjkgZnJvbSAnLi8wNS1zaGIvdHJpYWwvaGFkZXMudHMnO1xuaW1wb3J0IGZpbGUxMzAgZnJvbSAnLi8wNS1zaGIvdHJpYWwvaGFkZXMtZXgudHMnO1xuaW1wb3J0IGZpbGUxMzEgZnJvbSAnLi8wNS1zaGIvdHJpYWwvaW5ub2NlbmNlLnRzJztcbmltcG9ydCBmaWxlMTMyIGZyb20gJy4vMDUtc2hiL3RyaWFsL2lubm9jZW5jZS1leC50cyc7XG5pbXBvcnQgZmlsZTEzMyBmcm9tICcuLzA1LXNoYi90cmlhbC9sZXZpLXVuLnRzJztcbmltcG9ydCBmaWxlMTM0IGZyb20gJy4vMDUtc2hiL3RyaWFsL3J1Ynlfd2VhcG9uLnRzJztcbmltcG9ydCBmaWxlMTM1IGZyb20gJy4vMDUtc2hiL3RyaWFsL3J1Ynlfd2VhcG9uLWV4LnRzJztcbmltcG9ydCBmaWxlMTM2IGZyb20gJy4vMDUtc2hiL3RyaWFsL3NoaXZhLXVuLnRzJztcbmltcG9ydCBmaWxlMTM3IGZyb20gJy4vMDUtc2hiL3RyaWFsL3RpdGFuaWEudHMnO1xuaW1wb3J0IGZpbGUxMzggZnJvbSAnLi8wNS1zaGIvdHJpYWwvdGl0YW5pYS1leC50cyc7XG5pbXBvcnQgZmlsZTEzOSBmcm9tICcuLzA1LXNoYi90cmlhbC90aXRhbi11bi50cyc7XG5pbXBvcnQgZmlsZTE0MCBmcm9tICcuLzA1LXNoYi90cmlhbC92YXJpcy1leC50cyc7XG5pbXBvcnQgZmlsZTE0MSBmcm9tICcuLzA1LXNoYi90cmlhbC93b2wudHMnO1xuaW1wb3J0IGZpbGUxNDIgZnJvbSAnLi8wNS1zaGIvdHJpYWwvd29sLWV4LnRzJztcbmltcG9ydCBmaWxlMTQzIGZyb20gJy4vMDUtc2hiL3VsdGltYXRlL3RoZV9lcGljX29mX2FsZXhhbmRlci50cyc7XG5pbXBvcnQgZmlsZTE0NCBmcm9tICcuLzA2LWV3L2FsbGlhbmNlL2FnbGFpYS50cyc7XG5pbXBvcnQgZmlsZTE0NSBmcm9tICcuLzA2LWV3L2R1bmdlb24vYWx6YWRhYWxzX2xlZ2FjeS50cyc7XG5pbXBvcnQgZmlsZTE0NiBmcm9tICcuLzA2LWV3L2R1bmdlb24va3Rpc2lzX2h5cGVyYm9yZWlhLnRzJztcbmltcG9ydCBmaWxlMTQ3IGZyb20gJy4vMDYtZXcvZHVuZ2Vvbi9zbWlsZXRvbi50cyc7XG5pbXBvcnQgZmlsZTE0OCBmcm9tICcuLzA2LWV3L2R1bmdlb24vc3RpZ21hX2RyZWFtc2NhcGUudHMnO1xuaW1wb3J0IGZpbGUxNDkgZnJvbSAnLi8wNi1ldy9kdW5nZW9uL3RoZV9haXRpYXNjb3BlLnRzJztcbmltcG9ydCBmaWxlMTUwIGZyb20gJy4vMDYtZXcvZHVuZ2Vvbi90aGVfZGVhZF9lbmRzLnRzJztcbmltcG9ydCBmaWxlMTUxIGZyb20gJy4vMDYtZXcvZHVuZ2Vvbi90aGVfZmVsbF9jb3VydF9vZl90cm9pYS50cyc7XG5pbXBvcnQgZmlsZTE1MiBmcm9tICcuLzA2LWV3L2R1bmdlb24vdGhlX3Rvd2VyX29mX2JhYmlsLnRzJztcbmltcG9ydCBmaWxlMTUzIGZyb20gJy4vMDYtZXcvZHVuZ2Vvbi90aGVfdG93ZXJfb2Zfem90LnRzJztcbmltcG9ydCBmaWxlMTU0IGZyb20gJy4vMDYtZXcvZHVuZ2Vvbi92YW5hc3BhdGkudHMnO1xuaW1wb3J0IGZpbGUxNTUgZnJvbSAnLi8wNi1ldy9yYWlkL3Axbi50cyc7XG5pbXBvcnQgZmlsZTE1NiBmcm9tICcuLzA2LWV3L3JhaWQvcDFzLnRzJztcbmltcG9ydCBmaWxlMTU3IGZyb20gJy4vMDYtZXcvcmFpZC9wMm4udHMnO1xuaW1wb3J0IGZpbGUxNTggZnJvbSAnLi8wNi1ldy9yYWlkL3Aycy50cyc7XG5pbXBvcnQgZmlsZTE1OSBmcm9tICcuLzA2LWV3L3JhaWQvcDNuLnRzJztcbmltcG9ydCBmaWxlMTYwIGZyb20gJy4vMDYtZXcvcmFpZC9wM3MudHMnO1xuaW1wb3J0IGZpbGUxNjEgZnJvbSAnLi8wNi1ldy9yYWlkL3A0bi50cyc7XG5pbXBvcnQgZmlsZTE2MiBmcm9tICcuLzA2LWV3L3JhaWQvcDRzLnRzJztcbmltcG9ydCBmaWxlMTYzIGZyb20gJy4vMDYtZXcvcmFpZC9wNW4udHMnO1xuaW1wb3J0IGZpbGUxNjQgZnJvbSAnLi8wNi1ldy9yYWlkL3A1cy50cyc7XG5pbXBvcnQgZmlsZTE2NSBmcm9tICcuLzA2LWV3L3JhaWQvcDZuLnRzJztcbmltcG9ydCBmaWxlMTY2IGZyb20gJy4vMDYtZXcvcmFpZC9wNnMudHMnO1xuaW1wb3J0IGZpbGUxNjcgZnJvbSAnLi8wNi1ldy9yYWlkL3A3bi50cyc7XG5pbXBvcnQgZmlsZTE2OCBmcm9tICcuLzA2LWV3L3JhaWQvcDdzLnRzJztcbmltcG9ydCBmaWxlMTY5IGZyb20gJy4vMDYtZXcvcmFpZC9wOG4udHMnO1xuaW1wb3J0IGZpbGUxNzAgZnJvbSAnLi8wNi1ldy9yYWlkL3A4cy50cyc7XG5pbXBvcnQgZmlsZTE3MSBmcm9tICcuLzA2LWV3L3RyaWFsL2JhcmJhcmljY2lhLnRzJztcbmltcG9ydCBmaWxlMTcyIGZyb20gJy4vMDYtZXcvdHJpYWwvYmFyYmFyaWNjaWEtZXgudHMnO1xuaW1wb3J0IGZpbGUxNzMgZnJvbSAnLi8wNi1ldy90cmlhbC9lbmRzaW5nZXIudHMnO1xuaW1wb3J0IGZpbGUxNzQgZnJvbSAnLi8wNi1ldy90cmlhbC9lbmRzaW5nZXItZXgudHMnO1xuaW1wb3J0IGZpbGUxNzUgZnJvbSAnLi8wNi1ldy90cmlhbC9oeWRhZWx5bi50cyc7XG5pbXBvcnQgZmlsZTE3NiBmcm9tICcuLzA2LWV3L3RyaWFsL2h5ZGFlbHluLWV4LnRzJztcbmltcG9ydCBmaWxlMTc3IGZyb20gJy4vMDYtZXcvdHJpYWwvc2VwaGlyb3QtdW4udHMnO1xuaW1wb3J0IGZpbGUxNzggZnJvbSAnLi8wNi1ldy90cmlhbC91bHRpbWEtdW4udHMnO1xuaW1wb3J0IGZpbGUxNzkgZnJvbSAnLi8wNi1ldy90cmlhbC96b2RpYXJrLnRzJztcbmltcG9ydCBmaWxlMTgwIGZyb20gJy4vMDYtZXcvdHJpYWwvem9kaWFyay1leC50cyc7XG5pbXBvcnQgZmlsZTE4MSBmcm9tICcuLzA2LWV3L3VsdGltYXRlL2RyYWdvbnNvbmdzX3JlcHJpc2VfdWx0aW1hdGUudHMnO1xuXG5leHBvcnQgZGVmYXVsdCB7JzAwLW1pc2MvZ2VuZXJhbC50cyc6IGZpbGUwLCcwMC1taXNjL3Rlc3QudHMnOiBmaWxlMSwnMDItYXJyL3RyaWFsL2lmcml0LW5tLnRzJzogZmlsZTIsJzAyLWFyci90cmlhbC9sZXZpLWV4LnRzJzogZmlsZTMsJzAyLWFyci90cmlhbC9zaGl2YS1leC50cyc6IGZpbGU0LCcwMi1hcnIvdHJpYWwvc2hpdmEtaG0udHMnOiBmaWxlNSwnMDItYXJyL3RyaWFsL3RpdGFuLWV4LnRzJzogZmlsZTYsJzAyLWFyci90cmlhbC90aXRhbi1obS50cyc6IGZpbGU3LCcwMi1hcnIvdHJpYWwvdGl0YW4tbm0udHMnOiBmaWxlOCwnMDItYXJyL3RyaWFsL3VsdGltYS1leC50cyc6IGZpbGU5LCcwMy1ody9hbGxpYW5jZS93ZWVwaW5nX2NpdHkudHMnOiBmaWxlMTAsJzAzLWh3L2R1bmdlb24vYWV0aGVyb2NoZW1pY2FsX3Jlc2VhcmNoX2ZhY2lsaXR5LnRzJzogZmlsZTExLCcwMy1ody9kdW5nZW9uL2JhZWxzYXJzX3dhbGwudHMnOiBmaWxlMTIsJzAzLWh3L2R1bmdlb24vZnJhY3RhbF9jb250aW51dW0udHMnOiBmaWxlMTMsJzAzLWh3L2R1bmdlb24vZ3ViYWxfbGlicmFyeV9oYXJkLnRzJzogZmlsZTE0LCcwMy1ody9kdW5nZW9uL3NvaG1fYWxfaGFyZC50cyc6IGZpbGUxNSwnMDMtaHcvZHVuZ2Vvbi90aGVfbG9zdF9jaXR5X29mX2FtZGFwb3JfaGFyZC50cyc6IGZpbGUxNiwnMDMtaHcvcmFpZC9hM24udHMnOiBmaWxlMTcsJzAzLWh3L3JhaWQvYTEybi50cyc6IGZpbGUxOCwnMDMtaHcvcmFpZC9hMTBuLnRzJzogZmlsZTE5LCcwMy1ody9yYWlkL2E2bi50cyc6IGZpbGUyMCwnMDMtaHcvdHJpYWwvc2VwaGlyb3QtZXgudHMnOiBmaWxlMjEsJzA0LXNiL2FsbGlhbmNlL29yYm9ubmVfbW9uYXN0ZXJ5LnRzJzogZmlsZTIyLCcwNC1zYi9hbGxpYW5jZS9yaWRvcmFuYV9saWdodGhvdXNlLnRzJzogZmlsZTIzLCcwNC1zYi9hbGxpYW5jZS9yb3lhbF9jaXR5X29mX3JhYmFuYXN0cmUudHMnOiBmaWxlMjQsJzA0LXNiL2R1bmdlb24vYWxhX21oaWdvLnRzJzogZmlsZTI1LCcwNC1zYi9kdW5nZW9uL2JhcmRhbXNfbWV0dGxlLnRzJzogZmlsZTI2LCcwNC1zYi9kdW5nZW9uL2Nhc3RydW1fYWJhbmlhLnRzJzogZmlsZTI3LCcwNC1zYi9kdW5nZW9uL2RvbWFfY2FzdGxlLnRzJzogZmlsZTI4LCcwNC1zYi9kdW5nZW9uL2Ryb3duZWRfY2l0eV9vZl9za2FsbGEudHMnOiBmaWxlMjksJzA0LXNiL2R1bmdlb24vZnJhY3RhbF9jb250aW51dW1faGFyZC50cyc6IGZpbGUzMCwnMDQtc2IvZHVuZ2Vvbi9naGltbHl0X2RhcmsudHMnOiBmaWxlMzEsJzA0LXNiL2R1bmdlb24vaGVsbHNfbGlkLnRzJzogZmlsZTMyLCcwNC1zYi9kdW5nZW9uL2t1Z2FuZV9jYXN0bGUudHMnOiBmaWxlMzMsJzA0LXNiL2R1bmdlb24vc2hpc3VpX29mX3RoZV92aW9sZXRfdGlkZXMudHMnOiBmaWxlMzQsJzA0LXNiL2R1bmdlb24vc2lyZW5zb25nX3NlYS50cyc6IGZpbGUzNSwnMDQtc2IvZHVuZ2Vvbi9zdF9tb2NpYW5uZV9oYXJkLnRzJzogZmlsZTM2LCcwNC1zYi9kdW5nZW9uL3N3YWxsb3dzX2NvbXBhc3MudHMnOiBmaWxlMzcsJzA0LXNiL2R1bmdlb24vdGVtcGxlX29mX3RoZV9maXN0LnRzJzogZmlsZTM4LCcwNC1zYi9kdW5nZW9uL3RoZV9idXJuLnRzJzogZmlsZTM5LCcwNC1zYi9yYWlkL28xMG4udHMnOiBmaWxlNDAsJzA0LXNiL3JhaWQvbzEwcy50cyc6IGZpbGU0MSwnMDQtc2IvcmFpZC9vMTFuLnRzJzogZmlsZTQyLCcwNC1zYi9yYWlkL28xMXMudHMnOiBmaWxlNDMsJzA0LXNiL3JhaWQvbzEybi50cyc6IGZpbGU0NCwnMDQtc2IvcmFpZC9vMTJzLnRzJzogZmlsZTQ1LCcwNC1zYi9yYWlkL28xbi50cyc6IGZpbGU0NiwnMDQtc2IvcmFpZC9vMXMudHMnOiBmaWxlNDcsJzA0LXNiL3JhaWQvbzJuLnRzJzogZmlsZTQ4LCcwNC1zYi9yYWlkL28ycy50cyc6IGZpbGU0OSwnMDQtc2IvcmFpZC9vM24udHMnOiBmaWxlNTAsJzA0LXNiL3JhaWQvbzNzLnRzJzogZmlsZTUxLCcwNC1zYi9yYWlkL280bi50cyc6IGZpbGU1MiwnMDQtc2IvcmFpZC9vNHMudHMnOiBmaWxlNTMsJzA0LXNiL3JhaWQvbzVuLnRzJzogZmlsZTU0LCcwNC1zYi9yYWlkL281cy50cyc6IGZpbGU1NSwnMDQtc2IvcmFpZC9vNm4udHMnOiBmaWxlNTYsJzA0LXNiL3JhaWQvbzZzLnRzJzogZmlsZTU3LCcwNC1zYi9yYWlkL283bi50cyc6IGZpbGU1OCwnMDQtc2IvcmFpZC9vN3MudHMnOiBmaWxlNTksJzA0LXNiL3JhaWQvbzhuLnRzJzogZmlsZTYwLCcwNC1zYi9yYWlkL284cy50cyc6IGZpbGU2MSwnMDQtc2IvcmFpZC9vOW4udHMnOiBmaWxlNjIsJzA0LXNiL3JhaWQvbzlzLnRzJzogZmlsZTYzLCcwNC1zYi90cmlhbC9ieWFra28udHMnOiBmaWxlNjQsJzA0LXNiL3RyaWFsL2J5YWtrby1leC50cyc6IGZpbGU2NSwnMDQtc2IvdHJpYWwvbGFrc2htaS50cyc6IGZpbGU2NiwnMDQtc2IvdHJpYWwvbGFrc2htaS1leC50cyc6IGZpbGU2NywnMDQtc2IvdHJpYWwvcmF0aGFsb3MudHMnOiBmaWxlNjgsJzA0LXNiL3RyaWFsL3JhdGhhbG9zLWV4LnRzJzogZmlsZTY5LCcwNC1zYi90cmlhbC9zZWlyeXUudHMnOiBmaWxlNzAsJzA0LXNiL3RyaWFsL3NlaXJ5dS1leC50cyc6IGZpbGU3MSwnMDQtc2IvdHJpYWwvc2hpbnJ5dS50cyc6IGZpbGU3MiwnMDQtc2IvdHJpYWwvc2hpbnJ5dS1leC50cyc6IGZpbGU3MywnMDQtc2IvdHJpYWwvc3VzYW5vLnRzJzogZmlsZTc0LCcwNC1zYi90cmlhbC9zdXNhbm8tZXgudHMnOiBmaWxlNzUsJzA0LXNiL3RyaWFsL3N1emFrdS50cyc6IGZpbGU3NiwnMDQtc2IvdHJpYWwvc3V6YWt1LWV4LnRzJzogZmlsZTc3LCcwNC1zYi90cmlhbC90c3VrdXlvbWkudHMnOiBmaWxlNzgsJzA0LXNiL3RyaWFsL3RzdWt1eW9taS1leC50cyc6IGZpbGU3OSwnMDQtc2IvdHJpYWwveW9qaW1iby50cyc6IGZpbGU4MCwnMDQtc2IvdWx0aW1hdGUvdWx0aW1hX3dlYXBvbl91bHRpbWF0ZS50cyc6IGZpbGU4MSwnMDQtc2IvdWx0aW1hdGUvdW5lbmRpbmdfY29pbF91bHRpbWF0ZS50cyc6IGZpbGU4MiwnMDUtc2hiL2FsbGlhbmNlL3RoZV9jb3BpZWRfZmFjdG9yeS50cyc6IGZpbGU4MywnMDUtc2hiL2FsbGlhbmNlL3RoZV9wdXBwZXRzX2J1bmtlci50cyc6IGZpbGU4NCwnMDUtc2hiL2FsbGlhbmNlL3RoZV90b3dlcl9hdF9wYXJhZGlnbXNfYnJlYWNoLnRzJzogZmlsZTg1LCcwNS1zaGIvZHVuZ2Vvbi9ha2FkYWVtaWFfYW55ZGVyLnRzJzogZmlsZTg2LCcwNS1zaGIvZHVuZ2Vvbi9hbWF1cm90LnRzJzogZmlsZTg3LCcwNS1zaGIvZHVuZ2Vvbi9hbmFtbmVzaXNfYW55ZGVyLnRzJzogZmlsZTg4LCcwNS1zaGIvZHVuZ2Vvbi9kb2huX21oZWcudHMnOiBmaWxlODksJzA1LXNoYi9kdW5nZW9uL2hlcm9lc19nYXVudGxldC50cyc6IGZpbGU5MCwnMDUtc2hiL2R1bmdlb24vaG9sbWluc3Rlcl9zd2l0Y2gudHMnOiBmaWxlOTEsJzA1LXNoYi9kdW5nZW9uL21hbGlrYWhzX3dlbGwudHMnOiBmaWxlOTIsJzA1LXNoYi9kdW5nZW9uL21hdG95YXNfcmVsaWN0LnRzJzogZmlsZTkzLCcwNS1zaGIvZHVuZ2Vvbi9tdF9ndWxnLnRzJzogZmlsZTk0LCcwNS1zaGIvZHVuZ2Vvbi9wYWdsdGhhbi50cyc6IGZpbGU5NSwnMDUtc2hiL2R1bmdlb24vcWl0YW5hX3JhdmVsLnRzJzogZmlsZTk2LCcwNS1zaGIvZHVuZ2Vvbi90aGVfZ3JhbmRfY29zbW9zLnRzJzogZmlsZTk3LCcwNS1zaGIvZHVuZ2Vvbi90d2lubmluZy50cyc6IGZpbGU5OCwnMDUtc2hiL2V1cmVrYS9kZWx1YnJ1bV9yZWdpbmFlLnRzJzogZmlsZTk5LCcwNS1zaGIvZXVyZWthL2RlbHVicnVtX3JlZ2luYWVfc2F2YWdlLnRzJzogZmlsZTEwMCwnMDUtc2hiL3JhaWQvZTEwbi50cyc6IGZpbGUxMDEsJzA1LXNoYi9yYWlkL2UxMHMudHMnOiBmaWxlMTAyLCcwNS1zaGIvcmFpZC9lMTFuLnRzJzogZmlsZTEwMywnMDUtc2hiL3JhaWQvZTExcy50cyc6IGZpbGUxMDQsJzA1LXNoYi9yYWlkL2UxMm4udHMnOiBmaWxlMTA1LCcwNS1zaGIvcmFpZC9lMTJzLnRzJzogZmlsZTEwNiwnMDUtc2hiL3JhaWQvZTFuLnRzJzogZmlsZTEwNywnMDUtc2hiL3JhaWQvZTFzLnRzJzogZmlsZTEwOCwnMDUtc2hiL3JhaWQvZTJuLnRzJzogZmlsZTEwOSwnMDUtc2hiL3JhaWQvZTJzLnRzJzogZmlsZTExMCwnMDUtc2hiL3JhaWQvZTNuLnRzJzogZmlsZTExMSwnMDUtc2hiL3JhaWQvZTNzLnRzJzogZmlsZTExMiwnMDUtc2hiL3JhaWQvZTRuLnRzJzogZmlsZTExMywnMDUtc2hiL3JhaWQvZTRzLnRzJzogZmlsZTExNCwnMDUtc2hiL3JhaWQvZTVuLnRzJzogZmlsZTExNSwnMDUtc2hiL3JhaWQvZTVzLnRzJzogZmlsZTExNiwnMDUtc2hiL3JhaWQvZTZuLnRzJzogZmlsZTExNywnMDUtc2hiL3JhaWQvZTZzLnRzJzogZmlsZTExOCwnMDUtc2hiL3JhaWQvZTduLnRzJzogZmlsZTExOSwnMDUtc2hiL3JhaWQvZTdzLnRzJzogZmlsZTEyMCwnMDUtc2hiL3JhaWQvZThuLnRzJzogZmlsZTEyMSwnMDUtc2hiL3JhaWQvZThzLnRzJzogZmlsZTEyMiwnMDUtc2hiL3JhaWQvZTluLnRzJzogZmlsZTEyMywnMDUtc2hiL3JhaWQvZTlzLnRzJzogZmlsZTEyNCwnMDUtc2hiL3RyaWFsL2RpYW1vbmRfd2VhcG9uLnRzJzogZmlsZTEyNSwnMDUtc2hiL3RyaWFsL2RpYW1vbmRfd2VhcG9uLWV4LnRzJzogZmlsZTEyNiwnMDUtc2hiL3RyaWFsL2VtZXJhbGRfd2VhcG9uLnRzJzogZmlsZTEyNywnMDUtc2hiL3RyaWFsL2VtZXJhbGRfd2VhcG9uLWV4LnRzJzogZmlsZTEyOCwnMDUtc2hiL3RyaWFsL2hhZGVzLnRzJzogZmlsZTEyOSwnMDUtc2hiL3RyaWFsL2hhZGVzLWV4LnRzJzogZmlsZTEzMCwnMDUtc2hiL3RyaWFsL2lubm9jZW5jZS50cyc6IGZpbGUxMzEsJzA1LXNoYi90cmlhbC9pbm5vY2VuY2UtZXgudHMnOiBmaWxlMTMyLCcwNS1zaGIvdHJpYWwvbGV2aS11bi50cyc6IGZpbGUxMzMsJzA1LXNoYi90cmlhbC9ydWJ5X3dlYXBvbi50cyc6IGZpbGUxMzQsJzA1LXNoYi90cmlhbC9ydWJ5X3dlYXBvbi1leC50cyc6IGZpbGUxMzUsJzA1LXNoYi90cmlhbC9zaGl2YS11bi50cyc6IGZpbGUxMzYsJzA1LXNoYi90cmlhbC90aXRhbmlhLnRzJzogZmlsZTEzNywnMDUtc2hiL3RyaWFsL3RpdGFuaWEtZXgudHMnOiBmaWxlMTM4LCcwNS1zaGIvdHJpYWwvdGl0YW4tdW4udHMnOiBmaWxlMTM5LCcwNS1zaGIvdHJpYWwvdmFyaXMtZXgudHMnOiBmaWxlMTQwLCcwNS1zaGIvdHJpYWwvd29sLnRzJzogZmlsZTE0MSwnMDUtc2hiL3RyaWFsL3dvbC1leC50cyc6IGZpbGUxNDIsJzA1LXNoYi91bHRpbWF0ZS90aGVfZXBpY19vZl9hbGV4YW5kZXIudHMnOiBmaWxlMTQzLCcwNi1ldy9hbGxpYW5jZS9hZ2xhaWEudHMnOiBmaWxlMTQ0LCcwNi1ldy9kdW5nZW9uL2FsemFkYWFsc19sZWdhY3kudHMnOiBmaWxlMTQ1LCcwNi1ldy9kdW5nZW9uL2t0aXNpc19oeXBlcmJvcmVpYS50cyc6IGZpbGUxNDYsJzA2LWV3L2R1bmdlb24vc21pbGV0b24udHMnOiBmaWxlMTQ3LCcwNi1ldy9kdW5nZW9uL3N0aWdtYV9kcmVhbXNjYXBlLnRzJzogZmlsZTE0OCwnMDYtZXcvZHVuZ2Vvbi90aGVfYWl0aWFzY29wZS50cyc6IGZpbGUxNDksJzA2LWV3L2R1bmdlb24vdGhlX2RlYWRfZW5kcy50cyc6IGZpbGUxNTAsJzA2LWV3L2R1bmdlb24vdGhlX2ZlbGxfY291cnRfb2ZfdHJvaWEudHMnOiBmaWxlMTUxLCcwNi1ldy9kdW5nZW9uL3RoZV90b3dlcl9vZl9iYWJpbC50cyc6IGZpbGUxNTIsJzA2LWV3L2R1bmdlb24vdGhlX3Rvd2VyX29mX3pvdC50cyc6IGZpbGUxNTMsJzA2LWV3L2R1bmdlb24vdmFuYXNwYXRpLnRzJzogZmlsZTE1NCwnMDYtZXcvcmFpZC9wMW4udHMnOiBmaWxlMTU1LCcwNi1ldy9yYWlkL3Axcy50cyc6IGZpbGUxNTYsJzA2LWV3L3JhaWQvcDJuLnRzJzogZmlsZTE1NywnMDYtZXcvcmFpZC9wMnMudHMnOiBmaWxlMTU4LCcwNi1ldy9yYWlkL3Azbi50cyc6IGZpbGUxNTksJzA2LWV3L3JhaWQvcDNzLnRzJzogZmlsZTE2MCwnMDYtZXcvcmFpZC9wNG4udHMnOiBmaWxlMTYxLCcwNi1ldy9yYWlkL3A0cy50cyc6IGZpbGUxNjIsJzA2LWV3L3JhaWQvcDVuLnRzJzogZmlsZTE2MywnMDYtZXcvcmFpZC9wNXMudHMnOiBmaWxlMTY0LCcwNi1ldy9yYWlkL3A2bi50cyc6IGZpbGUxNjUsJzA2LWV3L3JhaWQvcDZzLnRzJzogZmlsZTE2NiwnMDYtZXcvcmFpZC9wN24udHMnOiBmaWxlMTY3LCcwNi1ldy9yYWlkL3A3cy50cyc6IGZpbGUxNjgsJzA2LWV3L3JhaWQvcDhuLnRzJzogZmlsZTE2OSwnMDYtZXcvcmFpZC9wOHMudHMnOiBmaWxlMTcwLCcwNi1ldy90cmlhbC9iYXJiYXJpY2NpYS50cyc6IGZpbGUxNzEsJzA2LWV3L3RyaWFsL2JhcmJhcmljY2lhLWV4LnRzJzogZmlsZTE3MiwnMDYtZXcvdHJpYWwvZW5kc2luZ2VyLnRzJzogZmlsZTE3MywnMDYtZXcvdHJpYWwvZW5kc2luZ2VyLWV4LnRzJzogZmlsZTE3NCwnMDYtZXcvdHJpYWwvaHlkYWVseW4udHMnOiBmaWxlMTc1LCcwNi1ldy90cmlhbC9oeWRhZWx5bi1leC50cyc6IGZpbGUxNzYsJzA2LWV3L3RyaWFsL3NlcGhpcm90LXVuLnRzJzogZmlsZTE3NywnMDYtZXcvdHJpYWwvdWx0aW1hLXVuLnRzJzogZmlsZTE3OCwnMDYtZXcvdHJpYWwvem9kaWFyay50cyc6IGZpbGUxNzksJzA2LWV3L3RyaWFsL3pvZGlhcmstZXgudHMnOiBmaWxlMTgwLCcwNi1ldy91bHRpbWF0ZS9kcmFnb25zb25nc19yZXByaXNlX3VsdGltYXRlLnRzJzogZmlsZTE4MSx9OyJdLCJuYW1lcyI6WyJOZXRSZWdleGVzIiwiWm9uZUlkIiwidHJpZ2dlclNldCIsInpvbmVJZCIsIk1hdGNoQWxsIiwidHJpZ2dlcnMiLCJpZCIsInR5cGUiLCJuZXRSZWdleCIsImxvc2VzRWZmZWN0IiwiZWZmZWN0SWQiLCJjb25kaXRpb24iLCJfZGF0YSIsIm1hdGNoZXMiLCJ0YXJnZXQiLCJzb3VyY2UiLCJtaXN0YWtlIiwiZGF0YSIsImxvc3RGb29kIiwiaW5Db21iYXQiLCJibGFtZSIsInJlcG9ydElkIiwidGFyZ2V0SWQiLCJ0ZXh0IiwiZW4iLCJkZSIsImZyIiwiamEiLCJjbiIsImtvIiwiZ2FpbnNFZmZlY3QiLCJydW4iLCJhYmlsaXR5IiwiSXNQbGF5ZXJJZCIsInNvdXJjZUlkIiwiTWlkZGxlTGFOb3NjZWEiLCJnYW1lTmFtZUxvZyIsImxpbmUiLCJuZXRSZWdleEZyIiwibmV0UmVnZXhKYSIsIm5ldFJlZ2V4Q24iLCJuZXRSZWdleEtvIiwibWUiLCJhYmlsaXR5RnVsbCIsInN0cmlraW5nRHVtbXlCeUxvY2FsZSIsInN0cmlraW5nRHVtbXlOYW1lcyIsIk9iamVjdCIsInZhbHVlcyIsImluY2x1ZGVzIiwiYm9vdENvdW50IiwiRGFtYWdlRnJvbU1hdGNoZXMiLCJlZmZlY3QiLCJlY2hvIiwic3VwcHJlc3NTZWNvbmRzIiwicG9rZUNvdW50IiwiZGVsYXlTZWNvbmRzIiwiVGhlQm93bE9mRW1iZXJzIiwiZGFtYWdlV2FybiIsInNoYXJlV2FybiIsIlRoZVdob3JsZWF0ZXJFeHRyZW1lIiwiZGFtYWdlRmFpbCIsImdhaW5zRWZmZWN0V2FybiIsImdhaW5zRWZmZWN0RmFpbCIsImRlYXRoUmVhc29uIiwibmFtZSIsIlRoZUFraEFmYWhBbXBoaXRoZWF0cmVFeHRyZW1lIiwic2hhcmVGYWlsIiwic29sb1dhcm4iLCJwYXJzZUZsb2F0IiwiZHVyYXRpb24iLCJUaGVBa2hBZmFoQW1waGl0aGVhdHJlSGFyZCIsInNlZW5EaWFtb25kRHVzdCIsInBsYXllckRhbWFnZUZpZWxkcyIsIlRoZU5hdmVsRXh0cmVtZSIsIlRoZU5hdmVsSGFyZCIsIlRoZU5hdmVsIiwiVGhlTWluc3RyZWxzQmFsbGFkVWx0aW1hc0JhbmUiLCJjb3VudCIsIlRoZVdlZXBpbmdDaXR5T2ZNaGFjaCIsInpvbWJpZSIsInNoaWVsZCIsIlRoZUFldGhlcm9jaGVtaWNhbFJlc2VhcmNoRmFjaWxpdHkiLCJCYWVsc2Fyc1dhbGwiLCJUaGVGcmFjdGFsQ29udGludXVtIiwiVGhlR3JlYXRHdWJhbExpYnJhcnlIYXJkIiwiaGFzSW1wIiwiU29obUFsSGFyZCIsIlRoZUxvc3RDaXR5T2ZBbWRhcG9ySGFyZCIsIkFsZXhhbmRlclRoZUFybU9mVGhlRmF0aGVyIiwiQWxleGFuZGVyVGhlU291bE9mVGhlQ3JlYXRvciIsImFzc2F1bHQiLCJwdXNoIiwiQWxleGFuZGVyVGhlQnJlYXRoT2ZUaGVDcmVhdG9yIiwiQWxleGFuZGVyVGhlQ3VmZk9mVGhlU29uIiwiQ29udGFpbm1lbnRCYXlTMVQ3RXh0cmVtZSIsImZvcmNlIiwicGFydHkiLCJpc1RhbmsiLCJqb2IiLCJ1bmRlZmluZWQiLCJUaGVPcmJvbm5lTW9uYXN0ZXJ5Iiwic29sb0ZhaWwiLCJUaGVSaWRvcmFuYUxpZ2h0aG91c2UiLCJoZWFkTWFya2VyIiwiVGhlUm95YWxDaXR5T2ZSYWJhbmFzdHJlIiwiQWxhTWhpZ28iLCJhYmlsaXR5V2FybiIsImFyZ3MiLCJhYmlsaXR5SWQiLCJjb25zb2xlIiwiZXJyb3IiLCJKU09OIiwic3RyaW5naWZ5IiwidHJpZ2dlciIsImZsYWdzIiwic3Vic3RyIiwiQmFyZGFtc01ldHRsZSIsIkNhc3RydW1BYmFuaWEiLCJEb21hQ2FzdGxlIiwiVGhlRHJvd25lZENpdHlPZlNrYWxsYSIsIlRoZUZyYWN0YWxDb250aW51dW1IYXJkIiwiVGhlR2hpbWx5dERhcmsiLCJIZWxsc0xpZCIsIkt1Z2FuZUNhc3RsZSIsIlNoaXN1aU9mVGhlVmlvbGV0VGlkZXMiLCJUaGVTaXJlbnNvbmdTZWEiLCJTYWludE1vY2lhbm5lc0FyYm9yZXR1bUhhcmQiLCJUaGVTd2FsbG93c0NvbXBhc3MiLCJUaGVUZW1wbGVPZlRoZUZpc3QiLCJUaGVCdXJuIiwiQWxwaGFzY2FwZVYyMCIsIkFscGhhc2NhcGVWMjBTYXZhZ2UiLCJBbHBoYXNjYXBlVjMwIiwiQWxwaGFzY2FwZVYzMFNhdmFnZSIsIkFscGhhc2NhcGVWNDAiLCJBbHBoYXNjYXBlVjQwU2F2YWdlIiwidnVsbiIsIkRlbHRhc2NhcGVWMTAiLCJEZWx0YXNjYXBlVjEwU2F2YWdlIiwiRGVsdGFzY2FwZVYyMCIsIkRlbHRhc2NhcGVWMjBTYXZhZ2UiLCJEZWx0YXNjYXBlVjMwIiwic3RhcnRzVXNpbmciLCJjYXB0dXJlIiwibmV0UmVnZXhEZSIsInBoYXNlTnVtYmVyIiwiaW5pdGlhbGl6ZWQiLCJnYW1lQ291bnQiLCJEZWx0YXNjYXBlVjMwU2F2YWdlIiwiRGVsdGFzY2FwZVY0MCIsIkRlbHRhc2NhcGVWNDBTYXZhZ2UiLCJpc0RlY2lzaXZlQmF0dGxlRWxlbWVudCIsImlzTmVvRXhkZWF0aCIsImhhc0JleW9uZERlYXRoIiwiZG91YmxlQXR0YWNrTWF0Y2hlcyIsImFyciIsImxlbmd0aCIsIlNpZ21hc2NhcGVWMTAiLCJoYXNUaHJvdHRsZSIsImxvZyIsIlNpZ21hc2NhcGVWMTBTYXZhZ2UiLCJTaWdtYXNjYXBlVjIwIiwiaGFzRmlyZVJlc2lzdCIsIlNpZ21hc2NhcGVWMjBTYXZhZ2UiLCJTaWdtYXNjYXBlVjMwIiwiU2lnbWFzY2FwZVYzMFNhdmFnZSIsIlNpZ21hc2NhcGVWNDAiLCJTaWdtYXNjYXBlVjQwU2F2YWdlIiwiQWxwaGFzY2FwZVYxMCIsIkFscGhhc2NhcGVWMTBTYXZhZ2UiLCJoYXNIZWFkd2luZCIsImhhc1ByaW1vcmRpYWwiLCJUaGVKYWRlU3RvYSIsIlRoZUphZGVTdG9hRXh0cmVtZSIsIkVtYW5hdGlvbiIsIkVtYW5hdGlvbkV4dHJlbWUiLCJUaGVHcmVhdEh1bnQiLCJUaGVHcmVhdEh1bnRFeHRyZW1lIiwiVGhlV3JlYXRoT2ZTbmFrZXMiLCJUaGVXcmVhdGhPZlNuYWtlc0V4dHJlbWUiLCJUaGVSb3lhbE1lbmFnZXJpZSIsIlRoZU1pbnN0cmVsc0JhbGxhZFNoaW5yeXVzRG9tYWluIiwiVGhlUG9vbE9mVHJpYnV0ZSIsIlRoZVBvb2xPZlRyaWJ1dGVFeHRyZW1lIiwiSGVsbHNLaWVyIiwiSGVsbHNLaWVyRXh0cmVtZSIsIkNhc3RydW1GbHVtaW5pcyIsIlRoZU1pbnN0cmVsc0JhbGxhZFRzdWt1eW9taXNQYWluIiwiS3VnYW5lT2hhc2hpIiwiVGhlV2VhcG9uc1JlZnJhaW5VbHRpbWF0ZSIsImtGbGFnSW5zdGFudERlYXRoIiwiVGhlVW5lbmRpbmdDb2lsT2ZCYWhhbXV0VWx0aW1hdGUiLCJoYXNEb29tIiwiVGhlQ29waWVkRmFjdG9yeSIsIlRoZVB1cHBldHNCdW5rZXIiLCJUaGVUb3dlckF0UGFyYWRpZ21zQnJlYWNoIiwiQWthZGFlbWlhQW55ZGVyIiwiQW1hdXJvdCIsIkFuYW1uZXNpc0FueWRlciIsIkRvaG5NaGVnIiwiVGhlSGVyb2VzR2F1bnRsZXQiLCJIb2xtaW5zdGVyU3dpdGNoIiwiTWFsaWthaHNXZWxsIiwiTWF0b3lhc1JlbGljdCIsIk10R3VsZyIsIlBhZ2x0aGFuIiwiVGhlUWl0YW5hUmF2ZWwiLCJUaGVHcmFuZENvc21vcyIsIlRoZVR3aW5uaW5nIiwiRGVsdWJydW1SZWdpbmFlIiwic2xpY2UiLCJEZWx1YnJ1bVJlZ2luYWVTYXZhZ2UiLCJFZGVuc1Byb21pc2VMaXRhbnkiLCJFZGVuc1Byb21pc2VMaXRhbnlTYXZhZ2UiLCJFZGVuc1Byb21pc2VBbmFtb3JwaG9zaXMiLCJFZGVuc1Byb21pc2VBbmFtb3JwaG9zaXNTYXZhZ2UiLCJFZGVuc1Byb21pc2VFdGVybml0eSIsIlVucmVhY2hhYmxlQ29kZSIsIk91dHB1dHMiLCJmaXJzdEhlYWRtYXJrZXIiLCJwYXJzZUludCIsImdldEhlYWRtYXJrZXJJZCIsImRlY09mZnNldCIsInRvU3RyaW5nIiwidG9VcHBlckNhc2UiLCJwYWRTdGFydCIsIkVkZW5zUHJvbWlzZUV0ZXJuaXR5U2F2YWdlIiwiZmlyc3RMYXNlck1hcmtlciIsImxhc3RMYXNlck1hcmtlciIsImxhc2VyTmFtZVRvTnVtIiwic2N1bHB0dXJlWVBvc2l0aW9ucyIsInkiLCJ0ZXRoZXIiLCJzY3VscHR1cmVUZXRoZXJOYW1lVG9JZCIsImJsYWRlT2ZGbGFtZUNvdW50IiwibnVtYmVyIiwibmFtZXMiLCJrZXlzIiwid2l0aE51bSIsImZpbHRlciIsIm93bmVycyIsIm1pbmltdW1ZYWxtc0ZvclN0YXR1ZXMiLCJpc1N0YXR1ZVBvc2l0aW9uS25vd24iLCJpc1N0YXR1ZU5vcnRoIiwic2N1bHB0dXJlSWRzIiwib3RoZXJJZCIsInNvdXJjZVkiLCJvdGhlclkiLCJ5RGlmZiIsIk1hdGgiLCJhYnMiLCJvd25lciIsIm93bmVyTmljayIsIlNob3J0TmFtZSIsInBpbGxhcklkVG9Pd25lciIsInBpbGxhck93bmVyIiwiZmlyZSIsInNtYWxsTGlvbklkVG9Pd25lciIsInNtYWxsTGlvbk93bmVycyIsImhhc1NtYWxsTGlvbiIsImhhc0ZpcmVEZWJ1ZmYiLCJjZW50ZXJZIiwieCIsImRpck9iaiIsImRpck5FIiwiZGlyTlciLCJkaXJTRSIsImRpclNXIiwiYWRkZWRDb21iYXRhbnRGdWxsIiwibm9ydGhCaWdMaW9uIiwic2luZ2xlVGFyZ2V0Iiwic291dGhCaWdMaW9uIiwic2hhcmVkIiwiZmlyZURlYnVmZiIsImxhYmVscyIsImxhbmciLCJvcHRpb25zIiwiUGFyc2VyTGFuZ3VhZ2UiLCJqb2luIiwiRWRlbnNHYXRlUmVzdXJyZWN0aW9uIiwiRWRlbnNHYXRlUmVzdXJyZWN0aW9uU2F2YWdlIiwiRWRlbnNHYXRlRGVzY2VudCIsIkVkZW5zR2F0ZURlc2NlbnRTYXZhZ2UiLCJFZGVuc0dhdGVJbnVuZGF0aW9uIiwiRWRlbnNHYXRlSW51bmRhdGlvblNhdmFnZSIsIkVkZW5zR2F0ZVNlcHVsdHVyZSIsIkVkZW5zR2F0ZVNlcHVsdHVyZVNhdmFnZSIsImZhdWx0TGluZVRhcmdldCIsIkVkZW5zVmVyc2VGdWxtaW5hdGlvbiIsImhhc09yYiIsImNsb3VkTWFya2VycyIsIm5vT3JiIiwic3RyIiwiRWRlbnNWZXJzZUZ1bG1pbmF0aW9uU2F2YWdlIiwiaGF0ZWQiLCJFZGVuc1ZlcnNlRnVyb3IiLCJFZGVuc1ZlcnNlRnVyb3JTYXZhZ2UiLCJ3cm9uZ0J1ZmYiLCJub0J1ZmYiLCJFZGVuc1ZlcnNlSWNvbm9jbGFzbSIsImhhc0FzdHJhbCIsImhhc1VtYnJhbCIsIkVkZW5zVmVyc2VJY29ub2NsYXNtU2F2YWdlIiwiRWRlbnNWZXJzZVJlZnVsZ2VuY2UiLCJFZGVuc1ZlcnNlUmVmdWxnZW5jZVNhdmFnZSIsIkVkZW5zUHJvbWlzZVVtYnJhIiwiRWRlbnNQcm9taXNlVW1icmFTYXZhZ2UiLCJUaGVDbG91ZERlY2siLCJUaGVDbG91ZERlY2tFeHRyZW1lIiwiQ2FzdHJ1bU1hcmludW0iLCJDYXN0cnVtTWFyaW51bUV4dHJlbWUiLCJzcGhlcmVOaXRybyIsInNwaGVyZUNlcnVsZXVtIiwiVGhlRHlpbmdHYXNwIiwiVGhlTWluc3RyZWxzQmFsbGFkSGFkZXNzRWxlZ3kiLCJoYXNEYXJrIiwiVGhlQ3Jvd25PZlRoZUltbWFjdWxhdGUiLCJUaGVDcm93bk9mVGhlSW1tYWN1bGF0ZUV4dHJlbWUiLCJUaGVXaG9ybGVhdGVyVW5yZWFsIiwiQ2luZGVyRHJpZnQiLCJDaW5kZXJEcmlmdEV4dHJlbWUiLCJUaGVBa2hBZmFoQW1waGl0aGVhdHJlVW5yZWFsIiwiVGhlRGFuY2luZ1BsYWd1ZSIsIlRoZURhbmNpbmdQbGFndWVFeHRyZW1lIiwiVGhlTmF2ZWxVbnJlYWwiLCJNZW1vcmlhTWlzZXJhRXh0cmVtZSIsIlRoZVNlYXRPZlNhY3JpZmljZSIsIlRoZVNlYXRPZlNhY3JpZmljZUV4dHJlbWUiLCJUaGVFcGljT2ZBbGV4YW5kZXJVbHRpbWF0ZSIsImphZ2RUZXRoZXIiLCJBZ2xhaWEiLCJLdGlzaXNIeXBlcmJvcmVpYSIsIlNtaWxldG9uIiwiVGhlU3RpZ21hRHJlYW1zY2FwZSIsIlRoZUFpdGlhc2NvcGUiLCJUaGVEZWFkRW5kcyIsIlRoZUZlbGxDb3VydE9mVHJvaWEiLCJUaGVUb3dlck9mQmFiaWwiLCJUaGVUb3dlck9mWm90IiwiVmFuYXNwYXRpIiwiQXNwaG9kZWxvc1RoZUZpcnN0Q2lyY2xlIiwidGVtcCIsInNwZWxsIiwiQXNwaG9kZWxvc1RoZUZpcnN0Q2lyY2xlU2F2YWdlIiwiQXNwaG9kZWxvc1RoZVNlY29uZENpcmNsZSIsIkFzcGhvZGVsb3NUaGVTZWNvbmRDaXJjbGVTYXZhZ2UiLCJBc3Bob2RlbG9zVGhlVGhpcmRDaXJjbGUiLCJBc3Bob2RlbG9zVGhlVGhpcmRDaXJjbGVTYXZhZ2UiLCJBc3Bob2RlbG9zVGhlRm91cnRoQ2lyY2xlIiwiaXNIZWFsZXIiLCJpc0RQUyIsIkFzcGhvZGVsb3NUaGVGb3VydGhDaXJjbGVTYXZhZ2UiLCJBYnlzc29zVGhlRmlmdGhDaXJjbGUiLCJBYnlzc29zVGhlRmlmdGhDaXJjbGVTYXZhZ2UiLCJBYnlzc29zVGhlU2l4dGhDaXJjbGUiLCJBYnlzc29zVGhlU2l4dGhDaXJjbGVTYXZhZ2UiLCJBYnlzc29zVGhlU2V2ZW50aENpcmNsZSIsIkFieXNzb3NUaGVTZXZlbnRoQ2lyY2xlU2F2YWdlIiwiQWJ5c3Nvc1RoZUVpZ2h0aENpcmNsZSIsIkFieXNzb3NUaGVFaWdodGhDaXJjbGVTYXZhZ2UiLCJTdG9ybXNDcm93biIsIlN0b3Jtc0Nyb3duRXh0cmVtZSIsIlRoZUZpbmFsRGF5IiwiVGhlTWluc3RyZWxzQmFsbGFkRW5kc2luZ2Vyc0FyaWEiLCJUaGVNb3RoZXJjcnlzdGFsIiwiVGhlTWluc3RyZWxzQmFsbGFkSHlkYWVseW5zQ2FsbCIsIkNvbnRhaW5tZW50QmF5UzFUN1VucmVhbCIsIlVsdGltYXNCYW5lVW5yZWFsIiwiVGhlRGFya0luc2lkZSIsIlRoZU1pbnN0cmVsc0JhbGxhZFpvZGlhcmtzRmFsbCIsIkRyYWdvbnNvbmdzUmVwcmlzZVVsdGltYXRlIiwidG93ZXJBYmlsaXR5IiwiY29udmljdGlvblRvd2VyIiwibWlzc2luZyIsInBhcnR5TmFtZXMiLCJzb3J0IiwibWFwIiwic2Vlbldyb3RoRmxhbWVzIiwibmV0d29ya0RvVCJdLCJzb3VyY2VSb290IjoiIn0=